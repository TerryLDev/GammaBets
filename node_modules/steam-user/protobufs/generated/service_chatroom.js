/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    $root.CChatRoom_CreateChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_CreateChatRoomGroup_Request.
         * @exports ICChatRoom_CreateChatRoomGroup_Request
         * @interface ICChatRoom_CreateChatRoomGroup_Request
         * @property {number|Long|null} [steamid_partner] CChatRoom_CreateChatRoomGroup_Request steamid_partner
         * @property {number|Long|null} [steamid_invited] CChatRoom_CreateChatRoomGroup_Request steamid_invited
         * @property {string|null} [name] CChatRoom_CreateChatRoomGroup_Request name
         * @property {Array.<number|Long>|null} [steamid_invitees] CChatRoom_CreateChatRoomGroup_Request steamid_invitees
         * @property {number|null} [watching_broadcast_accountid] CChatRoom_CreateChatRoomGroup_Request watching_broadcast_accountid
         * @property {number|Long|null} [watching_broadcast_channel_id] CChatRoom_CreateChatRoomGroup_Request watching_broadcast_channel_id
         */
    
        /**
         * Constructs a new CChatRoom_CreateChatRoomGroup_Request.
         * @exports CChatRoom_CreateChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_CreateChatRoomGroup_Request.
         * @implements ICChatRoom_CreateChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_CreateChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_CreateChatRoomGroup_Request(properties) {
            this.steamid_invitees = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request steamid_partner.
         * @member {number|Long} steamid_partner
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.steamid_partner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request steamid_invited.
         * @member {number|Long} steamid_invited
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.steamid_invited = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request name.
         * @member {string} name
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.name = "";
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request steamid_invitees.
         * @member {Array.<number|Long>} steamid_invitees
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.steamid_invitees = $util.emptyArray;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request watching_broadcast_accountid.
         * @member {number} watching_broadcast_accountid
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.watching_broadcast_accountid = 0;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Request watching_broadcast_channel_id.
         * @member {number|Long} watching_broadcast_channel_id
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.watching_broadcast_channel_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_CreateChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_CreateChatRoomGroup_Request} CChatRoom_CreateChatRoomGroup_Request instance
         */
        CChatRoom_CreateChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_CreateChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_CreateChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Request} message CChatRoom_CreateChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_partner != null && message.hasOwnProperty("steamid_partner"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_partner);
            if (message.steamid_invited != null && message.hasOwnProperty("steamid_invited"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid_invited);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
            if (message.steamid_invitees != null && message.steamid_invitees.length)
                for (var i = 0; i < message.steamid_invitees.length; ++i)
                    writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steamid_invitees[i]);
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.watching_broadcast_accountid);
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.watching_broadcast_channel_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_CreateChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Request} message CChatRoom_CreateChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateChatRoomGroup_Request} CChatRoom_CreateChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_partner = reader.fixed64();
                    break;
                case 2:
                    message.steamid_invited = reader.fixed64();
                    break;
                case 3:
                    message.name = reader.string();
                    break;
                case 4:
                    if (!(message.steamid_invitees && message.steamid_invitees.length))
                        message.steamid_invitees = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_invitees.push(reader.fixed64());
                    } else
                        message.steamid_invitees.push(reader.fixed64());
                    break;
                case 6:
                    message.watching_broadcast_accountid = reader.uint32();
                    break;
                case 7:
                    message.watching_broadcast_channel_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateChatRoomGroup_Request} CChatRoom_CreateChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_partner != null && message.hasOwnProperty("steamid_partner"))
                if (!$util.isInteger(message.steamid_partner) && !(message.steamid_partner && $util.isInteger(message.steamid_partner.low) && $util.isInteger(message.steamid_partner.high)))
                    return "steamid_partner: integer|Long expected";
            if (message.steamid_invited != null && message.hasOwnProperty("steamid_invited"))
                if (!$util.isInteger(message.steamid_invited) && !(message.steamid_invited && $util.isInteger(message.steamid_invited.low) && $util.isInteger(message.steamid_invited.high)))
                    return "steamid_invited: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.steamid_invitees != null && message.hasOwnProperty("steamid_invitees")) {
                if (!Array.isArray(message.steamid_invitees))
                    return "steamid_invitees: array expected";
                for (var i = 0; i < message.steamid_invitees.length; ++i)
                    if (!$util.isInteger(message.steamid_invitees[i]) && !(message.steamid_invitees[i] && $util.isInteger(message.steamid_invitees[i].low) && $util.isInteger(message.steamid_invitees[i].high)))
                        return "steamid_invitees: integer|Long[] expected";
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                if (!$util.isInteger(message.watching_broadcast_accountid))
                    return "watching_broadcast_accountid: integer expected";
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (!$util.isInteger(message.watching_broadcast_channel_id) && !(message.watching_broadcast_channel_id && $util.isInteger(message.watching_broadcast_channel_id.low) && $util.isInteger(message.watching_broadcast_channel_id.high)))
                    return "watching_broadcast_channel_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateChatRoomGroup_Request} CChatRoom_CreateChatRoomGroup_Request
         */
        CChatRoom_CreateChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_CreateChatRoomGroup_Request();
            if (object.steamid_partner != null)
                if ($util.Long)
                    (message.steamid_partner = $util.Long.fromValue(object.steamid_partner)).unsigned = false;
                else if (typeof object.steamid_partner === "string")
                    message.steamid_partner = parseInt(object.steamid_partner, 10);
                else if (typeof object.steamid_partner === "number")
                    message.steamid_partner = object.steamid_partner;
                else if (typeof object.steamid_partner === "object")
                    message.steamid_partner = new $util.LongBits(object.steamid_partner.low >>> 0, object.steamid_partner.high >>> 0).toNumber();
            if (object.steamid_invited != null)
                if ($util.Long)
                    (message.steamid_invited = $util.Long.fromValue(object.steamid_invited)).unsigned = false;
                else if (typeof object.steamid_invited === "string")
                    message.steamid_invited = parseInt(object.steamid_invited, 10);
                else if (typeof object.steamid_invited === "number")
                    message.steamid_invited = object.steamid_invited;
                else if (typeof object.steamid_invited === "object")
                    message.steamid_invited = new $util.LongBits(object.steamid_invited.low >>> 0, object.steamid_invited.high >>> 0).toNumber();
            if (object.name != null)
                message.name = String(object.name);
            if (object.steamid_invitees) {
                if (!Array.isArray(object.steamid_invitees))
                    throw TypeError(".CChatRoom_CreateChatRoomGroup_Request.steamid_invitees: array expected");
                message.steamid_invitees = [];
                for (var i = 0; i < object.steamid_invitees.length; ++i)
                    if ($util.Long)
                        (message.steamid_invitees[i] = $util.Long.fromValue(object.steamid_invitees[i])).unsigned = false;
                    else if (typeof object.steamid_invitees[i] === "string")
                        message.steamid_invitees[i] = parseInt(object.steamid_invitees[i], 10);
                    else if (typeof object.steamid_invitees[i] === "number")
                        message.steamid_invitees[i] = object.steamid_invitees[i];
                    else if (typeof object.steamid_invitees[i] === "object")
                        message.steamid_invitees[i] = new $util.LongBits(object.steamid_invitees[i].low >>> 0, object.steamid_invitees[i].high >>> 0).toNumber();
            }
            if (object.watching_broadcast_accountid != null)
                message.watching_broadcast_accountid = object.watching_broadcast_accountid >>> 0;
            if (object.watching_broadcast_channel_id != null)
                if ($util.Long)
                    (message.watching_broadcast_channel_id = $util.Long.fromValue(object.watching_broadcast_channel_id)).unsigned = true;
                else if (typeof object.watching_broadcast_channel_id === "string")
                    message.watching_broadcast_channel_id = parseInt(object.watching_broadcast_channel_id, 10);
                else if (typeof object.watching_broadcast_channel_id === "number")
                    message.watching_broadcast_channel_id = object.watching_broadcast_channel_id;
                else if (typeof object.watching_broadcast_channel_id === "object")
                    message.watching_broadcast_channel_id = new $util.LongBits(object.watching_broadcast_channel_id.low >>> 0, object.watching_broadcast_channel_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @static
         * @param {CChatRoom_CreateChatRoomGroup_Request} message CChatRoom_CreateChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_invitees = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_partner = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_partner = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_invited = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_invited = options.longs === String ? "0" : 0;
                object.name = "";
                object.watching_broadcast_accountid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.watching_broadcast_channel_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.watching_broadcast_channel_id = options.longs === String ? "0" : 0;
            }
            if (message.steamid_partner != null && message.hasOwnProperty("steamid_partner"))
                if (typeof message.steamid_partner === "number")
                    object.steamid_partner = options.longs === String ? String(message.steamid_partner) : message.steamid_partner;
                else
                    object.steamid_partner = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_partner) : options.longs === Number ? new $util.LongBits(message.steamid_partner.low >>> 0, message.steamid_partner.high >>> 0).toNumber() : message.steamid_partner;
            if (message.steamid_invited != null && message.hasOwnProperty("steamid_invited"))
                if (typeof message.steamid_invited === "number")
                    object.steamid_invited = options.longs === String ? String(message.steamid_invited) : message.steamid_invited;
                else
                    object.steamid_invited = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_invited) : options.longs === Number ? new $util.LongBits(message.steamid_invited.low >>> 0, message.steamid_invited.high >>> 0).toNumber() : message.steamid_invited;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.steamid_invitees && message.steamid_invitees.length) {
                object.steamid_invitees = [];
                for (var j = 0; j < message.steamid_invitees.length; ++j)
                    if (typeof message.steamid_invitees[j] === "number")
                        object.steamid_invitees[j] = options.longs === String ? String(message.steamid_invitees[j]) : message.steamid_invitees[j];
                    else
                        object.steamid_invitees[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_invitees[j]) : options.longs === Number ? new $util.LongBits(message.steamid_invitees[j].low >>> 0, message.steamid_invitees[j].high >>> 0).toNumber() : message.steamid_invitees[j];
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                object.watching_broadcast_accountid = message.watching_broadcast_accountid;
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (typeof message.watching_broadcast_channel_id === "number")
                    object.watching_broadcast_channel_id = options.longs === String ? String(message.watching_broadcast_channel_id) : message.watching_broadcast_channel_id;
                else
                    object.watching_broadcast_channel_id = options.longs === String ? $util.Long.prototype.toString.call(message.watching_broadcast_channel_id) : options.longs === Number ? new $util.LongBits(message.watching_broadcast_channel_id.low >>> 0, message.watching_broadcast_channel_id.high >>> 0).toNumber(true) : message.watching_broadcast_channel_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_CreateChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_CreateChatRoomGroup_Response.
         * @exports ICChatRoom_CreateChatRoomGroup_Response
         * @interface ICChatRoom_CreateChatRoomGroup_Response
         * @property {number|Long|null} [chat_group_id] CChatRoom_CreateChatRoomGroup_Response chat_group_id
         * @property {ICChatRoomGroupState|null} [state] CChatRoom_CreateChatRoomGroup_Response state
         * @property {ICUserChatRoomGroupState|null} [user_chat_state] CChatRoom_CreateChatRoomGroup_Response user_chat_state
         */
    
        /**
         * Constructs a new CChatRoom_CreateChatRoomGroup_Response.
         * @exports CChatRoom_CreateChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_CreateChatRoomGroup_Response.
         * @implements ICChatRoom_CreateChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_CreateChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_CreateChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateChatRoomGroup_Response chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Response.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Response state.
         * @member {ICChatRoomGroupState|null|undefined} state
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Response.prototype.state = null;
    
        /**
         * CChatRoom_CreateChatRoomGroup_Response user_chat_state.
         * @member {ICUserChatRoomGroupState|null|undefined} user_chat_state
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @instance
         */
        CChatRoom_CreateChatRoomGroup_Response.prototype.user_chat_state = null;
    
        /**
         * Creates a new CChatRoom_CreateChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_CreateChatRoomGroup_Response} CChatRoom_CreateChatRoomGroup_Response instance
         */
        CChatRoom_CreateChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_CreateChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_CreateChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Response} message CChatRoom_CreateChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.state != null && message.hasOwnProperty("state"))
                $root.CChatRoomGroupState.encode(message.state, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state"))
                $root.CUserChatRoomGroupState.encode(message.user_chat_state, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_CreateChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_CreateChatRoomGroup_Response} message CChatRoom_CreateChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateChatRoomGroup_Response} CChatRoom_CreateChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.state = $root.CChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.user_chat_state = $root.CUserChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateChatRoomGroup_Response} CChatRoom_CreateChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.state != null && message.hasOwnProperty("state")) {
                var error = $root.CChatRoomGroupState.verify(message.state);
                if (error)
                    return "state." + error;
            }
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state")) {
                var error = $root.CUserChatRoomGroupState.verify(message.user_chat_state);
                if (error)
                    return "user_chat_state." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateChatRoomGroup_Response} CChatRoom_CreateChatRoomGroup_Response
         */
        CChatRoom_CreateChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateChatRoomGroup_Response)
                return object;
            var message = new $root.CChatRoom_CreateChatRoomGroup_Response();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.state != null) {
                if (typeof object.state !== "object")
                    throw TypeError(".CChatRoom_CreateChatRoomGroup_Response.state: object expected");
                message.state = $root.CChatRoomGroupState.fromObject(object.state);
            }
            if (object.user_chat_state != null) {
                if (typeof object.user_chat_state !== "object")
                    throw TypeError(".CChatRoom_CreateChatRoomGroup_Response.user_chat_state: object expected");
                message.user_chat_state = $root.CUserChatRoomGroupState.fromObject(object.user_chat_state);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @static
         * @param {CChatRoom_CreateChatRoomGroup_Response} message CChatRoom_CreateChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateChatRoomGroup_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.state = null;
                object.user_chat_state = null;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = $root.CChatRoomGroupState.toObject(message.state, options);
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state"))
                object.user_chat_state = $root.CUserChatRoomGroupState.toObject(message.user_chat_state, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateChatRoomGroup_Response;
    })();
    
    $root.CChatRoomGroupState = (function() {
    
        /**
         * Properties of a CChatRoomGroupState.
         * @exports ICChatRoomGroupState
         * @interface ICChatRoomGroupState
         * @property {ICChatRoomGroupHeaderState|null} [header_state] CChatRoomGroupState header_state
         * @property {Array.<ICChatRoomMember>|null} [members] CChatRoomGroupState members
         * @property {number|Long|null} [default_chat_id] CChatRoomGroupState default_chat_id
         * @property {Array.<ICChatRoomState>|null} [chat_rooms] CChatRoomGroupState chat_rooms
         * @property {Array.<ICChatRoomMember>|null} [kicked] CChatRoomGroupState kicked
         */
    
        /**
         * Constructs a new CChatRoomGroupState.
         * @exports CChatRoomGroupState
         * @classdesc Represents a CChatRoomGroupState.
         * @implements ICChatRoomGroupState
         * @constructor
         * @param {ICChatRoomGroupState=} [properties] Properties to set
         */
        function CChatRoomGroupState(properties) {
            this.members = [];
            this.chat_rooms = [];
            this.kicked = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomGroupState header_state.
         * @member {ICChatRoomGroupHeaderState|null|undefined} header_state
         * @memberof CChatRoomGroupState
         * @instance
         */
        CChatRoomGroupState.prototype.header_state = null;
    
        /**
         * CChatRoomGroupState members.
         * @member {Array.<ICChatRoomMember>} members
         * @memberof CChatRoomGroupState
         * @instance
         */
        CChatRoomGroupState.prototype.members = $util.emptyArray;
    
        /**
         * CChatRoomGroupState default_chat_id.
         * @member {number|Long} default_chat_id
         * @memberof CChatRoomGroupState
         * @instance
         */
        CChatRoomGroupState.prototype.default_chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomGroupState chat_rooms.
         * @member {Array.<ICChatRoomState>} chat_rooms
         * @memberof CChatRoomGroupState
         * @instance
         */
        CChatRoomGroupState.prototype.chat_rooms = $util.emptyArray;
    
        /**
         * CChatRoomGroupState kicked.
         * @member {Array.<ICChatRoomMember>} kicked
         * @memberof CChatRoomGroupState
         * @instance
         */
        CChatRoomGroupState.prototype.kicked = $util.emptyArray;
    
        /**
         * Creates a new CChatRoomGroupState instance using the specified properties.
         * @function create
         * @memberof CChatRoomGroupState
         * @static
         * @param {ICChatRoomGroupState=} [properties] Properties to set
         * @returns {CChatRoomGroupState} CChatRoomGroupState instance
         */
        CChatRoomGroupState.create = function create(properties) {
            return new CChatRoomGroupState(properties);
        };
    
        /**
         * Encodes the specified CChatRoomGroupState message. Does not implicitly {@link CChatRoomGroupState.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomGroupState
         * @static
         * @param {ICChatRoomGroupState} message CChatRoomGroupState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.header_state != null && message.hasOwnProperty("header_state"))
                $root.CChatRoomGroupHeaderState.encode(message.header_state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.members != null && message.members.length)
                for (var i = 0; i < message.members.length; ++i)
                    $root.CChatRoomMember.encode(message.members[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.default_chat_id);
            if (message.chat_rooms != null && message.chat_rooms.length)
                for (var i = 0; i < message.chat_rooms.length; ++i)
                    $root.CChatRoomState.encode(message.chat_rooms[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.kicked != null && message.kicked.length)
                for (var i = 0; i < message.kicked.length; ++i)
                    $root.CChatRoomMember.encode(message.kicked[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomGroupState message, length delimited. Does not implicitly {@link CChatRoomGroupState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomGroupState
         * @static
         * @param {ICChatRoomGroupState} message CChatRoomGroupState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomGroupState message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomGroupState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomGroupState} CChatRoomGroupState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomGroupState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.header_state = $root.CChatRoomGroupHeaderState.decode(reader, reader.uint32());
                    break;
                case 2:
                    if (!(message.members && message.members.length))
                        message.members = [];
                    message.members.push($root.CChatRoomMember.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.default_chat_id = reader.uint64();
                    break;
                case 5:
                    if (!(message.chat_rooms && message.chat_rooms.length))
                        message.chat_rooms = [];
                    message.chat_rooms.push($root.CChatRoomState.decode(reader, reader.uint32()));
                    break;
                case 7:
                    if (!(message.kicked && message.kicked.length))
                        message.kicked = [];
                    message.kicked.push($root.CChatRoomMember.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomGroupState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomGroupState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomGroupState} CChatRoomGroupState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomGroupState message.
         * @function verify
         * @memberof CChatRoomGroupState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomGroupState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.header_state != null && message.hasOwnProperty("header_state")) {
                var error = $root.CChatRoomGroupHeaderState.verify(message.header_state);
                if (error)
                    return "header_state." + error;
            }
            if (message.members != null && message.hasOwnProperty("members")) {
                if (!Array.isArray(message.members))
                    return "members: array expected";
                for (var i = 0; i < message.members.length; ++i) {
                    var error = $root.CChatRoomMember.verify(message.members[i]);
                    if (error)
                        return "members." + error;
                }
            }
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (!$util.isInteger(message.default_chat_id) && !(message.default_chat_id && $util.isInteger(message.default_chat_id.low) && $util.isInteger(message.default_chat_id.high)))
                    return "default_chat_id: integer|Long expected";
            if (message.chat_rooms != null && message.hasOwnProperty("chat_rooms")) {
                if (!Array.isArray(message.chat_rooms))
                    return "chat_rooms: array expected";
                for (var i = 0; i < message.chat_rooms.length; ++i) {
                    var error = $root.CChatRoomState.verify(message.chat_rooms[i]);
                    if (error)
                        return "chat_rooms." + error;
                }
            }
            if (message.kicked != null && message.hasOwnProperty("kicked")) {
                if (!Array.isArray(message.kicked))
                    return "kicked: array expected";
                for (var i = 0; i < message.kicked.length; ++i) {
                    var error = $root.CChatRoomMember.verify(message.kicked[i]);
                    if (error)
                        return "kicked." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoomGroupState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomGroupState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomGroupState} CChatRoomGroupState
         */
        CChatRoomGroupState.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomGroupState)
                return object;
            var message = new $root.CChatRoomGroupState();
            if (object.header_state != null) {
                if (typeof object.header_state !== "object")
                    throw TypeError(".CChatRoomGroupState.header_state: object expected");
                message.header_state = $root.CChatRoomGroupHeaderState.fromObject(object.header_state);
            }
            if (object.members) {
                if (!Array.isArray(object.members))
                    throw TypeError(".CChatRoomGroupState.members: array expected");
                message.members = [];
                for (var i = 0; i < object.members.length; ++i) {
                    if (typeof object.members[i] !== "object")
                        throw TypeError(".CChatRoomGroupState.members: object expected");
                    message.members[i] = $root.CChatRoomMember.fromObject(object.members[i]);
                }
            }
            if (object.default_chat_id != null)
                if ($util.Long)
                    (message.default_chat_id = $util.Long.fromValue(object.default_chat_id)).unsigned = true;
                else if (typeof object.default_chat_id === "string")
                    message.default_chat_id = parseInt(object.default_chat_id, 10);
                else if (typeof object.default_chat_id === "number")
                    message.default_chat_id = object.default_chat_id;
                else if (typeof object.default_chat_id === "object")
                    message.default_chat_id = new $util.LongBits(object.default_chat_id.low >>> 0, object.default_chat_id.high >>> 0).toNumber(true);
            if (object.chat_rooms) {
                if (!Array.isArray(object.chat_rooms))
                    throw TypeError(".CChatRoomGroupState.chat_rooms: array expected");
                message.chat_rooms = [];
                for (var i = 0; i < object.chat_rooms.length; ++i) {
                    if (typeof object.chat_rooms[i] !== "object")
                        throw TypeError(".CChatRoomGroupState.chat_rooms: object expected");
                    message.chat_rooms[i] = $root.CChatRoomState.fromObject(object.chat_rooms[i]);
                }
            }
            if (object.kicked) {
                if (!Array.isArray(object.kicked))
                    throw TypeError(".CChatRoomGroupState.kicked: array expected");
                message.kicked = [];
                for (var i = 0; i < object.kicked.length; ++i) {
                    if (typeof object.kicked[i] !== "object")
                        throw TypeError(".CChatRoomGroupState.kicked: object expected");
                    message.kicked[i] = $root.CChatRoomMember.fromObject(object.kicked[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomGroupState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomGroupState
         * @static
         * @param {CChatRoomGroupState} message CChatRoomGroupState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomGroupState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.members = [];
                object.chat_rooms = [];
                object.kicked = [];
            }
            if (options.defaults) {
                object.header_state = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.default_chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.default_chat_id = options.longs === String ? "0" : 0;
            }
            if (message.header_state != null && message.hasOwnProperty("header_state"))
                object.header_state = $root.CChatRoomGroupHeaderState.toObject(message.header_state, options);
            if (message.members && message.members.length) {
                object.members = [];
                for (var j = 0; j < message.members.length; ++j)
                    object.members[j] = $root.CChatRoomMember.toObject(message.members[j], options);
            }
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (typeof message.default_chat_id === "number")
                    object.default_chat_id = options.longs === String ? String(message.default_chat_id) : message.default_chat_id;
                else
                    object.default_chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.default_chat_id) : options.longs === Number ? new $util.LongBits(message.default_chat_id.low >>> 0, message.default_chat_id.high >>> 0).toNumber(true) : message.default_chat_id;
            if (message.chat_rooms && message.chat_rooms.length) {
                object.chat_rooms = [];
                for (var j = 0; j < message.chat_rooms.length; ++j)
                    object.chat_rooms[j] = $root.CChatRoomState.toObject(message.chat_rooms[j], options);
            }
            if (message.kicked && message.kicked.length) {
                object.kicked = [];
                for (var j = 0; j < message.kicked.length; ++j)
                    object.kicked[j] = $root.CChatRoomMember.toObject(message.kicked[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoomGroupState to JSON.
         * @function toJSON
         * @memberof CChatRoomGroupState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomGroupState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomGroupState;
    })();
    
    $root.CChatRoomGroupHeaderState = (function() {
    
        /**
         * Properties of a CChatRoomGroupHeaderState.
         * @exports ICChatRoomGroupHeaderState
         * @interface ICChatRoomGroupHeaderState
         * @property {number|Long|null} [chat_group_id] CChatRoomGroupHeaderState chat_group_id
         * @property {string|null} [chat_name] CChatRoomGroupHeaderState chat_name
         * @property {number|null} [clanid] CChatRoomGroupHeaderState clanid
         * @property {number|null} [accountid_owner] CChatRoomGroupHeaderState accountid_owner
         * @property {number|null} [appid] CChatRoomGroupHeaderState appid
         * @property {string|null} [tagline] CChatRoomGroupHeaderState tagline
         * @property {Uint8Array|null} [avatar_sha] CChatRoomGroupHeaderState avatar_sha
         * @property {number|Long|null} [default_role_id] CChatRoomGroupHeaderState default_role_id
         * @property {Array.<ICChatRole>|null} [roles] CChatRoomGroupHeaderState roles
         * @property {Array.<ICChatRoleActions>|null} [role_actions] CChatRoomGroupHeaderState role_actions
         * @property {number|null} [watching_broadcast_accountid] CChatRoomGroupHeaderState watching_broadcast_accountid
         * @property {Array.<ICChatPartyBeacon>|null} [party_beacons] CChatRoomGroupHeaderState party_beacons
         * @property {number|Long|null} [watching_broadcast_channel_id] CChatRoomGroupHeaderState watching_broadcast_channel_id
         * @property {number|Long|null} [active_minigame_id] CChatRoomGroupHeaderState active_minigame_id
         * @property {string|null} [avatar_ugc_url] CChatRoomGroupHeaderState avatar_ugc_url
         * @property {boolean|null} [disabled] CChatRoomGroupHeaderState disabled
         */
    
        /**
         * Constructs a new CChatRoomGroupHeaderState.
         * @exports CChatRoomGroupHeaderState
         * @classdesc Represents a CChatRoomGroupHeaderState.
         * @implements ICChatRoomGroupHeaderState
         * @constructor
         * @param {ICChatRoomGroupHeaderState=} [properties] Properties to set
         */
        function CChatRoomGroupHeaderState(properties) {
            this.roles = [];
            this.role_actions = [];
            this.party_beacons = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomGroupHeaderState chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomGroupHeaderState chat_name.
         * @member {string} chat_name
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.chat_name = "";
    
        /**
         * CChatRoomGroupHeaderState clanid.
         * @member {number} clanid
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.clanid = 0;
    
        /**
         * CChatRoomGroupHeaderState accountid_owner.
         * @member {number} accountid_owner
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.accountid_owner = 0;
    
        /**
         * CChatRoomGroupHeaderState appid.
         * @member {number} appid
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.appid = 0;
    
        /**
         * CChatRoomGroupHeaderState tagline.
         * @member {string} tagline
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.tagline = "";
    
        /**
         * CChatRoomGroupHeaderState avatar_sha.
         * @member {Uint8Array} avatar_sha
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.avatar_sha = $util.newBuffer([]);
    
        /**
         * CChatRoomGroupHeaderState default_role_id.
         * @member {number|Long} default_role_id
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.default_role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomGroupHeaderState roles.
         * @member {Array.<ICChatRole>} roles
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.roles = $util.emptyArray;
    
        /**
         * CChatRoomGroupHeaderState role_actions.
         * @member {Array.<ICChatRoleActions>} role_actions
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.role_actions = $util.emptyArray;
    
        /**
         * CChatRoomGroupHeaderState watching_broadcast_accountid.
         * @member {number} watching_broadcast_accountid
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.watching_broadcast_accountid = 0;
    
        /**
         * CChatRoomGroupHeaderState party_beacons.
         * @member {Array.<ICChatPartyBeacon>} party_beacons
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.party_beacons = $util.emptyArray;
    
        /**
         * CChatRoomGroupHeaderState watching_broadcast_channel_id.
         * @member {number|Long} watching_broadcast_channel_id
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.watching_broadcast_channel_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomGroupHeaderState active_minigame_id.
         * @member {number|Long} active_minigame_id
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.active_minigame_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomGroupHeaderState avatar_ugc_url.
         * @member {string} avatar_ugc_url
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.avatar_ugc_url = "";
    
        /**
         * CChatRoomGroupHeaderState disabled.
         * @member {boolean} disabled
         * @memberof CChatRoomGroupHeaderState
         * @instance
         */
        CChatRoomGroupHeaderState.prototype.disabled = false;
    
        /**
         * Creates a new CChatRoomGroupHeaderState instance using the specified properties.
         * @function create
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {ICChatRoomGroupHeaderState=} [properties] Properties to set
         * @returns {CChatRoomGroupHeaderState} CChatRoomGroupHeaderState instance
         */
        CChatRoomGroupHeaderState.create = function create(properties) {
            return new CChatRoomGroupHeaderState(properties);
        };
    
        /**
         * Encodes the specified CChatRoomGroupHeaderState message. Does not implicitly {@link CChatRoomGroupHeaderState.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {ICChatRoomGroupHeaderState} message CChatRoomGroupHeaderState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupHeaderState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.chat_name);
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.clanid);
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.accountid_owner);
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                writer.uint32(/* id 15, wireType 2 =*/122).string(message.tagline);
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                writer.uint32(/* id 16, wireType 2 =*/130).bytes(message.avatar_sha);
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint64(message.default_role_id);
            if (message.roles != null && message.roles.length)
                for (var i = 0; i < message.roles.length; ++i)
                    $root.CChatRole.encode(message.roles[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
            if (message.role_actions != null && message.role_actions.length)
                for (var i = 0; i < message.role_actions.length; ++i)
                    $root.CChatRoleActions.encode(message.role_actions[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.watching_broadcast_accountid);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.appid);
            if (message.party_beacons != null && message.party_beacons.length)
                for (var i = 0; i < message.party_beacons.length; ++i)
                    $root.CChatPartyBeacon.encode(message.party_beacons[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                writer.uint32(/* id 23, wireType 0 =*/184).uint64(message.watching_broadcast_channel_id);
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                writer.uint32(/* id 24, wireType 0 =*/192).uint64(message.active_minigame_id);
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                writer.uint32(/* id 25, wireType 2 =*/202).string(message.avatar_ugc_url);
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                writer.uint32(/* id 26, wireType 0 =*/208).bool(message.disabled);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomGroupHeaderState message, length delimited. Does not implicitly {@link CChatRoomGroupHeaderState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {ICChatRoomGroupHeaderState} message CChatRoomGroupHeaderState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupHeaderState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomGroupHeaderState message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomGroupHeaderState} CChatRoomGroupHeaderState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupHeaderState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomGroupHeaderState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_name = reader.string();
                    break;
                case 13:
                    message.clanid = reader.uint32();
                    break;
                case 14:
                    message.accountid_owner = reader.uint32();
                    break;
                case 21:
                    message.appid = reader.uint32();
                    break;
                case 15:
                    message.tagline = reader.string();
                    break;
                case 16:
                    message.avatar_sha = reader.bytes();
                    break;
                case 17:
                    message.default_role_id = reader.uint64();
                    break;
                case 18:
                    if (!(message.roles && message.roles.length))
                        message.roles = [];
                    message.roles.push($root.CChatRole.decode(reader, reader.uint32()));
                    break;
                case 19:
                    if (!(message.role_actions && message.role_actions.length))
                        message.role_actions = [];
                    message.role_actions.push($root.CChatRoleActions.decode(reader, reader.uint32()));
                    break;
                case 20:
                    message.watching_broadcast_accountid = reader.uint32();
                    break;
                case 22:
                    if (!(message.party_beacons && message.party_beacons.length))
                        message.party_beacons = [];
                    message.party_beacons.push($root.CChatPartyBeacon.decode(reader, reader.uint32()));
                    break;
                case 23:
                    message.watching_broadcast_channel_id = reader.uint64();
                    break;
                case 24:
                    message.active_minigame_id = reader.uint64();
                    break;
                case 25:
                    message.avatar_ugc_url = reader.string();
                    break;
                case 26:
                    message.disabled = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomGroupHeaderState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomGroupHeaderState} CChatRoomGroupHeaderState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupHeaderState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomGroupHeaderState message.
         * @function verify
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomGroupHeaderState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                if (!$util.isString(message.chat_name))
                    return "chat_name: string expected";
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid))
                    return "clanid: integer expected";
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                if (!$util.isInteger(message.accountid_owner))
                    return "accountid_owner: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                if (!$util.isString(message.tagline))
                    return "tagline: string expected";
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                if (!(message.avatar_sha && typeof message.avatar_sha.length === "number" || $util.isString(message.avatar_sha)))
                    return "avatar_sha: buffer expected";
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                if (!$util.isInteger(message.default_role_id) && !(message.default_role_id && $util.isInteger(message.default_role_id.low) && $util.isInteger(message.default_role_id.high)))
                    return "default_role_id: integer|Long expected";
            if (message.roles != null && message.hasOwnProperty("roles")) {
                if (!Array.isArray(message.roles))
                    return "roles: array expected";
                for (var i = 0; i < message.roles.length; ++i) {
                    var error = $root.CChatRole.verify(message.roles[i]);
                    if (error)
                        return "roles." + error;
                }
            }
            if (message.role_actions != null && message.hasOwnProperty("role_actions")) {
                if (!Array.isArray(message.role_actions))
                    return "role_actions: array expected";
                for (var i = 0; i < message.role_actions.length; ++i) {
                    var error = $root.CChatRoleActions.verify(message.role_actions[i]);
                    if (error)
                        return "role_actions." + error;
                }
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                if (!$util.isInteger(message.watching_broadcast_accountid))
                    return "watching_broadcast_accountid: integer expected";
            if (message.party_beacons != null && message.hasOwnProperty("party_beacons")) {
                if (!Array.isArray(message.party_beacons))
                    return "party_beacons: array expected";
                for (var i = 0; i < message.party_beacons.length; ++i) {
                    var error = $root.CChatPartyBeacon.verify(message.party_beacons[i]);
                    if (error)
                        return "party_beacons." + error;
                }
            }
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (!$util.isInteger(message.watching_broadcast_channel_id) && !(message.watching_broadcast_channel_id && $util.isInteger(message.watching_broadcast_channel_id.low) && $util.isInteger(message.watching_broadcast_channel_id.high)))
                    return "watching_broadcast_channel_id: integer|Long expected";
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                if (!$util.isInteger(message.active_minigame_id) && !(message.active_minigame_id && $util.isInteger(message.active_minigame_id.low) && $util.isInteger(message.active_minigame_id.high)))
                    return "active_minigame_id: integer|Long expected";
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                if (!$util.isString(message.avatar_ugc_url))
                    return "avatar_ugc_url: string expected";
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                if (typeof message.disabled !== "boolean")
                    return "disabled: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoomGroupHeaderState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomGroupHeaderState} CChatRoomGroupHeaderState
         */
        CChatRoomGroupHeaderState.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomGroupHeaderState)
                return object;
            var message = new $root.CChatRoomGroupHeaderState();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_name != null)
                message.chat_name = String(object.chat_name);
            if (object.clanid != null)
                message.clanid = object.clanid >>> 0;
            if (object.accountid_owner != null)
                message.accountid_owner = object.accountid_owner >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.tagline != null)
                message.tagline = String(object.tagline);
            if (object.avatar_sha != null)
                if (typeof object.avatar_sha === "string")
                    $util.base64.decode(object.avatar_sha, message.avatar_sha = $util.newBuffer($util.base64.length(object.avatar_sha)), 0);
                else if (object.avatar_sha.length)
                    message.avatar_sha = object.avatar_sha;
            if (object.default_role_id != null)
                if ($util.Long)
                    (message.default_role_id = $util.Long.fromValue(object.default_role_id)).unsigned = true;
                else if (typeof object.default_role_id === "string")
                    message.default_role_id = parseInt(object.default_role_id, 10);
                else if (typeof object.default_role_id === "number")
                    message.default_role_id = object.default_role_id;
                else if (typeof object.default_role_id === "object")
                    message.default_role_id = new $util.LongBits(object.default_role_id.low >>> 0, object.default_role_id.high >>> 0).toNumber(true);
            if (object.roles) {
                if (!Array.isArray(object.roles))
                    throw TypeError(".CChatRoomGroupHeaderState.roles: array expected");
                message.roles = [];
                for (var i = 0; i < object.roles.length; ++i) {
                    if (typeof object.roles[i] !== "object")
                        throw TypeError(".CChatRoomGroupHeaderState.roles: object expected");
                    message.roles[i] = $root.CChatRole.fromObject(object.roles[i]);
                }
            }
            if (object.role_actions) {
                if (!Array.isArray(object.role_actions))
                    throw TypeError(".CChatRoomGroupHeaderState.role_actions: array expected");
                message.role_actions = [];
                for (var i = 0; i < object.role_actions.length; ++i) {
                    if (typeof object.role_actions[i] !== "object")
                        throw TypeError(".CChatRoomGroupHeaderState.role_actions: object expected");
                    message.role_actions[i] = $root.CChatRoleActions.fromObject(object.role_actions[i]);
                }
            }
            if (object.watching_broadcast_accountid != null)
                message.watching_broadcast_accountid = object.watching_broadcast_accountid >>> 0;
            if (object.party_beacons) {
                if (!Array.isArray(object.party_beacons))
                    throw TypeError(".CChatRoomGroupHeaderState.party_beacons: array expected");
                message.party_beacons = [];
                for (var i = 0; i < object.party_beacons.length; ++i) {
                    if (typeof object.party_beacons[i] !== "object")
                        throw TypeError(".CChatRoomGroupHeaderState.party_beacons: object expected");
                    message.party_beacons[i] = $root.CChatPartyBeacon.fromObject(object.party_beacons[i]);
                }
            }
            if (object.watching_broadcast_channel_id != null)
                if ($util.Long)
                    (message.watching_broadcast_channel_id = $util.Long.fromValue(object.watching_broadcast_channel_id)).unsigned = true;
                else if (typeof object.watching_broadcast_channel_id === "string")
                    message.watching_broadcast_channel_id = parseInt(object.watching_broadcast_channel_id, 10);
                else if (typeof object.watching_broadcast_channel_id === "number")
                    message.watching_broadcast_channel_id = object.watching_broadcast_channel_id;
                else if (typeof object.watching_broadcast_channel_id === "object")
                    message.watching_broadcast_channel_id = new $util.LongBits(object.watching_broadcast_channel_id.low >>> 0, object.watching_broadcast_channel_id.high >>> 0).toNumber(true);
            if (object.active_minigame_id != null)
                if ($util.Long)
                    (message.active_minigame_id = $util.Long.fromValue(object.active_minigame_id)).unsigned = true;
                else if (typeof object.active_minigame_id === "string")
                    message.active_minigame_id = parseInt(object.active_minigame_id, 10);
                else if (typeof object.active_minigame_id === "number")
                    message.active_minigame_id = object.active_minigame_id;
                else if (typeof object.active_minigame_id === "object")
                    message.active_minigame_id = new $util.LongBits(object.active_minigame_id.low >>> 0, object.active_minigame_id.high >>> 0).toNumber(true);
            if (object.avatar_ugc_url != null)
                message.avatar_ugc_url = String(object.avatar_ugc_url);
            if (object.disabled != null)
                message.disabled = Boolean(object.disabled);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomGroupHeaderState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomGroupHeaderState
         * @static
         * @param {CChatRoomGroupHeaderState} message CChatRoomGroupHeaderState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomGroupHeaderState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.roles = [];
                object.role_actions = [];
                object.party_beacons = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.chat_name = "";
                object.clanid = 0;
                object.accountid_owner = 0;
                object.tagline = "";
                if (options.bytes === String)
                    object.avatar_sha = "";
                else {
                    object.avatar_sha = [];
                    if (options.bytes !== Array)
                        object.avatar_sha = $util.newBuffer(object.avatar_sha);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.default_role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.default_role_id = options.longs === String ? "0" : 0;
                object.watching_broadcast_accountid = 0;
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.watching_broadcast_channel_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.watching_broadcast_channel_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.active_minigame_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.active_minigame_id = options.longs === String ? "0" : 0;
                object.avatar_ugc_url = "";
                object.disabled = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                object.chat_name = message.chat_name;
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                object.clanid = message.clanid;
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                object.accountid_owner = message.accountid_owner;
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                object.tagline = message.tagline;
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                object.avatar_sha = options.bytes === String ? $util.base64.encode(message.avatar_sha, 0, message.avatar_sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.avatar_sha) : message.avatar_sha;
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                if (typeof message.default_role_id === "number")
                    object.default_role_id = options.longs === String ? String(message.default_role_id) : message.default_role_id;
                else
                    object.default_role_id = options.longs === String ? $util.Long.prototype.toString.call(message.default_role_id) : options.longs === Number ? new $util.LongBits(message.default_role_id.low >>> 0, message.default_role_id.high >>> 0).toNumber(true) : message.default_role_id;
            if (message.roles && message.roles.length) {
                object.roles = [];
                for (var j = 0; j < message.roles.length; ++j)
                    object.roles[j] = $root.CChatRole.toObject(message.roles[j], options);
            }
            if (message.role_actions && message.role_actions.length) {
                object.role_actions = [];
                for (var j = 0; j < message.role_actions.length; ++j)
                    object.role_actions[j] = $root.CChatRoleActions.toObject(message.role_actions[j], options);
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                object.watching_broadcast_accountid = message.watching_broadcast_accountid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.party_beacons && message.party_beacons.length) {
                object.party_beacons = [];
                for (var j = 0; j < message.party_beacons.length; ++j)
                    object.party_beacons[j] = $root.CChatPartyBeacon.toObject(message.party_beacons[j], options);
            }
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (typeof message.watching_broadcast_channel_id === "number")
                    object.watching_broadcast_channel_id = options.longs === String ? String(message.watching_broadcast_channel_id) : message.watching_broadcast_channel_id;
                else
                    object.watching_broadcast_channel_id = options.longs === String ? $util.Long.prototype.toString.call(message.watching_broadcast_channel_id) : options.longs === Number ? new $util.LongBits(message.watching_broadcast_channel_id.low >>> 0, message.watching_broadcast_channel_id.high >>> 0).toNumber(true) : message.watching_broadcast_channel_id;
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                if (typeof message.active_minigame_id === "number")
                    object.active_minigame_id = options.longs === String ? String(message.active_minigame_id) : message.active_minigame_id;
                else
                    object.active_minigame_id = options.longs === String ? $util.Long.prototype.toString.call(message.active_minigame_id) : options.longs === Number ? new $util.LongBits(message.active_minigame_id.low >>> 0, message.active_minigame_id.high >>> 0).toNumber(true) : message.active_minigame_id;
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                object.avatar_ugc_url = message.avatar_ugc_url;
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                object.disabled = message.disabled;
            return object;
        };
    
        /**
         * Converts this CChatRoomGroupHeaderState to JSON.
         * @function toJSON
         * @memberof CChatRoomGroupHeaderState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomGroupHeaderState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomGroupHeaderState;
    })();
    
    $root.CChatRole = (function() {
    
        /**
         * Properties of a CChatRole.
         * @exports ICChatRole
         * @interface ICChatRole
         * @property {number|Long|null} [role_id] CChatRole role_id
         * @property {string|null} [name] CChatRole name
         * @property {number|null} [ordinal] CChatRole ordinal
         */
    
        /**
         * Constructs a new CChatRole.
         * @exports CChatRole
         * @classdesc Represents a CChatRole.
         * @implements ICChatRole
         * @constructor
         * @param {ICChatRole=} [properties] Properties to set
         */
        function CChatRole(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRole role_id.
         * @member {number|Long} role_id
         * @memberof CChatRole
         * @instance
         */
        CChatRole.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRole name.
         * @member {string} name
         * @memberof CChatRole
         * @instance
         */
        CChatRole.prototype.name = "";
    
        /**
         * CChatRole ordinal.
         * @member {number} ordinal
         * @memberof CChatRole
         * @instance
         */
        CChatRole.prototype.ordinal = 0;
    
        /**
         * Creates a new CChatRole instance using the specified properties.
         * @function create
         * @memberof CChatRole
         * @static
         * @param {ICChatRole=} [properties] Properties to set
         * @returns {CChatRole} CChatRole instance
         */
        CChatRole.create = function create(properties) {
            return new CChatRole(properties);
        };
    
        /**
         * Encodes the specified CChatRole message. Does not implicitly {@link CChatRole.verify|verify} messages.
         * @function encode
         * @memberof CChatRole
         * @static
         * @param {ICChatRole} message CChatRole message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRole.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.role_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ordinal);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRole message, length delimited. Does not implicitly {@link CChatRole.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRole
         * @static
         * @param {ICChatRole} message CChatRole message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRole.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRole message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRole
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRole} CChatRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRole.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRole();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.role_id = reader.uint64();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.ordinal = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRole message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRole
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRole} CChatRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRole.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRole message.
         * @function verify
         * @memberof CChatRole
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRole.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRole message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRole
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRole} CChatRole
         */
        CChatRole.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRole)
                return object;
            var message = new $root.CChatRole();
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRole message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRole
         * @static
         * @param {CChatRole} message CChatRole
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRole.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                object.name = "";
                object.ordinal = 0;
            }
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            return object;
        };
    
        /**
         * Converts this CChatRole to JSON.
         * @function toJSON
         * @memberof CChatRole
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRole.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRole;
    })();
    
    $root.CChatRoomMember = (function() {
    
        /**
         * Properties of a CChatRoomMember.
         * @exports ICChatRoomMember
         * @interface ICChatRoomMember
         * @property {number|null} [accountid] CChatRoomMember accountid
         * @property {number|null} [state] CChatRoomMember state
         * @property {number|null} [rank] CChatRoomMember rank
         * @property {number|null} [time_kick_expire] CChatRoomMember time_kick_expire
         * @property {Array.<number|Long>|null} [role_ids] CChatRoomMember role_ids
         */
    
        /**
         * Constructs a new CChatRoomMember.
         * @exports CChatRoomMember
         * @classdesc Represents a CChatRoomMember.
         * @implements ICChatRoomMember
         * @constructor
         * @param {ICChatRoomMember=} [properties] Properties to set
         */
        function CChatRoomMember(properties) {
            this.role_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomMember accountid.
         * @member {number} accountid
         * @memberof CChatRoomMember
         * @instance
         */
        CChatRoomMember.prototype.accountid = 0;
    
        /**
         * CChatRoomMember state.
         * @member {number} state
         * @memberof CChatRoomMember
         * @instance
         */
        CChatRoomMember.prototype.state = 0;
    
        /**
         * CChatRoomMember rank.
         * @member {number} rank
         * @memberof CChatRoomMember
         * @instance
         */
        CChatRoomMember.prototype.rank = 0;
    
        /**
         * CChatRoomMember time_kick_expire.
         * @member {number} time_kick_expire
         * @memberof CChatRoomMember
         * @instance
         */
        CChatRoomMember.prototype.time_kick_expire = 0;
    
        /**
         * CChatRoomMember role_ids.
         * @member {Array.<number|Long>} role_ids
         * @memberof CChatRoomMember
         * @instance
         */
        CChatRoomMember.prototype.role_ids = $util.emptyArray;
    
        /**
         * Creates a new CChatRoomMember instance using the specified properties.
         * @function create
         * @memberof CChatRoomMember
         * @static
         * @param {ICChatRoomMember=} [properties] Properties to set
         * @returns {CChatRoomMember} CChatRoomMember instance
         */
        CChatRoomMember.create = function create(properties) {
            return new CChatRoomMember(properties);
        };
    
        /**
         * Encodes the specified CChatRoomMember message. Does not implicitly {@link CChatRoomMember.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomMember
         * @static
         * @param {ICChatRoomMember} message CChatRoomMember message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMember.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountid);
            if (message.state != null && message.hasOwnProperty("state"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
            if (message.rank != null && message.hasOwnProperty("rank"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.rank);
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.time_kick_expire);
            if (message.role_ids != null && message.role_ids.length)
                for (var i = 0; i < message.role_ids.length; ++i)
                    writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.role_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomMember message, length delimited. Does not implicitly {@link CChatRoomMember.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomMember
         * @static
         * @param {ICChatRoomMember} message CChatRoomMember message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMember.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomMember message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomMember
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomMember} CChatRoomMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMember.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomMember();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.accountid = reader.uint32();
                    break;
                case 3:
                    message.state = reader.int32();
                    break;
                case 4:
                    message.rank = reader.int32();
                    break;
                case 6:
                    message.time_kick_expire = reader.uint32();
                    break;
                case 7:
                    if (!(message.role_ids && message.role_ids.length))
                        message.role_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.role_ids.push(reader.uint64());
                    } else
                        message.role_ids.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomMember message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomMember
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomMember} CChatRoomMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMember.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomMember message.
         * @function verify
         * @memberof CChatRoomMember
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomMember.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.state != null && message.hasOwnProperty("state"))
                if (!$util.isInteger(message.state))
                    return "state: integer expected";
            if (message.rank != null && message.hasOwnProperty("rank"))
                if (!$util.isInteger(message.rank))
                    return "rank: integer expected";
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                if (!$util.isInteger(message.time_kick_expire))
                    return "time_kick_expire: integer expected";
            if (message.role_ids != null && message.hasOwnProperty("role_ids")) {
                if (!Array.isArray(message.role_ids))
                    return "role_ids: array expected";
                for (var i = 0; i < message.role_ids.length; ++i)
                    if (!$util.isInteger(message.role_ids[i]) && !(message.role_ids[i] && $util.isInteger(message.role_ids[i].low) && $util.isInteger(message.role_ids[i].high)))
                        return "role_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoomMember message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomMember
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomMember} CChatRoomMember
         */
        CChatRoomMember.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomMember)
                return object;
            var message = new $root.CChatRoomMember();
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.state != null)
                message.state = object.state | 0;
            if (object.rank != null)
                message.rank = object.rank | 0;
            if (object.time_kick_expire != null)
                message.time_kick_expire = object.time_kick_expire >>> 0;
            if (object.role_ids) {
                if (!Array.isArray(object.role_ids))
                    throw TypeError(".CChatRoomMember.role_ids: array expected");
                message.role_ids = [];
                for (var i = 0; i < object.role_ids.length; ++i)
                    if ($util.Long)
                        (message.role_ids[i] = $util.Long.fromValue(object.role_ids[i])).unsigned = true;
                    else if (typeof object.role_ids[i] === "string")
                        message.role_ids[i] = parseInt(object.role_ids[i], 10);
                    else if (typeof object.role_ids[i] === "number")
                        message.role_ids[i] = object.role_ids[i];
                    else if (typeof object.role_ids[i] === "object")
                        message.role_ids[i] = new $util.LongBits(object.role_ids[i].low >>> 0, object.role_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomMember message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomMember
         * @static
         * @param {CChatRoomMember} message CChatRoomMember
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomMember.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.role_ids = [];
            if (options.defaults) {
                object.accountid = 0;
                object.state = 0;
                object.rank = 0;
                object.time_kick_expire = 0;
            }
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = message.state;
            if (message.rank != null && message.hasOwnProperty("rank"))
                object.rank = message.rank;
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                object.time_kick_expire = message.time_kick_expire;
            if (message.role_ids && message.role_ids.length) {
                object.role_ids = [];
                for (var j = 0; j < message.role_ids.length; ++j)
                    if (typeof message.role_ids[j] === "number")
                        object.role_ids[j] = options.longs === String ? String(message.role_ids[j]) : message.role_ids[j];
                    else
                        object.role_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.role_ids[j]) : options.longs === Number ? new $util.LongBits(message.role_ids[j].low >>> 0, message.role_ids[j].high >>> 0).toNumber(true) : message.role_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoomMember to JSON.
         * @function toJSON
         * @memberof CChatRoomMember
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomMember.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomMember;
    })();
    
    $root.CUserChatRoomGroupState = (function() {
    
        /**
         * Properties of a CUserChatRoomGroupState.
         * @exports ICUserChatRoomGroupState
         * @interface ICUserChatRoomGroupState
         * @property {number|Long|null} [chat_group_id] CUserChatRoomGroupState chat_group_id
         * @property {number|null} [time_joined] CUserChatRoomGroupState time_joined
         * @property {Array.<ICUserChatRoomState>|null} [user_chat_room_state] CUserChatRoomGroupState user_chat_room_state
         * @property {number|null} [desktop_notification_level] CUserChatRoomGroupState desktop_notification_level
         * @property {number|null} [mobile_notification_level] CUserChatRoomGroupState mobile_notification_level
         * @property {number|null} [time_last_group_ack] CUserChatRoomGroupState time_last_group_ack
         * @property {boolean|null} [unread_indicator_muted] CUserChatRoomGroupState unread_indicator_muted
         */
    
        /**
         * Constructs a new CUserChatRoomGroupState.
         * @exports CUserChatRoomGroupState
         * @classdesc Represents a CUserChatRoomGroupState.
         * @implements ICUserChatRoomGroupState
         * @constructor
         * @param {ICUserChatRoomGroupState=} [properties] Properties to set
         */
        function CUserChatRoomGroupState(properties) {
            this.user_chat_room_state = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CUserChatRoomGroupState chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CUserChatRoomGroupState time_joined.
         * @member {number} time_joined
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.time_joined = 0;
    
        /**
         * CUserChatRoomGroupState user_chat_room_state.
         * @member {Array.<ICUserChatRoomState>} user_chat_room_state
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.user_chat_room_state = $util.emptyArray;
    
        /**
         * CUserChatRoomGroupState desktop_notification_level.
         * @member {number} desktop_notification_level
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.desktop_notification_level = 0;
    
        /**
         * CUserChatRoomGroupState mobile_notification_level.
         * @member {number} mobile_notification_level
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.mobile_notification_level = 0;
    
        /**
         * CUserChatRoomGroupState time_last_group_ack.
         * @member {number} time_last_group_ack
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.time_last_group_ack = 0;
    
        /**
         * CUserChatRoomGroupState unread_indicator_muted.
         * @member {boolean} unread_indicator_muted
         * @memberof CUserChatRoomGroupState
         * @instance
         */
        CUserChatRoomGroupState.prototype.unread_indicator_muted = false;
    
        /**
         * Creates a new CUserChatRoomGroupState instance using the specified properties.
         * @function create
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {ICUserChatRoomGroupState=} [properties] Properties to set
         * @returns {CUserChatRoomGroupState} CUserChatRoomGroupState instance
         */
        CUserChatRoomGroupState.create = function create(properties) {
            return new CUserChatRoomGroupState(properties);
        };
    
        /**
         * Encodes the specified CUserChatRoomGroupState message. Does not implicitly {@link CUserChatRoomGroupState.verify|verify} messages.
         * @function encode
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {ICUserChatRoomGroupState} message CUserChatRoomGroupState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CUserChatRoomGroupState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.time_joined);
            if (message.user_chat_room_state != null && message.user_chat_room_state.length)
                for (var i = 0; i < message.user_chat_room_state.length; ++i)
                    $root.CUserChatRoomState.encode(message.user_chat_room_state[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.desktop_notification_level);
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.mobile_notification_level);
            if (message.time_last_group_ack != null && message.hasOwnProperty("time_last_group_ack"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.time_last_group_ack);
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.unread_indicator_muted);
            return writer;
        };
    
        /**
         * Encodes the specified CUserChatRoomGroupState message, length delimited. Does not implicitly {@link CUserChatRoomGroupState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {ICUserChatRoomGroupState} message CUserChatRoomGroupState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CUserChatRoomGroupState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CUserChatRoomGroupState message from the specified reader or buffer.
         * @function decode
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CUserChatRoomGroupState} CUserChatRoomGroupState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CUserChatRoomGroupState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CUserChatRoomGroupState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.time_joined = reader.uint32();
                    break;
                case 3:
                    if (!(message.user_chat_room_state && message.user_chat_room_state.length))
                        message.user_chat_room_state = [];
                    message.user_chat_room_state.push($root.CUserChatRoomState.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.desktop_notification_level = reader.int32();
                    break;
                case 5:
                    message.mobile_notification_level = reader.int32();
                    break;
                case 6:
                    message.time_last_group_ack = reader.uint32();
                    break;
                case 7:
                    message.unread_indicator_muted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CUserChatRoomGroupState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CUserChatRoomGroupState} CUserChatRoomGroupState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CUserChatRoomGroupState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CUserChatRoomGroupState message.
         * @function verify
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CUserChatRoomGroupState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                if (!$util.isInteger(message.time_joined))
                    return "time_joined: integer expected";
            if (message.user_chat_room_state != null && message.hasOwnProperty("user_chat_room_state")) {
                if (!Array.isArray(message.user_chat_room_state))
                    return "user_chat_room_state: array expected";
                for (var i = 0; i < message.user_chat_room_state.length; ++i) {
                    var error = $root.CUserChatRoomState.verify(message.user_chat_room_state[i]);
                    if (error)
                        return "user_chat_room_state." + error;
                }
            }
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                if (!$util.isInteger(message.desktop_notification_level))
                    return "desktop_notification_level: integer expected";
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                if (!$util.isInteger(message.mobile_notification_level))
                    return "mobile_notification_level: integer expected";
            if (message.time_last_group_ack != null && message.hasOwnProperty("time_last_group_ack"))
                if (!$util.isInteger(message.time_last_group_ack))
                    return "time_last_group_ack: integer expected";
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                if (typeof message.unread_indicator_muted !== "boolean")
                    return "unread_indicator_muted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CUserChatRoomGroupState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CUserChatRoomGroupState} CUserChatRoomGroupState
         */
        CUserChatRoomGroupState.fromObject = function fromObject(object) {
            if (object instanceof $root.CUserChatRoomGroupState)
                return object;
            var message = new $root.CUserChatRoomGroupState();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.time_joined != null)
                message.time_joined = object.time_joined >>> 0;
            if (object.user_chat_room_state) {
                if (!Array.isArray(object.user_chat_room_state))
                    throw TypeError(".CUserChatRoomGroupState.user_chat_room_state: array expected");
                message.user_chat_room_state = [];
                for (var i = 0; i < object.user_chat_room_state.length; ++i) {
                    if (typeof object.user_chat_room_state[i] !== "object")
                        throw TypeError(".CUserChatRoomGroupState.user_chat_room_state: object expected");
                    message.user_chat_room_state[i] = $root.CUserChatRoomState.fromObject(object.user_chat_room_state[i]);
                }
            }
            if (object.desktop_notification_level != null)
                message.desktop_notification_level = object.desktop_notification_level | 0;
            if (object.mobile_notification_level != null)
                message.mobile_notification_level = object.mobile_notification_level | 0;
            if (object.time_last_group_ack != null)
                message.time_last_group_ack = object.time_last_group_ack >>> 0;
            if (object.unread_indicator_muted != null)
                message.unread_indicator_muted = Boolean(object.unread_indicator_muted);
            return message;
        };
    
        /**
         * Creates a plain object from a CUserChatRoomGroupState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CUserChatRoomGroupState
         * @static
         * @param {CUserChatRoomGroupState} message CUserChatRoomGroupState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CUserChatRoomGroupState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.user_chat_room_state = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.time_joined = 0;
                object.desktop_notification_level = 0;
                object.mobile_notification_level = 0;
                object.time_last_group_ack = 0;
                object.unread_indicator_muted = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                object.time_joined = message.time_joined;
            if (message.user_chat_room_state && message.user_chat_room_state.length) {
                object.user_chat_room_state = [];
                for (var j = 0; j < message.user_chat_room_state.length; ++j)
                    object.user_chat_room_state[j] = $root.CUserChatRoomState.toObject(message.user_chat_room_state[j], options);
            }
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                object.desktop_notification_level = message.desktop_notification_level;
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                object.mobile_notification_level = message.mobile_notification_level;
            if (message.time_last_group_ack != null && message.hasOwnProperty("time_last_group_ack"))
                object.time_last_group_ack = message.time_last_group_ack;
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                object.unread_indicator_muted = message.unread_indicator_muted;
            return object;
        };
    
        /**
         * Converts this CUserChatRoomGroupState to JSON.
         * @function toJSON
         * @memberof CUserChatRoomGroupState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CUserChatRoomGroupState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CUserChatRoomGroupState;
    })();
    
    $root.CUserChatRoomState = (function() {
    
        /**
         * Properties of a CUserChatRoomState.
         * @exports ICUserChatRoomState
         * @interface ICUserChatRoomState
         * @property {number|Long|null} [chat_id] CUserChatRoomState chat_id
         * @property {number|null} [time_joined] CUserChatRoomState time_joined
         * @property {number|null} [time_last_ack] CUserChatRoomState time_last_ack
         * @property {number|null} [desktop_notification_level] CUserChatRoomState desktop_notification_level
         * @property {number|null} [mobile_notification_level] CUserChatRoomState mobile_notification_level
         * @property {number|null} [time_last_mention] CUserChatRoomState time_last_mention
         * @property {boolean|null} [unread_indicator_muted] CUserChatRoomState unread_indicator_muted
         * @property {number|null} [time_first_unread] CUserChatRoomState time_first_unread
         */
    
        /**
         * Constructs a new CUserChatRoomState.
         * @exports CUserChatRoomState
         * @classdesc Represents a CUserChatRoomState.
         * @implements ICUserChatRoomState
         * @constructor
         * @param {ICUserChatRoomState=} [properties] Properties to set
         */
        function CUserChatRoomState(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CUserChatRoomState chat_id.
         * @member {number|Long} chat_id
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CUserChatRoomState time_joined.
         * @member {number} time_joined
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.time_joined = 0;
    
        /**
         * CUserChatRoomState time_last_ack.
         * @member {number} time_last_ack
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.time_last_ack = 0;
    
        /**
         * CUserChatRoomState desktop_notification_level.
         * @member {number} desktop_notification_level
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.desktop_notification_level = 0;
    
        /**
         * CUserChatRoomState mobile_notification_level.
         * @member {number} mobile_notification_level
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.mobile_notification_level = 0;
    
        /**
         * CUserChatRoomState time_last_mention.
         * @member {number} time_last_mention
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.time_last_mention = 0;
    
        /**
         * CUserChatRoomState unread_indicator_muted.
         * @member {boolean} unread_indicator_muted
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.unread_indicator_muted = false;
    
        /**
         * CUserChatRoomState time_first_unread.
         * @member {number} time_first_unread
         * @memberof CUserChatRoomState
         * @instance
         */
        CUserChatRoomState.prototype.time_first_unread = 0;
    
        /**
         * Creates a new CUserChatRoomState instance using the specified properties.
         * @function create
         * @memberof CUserChatRoomState
         * @static
         * @param {ICUserChatRoomState=} [properties] Properties to set
         * @returns {CUserChatRoomState} CUserChatRoomState instance
         */
        CUserChatRoomState.create = function create(properties) {
            return new CUserChatRoomState(properties);
        };
    
        /**
         * Encodes the specified CUserChatRoomState message. Does not implicitly {@link CUserChatRoomState.verify|verify} messages.
         * @function encode
         * @memberof CUserChatRoomState
         * @static
         * @param {ICUserChatRoomState} message CUserChatRoomState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CUserChatRoomState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_id);
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.time_joined);
            if (message.time_last_ack != null && message.hasOwnProperty("time_last_ack"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_last_ack);
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.desktop_notification_level);
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.mobile_notification_level);
            if (message.time_last_mention != null && message.hasOwnProperty("time_last_mention"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.time_last_mention);
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.unread_indicator_muted);
            if (message.time_first_unread != null && message.hasOwnProperty("time_first_unread"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.time_first_unread);
            return writer;
        };
    
        /**
         * Encodes the specified CUserChatRoomState message, length delimited. Does not implicitly {@link CUserChatRoomState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CUserChatRoomState
         * @static
         * @param {ICUserChatRoomState} message CUserChatRoomState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CUserChatRoomState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CUserChatRoomState message from the specified reader or buffer.
         * @function decode
         * @memberof CUserChatRoomState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CUserChatRoomState} CUserChatRoomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CUserChatRoomState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CUserChatRoomState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_id = reader.uint64();
                    break;
                case 2:
                    message.time_joined = reader.uint32();
                    break;
                case 3:
                    message.time_last_ack = reader.uint32();
                    break;
                case 4:
                    message.desktop_notification_level = reader.int32();
                    break;
                case 5:
                    message.mobile_notification_level = reader.int32();
                    break;
                case 6:
                    message.time_last_mention = reader.uint32();
                    break;
                case 7:
                    message.unread_indicator_muted = reader.bool();
                    break;
                case 8:
                    message.time_first_unread = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CUserChatRoomState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CUserChatRoomState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CUserChatRoomState} CUserChatRoomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CUserChatRoomState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CUserChatRoomState message.
         * @function verify
         * @memberof CUserChatRoomState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CUserChatRoomState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                if (!$util.isInteger(message.time_joined))
                    return "time_joined: integer expected";
            if (message.time_last_ack != null && message.hasOwnProperty("time_last_ack"))
                if (!$util.isInteger(message.time_last_ack))
                    return "time_last_ack: integer expected";
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                if (!$util.isInteger(message.desktop_notification_level))
                    return "desktop_notification_level: integer expected";
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                if (!$util.isInteger(message.mobile_notification_level))
                    return "mobile_notification_level: integer expected";
            if (message.time_last_mention != null && message.hasOwnProperty("time_last_mention"))
                if (!$util.isInteger(message.time_last_mention))
                    return "time_last_mention: integer expected";
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                if (typeof message.unread_indicator_muted !== "boolean")
                    return "unread_indicator_muted: boolean expected";
            if (message.time_first_unread != null && message.hasOwnProperty("time_first_unread"))
                if (!$util.isInteger(message.time_first_unread))
                    return "time_first_unread: integer expected";
            return null;
        };
    
        /**
         * Creates a CUserChatRoomState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CUserChatRoomState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CUserChatRoomState} CUserChatRoomState
         */
        CUserChatRoomState.fromObject = function fromObject(object) {
            if (object instanceof $root.CUserChatRoomState)
                return object;
            var message = new $root.CUserChatRoomState();
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.time_joined != null)
                message.time_joined = object.time_joined >>> 0;
            if (object.time_last_ack != null)
                message.time_last_ack = object.time_last_ack >>> 0;
            if (object.desktop_notification_level != null)
                message.desktop_notification_level = object.desktop_notification_level | 0;
            if (object.mobile_notification_level != null)
                message.mobile_notification_level = object.mobile_notification_level | 0;
            if (object.time_last_mention != null)
                message.time_last_mention = object.time_last_mention >>> 0;
            if (object.unread_indicator_muted != null)
                message.unread_indicator_muted = Boolean(object.unread_indicator_muted);
            if (object.time_first_unread != null)
                message.time_first_unread = object.time_first_unread >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CUserChatRoomState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CUserChatRoomState
         * @static
         * @param {CUserChatRoomState} message CUserChatRoomState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CUserChatRoomState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.time_joined = 0;
                object.time_last_ack = 0;
                object.desktop_notification_level = 0;
                object.mobile_notification_level = 0;
                object.time_last_mention = 0;
                object.unread_indicator_muted = false;
                object.time_first_unread = 0;
            }
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.time_joined != null && message.hasOwnProperty("time_joined"))
                object.time_joined = message.time_joined;
            if (message.time_last_ack != null && message.hasOwnProperty("time_last_ack"))
                object.time_last_ack = message.time_last_ack;
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                object.desktop_notification_level = message.desktop_notification_level;
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                object.mobile_notification_level = message.mobile_notification_level;
            if (message.time_last_mention != null && message.hasOwnProperty("time_last_mention"))
                object.time_last_mention = message.time_last_mention;
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                object.unread_indicator_muted = message.unread_indicator_muted;
            if (message.time_first_unread != null && message.hasOwnProperty("time_first_unread"))
                object.time_first_unread = message.time_first_unread;
            return object;
        };
    
        /**
         * Converts this CUserChatRoomState to JSON.
         * @function toJSON
         * @memberof CUserChatRoomState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CUserChatRoomState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CUserChatRoomState;
    })();
    
    $root.CChatRoom_SaveChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SaveChatRoomGroup_Request.
         * @exports ICChatRoom_SaveChatRoomGroup_Request
         * @interface ICChatRoom_SaveChatRoomGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SaveChatRoomGroup_Request chat_group_id
         * @property {string|null} [name] CChatRoom_SaveChatRoomGroup_Request name
         */
    
        /**
         * Constructs a new CChatRoom_SaveChatRoomGroup_Request.
         * @exports CChatRoom_SaveChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_SaveChatRoomGroup_Request.
         * @implements ICChatRoom_SaveChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_SaveChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_SaveChatRoomGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SaveChatRoomGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @instance
         */
        CChatRoom_SaveChatRoomGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SaveChatRoomGroup_Request name.
         * @member {string} name
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @instance
         */
        CChatRoom_SaveChatRoomGroup_Request.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_SaveChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_SaveChatRoomGroup_Request} CChatRoom_SaveChatRoomGroup_Request instance
         */
        CChatRoom_SaveChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_SaveChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SaveChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_SaveChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Request} message CChatRoom_SaveChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SaveChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SaveChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_SaveChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Request} message CChatRoom_SaveChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SaveChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SaveChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SaveChatRoomGroup_Request} CChatRoom_SaveChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SaveChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SaveChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SaveChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SaveChatRoomGroup_Request} CChatRoom_SaveChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SaveChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SaveChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SaveChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SaveChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SaveChatRoomGroup_Request} CChatRoom_SaveChatRoomGroup_Request
         */
        CChatRoom_SaveChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SaveChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_SaveChatRoomGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SaveChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @static
         * @param {CChatRoom_SaveChatRoomGroup_Request} message CChatRoom_SaveChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SaveChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SaveChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SaveChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SaveChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SaveChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_SaveChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SaveChatRoomGroup_Response.
         * @exports ICChatRoom_SaveChatRoomGroup_Response
         * @interface ICChatRoom_SaveChatRoomGroup_Response
         */
    
        /**
         * Constructs a new CChatRoom_SaveChatRoomGroup_Response.
         * @exports CChatRoom_SaveChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_SaveChatRoomGroup_Response.
         * @implements ICChatRoom_SaveChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_SaveChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_SaveChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SaveChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_SaveChatRoomGroup_Response} CChatRoom_SaveChatRoomGroup_Response instance
         */
        CChatRoom_SaveChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_SaveChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SaveChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_SaveChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Response} message CChatRoom_SaveChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SaveChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SaveChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_SaveChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_SaveChatRoomGroup_Response} message CChatRoom_SaveChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SaveChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SaveChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SaveChatRoomGroup_Response} CChatRoom_SaveChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SaveChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SaveChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SaveChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SaveChatRoomGroup_Response} CChatRoom_SaveChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SaveChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SaveChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SaveChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SaveChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SaveChatRoomGroup_Response} CChatRoom_SaveChatRoomGroup_Response
         */
        CChatRoom_SaveChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SaveChatRoomGroup_Response)
                return object;
            return new $root.CChatRoom_SaveChatRoomGroup_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SaveChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @static
         * @param {CChatRoom_SaveChatRoomGroup_Response} message CChatRoom_SaveChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SaveChatRoomGroup_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SaveChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SaveChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SaveChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SaveChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_RenameChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_RenameChatRoomGroup_Request.
         * @exports ICChatRoom_RenameChatRoomGroup_Request
         * @interface ICChatRoom_RenameChatRoomGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_RenameChatRoomGroup_Request chat_group_id
         * @property {string|null} [name] CChatRoom_RenameChatRoomGroup_Request name
         */
    
        /**
         * Constructs a new CChatRoom_RenameChatRoomGroup_Request.
         * @exports CChatRoom_RenameChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_RenameChatRoomGroup_Request.
         * @implements ICChatRoom_RenameChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_RenameChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_RenameChatRoomGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_RenameChatRoomGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @instance
         */
        CChatRoom_RenameChatRoomGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RenameChatRoomGroup_Request name.
         * @member {string} name
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @instance
         */
        CChatRoom_RenameChatRoomGroup_Request.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_RenameChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_RenameChatRoomGroup_Request} CChatRoom_RenameChatRoomGroup_Request instance
         */
        CChatRoom_RenameChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_RenameChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_RenameChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Request} message CChatRoom_RenameChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_RenameChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Request} message CChatRoom_RenameChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameChatRoomGroup_Request} CChatRoom_RenameChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameChatRoomGroup_Request} CChatRoom_RenameChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameChatRoomGroup_Request} CChatRoom_RenameChatRoomGroup_Request
         */
        CChatRoom_RenameChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_RenameChatRoomGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @static
         * @param {CChatRoom_RenameChatRoomGroup_Request} message CChatRoom_RenameChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_RenameChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_RenameChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_RenameChatRoomGroup_Response.
         * @exports ICChatRoom_RenameChatRoomGroup_Response
         * @interface ICChatRoom_RenameChatRoomGroup_Response
         * @property {string|null} [name] CChatRoom_RenameChatRoomGroup_Response name
         */
    
        /**
         * Constructs a new CChatRoom_RenameChatRoomGroup_Response.
         * @exports CChatRoom_RenameChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_RenameChatRoomGroup_Response.
         * @implements ICChatRoom_RenameChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_RenameChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_RenameChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_RenameChatRoomGroup_Response name.
         * @member {string} name
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @instance
         */
        CChatRoom_RenameChatRoomGroup_Response.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_RenameChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_RenameChatRoomGroup_Response} CChatRoom_RenameChatRoomGroup_Response instance
         */
        CChatRoom_RenameChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_RenameChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_RenameChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Response} message CChatRoom_RenameChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_RenameChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_RenameChatRoomGroup_Response} message CChatRoom_RenameChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameChatRoomGroup_Response} CChatRoom_RenameChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameChatRoomGroup_Response} CChatRoom_RenameChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameChatRoomGroup_Response} CChatRoom_RenameChatRoomGroup_Response
         */
        CChatRoom_RenameChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameChatRoomGroup_Response)
                return object;
            var message = new $root.CChatRoom_RenameChatRoomGroup_Response();
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @static
         * @param {CChatRoom_RenameChatRoomGroup_Response} message CChatRoom_RenameChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameChatRoomGroup_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.name = "";
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_RenameChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_SetChatRoomGroupTagline_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupTagline_Request.
         * @exports ICChatRoom_SetChatRoomGroupTagline_Request
         * @interface ICChatRoom_SetChatRoomGroupTagline_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SetChatRoomGroupTagline_Request chat_group_id
         * @property {string|null} [tagline] CChatRoom_SetChatRoomGroupTagline_Request tagline
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupTagline_Request.
         * @exports CChatRoom_SetChatRoomGroupTagline_Request
         * @classdesc Represents a CChatRoom_SetChatRoomGroupTagline_Request.
         * @implements ICChatRoom_SetChatRoomGroupTagline_Request
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupTagline_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetChatRoomGroupTagline_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupTagline_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetChatRoomGroupTagline_Request tagline.
         * @member {string} tagline
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupTagline_Request.prototype.tagline = "";
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupTagline_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupTagline_Request} CChatRoom_SetChatRoomGroupTagline_Request instance
         */
        CChatRoom_SetChatRoomGroupTagline_Request.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupTagline_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupTagline_Request message. Does not implicitly {@link CChatRoom_SetChatRoomGroupTagline_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request} message CChatRoom_SetChatRoomGroupTagline_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupTagline_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tagline);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupTagline_Request message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupTagline_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request} message CChatRoom_SetChatRoomGroupTagline_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupTagline_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupTagline_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupTagline_Request} CChatRoom_SetChatRoomGroupTagline_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupTagline_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupTagline_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.tagline = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupTagline_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupTagline_Request} CChatRoom_SetChatRoomGroupTagline_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupTagline_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupTagline_Request message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupTagline_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                if (!$util.isString(message.tagline))
                    return "tagline: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupTagline_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupTagline_Request} CChatRoom_SetChatRoomGroupTagline_Request
         */
        CChatRoom_SetChatRoomGroupTagline_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupTagline_Request)
                return object;
            var message = new $root.CChatRoom_SetChatRoomGroupTagline_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.tagline != null)
                message.tagline = String(object.tagline);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupTagline_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @static
         * @param {CChatRoom_SetChatRoomGroupTagline_Request} message CChatRoom_SetChatRoomGroupTagline_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupTagline_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.tagline = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.tagline != null && message.hasOwnProperty("tagline"))
                object.tagline = message.tagline;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupTagline_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupTagline_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupTagline_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupTagline_Request;
    })();
    
    $root.CChatRoom_SetChatRoomGroupTagline_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupTagline_Response.
         * @exports ICChatRoom_SetChatRoomGroupTagline_Response
         * @interface ICChatRoom_SetChatRoomGroupTagline_Response
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupTagline_Response.
         * @exports CChatRoom_SetChatRoomGroupTagline_Response
         * @classdesc Represents a CChatRoom_SetChatRoomGroupTagline_Response.
         * @implements ICChatRoom_SetChatRoomGroupTagline_Response
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupTagline_Response=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupTagline_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupTagline_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupTagline_Response} CChatRoom_SetChatRoomGroupTagline_Response instance
         */
        CChatRoom_SetChatRoomGroupTagline_Response.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupTagline_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupTagline_Response message. Does not implicitly {@link CChatRoom_SetChatRoomGroupTagline_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Response} message CChatRoom_SetChatRoomGroupTagline_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupTagline_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupTagline_Response message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupTagline_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupTagline_Response} message CChatRoom_SetChatRoomGroupTagline_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupTagline_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupTagline_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupTagline_Response} CChatRoom_SetChatRoomGroupTagline_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupTagline_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupTagline_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupTagline_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupTagline_Response} CChatRoom_SetChatRoomGroupTagline_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupTagline_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupTagline_Response message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupTagline_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupTagline_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupTagline_Response} CChatRoom_SetChatRoomGroupTagline_Response
         */
        CChatRoom_SetChatRoomGroupTagline_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupTagline_Response)
                return object;
            return new $root.CChatRoom_SetChatRoomGroupTagline_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupTagline_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @static
         * @param {CChatRoom_SetChatRoomGroupTagline_Response} message CChatRoom_SetChatRoomGroupTagline_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupTagline_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupTagline_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupTagline_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupTagline_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupTagline_Response;
    })();
    
    $root.CChatRoom_SetChatRoomGroupAvatar_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupAvatar_Request.
         * @exports ICChatRoom_SetChatRoomGroupAvatar_Request
         * @interface ICChatRoom_SetChatRoomGroupAvatar_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SetChatRoomGroupAvatar_Request chat_group_id
         * @property {Uint8Array|null} [avatar_sha] CChatRoom_SetChatRoomGroupAvatar_Request avatar_sha
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupAvatar_Request.
         * @exports CChatRoom_SetChatRoomGroupAvatar_Request
         * @classdesc Represents a CChatRoom_SetChatRoomGroupAvatar_Request.
         * @implements ICChatRoom_SetChatRoomGroupAvatar_Request
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupAvatar_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetChatRoomGroupAvatar_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetChatRoomGroupAvatar_Request avatar_sha.
         * @member {Uint8Array} avatar_sha
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.prototype.avatar_sha = $util.newBuffer([]);
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupAvatar_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Request} CChatRoom_SetChatRoomGroupAvatar_Request instance
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupAvatar_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupAvatar_Request message. Does not implicitly {@link CChatRoom_SetChatRoomGroupAvatar_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request} message CChatRoom_SetChatRoomGroupAvatar_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.avatar_sha);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupAvatar_Request message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupAvatar_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request} message CChatRoom_SetChatRoomGroupAvatar_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupAvatar_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Request} CChatRoom_SetChatRoomGroupAvatar_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupAvatar_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.avatar_sha = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupAvatar_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Request} CChatRoom_SetChatRoomGroupAvatar_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupAvatar_Request message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                if (!(message.avatar_sha && typeof message.avatar_sha.length === "number" || $util.isString(message.avatar_sha)))
                    return "avatar_sha: buffer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupAvatar_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Request} CChatRoom_SetChatRoomGroupAvatar_Request
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupAvatar_Request)
                return object;
            var message = new $root.CChatRoom_SetChatRoomGroupAvatar_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.avatar_sha != null)
                if (typeof object.avatar_sha === "string")
                    $util.base64.decode(object.avatar_sha, message.avatar_sha = $util.newBuffer($util.base64.length(object.avatar_sha)), 0);
                else if (object.avatar_sha.length)
                    message.avatar_sha = object.avatar_sha;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupAvatar_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @static
         * @param {CChatRoom_SetChatRoomGroupAvatar_Request} message CChatRoom_SetChatRoomGroupAvatar_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.avatar_sha = "";
                else {
                    object.avatar_sha = [];
                    if (options.bytes !== Array)
                        object.avatar_sha = $util.newBuffer(object.avatar_sha);
                }
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.avatar_sha != null && message.hasOwnProperty("avatar_sha"))
                object.avatar_sha = options.bytes === String ? $util.base64.encode(message.avatar_sha, 0, message.avatar_sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.avatar_sha) : message.avatar_sha;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupAvatar_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupAvatar_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupAvatar_Request;
    })();
    
    $root.CChatRoom_SetChatRoomGroupAvatar_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupAvatar_Response.
         * @exports ICChatRoom_SetChatRoomGroupAvatar_Response
         * @interface ICChatRoom_SetChatRoomGroupAvatar_Response
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupAvatar_Response.
         * @exports CChatRoom_SetChatRoomGroupAvatar_Response
         * @classdesc Represents a CChatRoom_SetChatRoomGroupAvatar_Response.
         * @implements ICChatRoom_SetChatRoomGroupAvatar_Response
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Response=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupAvatar_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupAvatar_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Response} CChatRoom_SetChatRoomGroupAvatar_Response instance
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupAvatar_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupAvatar_Response message. Does not implicitly {@link CChatRoom_SetChatRoomGroupAvatar_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Response} message CChatRoom_SetChatRoomGroupAvatar_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupAvatar_Response message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupAvatar_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Response} message CChatRoom_SetChatRoomGroupAvatar_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupAvatar_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Response} CChatRoom_SetChatRoomGroupAvatar_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupAvatar_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupAvatar_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Response} CChatRoom_SetChatRoomGroupAvatar_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupAvatar_Response message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupAvatar_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupAvatar_Response} CChatRoom_SetChatRoomGroupAvatar_Response
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupAvatar_Response)
                return object;
            return new $root.CChatRoom_SetChatRoomGroupAvatar_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupAvatar_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @static
         * @param {CChatRoom_SetChatRoomGroupAvatar_Response} message CChatRoom_SetChatRoomGroupAvatar_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupAvatar_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupAvatar_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupAvatar_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupAvatar_Response;
    })();
    
    $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.
         * @exports ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @interface ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SetChatRoomGroupWatchingBroadcast_Request chat_group_id
         * @property {number|null} [watching_broadcast_accountid] CChatRoom_SetChatRoomGroupWatchingBroadcast_Request watching_broadcast_accountid
         * @property {number|Long|null} [watching_broadcast_channel_id] CChatRoom_SetChatRoomGroupWatchingBroadcast_Request watching_broadcast_channel_id
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.
         * @exports CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @classdesc Represents a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.
         * @implements ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetChatRoomGroupWatchingBroadcast_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetChatRoomGroupWatchingBroadcast_Request watching_broadcast_accountid.
         * @member {number} watching_broadcast_accountid
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.prototype.watching_broadcast_accountid = 0;
    
        /**
         * CChatRoom_SetChatRoomGroupWatchingBroadcast_Request watching_broadcast_channel_id.
         * @member {number|Long} watching_broadcast_channel_id
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @instance
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.prototype.watching_broadcast_channel_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupWatchingBroadcast_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Request} CChatRoom_SetChatRoomGroupWatchingBroadcast_Request instance
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupWatchingBroadcast_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message. Does not implicitly {@link CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.watching_broadcast_accountid);
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.watching_broadcast_channel_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Request} CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.watching_broadcast_accountid = reader.uint32();
                    break;
                case 3:
                    message.watching_broadcast_channel_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Request} CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                if (!$util.isInteger(message.watching_broadcast_accountid))
                    return "watching_broadcast_accountid: integer expected";
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (!$util.isInteger(message.watching_broadcast_channel_id) && !(message.watching_broadcast_channel_id && $util.isInteger(message.watching_broadcast_channel_id.low) && $util.isInteger(message.watching_broadcast_channel_id.high)))
                    return "watching_broadcast_channel_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Request} CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Request)
                return object;
            var message = new $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.watching_broadcast_accountid != null)
                message.watching_broadcast_accountid = object.watching_broadcast_accountid >>> 0;
            if (object.watching_broadcast_channel_id != null)
                if ($util.Long)
                    (message.watching_broadcast_channel_id = $util.Long.fromValue(object.watching_broadcast_channel_id)).unsigned = true;
                else if (typeof object.watching_broadcast_channel_id === "string")
                    message.watching_broadcast_channel_id = parseInt(object.watching_broadcast_channel_id, 10);
                else if (typeof object.watching_broadcast_channel_id === "number")
                    message.watching_broadcast_channel_id = object.watching_broadcast_channel_id;
                else if (typeof object.watching_broadcast_channel_id === "object")
                    message.watching_broadcast_channel_id = new $util.LongBits(object.watching_broadcast_channel_id.low >>> 0, object.watching_broadcast_channel_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @static
         * @param {CChatRoom_SetChatRoomGroupWatchingBroadcast_Request} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.watching_broadcast_accountid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.watching_broadcast_channel_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.watching_broadcast_channel_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                object.watching_broadcast_accountid = message.watching_broadcast_accountid;
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (typeof message.watching_broadcast_channel_id === "number")
                    object.watching_broadcast_channel_id = options.longs === String ? String(message.watching_broadcast_channel_id) : message.watching_broadcast_channel_id;
                else
                    object.watching_broadcast_channel_id = options.longs === String ? $util.Long.prototype.toString.call(message.watching_broadcast_channel_id) : options.longs === Number ? new $util.LongBits(message.watching_broadcast_channel_id.low >>> 0, message.watching_broadcast_channel_id.high >>> 0).toNumber(true) : message.watching_broadcast_channel_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupWatchingBroadcast_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupWatchingBroadcast_Request;
    })();
    
    $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.
         * @exports ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @interface ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         */
    
        /**
         * Constructs a new CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.
         * @exports CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @classdesc Represents a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.
         * @implements ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @constructor
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response=} [properties] Properties to set
         */
        function CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SetChatRoomGroupWatchingBroadcast_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} CChatRoom_SetChatRoomGroupWatchingBroadcast_Response instance
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.create = function create(properties) {
            return new CChatRoom_SetChatRoomGroupWatchingBroadcast_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message. Does not implicitly {@link CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message, length delimited. Does not implicitly {@link CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Response} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message.
         * @function verify
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Response)
                return object;
            return new $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetChatRoomGroupWatchingBroadcast_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @static
         * @param {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} message CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SetChatRoomGroupWatchingBroadcast_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetChatRoomGroupWatchingBroadcast_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetChatRoomGroupWatchingBroadcast_Response;
    })();
    
    $root.CChatRoom_JoinMiniGameForChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_JoinMiniGameForChatRoomGroup_Response.
         * @exports ICChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @interface ICChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @property {number|Long|null} [minigame_id] CChatRoom_JoinMiniGameForChatRoomGroup_Response minigame_id
         */
    
        /**
         * Constructs a new CChatRoom_JoinMiniGameForChatRoomGroup_Response.
         * @exports CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_JoinMiniGameForChatRoomGroup_Response.
         * @implements ICChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_JoinMiniGameForChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_JoinMiniGameForChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_JoinMiniGameForChatRoomGroup_Response minigame_id.
         * @member {number|Long} minigame_id
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @instance
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.prototype.minigame_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_JoinMiniGameForChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinMiniGameForChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_JoinMiniGameForChatRoomGroup_Response} CChatRoom_JoinMiniGameForChatRoomGroup_Response instance
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_JoinMiniGameForChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_JoinMiniGameForChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_JoinMiniGameForChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinMiniGameForChatRoomGroup_Response} message CChatRoom_JoinMiniGameForChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.minigame_id != null && message.hasOwnProperty("minigame_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.minigame_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_JoinMiniGameForChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_JoinMiniGameForChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinMiniGameForChatRoomGroup_Response} message CChatRoom_JoinMiniGameForChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_JoinMiniGameForChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_JoinMiniGameForChatRoomGroup_Response} CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_JoinMiniGameForChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.minigame_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_JoinMiniGameForChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_JoinMiniGameForChatRoomGroup_Response} CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_JoinMiniGameForChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.minigame_id != null && message.hasOwnProperty("minigame_id"))
                if (!$util.isInteger(message.minigame_id) && !(message.minigame_id && $util.isInteger(message.minigame_id.low) && $util.isInteger(message.minigame_id.high)))
                    return "minigame_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_JoinMiniGameForChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_JoinMiniGameForChatRoomGroup_Response} CChatRoom_JoinMiniGameForChatRoomGroup_Response
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_JoinMiniGameForChatRoomGroup_Response)
                return object;
            var message = new $root.CChatRoom_JoinMiniGameForChatRoomGroup_Response();
            if (object.minigame_id != null)
                if ($util.Long)
                    (message.minigame_id = $util.Long.fromValue(object.minigame_id)).unsigned = true;
                else if (typeof object.minigame_id === "string")
                    message.minigame_id = parseInt(object.minigame_id, 10);
                else if (typeof object.minigame_id === "number")
                    message.minigame_id = object.minigame_id;
                else if (typeof object.minigame_id === "object")
                    message.minigame_id = new $util.LongBits(object.minigame_id.low >>> 0, object.minigame_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_JoinMiniGameForChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @static
         * @param {CChatRoom_JoinMiniGameForChatRoomGroup_Response} message CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.minigame_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.minigame_id = options.longs === String ? "0" : 0;
            if (message.minigame_id != null && message.hasOwnProperty("minigame_id"))
                if (typeof message.minigame_id === "number")
                    object.minigame_id = options.longs === String ? String(message.minigame_id) : message.minigame_id;
                else
                    object.minigame_id = options.longs === String ? $util.Long.prototype.toString.call(message.minigame_id) : options.longs === Number ? new $util.LongBits(message.minigame_id.low >>> 0, message.minigame_id.high >>> 0).toNumber(true) : message.minigame_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_JoinMiniGameForChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_JoinMiniGameForChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_JoinMiniGameForChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_EndMiniGameForChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_EndMiniGameForChatRoomGroup_Response.
         * @exports ICChatRoom_EndMiniGameForChatRoomGroup_Response
         * @interface ICChatRoom_EndMiniGameForChatRoomGroup_Response
         */
    
        /**
         * Constructs a new CChatRoom_EndMiniGameForChatRoomGroup_Response.
         * @exports CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_EndMiniGameForChatRoomGroup_Response.
         * @implements ICChatRoom_EndMiniGameForChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_EndMiniGameForChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_EndMiniGameForChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_EndMiniGameForChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_EndMiniGameForChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_EndMiniGameForChatRoomGroup_Response} CChatRoom_EndMiniGameForChatRoomGroup_Response instance
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_EndMiniGameForChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_EndMiniGameForChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_EndMiniGameForChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_EndMiniGameForChatRoomGroup_Response} message CChatRoom_EndMiniGameForChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_EndMiniGameForChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_EndMiniGameForChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_EndMiniGameForChatRoomGroup_Response} message CChatRoom_EndMiniGameForChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_EndMiniGameForChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_EndMiniGameForChatRoomGroup_Response} CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_EndMiniGameForChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_EndMiniGameForChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_EndMiniGameForChatRoomGroup_Response} CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_EndMiniGameForChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_EndMiniGameForChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_EndMiniGameForChatRoomGroup_Response} CChatRoom_EndMiniGameForChatRoomGroup_Response
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_EndMiniGameForChatRoomGroup_Response)
                return object;
            return new $root.CChatRoom_EndMiniGameForChatRoomGroup_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_EndMiniGameForChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @static
         * @param {CChatRoom_EndMiniGameForChatRoomGroup_Response} message CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_EndMiniGameForChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_EndMiniGameForChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_EndMiniGameForChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_MuteUser_Request = (function() {
    
        /**
         * Properties of a CChatRoom_MuteUser_Request.
         * @exports ICChatRoom_MuteUser_Request
         * @interface ICChatRoom_MuteUser_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_MuteUser_Request chat_group_id
         * @property {number|Long|null} [steamid] CChatRoom_MuteUser_Request steamid
         * @property {number|null} [expiration] CChatRoom_MuteUser_Request expiration
         */
    
        /**
         * Constructs a new CChatRoom_MuteUser_Request.
         * @exports CChatRoom_MuteUser_Request
         * @classdesc Represents a CChatRoom_MuteUser_Request.
         * @implements ICChatRoom_MuteUser_Request
         * @constructor
         * @param {ICChatRoom_MuteUser_Request=} [properties] Properties to set
         */
        function CChatRoom_MuteUser_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_MuteUser_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_MuteUser_Request
         * @instance
         */
        CChatRoom_MuteUser_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_MuteUser_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_MuteUser_Request
         * @instance
         */
        CChatRoom_MuteUser_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_MuteUser_Request expiration.
         * @member {number} expiration
         * @memberof CChatRoom_MuteUser_Request
         * @instance
         */
        CChatRoom_MuteUser_Request.prototype.expiration = 0;
    
        /**
         * Creates a new CChatRoom_MuteUser_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {ICChatRoom_MuteUser_Request=} [properties] Properties to set
         * @returns {CChatRoom_MuteUser_Request} CChatRoom_MuteUser_Request instance
         */
        CChatRoom_MuteUser_Request.create = function create(properties) {
            return new CChatRoom_MuteUser_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_MuteUser_Request message. Does not implicitly {@link CChatRoom_MuteUser_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {ICChatRoom_MuteUser_Request} message CChatRoom_MuteUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MuteUser_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.expiration);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_MuteUser_Request message, length delimited. Does not implicitly {@link CChatRoom_MuteUser_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {ICChatRoom_MuteUser_Request} message CChatRoom_MuteUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MuteUser_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_MuteUser_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_MuteUser_Request} CChatRoom_MuteUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MuteUser_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_MuteUser_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                case 3:
                    message.expiration = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_MuteUser_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_MuteUser_Request} CChatRoom_MuteUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MuteUser_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_MuteUser_Request message.
         * @function verify
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_MuteUser_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                if (!$util.isInteger(message.expiration))
                    return "expiration: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_MuteUser_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_MuteUser_Request} CChatRoom_MuteUser_Request
         */
        CChatRoom_MuteUser_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_MuteUser_Request)
                return object;
            var message = new $root.CChatRoom_MuteUser_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.expiration != null)
                message.expiration = object.expiration | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_MuteUser_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_MuteUser_Request
         * @static
         * @param {CChatRoom_MuteUser_Request} message CChatRoom_MuteUser_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_MuteUser_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.expiration = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                object.expiration = message.expiration;
            return object;
        };
    
        /**
         * Converts this CChatRoom_MuteUser_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_MuteUser_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_MuteUser_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_MuteUser_Request;
    })();
    
    $root.CChatRoom_MuteUser_Response = (function() {
    
        /**
         * Properties of a CChatRoom_MuteUser_Response.
         * @exports ICChatRoom_MuteUser_Response
         * @interface ICChatRoom_MuteUser_Response
         */
    
        /**
         * Constructs a new CChatRoom_MuteUser_Response.
         * @exports CChatRoom_MuteUser_Response
         * @classdesc Represents a CChatRoom_MuteUser_Response.
         * @implements ICChatRoom_MuteUser_Response
         * @constructor
         * @param {ICChatRoom_MuteUser_Response=} [properties] Properties to set
         */
        function CChatRoom_MuteUser_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_MuteUser_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {ICChatRoom_MuteUser_Response=} [properties] Properties to set
         * @returns {CChatRoom_MuteUser_Response} CChatRoom_MuteUser_Response instance
         */
        CChatRoom_MuteUser_Response.create = function create(properties) {
            return new CChatRoom_MuteUser_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_MuteUser_Response message. Does not implicitly {@link CChatRoom_MuteUser_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {ICChatRoom_MuteUser_Response} message CChatRoom_MuteUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MuteUser_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_MuteUser_Response message, length delimited. Does not implicitly {@link CChatRoom_MuteUser_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {ICChatRoom_MuteUser_Response} message CChatRoom_MuteUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MuteUser_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_MuteUser_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_MuteUser_Response} CChatRoom_MuteUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MuteUser_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_MuteUser_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_MuteUser_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_MuteUser_Response} CChatRoom_MuteUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MuteUser_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_MuteUser_Response message.
         * @function verify
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_MuteUser_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_MuteUser_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_MuteUser_Response} CChatRoom_MuteUser_Response
         */
        CChatRoom_MuteUser_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_MuteUser_Response)
                return object;
            return new $root.CChatRoom_MuteUser_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_MuteUser_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_MuteUser_Response
         * @static
         * @param {CChatRoom_MuteUser_Response} message CChatRoom_MuteUser_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_MuteUser_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_MuteUser_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_MuteUser_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_MuteUser_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_MuteUser_Response;
    })();
    
    $root.CChatRoom_KickUser_Request = (function() {
    
        /**
         * Properties of a CChatRoom_KickUser_Request.
         * @exports ICChatRoom_KickUser_Request
         * @interface ICChatRoom_KickUser_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_KickUser_Request chat_group_id
         * @property {number|Long|null} [steamid] CChatRoom_KickUser_Request steamid
         * @property {number|null} [expiration] CChatRoom_KickUser_Request expiration
         */
    
        /**
         * Constructs a new CChatRoom_KickUser_Request.
         * @exports CChatRoom_KickUser_Request
         * @classdesc Represents a CChatRoom_KickUser_Request.
         * @implements ICChatRoom_KickUser_Request
         * @constructor
         * @param {ICChatRoom_KickUser_Request=} [properties] Properties to set
         */
        function CChatRoom_KickUser_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_KickUser_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_KickUser_Request
         * @instance
         */
        CChatRoom_KickUser_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_KickUser_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_KickUser_Request
         * @instance
         */
        CChatRoom_KickUser_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_KickUser_Request expiration.
         * @member {number} expiration
         * @memberof CChatRoom_KickUser_Request
         * @instance
         */
        CChatRoom_KickUser_Request.prototype.expiration = 0;
    
        /**
         * Creates a new CChatRoom_KickUser_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {ICChatRoom_KickUser_Request=} [properties] Properties to set
         * @returns {CChatRoom_KickUser_Request} CChatRoom_KickUser_Request instance
         */
        CChatRoom_KickUser_Request.create = function create(properties) {
            return new CChatRoom_KickUser_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_KickUser_Request message. Does not implicitly {@link CChatRoom_KickUser_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {ICChatRoom_KickUser_Request} message CChatRoom_KickUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_KickUser_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.expiration);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_KickUser_Request message, length delimited. Does not implicitly {@link CChatRoom_KickUser_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {ICChatRoom_KickUser_Request} message CChatRoom_KickUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_KickUser_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_KickUser_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_KickUser_Request} CChatRoom_KickUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_KickUser_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_KickUser_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                case 3:
                    message.expiration = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_KickUser_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_KickUser_Request} CChatRoom_KickUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_KickUser_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_KickUser_Request message.
         * @function verify
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_KickUser_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                if (!$util.isInteger(message.expiration))
                    return "expiration: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_KickUser_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_KickUser_Request} CChatRoom_KickUser_Request
         */
        CChatRoom_KickUser_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_KickUser_Request)
                return object;
            var message = new $root.CChatRoom_KickUser_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.expiration != null)
                message.expiration = object.expiration | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_KickUser_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_KickUser_Request
         * @static
         * @param {CChatRoom_KickUser_Request} message CChatRoom_KickUser_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_KickUser_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.expiration = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.expiration != null && message.hasOwnProperty("expiration"))
                object.expiration = message.expiration;
            return object;
        };
    
        /**
         * Converts this CChatRoom_KickUser_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_KickUser_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_KickUser_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_KickUser_Request;
    })();
    
    $root.CChatRoom_KickUser_Response = (function() {
    
        /**
         * Properties of a CChatRoom_KickUser_Response.
         * @exports ICChatRoom_KickUser_Response
         * @interface ICChatRoom_KickUser_Response
         */
    
        /**
         * Constructs a new CChatRoom_KickUser_Response.
         * @exports CChatRoom_KickUser_Response
         * @classdesc Represents a CChatRoom_KickUser_Response.
         * @implements ICChatRoom_KickUser_Response
         * @constructor
         * @param {ICChatRoom_KickUser_Response=} [properties] Properties to set
         */
        function CChatRoom_KickUser_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_KickUser_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {ICChatRoom_KickUser_Response=} [properties] Properties to set
         * @returns {CChatRoom_KickUser_Response} CChatRoom_KickUser_Response instance
         */
        CChatRoom_KickUser_Response.create = function create(properties) {
            return new CChatRoom_KickUser_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_KickUser_Response message. Does not implicitly {@link CChatRoom_KickUser_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {ICChatRoom_KickUser_Response} message CChatRoom_KickUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_KickUser_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_KickUser_Response message, length delimited. Does not implicitly {@link CChatRoom_KickUser_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {ICChatRoom_KickUser_Response} message CChatRoom_KickUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_KickUser_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_KickUser_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_KickUser_Response} CChatRoom_KickUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_KickUser_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_KickUser_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_KickUser_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_KickUser_Response} CChatRoom_KickUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_KickUser_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_KickUser_Response message.
         * @function verify
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_KickUser_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_KickUser_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_KickUser_Response} CChatRoom_KickUser_Response
         */
        CChatRoom_KickUser_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_KickUser_Response)
                return object;
            return new $root.CChatRoom_KickUser_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_KickUser_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_KickUser_Response
         * @static
         * @param {CChatRoom_KickUser_Response} message CChatRoom_KickUser_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_KickUser_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_KickUser_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_KickUser_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_KickUser_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_KickUser_Response;
    })();
    
    $root.CChatRoom_SetUserBanState_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserBanState_Request.
         * @exports ICChatRoom_SetUserBanState_Request
         * @interface ICChatRoom_SetUserBanState_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SetUserBanState_Request chat_group_id
         * @property {number|Long|null} [steamid] CChatRoom_SetUserBanState_Request steamid
         * @property {boolean|null} [ban_state] CChatRoom_SetUserBanState_Request ban_state
         */
    
        /**
         * Constructs a new CChatRoom_SetUserBanState_Request.
         * @exports CChatRoom_SetUserBanState_Request
         * @classdesc Represents a CChatRoom_SetUserBanState_Request.
         * @implements ICChatRoom_SetUserBanState_Request
         * @constructor
         * @param {ICChatRoom_SetUserBanState_Request=} [properties] Properties to set
         */
        function CChatRoom_SetUserBanState_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetUserBanState_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SetUserBanState_Request
         * @instance
         */
        CChatRoom_SetUserBanState_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetUserBanState_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_SetUserBanState_Request
         * @instance
         */
        CChatRoom_SetUserBanState_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_SetUserBanState_Request ban_state.
         * @member {boolean} ban_state
         * @memberof CChatRoom_SetUserBanState_Request
         * @instance
         */
        CChatRoom_SetUserBanState_Request.prototype.ban_state = false;
    
        /**
         * Creates a new CChatRoom_SetUserBanState_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {ICChatRoom_SetUserBanState_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetUserBanState_Request} CChatRoom_SetUserBanState_Request instance
         */
        CChatRoom_SetUserBanState_Request.create = function create(properties) {
            return new CChatRoom_SetUserBanState_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserBanState_Request message. Does not implicitly {@link CChatRoom_SetUserBanState_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {ICChatRoom_SetUserBanState_Request} message CChatRoom_SetUserBanState_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserBanState_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.ban_state != null && message.hasOwnProperty("ban_state"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.ban_state);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserBanState_Request message, length delimited. Does not implicitly {@link CChatRoom_SetUserBanState_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {ICChatRoom_SetUserBanState_Request} message CChatRoom_SetUserBanState_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserBanState_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserBanState_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserBanState_Request} CChatRoom_SetUserBanState_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserBanState_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserBanState_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                case 3:
                    message.ban_state = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserBanState_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserBanState_Request} CChatRoom_SetUserBanState_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserBanState_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserBanState_Request message.
         * @function verify
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserBanState_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.ban_state != null && message.hasOwnProperty("ban_state"))
                if (typeof message.ban_state !== "boolean")
                    return "ban_state: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserBanState_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserBanState_Request} CChatRoom_SetUserBanState_Request
         */
        CChatRoom_SetUserBanState_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserBanState_Request)
                return object;
            var message = new $root.CChatRoom_SetUserBanState_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.ban_state != null)
                message.ban_state = Boolean(object.ban_state);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserBanState_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserBanState_Request
         * @static
         * @param {CChatRoom_SetUserBanState_Request} message CChatRoom_SetUserBanState_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserBanState_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.ban_state = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.ban_state != null && message.hasOwnProperty("ban_state"))
                object.ban_state = message.ban_state;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetUserBanState_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserBanState_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserBanState_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserBanState_Request;
    })();
    
    $root.CChatRoom_SetUserBanState_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserBanState_Response.
         * @exports ICChatRoom_SetUserBanState_Response
         * @interface ICChatRoom_SetUserBanState_Response
         */
    
        /**
         * Constructs a new CChatRoom_SetUserBanState_Response.
         * @exports CChatRoom_SetUserBanState_Response
         * @classdesc Represents a CChatRoom_SetUserBanState_Response.
         * @implements ICChatRoom_SetUserBanState_Response
         * @constructor
         * @param {ICChatRoom_SetUserBanState_Response=} [properties] Properties to set
         */
        function CChatRoom_SetUserBanState_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SetUserBanState_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {ICChatRoom_SetUserBanState_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetUserBanState_Response} CChatRoom_SetUserBanState_Response instance
         */
        CChatRoom_SetUserBanState_Response.create = function create(properties) {
            return new CChatRoom_SetUserBanState_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserBanState_Response message. Does not implicitly {@link CChatRoom_SetUserBanState_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {ICChatRoom_SetUserBanState_Response} message CChatRoom_SetUserBanState_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserBanState_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserBanState_Response message, length delimited. Does not implicitly {@link CChatRoom_SetUserBanState_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {ICChatRoom_SetUserBanState_Response} message CChatRoom_SetUserBanState_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserBanState_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserBanState_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserBanState_Response} CChatRoom_SetUserBanState_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserBanState_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserBanState_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserBanState_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserBanState_Response} CChatRoom_SetUserBanState_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserBanState_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserBanState_Response message.
         * @function verify
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserBanState_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserBanState_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserBanState_Response} CChatRoom_SetUserBanState_Response
         */
        CChatRoom_SetUserBanState_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserBanState_Response)
                return object;
            return new $root.CChatRoom_SetUserBanState_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserBanState_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserBanState_Response
         * @static
         * @param {CChatRoom_SetUserBanState_Response} message CChatRoom_SetUserBanState_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserBanState_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SetUserBanState_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserBanState_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserBanState_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserBanState_Response;
    })();
    
    $root.CChatRoom_RevokeInvite_Request = (function() {
    
        /**
         * Properties of a CChatRoom_RevokeInvite_Request.
         * @exports ICChatRoom_RevokeInvite_Request
         * @interface ICChatRoom_RevokeInvite_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_RevokeInvite_Request chat_group_id
         * @property {number|Long|null} [steamid] CChatRoom_RevokeInvite_Request steamid
         */
    
        /**
         * Constructs a new CChatRoom_RevokeInvite_Request.
         * @exports CChatRoom_RevokeInvite_Request
         * @classdesc Represents a CChatRoom_RevokeInvite_Request.
         * @implements ICChatRoom_RevokeInvite_Request
         * @constructor
         * @param {ICChatRoom_RevokeInvite_Request=} [properties] Properties to set
         */
        function CChatRoom_RevokeInvite_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_RevokeInvite_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_RevokeInvite_Request
         * @instance
         */
        CChatRoom_RevokeInvite_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RevokeInvite_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_RevokeInvite_Request
         * @instance
         */
        CChatRoom_RevokeInvite_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CChatRoom_RevokeInvite_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {ICChatRoom_RevokeInvite_Request=} [properties] Properties to set
         * @returns {CChatRoom_RevokeInvite_Request} CChatRoom_RevokeInvite_Request instance
         */
        CChatRoom_RevokeInvite_Request.create = function create(properties) {
            return new CChatRoom_RevokeInvite_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RevokeInvite_Request message. Does not implicitly {@link CChatRoom_RevokeInvite_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {ICChatRoom_RevokeInvite_Request} message CChatRoom_RevokeInvite_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RevokeInvite_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RevokeInvite_Request message, length delimited. Does not implicitly {@link CChatRoom_RevokeInvite_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {ICChatRoom_RevokeInvite_Request} message CChatRoom_RevokeInvite_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RevokeInvite_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RevokeInvite_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RevokeInvite_Request} CChatRoom_RevokeInvite_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RevokeInvite_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RevokeInvite_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RevokeInvite_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RevokeInvite_Request} CChatRoom_RevokeInvite_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RevokeInvite_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RevokeInvite_Request message.
         * @function verify
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RevokeInvite_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RevokeInvite_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RevokeInvite_Request} CChatRoom_RevokeInvite_Request
         */
        CChatRoom_RevokeInvite_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RevokeInvite_Request)
                return object;
            var message = new $root.CChatRoom_RevokeInvite_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_RevokeInvite_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RevokeInvite_Request
         * @static
         * @param {CChatRoom_RevokeInvite_Request} message CChatRoom_RevokeInvite_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RevokeInvite_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CChatRoom_RevokeInvite_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_RevokeInvite_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RevokeInvite_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RevokeInvite_Request;
    })();
    
    $root.CChatRoom_RevokeInvite_Response = (function() {
    
        /**
         * Properties of a CChatRoom_RevokeInvite_Response.
         * @exports ICChatRoom_RevokeInvite_Response
         * @interface ICChatRoom_RevokeInvite_Response
         */
    
        /**
         * Constructs a new CChatRoom_RevokeInvite_Response.
         * @exports CChatRoom_RevokeInvite_Response
         * @classdesc Represents a CChatRoom_RevokeInvite_Response.
         * @implements ICChatRoom_RevokeInvite_Response
         * @constructor
         * @param {ICChatRoom_RevokeInvite_Response=} [properties] Properties to set
         */
        function CChatRoom_RevokeInvite_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_RevokeInvite_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {ICChatRoom_RevokeInvite_Response=} [properties] Properties to set
         * @returns {CChatRoom_RevokeInvite_Response} CChatRoom_RevokeInvite_Response instance
         */
        CChatRoom_RevokeInvite_Response.create = function create(properties) {
            return new CChatRoom_RevokeInvite_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RevokeInvite_Response message. Does not implicitly {@link CChatRoom_RevokeInvite_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {ICChatRoom_RevokeInvite_Response} message CChatRoom_RevokeInvite_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RevokeInvite_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RevokeInvite_Response message, length delimited. Does not implicitly {@link CChatRoom_RevokeInvite_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {ICChatRoom_RevokeInvite_Response} message CChatRoom_RevokeInvite_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RevokeInvite_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RevokeInvite_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RevokeInvite_Response} CChatRoom_RevokeInvite_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RevokeInvite_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RevokeInvite_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RevokeInvite_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RevokeInvite_Response} CChatRoom_RevokeInvite_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RevokeInvite_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RevokeInvite_Response message.
         * @function verify
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RevokeInvite_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RevokeInvite_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RevokeInvite_Response} CChatRoom_RevokeInvite_Response
         */
        CChatRoom_RevokeInvite_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RevokeInvite_Response)
                return object;
            return new $root.CChatRoom_RevokeInvite_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_RevokeInvite_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RevokeInvite_Response
         * @static
         * @param {CChatRoom_RevokeInvite_Response} message CChatRoom_RevokeInvite_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RevokeInvite_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_RevokeInvite_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_RevokeInvite_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RevokeInvite_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RevokeInvite_Response;
    })();
    
    $root.CChatRoom_CreateRole_Request = (function() {
    
        /**
         * Properties of a CChatRoom_CreateRole_Request.
         * @exports ICChatRoom_CreateRole_Request
         * @interface ICChatRoom_CreateRole_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_CreateRole_Request chat_group_id
         * @property {string|null} [name] CChatRoom_CreateRole_Request name
         */
    
        /**
         * Constructs a new CChatRoom_CreateRole_Request.
         * @exports CChatRoom_CreateRole_Request
         * @classdesc Represents a CChatRoom_CreateRole_Request.
         * @implements ICChatRoom_CreateRole_Request
         * @constructor
         * @param {ICChatRoom_CreateRole_Request=} [properties] Properties to set
         */
        function CChatRoom_CreateRole_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateRole_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_CreateRole_Request
         * @instance
         */
        CChatRoom_CreateRole_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_CreateRole_Request name.
         * @member {string} name
         * @memberof CChatRoom_CreateRole_Request
         * @instance
         */
        CChatRoom_CreateRole_Request.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_CreateRole_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {ICChatRoom_CreateRole_Request=} [properties] Properties to set
         * @returns {CChatRoom_CreateRole_Request} CChatRoom_CreateRole_Request instance
         */
        CChatRoom_CreateRole_Request.create = function create(properties) {
            return new CChatRoom_CreateRole_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateRole_Request message. Does not implicitly {@link CChatRoom_CreateRole_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {ICChatRoom_CreateRole_Request} message CChatRoom_CreateRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateRole_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateRole_Request message, length delimited. Does not implicitly {@link CChatRoom_CreateRole_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {ICChatRoom_CreateRole_Request} message CChatRoom_CreateRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateRole_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateRole_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateRole_Request} CChatRoom_CreateRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateRole_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateRole_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateRole_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateRole_Request} CChatRoom_CreateRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateRole_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateRole_Request message.
         * @function verify
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateRole_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateRole_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateRole_Request} CChatRoom_CreateRole_Request
         */
        CChatRoom_CreateRole_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateRole_Request)
                return object;
            var message = new $root.CChatRoom_CreateRole_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateRole_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateRole_Request
         * @static
         * @param {CChatRoom_CreateRole_Request} message CChatRoom_CreateRole_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateRole_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateRole_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateRole_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateRole_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateRole_Request;
    })();
    
    $root.CChatRoom_CreateRole_Response = (function() {
    
        /**
         * Properties of a CChatRoom_CreateRole_Response.
         * @exports ICChatRoom_CreateRole_Response
         * @interface ICChatRoom_CreateRole_Response
         * @property {ICChatRoleActions|null} [actions] CChatRoom_CreateRole_Response actions
         */
    
        /**
         * Constructs a new CChatRoom_CreateRole_Response.
         * @exports CChatRoom_CreateRole_Response
         * @classdesc Represents a CChatRoom_CreateRole_Response.
         * @implements ICChatRoom_CreateRole_Response
         * @constructor
         * @param {ICChatRoom_CreateRole_Response=} [properties] Properties to set
         */
        function CChatRoom_CreateRole_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateRole_Response actions.
         * @member {ICChatRoleActions|null|undefined} actions
         * @memberof CChatRoom_CreateRole_Response
         * @instance
         */
        CChatRoom_CreateRole_Response.prototype.actions = null;
    
        /**
         * Creates a new CChatRoom_CreateRole_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {ICChatRoom_CreateRole_Response=} [properties] Properties to set
         * @returns {CChatRoom_CreateRole_Response} CChatRoom_CreateRole_Response instance
         */
        CChatRoom_CreateRole_Response.create = function create(properties) {
            return new CChatRoom_CreateRole_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateRole_Response message. Does not implicitly {@link CChatRoom_CreateRole_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {ICChatRoom_CreateRole_Response} message CChatRoom_CreateRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateRole_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.actions != null && message.hasOwnProperty("actions"))
                $root.CChatRoleActions.encode(message.actions, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateRole_Response message, length delimited. Does not implicitly {@link CChatRoom_CreateRole_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {ICChatRoom_CreateRole_Response} message CChatRoom_CreateRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateRole_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateRole_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateRole_Response} CChatRoom_CreateRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateRole_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateRole_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    message.actions = $root.CChatRoleActions.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateRole_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateRole_Response} CChatRoom_CreateRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateRole_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateRole_Response message.
         * @function verify
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateRole_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.actions != null && message.hasOwnProperty("actions")) {
                var error = $root.CChatRoleActions.verify(message.actions);
                if (error)
                    return "actions." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateRole_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateRole_Response} CChatRoom_CreateRole_Response
         */
        CChatRoom_CreateRole_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateRole_Response)
                return object;
            var message = new $root.CChatRoom_CreateRole_Response();
            if (object.actions != null) {
                if (typeof object.actions !== "object")
                    throw TypeError(".CChatRoom_CreateRole_Response.actions: object expected");
                message.actions = $root.CChatRoleActions.fromObject(object.actions);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateRole_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateRole_Response
         * @static
         * @param {CChatRoom_CreateRole_Response} message CChatRoom_CreateRole_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateRole_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.actions = null;
            if (message.actions != null && message.hasOwnProperty("actions"))
                object.actions = $root.CChatRoleActions.toObject(message.actions, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateRole_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateRole_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateRole_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateRole_Response;
    })();
    
    $root.CChatRoom_GetRoles_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetRoles_Response.
         * @exports ICChatRoom_GetRoles_Response
         * @interface ICChatRoom_GetRoles_Response
         * @property {Array.<ICChatRole>|null} [roles] CChatRoom_GetRoles_Response roles
         */
    
        /**
         * Constructs a new CChatRoom_GetRoles_Response.
         * @exports CChatRoom_GetRoles_Response
         * @classdesc Represents a CChatRoom_GetRoles_Response.
         * @implements ICChatRoom_GetRoles_Response
         * @constructor
         * @param {ICChatRoom_GetRoles_Response=} [properties] Properties to set
         */
        function CChatRoom_GetRoles_Response(properties) {
            this.roles = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetRoles_Response roles.
         * @member {Array.<ICChatRole>} roles
         * @memberof CChatRoom_GetRoles_Response
         * @instance
         */
        CChatRoom_GetRoles_Response.prototype.roles = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetRoles_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {ICChatRoom_GetRoles_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetRoles_Response} CChatRoom_GetRoles_Response instance
         */
        CChatRoom_GetRoles_Response.create = function create(properties) {
            return new CChatRoom_GetRoles_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetRoles_Response message. Does not implicitly {@link CChatRoom_GetRoles_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {ICChatRoom_GetRoles_Response} message CChatRoom_GetRoles_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRoles_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.roles != null && message.roles.length)
                for (var i = 0; i < message.roles.length; ++i)
                    $root.CChatRole.encode(message.roles[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetRoles_Response message, length delimited. Does not implicitly {@link CChatRoom_GetRoles_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {ICChatRoom_GetRoles_Response} message CChatRoom_GetRoles_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRoles_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetRoles_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetRoles_Response} CChatRoom_GetRoles_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRoles_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetRoles_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.roles && message.roles.length))
                        message.roles = [];
                    message.roles.push($root.CChatRole.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetRoles_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetRoles_Response} CChatRoom_GetRoles_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRoles_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetRoles_Response message.
         * @function verify
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetRoles_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.roles != null && message.hasOwnProperty("roles")) {
                if (!Array.isArray(message.roles))
                    return "roles: array expected";
                for (var i = 0; i < message.roles.length; ++i) {
                    var error = $root.CChatRole.verify(message.roles[i]);
                    if (error)
                        return "roles." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetRoles_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetRoles_Response} CChatRoom_GetRoles_Response
         */
        CChatRoom_GetRoles_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetRoles_Response)
                return object;
            var message = new $root.CChatRoom_GetRoles_Response();
            if (object.roles) {
                if (!Array.isArray(object.roles))
                    throw TypeError(".CChatRoom_GetRoles_Response.roles: array expected");
                message.roles = [];
                for (var i = 0; i < object.roles.length; ++i) {
                    if (typeof object.roles[i] !== "object")
                        throw TypeError(".CChatRoom_GetRoles_Response.roles: object expected");
                    message.roles[i] = $root.CChatRole.fromObject(object.roles[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetRoles_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetRoles_Response
         * @static
         * @param {CChatRoom_GetRoles_Response} message CChatRoom_GetRoles_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetRoles_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.roles = [];
            if (message.roles && message.roles.length) {
                object.roles = [];
                for (var j = 0; j < message.roles.length; ++j)
                    object.roles[j] = $root.CChatRole.toObject(message.roles[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetRoles_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetRoles_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetRoles_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetRoles_Response;
    })();
    
    $root.CChatRoom_RenameRole_Request = (function() {
    
        /**
         * Properties of a CChatRoom_RenameRole_Request.
         * @exports ICChatRoom_RenameRole_Request
         * @interface ICChatRoom_RenameRole_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_RenameRole_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_RenameRole_Request role_id
         * @property {string|null} [name] CChatRoom_RenameRole_Request name
         */
    
        /**
         * Constructs a new CChatRoom_RenameRole_Request.
         * @exports CChatRoom_RenameRole_Request
         * @classdesc Represents a CChatRoom_RenameRole_Request.
         * @implements ICChatRoom_RenameRole_Request
         * @constructor
         * @param {ICChatRoom_RenameRole_Request=} [properties] Properties to set
         */
        function CChatRoom_RenameRole_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_RenameRole_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_RenameRole_Request
         * @instance
         */
        CChatRoom_RenameRole_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RenameRole_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_RenameRole_Request
         * @instance
         */
        CChatRoom_RenameRole_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RenameRole_Request name.
         * @member {string} name
         * @memberof CChatRoom_RenameRole_Request
         * @instance
         */
        CChatRoom_RenameRole_Request.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_RenameRole_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {ICChatRoom_RenameRole_Request=} [properties] Properties to set
         * @returns {CChatRoom_RenameRole_Request} CChatRoom_RenameRole_Request instance
         */
        CChatRoom_RenameRole_Request.create = function create(properties) {
            return new CChatRoom_RenameRole_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameRole_Request message. Does not implicitly {@link CChatRoom_RenameRole_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {ICChatRoom_RenameRole_Request} message CChatRoom_RenameRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameRole_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.role_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameRole_Request message, length delimited. Does not implicitly {@link CChatRoom_RenameRole_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {ICChatRoom_RenameRole_Request} message CChatRoom_RenameRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameRole_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameRole_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameRole_Request} CChatRoom_RenameRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameRole_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameRole_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.role_id = reader.uint64();
                    break;
                case 3:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameRole_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameRole_Request} CChatRoom_RenameRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameRole_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameRole_Request message.
         * @function verify
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameRole_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameRole_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameRole_Request} CChatRoom_RenameRole_Request
         */
        CChatRoom_RenameRole_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameRole_Request)
                return object;
            var message = new $root.CChatRoom_RenameRole_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameRole_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameRole_Request
         * @static
         * @param {CChatRoom_RenameRole_Request} message CChatRoom_RenameRole_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameRole_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                object.name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_RenameRole_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameRole_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameRole_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameRole_Request;
    })();
    
    $root.CChatRoom_RenameRole_Response = (function() {
    
        /**
         * Properties of a CChatRoom_RenameRole_Response.
         * @exports ICChatRoom_RenameRole_Response
         * @interface ICChatRoom_RenameRole_Response
         */
    
        /**
         * Constructs a new CChatRoom_RenameRole_Response.
         * @exports CChatRoom_RenameRole_Response
         * @classdesc Represents a CChatRoom_RenameRole_Response.
         * @implements ICChatRoom_RenameRole_Response
         * @constructor
         * @param {ICChatRoom_RenameRole_Response=} [properties] Properties to set
         */
        function CChatRoom_RenameRole_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_RenameRole_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {ICChatRoom_RenameRole_Response=} [properties] Properties to set
         * @returns {CChatRoom_RenameRole_Response} CChatRoom_RenameRole_Response instance
         */
        CChatRoom_RenameRole_Response.create = function create(properties) {
            return new CChatRoom_RenameRole_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameRole_Response message. Does not implicitly {@link CChatRoom_RenameRole_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {ICChatRoom_RenameRole_Response} message CChatRoom_RenameRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameRole_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameRole_Response message, length delimited. Does not implicitly {@link CChatRoom_RenameRole_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {ICChatRoom_RenameRole_Response} message CChatRoom_RenameRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameRole_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameRole_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameRole_Response} CChatRoom_RenameRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameRole_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameRole_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameRole_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameRole_Response} CChatRoom_RenameRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameRole_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameRole_Response message.
         * @function verify
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameRole_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameRole_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameRole_Response} CChatRoom_RenameRole_Response
         */
        CChatRoom_RenameRole_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameRole_Response)
                return object;
            return new $root.CChatRoom_RenameRole_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameRole_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameRole_Response
         * @static
         * @param {CChatRoom_RenameRole_Response} message CChatRoom_RenameRole_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameRole_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_RenameRole_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameRole_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameRole_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameRole_Response;
    })();
    
    $root.CChatRoom_ReorderRole_Request = (function() {
    
        /**
         * Properties of a CChatRoom_ReorderRole_Request.
         * @exports ICChatRoom_ReorderRole_Request
         * @interface ICChatRoom_ReorderRole_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_ReorderRole_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_ReorderRole_Request role_id
         * @property {number|null} [ordinal] CChatRoom_ReorderRole_Request ordinal
         */
    
        /**
         * Constructs a new CChatRoom_ReorderRole_Request.
         * @exports CChatRoom_ReorderRole_Request
         * @classdesc Represents a CChatRoom_ReorderRole_Request.
         * @implements ICChatRoom_ReorderRole_Request
         * @constructor
         * @param {ICChatRoom_ReorderRole_Request=} [properties] Properties to set
         */
        function CChatRoom_ReorderRole_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ReorderRole_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_ReorderRole_Request
         * @instance
         */
        CChatRoom_ReorderRole_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReorderRole_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_ReorderRole_Request
         * @instance
         */
        CChatRoom_ReorderRole_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReorderRole_Request ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_ReorderRole_Request
         * @instance
         */
        CChatRoom_ReorderRole_Request.prototype.ordinal = 0;
    
        /**
         * Creates a new CChatRoom_ReorderRole_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {ICChatRoom_ReorderRole_Request=} [properties] Properties to set
         * @returns {CChatRoom_ReorderRole_Request} CChatRoom_ReorderRole_Request instance
         */
        CChatRoom_ReorderRole_Request.create = function create(properties) {
            return new CChatRoom_ReorderRole_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderRole_Request message. Does not implicitly {@link CChatRoom_ReorderRole_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {ICChatRoom_ReorderRole_Request} message CChatRoom_ReorderRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderRole_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.role_id);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ordinal);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderRole_Request message, length delimited. Does not implicitly {@link CChatRoom_ReorderRole_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {ICChatRoom_ReorderRole_Request} message CChatRoom_ReorderRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderRole_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReorderRole_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReorderRole_Request} CChatRoom_ReorderRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderRole_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReorderRole_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.role_id = reader.uint64();
                    break;
                case 3:
                    message.ordinal = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReorderRole_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReorderRole_Request} CChatRoom_ReorderRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderRole_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReorderRole_Request message.
         * @function verify
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReorderRole_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReorderRole_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReorderRole_Request} CChatRoom_ReorderRole_Request
         */
        CChatRoom_ReorderRole_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReorderRole_Request)
                return object;
            var message = new $root.CChatRoom_ReorderRole_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReorderRole_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReorderRole_Request
         * @static
         * @param {CChatRoom_ReorderRole_Request} message CChatRoom_ReorderRole_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReorderRole_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                object.ordinal = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            return object;
        };
    
        /**
         * Converts this CChatRoom_ReorderRole_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReorderRole_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReorderRole_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReorderRole_Request;
    })();
    
    $root.CChatRoom_ReorderRole_Response = (function() {
    
        /**
         * Properties of a CChatRoom_ReorderRole_Response.
         * @exports ICChatRoom_ReorderRole_Response
         * @interface ICChatRoom_ReorderRole_Response
         */
    
        /**
         * Constructs a new CChatRoom_ReorderRole_Response.
         * @exports CChatRoom_ReorderRole_Response
         * @classdesc Represents a CChatRoom_ReorderRole_Response.
         * @implements ICChatRoom_ReorderRole_Response
         * @constructor
         * @param {ICChatRoom_ReorderRole_Response=} [properties] Properties to set
         */
        function CChatRoom_ReorderRole_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_ReorderRole_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {ICChatRoom_ReorderRole_Response=} [properties] Properties to set
         * @returns {CChatRoom_ReorderRole_Response} CChatRoom_ReorderRole_Response instance
         */
        CChatRoom_ReorderRole_Response.create = function create(properties) {
            return new CChatRoom_ReorderRole_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderRole_Response message. Does not implicitly {@link CChatRoom_ReorderRole_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {ICChatRoom_ReorderRole_Response} message CChatRoom_ReorderRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderRole_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderRole_Response message, length delimited. Does not implicitly {@link CChatRoom_ReorderRole_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {ICChatRoom_ReorderRole_Response} message CChatRoom_ReorderRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderRole_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReorderRole_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReorderRole_Response} CChatRoom_ReorderRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderRole_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReorderRole_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReorderRole_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReorderRole_Response} CChatRoom_ReorderRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderRole_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReorderRole_Response message.
         * @function verify
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReorderRole_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReorderRole_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReorderRole_Response} CChatRoom_ReorderRole_Response
         */
        CChatRoom_ReorderRole_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReorderRole_Response)
                return object;
            return new $root.CChatRoom_ReorderRole_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReorderRole_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReorderRole_Response
         * @static
         * @param {CChatRoom_ReorderRole_Response} message CChatRoom_ReorderRole_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReorderRole_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_ReorderRole_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReorderRole_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReorderRole_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReorderRole_Response;
    })();
    
    $root.CChatRoom_DeleteRole_Request = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteRole_Request.
         * @exports ICChatRoom_DeleteRole_Request
         * @interface ICChatRoom_DeleteRole_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_DeleteRole_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_DeleteRole_Request role_id
         */
    
        /**
         * Constructs a new CChatRoom_DeleteRole_Request.
         * @exports CChatRoom_DeleteRole_Request
         * @classdesc Represents a CChatRoom_DeleteRole_Request.
         * @implements ICChatRoom_DeleteRole_Request
         * @constructor
         * @param {ICChatRoom_DeleteRole_Request=} [properties] Properties to set
         */
        function CChatRoom_DeleteRole_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteRole_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_DeleteRole_Request
         * @instance
         */
        CChatRoom_DeleteRole_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteRole_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_DeleteRole_Request
         * @instance
         */
        CChatRoom_DeleteRole_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_DeleteRole_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {ICChatRoom_DeleteRole_Request=} [properties] Properties to set
         * @returns {CChatRoom_DeleteRole_Request} CChatRoom_DeleteRole_Request instance
         */
        CChatRoom_DeleteRole_Request.create = function create(properties) {
            return new CChatRoom_DeleteRole_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRole_Request message. Does not implicitly {@link CChatRoom_DeleteRole_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {ICChatRoom_DeleteRole_Request} message CChatRoom_DeleteRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRole_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.role_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRole_Request message, length delimited. Does not implicitly {@link CChatRoom_DeleteRole_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {ICChatRoom_DeleteRole_Request} message CChatRoom_DeleteRole_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRole_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteRole_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteRole_Request} CChatRoom_DeleteRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRole_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteRole_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.role_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteRole_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteRole_Request} CChatRoom_DeleteRole_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRole_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteRole_Request message.
         * @function verify
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteRole_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteRole_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteRole_Request} CChatRoom_DeleteRole_Request
         */
        CChatRoom_DeleteRole_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteRole_Request)
                return object;
            var message = new $root.CChatRoom_DeleteRole_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteRole_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteRole_Request
         * @static
         * @param {CChatRoom_DeleteRole_Request} message CChatRoom_DeleteRole_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteRole_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteRole_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteRole_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteRole_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteRole_Request;
    })();
    
    $root.CChatRoom_DeleteRole_Response = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteRole_Response.
         * @exports ICChatRoom_DeleteRole_Response
         * @interface ICChatRoom_DeleteRole_Response
         */
    
        /**
         * Constructs a new CChatRoom_DeleteRole_Response.
         * @exports CChatRoom_DeleteRole_Response
         * @classdesc Represents a CChatRoom_DeleteRole_Response.
         * @implements ICChatRoom_DeleteRole_Response
         * @constructor
         * @param {ICChatRoom_DeleteRole_Response=} [properties] Properties to set
         */
        function CChatRoom_DeleteRole_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_DeleteRole_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {ICChatRoom_DeleteRole_Response=} [properties] Properties to set
         * @returns {CChatRoom_DeleteRole_Response} CChatRoom_DeleteRole_Response instance
         */
        CChatRoom_DeleteRole_Response.create = function create(properties) {
            return new CChatRoom_DeleteRole_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRole_Response message. Does not implicitly {@link CChatRoom_DeleteRole_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {ICChatRoom_DeleteRole_Response} message CChatRoom_DeleteRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRole_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRole_Response message, length delimited. Does not implicitly {@link CChatRoom_DeleteRole_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {ICChatRoom_DeleteRole_Response} message CChatRoom_DeleteRole_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRole_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteRole_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteRole_Response} CChatRoom_DeleteRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRole_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteRole_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteRole_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteRole_Response} CChatRoom_DeleteRole_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRole_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteRole_Response message.
         * @function verify
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteRole_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteRole_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteRole_Response} CChatRoom_DeleteRole_Response
         */
        CChatRoom_DeleteRole_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteRole_Response)
                return object;
            return new $root.CChatRoom_DeleteRole_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteRole_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteRole_Response
         * @static
         * @param {CChatRoom_DeleteRole_Response} message CChatRoom_DeleteRole_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteRole_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_DeleteRole_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteRole_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteRole_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteRole_Response;
    })();
    
    $root.CChatRoom_GetRoleActions_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetRoleActions_Response.
         * @exports ICChatRoom_GetRoleActions_Response
         * @interface ICChatRoom_GetRoleActions_Response
         * @property {Array.<ICChatRoleActions>|null} [actions] CChatRoom_GetRoleActions_Response actions
         */
    
        /**
         * Constructs a new CChatRoom_GetRoleActions_Response.
         * @exports CChatRoom_GetRoleActions_Response
         * @classdesc Represents a CChatRoom_GetRoleActions_Response.
         * @implements ICChatRoom_GetRoleActions_Response
         * @constructor
         * @param {ICChatRoom_GetRoleActions_Response=} [properties] Properties to set
         */
        function CChatRoom_GetRoleActions_Response(properties) {
            this.actions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetRoleActions_Response actions.
         * @member {Array.<ICChatRoleActions>} actions
         * @memberof CChatRoom_GetRoleActions_Response
         * @instance
         */
        CChatRoom_GetRoleActions_Response.prototype.actions = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetRoleActions_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {ICChatRoom_GetRoleActions_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetRoleActions_Response} CChatRoom_GetRoleActions_Response instance
         */
        CChatRoom_GetRoleActions_Response.create = function create(properties) {
            return new CChatRoom_GetRoleActions_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetRoleActions_Response message. Does not implicitly {@link CChatRoom_GetRoleActions_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {ICChatRoom_GetRoleActions_Response} message CChatRoom_GetRoleActions_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRoleActions_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.actions != null && message.actions.length)
                for (var i = 0; i < message.actions.length; ++i)
                    $root.CChatRoleActions.encode(message.actions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetRoleActions_Response message, length delimited. Does not implicitly {@link CChatRoom_GetRoleActions_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {ICChatRoom_GetRoleActions_Response} message CChatRoom_GetRoleActions_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRoleActions_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetRoleActions_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetRoleActions_Response} CChatRoom_GetRoleActions_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRoleActions_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetRoleActions_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.actions && message.actions.length))
                        message.actions = [];
                    message.actions.push($root.CChatRoleActions.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetRoleActions_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetRoleActions_Response} CChatRoom_GetRoleActions_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRoleActions_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetRoleActions_Response message.
         * @function verify
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetRoleActions_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.actions != null && message.hasOwnProperty("actions")) {
                if (!Array.isArray(message.actions))
                    return "actions: array expected";
                for (var i = 0; i < message.actions.length; ++i) {
                    var error = $root.CChatRoleActions.verify(message.actions[i]);
                    if (error)
                        return "actions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetRoleActions_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetRoleActions_Response} CChatRoom_GetRoleActions_Response
         */
        CChatRoom_GetRoleActions_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetRoleActions_Response)
                return object;
            var message = new $root.CChatRoom_GetRoleActions_Response();
            if (object.actions) {
                if (!Array.isArray(object.actions))
                    throw TypeError(".CChatRoom_GetRoleActions_Response.actions: array expected");
                message.actions = [];
                for (var i = 0; i < object.actions.length; ++i) {
                    if (typeof object.actions[i] !== "object")
                        throw TypeError(".CChatRoom_GetRoleActions_Response.actions: object expected");
                    message.actions[i] = $root.CChatRoleActions.fromObject(object.actions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetRoleActions_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetRoleActions_Response
         * @static
         * @param {CChatRoom_GetRoleActions_Response} message CChatRoom_GetRoleActions_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetRoleActions_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.actions = [];
            if (message.actions && message.actions.length) {
                object.actions = [];
                for (var j = 0; j < message.actions.length; ++j)
                    object.actions[j] = $root.CChatRoleActions.toObject(message.actions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetRoleActions_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetRoleActions_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetRoleActions_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetRoleActions_Response;
    })();
    
    $root.CChatRoom_ReplaceRoleActions_Request = (function() {
    
        /**
         * Properties of a CChatRoom_ReplaceRoleActions_Request.
         * @exports ICChatRoom_ReplaceRoleActions_Request
         * @interface ICChatRoom_ReplaceRoleActions_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_ReplaceRoleActions_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_ReplaceRoleActions_Request role_id
         * @property {ICChatRoleActions|null} [actions] CChatRoom_ReplaceRoleActions_Request actions
         */
    
        /**
         * Constructs a new CChatRoom_ReplaceRoleActions_Request.
         * @exports CChatRoom_ReplaceRoleActions_Request
         * @classdesc Represents a CChatRoom_ReplaceRoleActions_Request.
         * @implements ICChatRoom_ReplaceRoleActions_Request
         * @constructor
         * @param {ICChatRoom_ReplaceRoleActions_Request=} [properties] Properties to set
         */
        function CChatRoom_ReplaceRoleActions_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ReplaceRoleActions_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @instance
         */
        CChatRoom_ReplaceRoleActions_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReplaceRoleActions_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @instance
         */
        CChatRoom_ReplaceRoleActions_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReplaceRoleActions_Request actions.
         * @member {ICChatRoleActions|null|undefined} actions
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @instance
         */
        CChatRoom_ReplaceRoleActions_Request.prototype.actions = null;
    
        /**
         * Creates a new CChatRoom_ReplaceRoleActions_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Request=} [properties] Properties to set
         * @returns {CChatRoom_ReplaceRoleActions_Request} CChatRoom_ReplaceRoleActions_Request instance
         */
        CChatRoom_ReplaceRoleActions_Request.create = function create(properties) {
            return new CChatRoom_ReplaceRoleActions_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReplaceRoleActions_Request message. Does not implicitly {@link CChatRoom_ReplaceRoleActions_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Request} message CChatRoom_ReplaceRoleActions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReplaceRoleActions_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.role_id);
            if (message.actions != null && message.hasOwnProperty("actions"))
                $root.CChatRoleActions.encode(message.actions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReplaceRoleActions_Request message, length delimited. Does not implicitly {@link CChatRoom_ReplaceRoleActions_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Request} message CChatRoom_ReplaceRoleActions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReplaceRoleActions_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReplaceRoleActions_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReplaceRoleActions_Request} CChatRoom_ReplaceRoleActions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReplaceRoleActions_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReplaceRoleActions_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.role_id = reader.uint64();
                    break;
                case 4:
                    message.actions = $root.CChatRoleActions.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReplaceRoleActions_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReplaceRoleActions_Request} CChatRoom_ReplaceRoleActions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReplaceRoleActions_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReplaceRoleActions_Request message.
         * @function verify
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReplaceRoleActions_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.actions != null && message.hasOwnProperty("actions")) {
                var error = $root.CChatRoleActions.verify(message.actions);
                if (error)
                    return "actions." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReplaceRoleActions_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReplaceRoleActions_Request} CChatRoom_ReplaceRoleActions_Request
         */
        CChatRoom_ReplaceRoleActions_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReplaceRoleActions_Request)
                return object;
            var message = new $root.CChatRoom_ReplaceRoleActions_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.actions != null) {
                if (typeof object.actions !== "object")
                    throw TypeError(".CChatRoom_ReplaceRoleActions_Request.actions: object expected");
                message.actions = $root.CChatRoleActions.fromObject(object.actions);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReplaceRoleActions_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @static
         * @param {CChatRoom_ReplaceRoleActions_Request} message CChatRoom_ReplaceRoleActions_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReplaceRoleActions_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                object.actions = null;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.actions != null && message.hasOwnProperty("actions"))
                object.actions = $root.CChatRoleActions.toObject(message.actions, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_ReplaceRoleActions_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReplaceRoleActions_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReplaceRoleActions_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReplaceRoleActions_Request;
    })();
    
    $root.CChatRoom_ReplaceRoleActions_Response = (function() {
    
        /**
         * Properties of a CChatRoom_ReplaceRoleActions_Response.
         * @exports ICChatRoom_ReplaceRoleActions_Response
         * @interface ICChatRoom_ReplaceRoleActions_Response
         */
    
        /**
         * Constructs a new CChatRoom_ReplaceRoleActions_Response.
         * @exports CChatRoom_ReplaceRoleActions_Response
         * @classdesc Represents a CChatRoom_ReplaceRoleActions_Response.
         * @implements ICChatRoom_ReplaceRoleActions_Response
         * @constructor
         * @param {ICChatRoom_ReplaceRoleActions_Response=} [properties] Properties to set
         */
        function CChatRoom_ReplaceRoleActions_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_ReplaceRoleActions_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Response=} [properties] Properties to set
         * @returns {CChatRoom_ReplaceRoleActions_Response} CChatRoom_ReplaceRoleActions_Response instance
         */
        CChatRoom_ReplaceRoleActions_Response.create = function create(properties) {
            return new CChatRoom_ReplaceRoleActions_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReplaceRoleActions_Response message. Does not implicitly {@link CChatRoom_ReplaceRoleActions_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Response} message CChatRoom_ReplaceRoleActions_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReplaceRoleActions_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReplaceRoleActions_Response message, length delimited. Does not implicitly {@link CChatRoom_ReplaceRoleActions_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {ICChatRoom_ReplaceRoleActions_Response} message CChatRoom_ReplaceRoleActions_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReplaceRoleActions_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReplaceRoleActions_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReplaceRoleActions_Response} CChatRoom_ReplaceRoleActions_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReplaceRoleActions_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReplaceRoleActions_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReplaceRoleActions_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReplaceRoleActions_Response} CChatRoom_ReplaceRoleActions_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReplaceRoleActions_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReplaceRoleActions_Response message.
         * @function verify
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReplaceRoleActions_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReplaceRoleActions_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReplaceRoleActions_Response} CChatRoom_ReplaceRoleActions_Response
         */
        CChatRoom_ReplaceRoleActions_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReplaceRoleActions_Response)
                return object;
            return new $root.CChatRoom_ReplaceRoleActions_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReplaceRoleActions_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @static
         * @param {CChatRoom_ReplaceRoleActions_Response} message CChatRoom_ReplaceRoleActions_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReplaceRoleActions_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_ReplaceRoleActions_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReplaceRoleActions_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReplaceRoleActions_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReplaceRoleActions_Response;
    })();
    
    $root.CChatRoom_AddRoleToUser_Request = (function() {
    
        /**
         * Properties of a CChatRoom_AddRoleToUser_Request.
         * @exports ICChatRoom_AddRoleToUser_Request
         * @interface ICChatRoom_AddRoleToUser_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_AddRoleToUser_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_AddRoleToUser_Request role_id
         * @property {number|Long|null} [steamid] CChatRoom_AddRoleToUser_Request steamid
         */
    
        /**
         * Constructs a new CChatRoom_AddRoleToUser_Request.
         * @exports CChatRoom_AddRoleToUser_Request
         * @classdesc Represents a CChatRoom_AddRoleToUser_Request.
         * @implements ICChatRoom_AddRoleToUser_Request
         * @constructor
         * @param {ICChatRoom_AddRoleToUser_Request=} [properties] Properties to set
         */
        function CChatRoom_AddRoleToUser_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_AddRoleToUser_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_AddRoleToUser_Request
         * @instance
         */
        CChatRoom_AddRoleToUser_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_AddRoleToUser_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_AddRoleToUser_Request
         * @instance
         */
        CChatRoom_AddRoleToUser_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_AddRoleToUser_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_AddRoleToUser_Request
         * @instance
         */
        CChatRoom_AddRoleToUser_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CChatRoom_AddRoleToUser_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {ICChatRoom_AddRoleToUser_Request=} [properties] Properties to set
         * @returns {CChatRoom_AddRoleToUser_Request} CChatRoom_AddRoleToUser_Request instance
         */
        CChatRoom_AddRoleToUser_Request.create = function create(properties) {
            return new CChatRoom_AddRoleToUser_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_AddRoleToUser_Request message. Does not implicitly {@link CChatRoom_AddRoleToUser_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {ICChatRoom_AddRoleToUser_Request} message CChatRoom_AddRoleToUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AddRoleToUser_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.role_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_AddRoleToUser_Request message, length delimited. Does not implicitly {@link CChatRoom_AddRoleToUser_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {ICChatRoom_AddRoleToUser_Request} message CChatRoom_AddRoleToUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AddRoleToUser_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_AddRoleToUser_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_AddRoleToUser_Request} CChatRoom_AddRoleToUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AddRoleToUser_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_AddRoleToUser_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 3:
                    message.role_id = reader.uint64();
                    break;
                case 4:
                    message.steamid = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_AddRoleToUser_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_AddRoleToUser_Request} CChatRoom_AddRoleToUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AddRoleToUser_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_AddRoleToUser_Request message.
         * @function verify
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_AddRoleToUser_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_AddRoleToUser_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_AddRoleToUser_Request} CChatRoom_AddRoleToUser_Request
         */
        CChatRoom_AddRoleToUser_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_AddRoleToUser_Request)
                return object;
            var message = new $root.CChatRoom_AddRoleToUser_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_AddRoleToUser_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_AddRoleToUser_Request
         * @static
         * @param {CChatRoom_AddRoleToUser_Request} message CChatRoom_AddRoleToUser_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_AddRoleToUser_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CChatRoom_AddRoleToUser_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_AddRoleToUser_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_AddRoleToUser_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_AddRoleToUser_Request;
    })();
    
    $root.CChatRoom_AddRoleToUser_Response = (function() {
    
        /**
         * Properties of a CChatRoom_AddRoleToUser_Response.
         * @exports ICChatRoom_AddRoleToUser_Response
         * @interface ICChatRoom_AddRoleToUser_Response
         */
    
        /**
         * Constructs a new CChatRoom_AddRoleToUser_Response.
         * @exports CChatRoom_AddRoleToUser_Response
         * @classdesc Represents a CChatRoom_AddRoleToUser_Response.
         * @implements ICChatRoom_AddRoleToUser_Response
         * @constructor
         * @param {ICChatRoom_AddRoleToUser_Response=} [properties] Properties to set
         */
        function CChatRoom_AddRoleToUser_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_AddRoleToUser_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {ICChatRoom_AddRoleToUser_Response=} [properties] Properties to set
         * @returns {CChatRoom_AddRoleToUser_Response} CChatRoom_AddRoleToUser_Response instance
         */
        CChatRoom_AddRoleToUser_Response.create = function create(properties) {
            return new CChatRoom_AddRoleToUser_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_AddRoleToUser_Response message. Does not implicitly {@link CChatRoom_AddRoleToUser_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {ICChatRoom_AddRoleToUser_Response} message CChatRoom_AddRoleToUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AddRoleToUser_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_AddRoleToUser_Response message, length delimited. Does not implicitly {@link CChatRoom_AddRoleToUser_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {ICChatRoom_AddRoleToUser_Response} message CChatRoom_AddRoleToUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AddRoleToUser_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_AddRoleToUser_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_AddRoleToUser_Response} CChatRoom_AddRoleToUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AddRoleToUser_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_AddRoleToUser_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_AddRoleToUser_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_AddRoleToUser_Response} CChatRoom_AddRoleToUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AddRoleToUser_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_AddRoleToUser_Response message.
         * @function verify
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_AddRoleToUser_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_AddRoleToUser_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_AddRoleToUser_Response} CChatRoom_AddRoleToUser_Response
         */
        CChatRoom_AddRoleToUser_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_AddRoleToUser_Response)
                return object;
            return new $root.CChatRoom_AddRoleToUser_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_AddRoleToUser_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_AddRoleToUser_Response
         * @static
         * @param {CChatRoom_AddRoleToUser_Response} message CChatRoom_AddRoleToUser_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_AddRoleToUser_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_AddRoleToUser_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_AddRoleToUser_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_AddRoleToUser_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_AddRoleToUser_Response;
    })();
    
    $root.CChatRoom_GetRolesForUser_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetRolesForUser_Response.
         * @exports ICChatRoom_GetRolesForUser_Response
         * @interface ICChatRoom_GetRolesForUser_Response
         * @property {Array.<number|Long>|null} [role_ids] CChatRoom_GetRolesForUser_Response role_ids
         */
    
        /**
         * Constructs a new CChatRoom_GetRolesForUser_Response.
         * @exports CChatRoom_GetRolesForUser_Response
         * @classdesc Represents a CChatRoom_GetRolesForUser_Response.
         * @implements ICChatRoom_GetRolesForUser_Response
         * @constructor
         * @param {ICChatRoom_GetRolesForUser_Response=} [properties] Properties to set
         */
        function CChatRoom_GetRolesForUser_Response(properties) {
            this.role_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetRolesForUser_Response role_ids.
         * @member {Array.<number|Long>} role_ids
         * @memberof CChatRoom_GetRolesForUser_Response
         * @instance
         */
        CChatRoom_GetRolesForUser_Response.prototype.role_ids = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetRolesForUser_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {ICChatRoom_GetRolesForUser_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetRolesForUser_Response} CChatRoom_GetRolesForUser_Response instance
         */
        CChatRoom_GetRolesForUser_Response.create = function create(properties) {
            return new CChatRoom_GetRolesForUser_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetRolesForUser_Response message. Does not implicitly {@link CChatRoom_GetRolesForUser_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {ICChatRoom_GetRolesForUser_Response} message CChatRoom_GetRolesForUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRolesForUser_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.role_ids != null && message.role_ids.length)
                for (var i = 0; i < message.role_ids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.role_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetRolesForUser_Response message, length delimited. Does not implicitly {@link CChatRoom_GetRolesForUser_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {ICChatRoom_GetRolesForUser_Response} message CChatRoom_GetRolesForUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetRolesForUser_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetRolesForUser_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetRolesForUser_Response} CChatRoom_GetRolesForUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRolesForUser_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetRolesForUser_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.role_ids && message.role_ids.length))
                        message.role_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.role_ids.push(reader.uint64());
                    } else
                        message.role_ids.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetRolesForUser_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetRolesForUser_Response} CChatRoom_GetRolesForUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetRolesForUser_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetRolesForUser_Response message.
         * @function verify
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetRolesForUser_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.role_ids != null && message.hasOwnProperty("role_ids")) {
                if (!Array.isArray(message.role_ids))
                    return "role_ids: array expected";
                for (var i = 0; i < message.role_ids.length; ++i)
                    if (!$util.isInteger(message.role_ids[i]) && !(message.role_ids[i] && $util.isInteger(message.role_ids[i].low) && $util.isInteger(message.role_ids[i].high)))
                        return "role_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetRolesForUser_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetRolesForUser_Response} CChatRoom_GetRolesForUser_Response
         */
        CChatRoom_GetRolesForUser_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetRolesForUser_Response)
                return object;
            var message = new $root.CChatRoom_GetRolesForUser_Response();
            if (object.role_ids) {
                if (!Array.isArray(object.role_ids))
                    throw TypeError(".CChatRoom_GetRolesForUser_Response.role_ids: array expected");
                message.role_ids = [];
                for (var i = 0; i < object.role_ids.length; ++i)
                    if ($util.Long)
                        (message.role_ids[i] = $util.Long.fromValue(object.role_ids[i])).unsigned = true;
                    else if (typeof object.role_ids[i] === "string")
                        message.role_ids[i] = parseInt(object.role_ids[i], 10);
                    else if (typeof object.role_ids[i] === "number")
                        message.role_ids[i] = object.role_ids[i];
                    else if (typeof object.role_ids[i] === "object")
                        message.role_ids[i] = new $util.LongBits(object.role_ids[i].low >>> 0, object.role_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetRolesForUser_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetRolesForUser_Response
         * @static
         * @param {CChatRoom_GetRolesForUser_Response} message CChatRoom_GetRolesForUser_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetRolesForUser_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.role_ids = [];
            if (message.role_ids && message.role_ids.length) {
                object.role_ids = [];
                for (var j = 0; j < message.role_ids.length; ++j)
                    if (typeof message.role_ids[j] === "number")
                        object.role_ids[j] = options.longs === String ? String(message.role_ids[j]) : message.role_ids[j];
                    else
                        object.role_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.role_ids[j]) : options.longs === Number ? new $util.LongBits(message.role_ids[j].low >>> 0, message.role_ids[j].high >>> 0).toNumber(true) : message.role_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetRolesForUser_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetRolesForUser_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetRolesForUser_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetRolesForUser_Response;
    })();
    
    $root.CChatRoom_DeleteRoleFromUser_Request = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteRoleFromUser_Request.
         * @exports ICChatRoom_DeleteRoleFromUser_Request
         * @interface ICChatRoom_DeleteRoleFromUser_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_DeleteRoleFromUser_Request chat_group_id
         * @property {number|Long|null} [role_id] CChatRoom_DeleteRoleFromUser_Request role_id
         * @property {number|Long|null} [steamid] CChatRoom_DeleteRoleFromUser_Request steamid
         */
    
        /**
         * Constructs a new CChatRoom_DeleteRoleFromUser_Request.
         * @exports CChatRoom_DeleteRoleFromUser_Request
         * @classdesc Represents a CChatRoom_DeleteRoleFromUser_Request.
         * @implements ICChatRoom_DeleteRoleFromUser_Request
         * @constructor
         * @param {ICChatRoom_DeleteRoleFromUser_Request=} [properties] Properties to set
         */
        function CChatRoom_DeleteRoleFromUser_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteRoleFromUser_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @instance
         */
        CChatRoom_DeleteRoleFromUser_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteRoleFromUser_Request role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @instance
         */
        CChatRoom_DeleteRoleFromUser_Request.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteRoleFromUser_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @instance
         */
        CChatRoom_DeleteRoleFromUser_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CChatRoom_DeleteRoleFromUser_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Request=} [properties] Properties to set
         * @returns {CChatRoom_DeleteRoleFromUser_Request} CChatRoom_DeleteRoleFromUser_Request instance
         */
        CChatRoom_DeleteRoleFromUser_Request.create = function create(properties) {
            return new CChatRoom_DeleteRoleFromUser_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRoleFromUser_Request message. Does not implicitly {@link CChatRoom_DeleteRoleFromUser_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Request} message CChatRoom_DeleteRoleFromUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRoleFromUser_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.role_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRoleFromUser_Request message, length delimited. Does not implicitly {@link CChatRoom_DeleteRoleFromUser_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Request} message CChatRoom_DeleteRoleFromUser_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRoleFromUser_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteRoleFromUser_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteRoleFromUser_Request} CChatRoom_DeleteRoleFromUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRoleFromUser_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteRoleFromUser_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 3:
                    message.role_id = reader.uint64();
                    break;
                case 4:
                    message.steamid = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteRoleFromUser_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteRoleFromUser_Request} CChatRoom_DeleteRoleFromUser_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRoleFromUser_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteRoleFromUser_Request message.
         * @function verify
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteRoleFromUser_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteRoleFromUser_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteRoleFromUser_Request} CChatRoom_DeleteRoleFromUser_Request
         */
        CChatRoom_DeleteRoleFromUser_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteRoleFromUser_Request)
                return object;
            var message = new $root.CChatRoom_DeleteRoleFromUser_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteRoleFromUser_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @static
         * @param {CChatRoom_DeleteRoleFromUser_Request} message CChatRoom_DeleteRoleFromUser_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteRoleFromUser_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteRoleFromUser_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteRoleFromUser_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteRoleFromUser_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteRoleFromUser_Request;
    })();
    
    $root.CChatRoom_DeleteRoleFromUser_Response = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteRoleFromUser_Response.
         * @exports ICChatRoom_DeleteRoleFromUser_Response
         * @interface ICChatRoom_DeleteRoleFromUser_Response
         */
    
        /**
         * Constructs a new CChatRoom_DeleteRoleFromUser_Response.
         * @exports CChatRoom_DeleteRoleFromUser_Response
         * @classdesc Represents a CChatRoom_DeleteRoleFromUser_Response.
         * @implements ICChatRoom_DeleteRoleFromUser_Response
         * @constructor
         * @param {ICChatRoom_DeleteRoleFromUser_Response=} [properties] Properties to set
         */
        function CChatRoom_DeleteRoleFromUser_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_DeleteRoleFromUser_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Response=} [properties] Properties to set
         * @returns {CChatRoom_DeleteRoleFromUser_Response} CChatRoom_DeleteRoleFromUser_Response instance
         */
        CChatRoom_DeleteRoleFromUser_Response.create = function create(properties) {
            return new CChatRoom_DeleteRoleFromUser_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRoleFromUser_Response message. Does not implicitly {@link CChatRoom_DeleteRoleFromUser_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Response} message CChatRoom_DeleteRoleFromUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRoleFromUser_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteRoleFromUser_Response message, length delimited. Does not implicitly {@link CChatRoom_DeleteRoleFromUser_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {ICChatRoom_DeleteRoleFromUser_Response} message CChatRoom_DeleteRoleFromUser_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteRoleFromUser_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteRoleFromUser_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteRoleFromUser_Response} CChatRoom_DeleteRoleFromUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRoleFromUser_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteRoleFromUser_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteRoleFromUser_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteRoleFromUser_Response} CChatRoom_DeleteRoleFromUser_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteRoleFromUser_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteRoleFromUser_Response message.
         * @function verify
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteRoleFromUser_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteRoleFromUser_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteRoleFromUser_Response} CChatRoom_DeleteRoleFromUser_Response
         */
        CChatRoom_DeleteRoleFromUser_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteRoleFromUser_Response)
                return object;
            return new $root.CChatRoom_DeleteRoleFromUser_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteRoleFromUser_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @static
         * @param {CChatRoom_DeleteRoleFromUser_Response} message CChatRoom_DeleteRoleFromUser_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteRoleFromUser_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_DeleteRoleFromUser_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteRoleFromUser_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteRoleFromUser_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteRoleFromUser_Response;
    })();
    
    $root.CChatRoom_JoinChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_JoinChatRoomGroup_Request.
         * @exports ICChatRoom_JoinChatRoomGroup_Request
         * @interface ICChatRoom_JoinChatRoomGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_JoinChatRoomGroup_Request chat_group_id
         * @property {string|null} [invite_code] CChatRoom_JoinChatRoomGroup_Request invite_code
         * @property {number|Long|null} [chat_id] CChatRoom_JoinChatRoomGroup_Request chat_id
         */
    
        /**
         * Constructs a new CChatRoom_JoinChatRoomGroup_Request.
         * @exports CChatRoom_JoinChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_JoinChatRoomGroup_Request.
         * @implements ICChatRoom_JoinChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_JoinChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_JoinChatRoomGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_JoinChatRoomGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_JoinChatRoomGroup_Request invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Request.prototype.invite_code = "";
    
        /**
         * CChatRoom_JoinChatRoomGroup_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_JoinChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_JoinChatRoomGroup_Request} CChatRoom_JoinChatRoomGroup_Request instance
         */
        CChatRoom_JoinChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_JoinChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_JoinChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_JoinChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Request} message CChatRoom_JoinChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.invite_code);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_JoinChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_JoinChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Request} message CChatRoom_JoinChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_JoinChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_JoinChatRoomGroup_Request} CChatRoom_JoinChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_JoinChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.invite_code = reader.string();
                    break;
                case 3:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_JoinChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_JoinChatRoomGroup_Request} CChatRoom_JoinChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_JoinChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_JoinChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_JoinChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_JoinChatRoomGroup_Request} CChatRoom_JoinChatRoomGroup_Request
         */
        CChatRoom_JoinChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_JoinChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_JoinChatRoomGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_JoinChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @static
         * @param {CChatRoom_JoinChatRoomGroup_Request} message CChatRoom_JoinChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_JoinChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.invite_code = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_JoinChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_JoinChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_JoinChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_JoinChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_JoinChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_JoinChatRoomGroup_Response.
         * @exports ICChatRoom_JoinChatRoomGroup_Response
         * @interface ICChatRoom_JoinChatRoomGroup_Response
         * @property {ICChatRoomGroupState|null} [state] CChatRoom_JoinChatRoomGroup_Response state
         * @property {ICUserChatRoomGroupState|null} [user_chat_state] CChatRoom_JoinChatRoomGroup_Response user_chat_state
         * @property {number|Long|null} [join_chat_id] CChatRoom_JoinChatRoomGroup_Response join_chat_id
         * @property {number|null} [time_expire] CChatRoom_JoinChatRoomGroup_Response time_expire
         */
    
        /**
         * Constructs a new CChatRoom_JoinChatRoomGroup_Response.
         * @exports CChatRoom_JoinChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_JoinChatRoomGroup_Response.
         * @implements ICChatRoom_JoinChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_JoinChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_JoinChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_JoinChatRoomGroup_Response state.
         * @member {ICChatRoomGroupState|null|undefined} state
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Response.prototype.state = null;
    
        /**
         * CChatRoom_JoinChatRoomGroup_Response user_chat_state.
         * @member {ICUserChatRoomGroupState|null|undefined} user_chat_state
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Response.prototype.user_chat_state = null;
    
        /**
         * CChatRoom_JoinChatRoomGroup_Response join_chat_id.
         * @member {number|Long} join_chat_id
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Response.prototype.join_chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_JoinChatRoomGroup_Response time_expire.
         * @member {number} time_expire
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @instance
         */
        CChatRoom_JoinChatRoomGroup_Response.prototype.time_expire = 0;
    
        /**
         * Creates a new CChatRoom_JoinChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_JoinChatRoomGroup_Response} CChatRoom_JoinChatRoomGroup_Response instance
         */
        CChatRoom_JoinChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_JoinChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_JoinChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_JoinChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Response} message CChatRoom_JoinChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.state != null && message.hasOwnProperty("state"))
                $root.CChatRoomGroupState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state"))
                $root.CUserChatRoomGroupState.encode(message.user_chat_state, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.join_chat_id != null && message.hasOwnProperty("join_chat_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.join_chat_id);
            if (message.time_expire != null && message.hasOwnProperty("time_expire"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time_expire);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_JoinChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_JoinChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_JoinChatRoomGroup_Response} message CChatRoom_JoinChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_JoinChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_JoinChatRoomGroup_Response} CChatRoom_JoinChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_JoinChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.state = $root.CChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.user_chat_state = $root.CUserChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.join_chat_id = reader.uint64();
                    break;
                case 5:
                    message.time_expire = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_JoinChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_JoinChatRoomGroup_Response} CChatRoom_JoinChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_JoinChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_JoinChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.state != null && message.hasOwnProperty("state")) {
                var error = $root.CChatRoomGroupState.verify(message.state);
                if (error)
                    return "state." + error;
            }
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state")) {
                var error = $root.CUserChatRoomGroupState.verify(message.user_chat_state);
                if (error)
                    return "user_chat_state." + error;
            }
            if (message.join_chat_id != null && message.hasOwnProperty("join_chat_id"))
                if (!$util.isInteger(message.join_chat_id) && !(message.join_chat_id && $util.isInteger(message.join_chat_id.low) && $util.isInteger(message.join_chat_id.high)))
                    return "join_chat_id: integer|Long expected";
            if (message.time_expire != null && message.hasOwnProperty("time_expire"))
                if (!$util.isInteger(message.time_expire))
                    return "time_expire: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_JoinChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_JoinChatRoomGroup_Response} CChatRoom_JoinChatRoomGroup_Response
         */
        CChatRoom_JoinChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_JoinChatRoomGroup_Response)
                return object;
            var message = new $root.CChatRoom_JoinChatRoomGroup_Response();
            if (object.state != null) {
                if (typeof object.state !== "object")
                    throw TypeError(".CChatRoom_JoinChatRoomGroup_Response.state: object expected");
                message.state = $root.CChatRoomGroupState.fromObject(object.state);
            }
            if (object.user_chat_state != null) {
                if (typeof object.user_chat_state !== "object")
                    throw TypeError(".CChatRoom_JoinChatRoomGroup_Response.user_chat_state: object expected");
                message.user_chat_state = $root.CUserChatRoomGroupState.fromObject(object.user_chat_state);
            }
            if (object.join_chat_id != null)
                if ($util.Long)
                    (message.join_chat_id = $util.Long.fromValue(object.join_chat_id)).unsigned = true;
                else if (typeof object.join_chat_id === "string")
                    message.join_chat_id = parseInt(object.join_chat_id, 10);
                else if (typeof object.join_chat_id === "number")
                    message.join_chat_id = object.join_chat_id;
                else if (typeof object.join_chat_id === "object")
                    message.join_chat_id = new $util.LongBits(object.join_chat_id.low >>> 0, object.join_chat_id.high >>> 0).toNumber(true);
            if (object.time_expire != null)
                message.time_expire = object.time_expire >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_JoinChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @static
         * @param {CChatRoom_JoinChatRoomGroup_Response} message CChatRoom_JoinChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_JoinChatRoomGroup_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.state = null;
                object.user_chat_state = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.join_chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.join_chat_id = options.longs === String ? "0" : 0;
                object.time_expire = 0;
            }
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = $root.CChatRoomGroupState.toObject(message.state, options);
            if (message.user_chat_state != null && message.hasOwnProperty("user_chat_state"))
                object.user_chat_state = $root.CUserChatRoomGroupState.toObject(message.user_chat_state, options);
            if (message.join_chat_id != null && message.hasOwnProperty("join_chat_id"))
                if (typeof message.join_chat_id === "number")
                    object.join_chat_id = options.longs === String ? String(message.join_chat_id) : message.join_chat_id;
                else
                    object.join_chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.join_chat_id) : options.longs === Number ? new $util.LongBits(message.join_chat_id.low >>> 0, message.join_chat_id.high >>> 0).toNumber(true) : message.join_chat_id;
            if (message.time_expire != null && message.hasOwnProperty("time_expire"))
                object.time_expire = message.time_expire;
            return object;
        };
    
        /**
         * Converts this CChatRoom_JoinChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_JoinChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_JoinChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_JoinChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_InviteFriendToChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_InviteFriendToChatRoomGroup_Request.
         * @exports ICChatRoom_InviteFriendToChatRoomGroup_Request
         * @interface ICChatRoom_InviteFriendToChatRoomGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_InviteFriendToChatRoomGroup_Request chat_group_id
         * @property {number|Long|null} [steamid] CChatRoom_InviteFriendToChatRoomGroup_Request steamid
         * @property {number|Long|null} [chat_id] CChatRoom_InviteFriendToChatRoomGroup_Request chat_id
         * @property {boolean|null} [skip_friendsui_check] CChatRoom_InviteFriendToChatRoomGroup_Request skip_friendsui_check
         */
    
        /**
         * Constructs a new CChatRoom_InviteFriendToChatRoomGroup_Request.
         * @exports CChatRoom_InviteFriendToChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_InviteFriendToChatRoomGroup_Request.
         * @implements ICChatRoom_InviteFriendToChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_InviteFriendToChatRoomGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_InviteFriendToChatRoomGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_InviteFriendToChatRoomGroup_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_InviteFriendToChatRoomGroup_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_InviteFriendToChatRoomGroup_Request skip_friendsui_check.
         * @member {boolean} skip_friendsui_check
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.prototype.skip_friendsui_check = false;
    
        /**
         * Creates a new CChatRoom_InviteFriendToChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Request} CChatRoom_InviteFriendToChatRoomGroup_Request instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_InviteFriendToChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_InviteFriendToChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_InviteFriendToChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request} message CChatRoom_InviteFriendToChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.chat_id);
            if (message.skip_friendsui_check != null && message.hasOwnProperty("skip_friendsui_check"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.skip_friendsui_check);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_InviteFriendToChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_InviteFriendToChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request} message CChatRoom_InviteFriendToChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_InviteFriendToChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Request} CChatRoom_InviteFriendToChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_InviteFriendToChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                case 3:
                    message.chat_id = reader.uint64();
                    break;
                case 4:
                    message.skip_friendsui_check = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_InviteFriendToChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Request} CChatRoom_InviteFriendToChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_InviteFriendToChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.skip_friendsui_check != null && message.hasOwnProperty("skip_friendsui_check"))
                if (typeof message.skip_friendsui_check !== "boolean")
                    return "skip_friendsui_check: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_InviteFriendToChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Request} CChatRoom_InviteFriendToChatRoomGroup_Request
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_InviteFriendToChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_InviteFriendToChatRoomGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.skip_friendsui_check != null)
                message.skip_friendsui_check = Boolean(object.skip_friendsui_check);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_InviteFriendToChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @static
         * @param {CChatRoom_InviteFriendToChatRoomGroup_Request} message CChatRoom_InviteFriendToChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.skip_friendsui_check = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.skip_friendsui_check != null && message.hasOwnProperty("skip_friendsui_check"))
                object.skip_friendsui_check = message.skip_friendsui_check;
            return object;
        };
    
        /**
         * Converts this CChatRoom_InviteFriendToChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_InviteFriendToChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_InviteFriendToChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_InviteFriendToChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_InviteFriendToChatRoomGroup_Response.
         * @exports ICChatRoom_InviteFriendToChatRoomGroup_Response
         * @interface ICChatRoom_InviteFriendToChatRoomGroup_Response
         */
    
        /**
         * Constructs a new CChatRoom_InviteFriendToChatRoomGroup_Response.
         * @exports CChatRoom_InviteFriendToChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_InviteFriendToChatRoomGroup_Response.
         * @implements ICChatRoom_InviteFriendToChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_InviteFriendToChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_InviteFriendToChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Response} CChatRoom_InviteFriendToChatRoomGroup_Response instance
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_InviteFriendToChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_InviteFriendToChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_InviteFriendToChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Response} message CChatRoom_InviteFriendToChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_InviteFriendToChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_InviteFriendToChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Response} message CChatRoom_InviteFriendToChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_InviteFriendToChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Response} CChatRoom_InviteFriendToChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_InviteFriendToChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_InviteFriendToChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Response} CChatRoom_InviteFriendToChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_InviteFriendToChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_InviteFriendToChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_InviteFriendToChatRoomGroup_Response} CChatRoom_InviteFriendToChatRoomGroup_Response
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_InviteFriendToChatRoomGroup_Response)
                return object;
            return new $root.CChatRoom_InviteFriendToChatRoomGroup_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_InviteFriendToChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @static
         * @param {CChatRoom_InviteFriendToChatRoomGroup_Response} message CChatRoom_InviteFriendToChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_InviteFriendToChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_InviteFriendToChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_InviteFriendToChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_InviteFriendToChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_LeaveChatRoomGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_LeaveChatRoomGroup_Request.
         * @exports ICChatRoom_LeaveChatRoomGroup_Request
         * @interface ICChatRoom_LeaveChatRoomGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_LeaveChatRoomGroup_Request chat_group_id
         */
    
        /**
         * Constructs a new CChatRoom_LeaveChatRoomGroup_Request.
         * @exports CChatRoom_LeaveChatRoomGroup_Request
         * @classdesc Represents a CChatRoom_LeaveChatRoomGroup_Request.
         * @implements ICChatRoom_LeaveChatRoomGroup_Request
         * @constructor
         * @param {ICChatRoom_LeaveChatRoomGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_LeaveChatRoomGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_LeaveChatRoomGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @instance
         */
        CChatRoom_LeaveChatRoomGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_LeaveChatRoomGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_LeaveChatRoomGroup_Request} CChatRoom_LeaveChatRoomGroup_Request instance
         */
        CChatRoom_LeaveChatRoomGroup_Request.create = function create(properties) {
            return new CChatRoom_LeaveChatRoomGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveChatRoomGroup_Request message. Does not implicitly {@link CChatRoom_LeaveChatRoomGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Request} message CChatRoom_LeaveChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveChatRoomGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveChatRoomGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_LeaveChatRoomGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Request} message CChatRoom_LeaveChatRoomGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveChatRoomGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_LeaveChatRoomGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_LeaveChatRoomGroup_Request} CChatRoom_LeaveChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveChatRoomGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_LeaveChatRoomGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_LeaveChatRoomGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_LeaveChatRoomGroup_Request} CChatRoom_LeaveChatRoomGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveChatRoomGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_LeaveChatRoomGroup_Request message.
         * @function verify
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_LeaveChatRoomGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_LeaveChatRoomGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_LeaveChatRoomGroup_Request} CChatRoom_LeaveChatRoomGroup_Request
         */
        CChatRoom_LeaveChatRoomGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_LeaveChatRoomGroup_Request)
                return object;
            var message = new $root.CChatRoom_LeaveChatRoomGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_LeaveChatRoomGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @static
         * @param {CChatRoom_LeaveChatRoomGroup_Request} message CChatRoom_LeaveChatRoomGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_LeaveChatRoomGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_LeaveChatRoomGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_LeaveChatRoomGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_LeaveChatRoomGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_LeaveChatRoomGroup_Request;
    })();
    
    $root.CChatRoom_LeaveChatRoomGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_LeaveChatRoomGroup_Response.
         * @exports ICChatRoom_LeaveChatRoomGroup_Response
         * @interface ICChatRoom_LeaveChatRoomGroup_Response
         */
    
        /**
         * Constructs a new CChatRoom_LeaveChatRoomGroup_Response.
         * @exports CChatRoom_LeaveChatRoomGroup_Response
         * @classdesc Represents a CChatRoom_LeaveChatRoomGroup_Response.
         * @implements ICChatRoom_LeaveChatRoomGroup_Response
         * @constructor
         * @param {ICChatRoom_LeaveChatRoomGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_LeaveChatRoomGroup_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_LeaveChatRoomGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_LeaveChatRoomGroup_Response} CChatRoom_LeaveChatRoomGroup_Response instance
         */
        CChatRoom_LeaveChatRoomGroup_Response.create = function create(properties) {
            return new CChatRoom_LeaveChatRoomGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveChatRoomGroup_Response message. Does not implicitly {@link CChatRoom_LeaveChatRoomGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Response} message CChatRoom_LeaveChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveChatRoomGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveChatRoomGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_LeaveChatRoomGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {ICChatRoom_LeaveChatRoomGroup_Response} message CChatRoom_LeaveChatRoomGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveChatRoomGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_LeaveChatRoomGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_LeaveChatRoomGroup_Response} CChatRoom_LeaveChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveChatRoomGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_LeaveChatRoomGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_LeaveChatRoomGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_LeaveChatRoomGroup_Response} CChatRoom_LeaveChatRoomGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveChatRoomGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_LeaveChatRoomGroup_Response message.
         * @function verify
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_LeaveChatRoomGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_LeaveChatRoomGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_LeaveChatRoomGroup_Response} CChatRoom_LeaveChatRoomGroup_Response
         */
        CChatRoom_LeaveChatRoomGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_LeaveChatRoomGroup_Response)
                return object;
            return new $root.CChatRoom_LeaveChatRoomGroup_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_LeaveChatRoomGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @static
         * @param {CChatRoom_LeaveChatRoomGroup_Response} message CChatRoom_LeaveChatRoomGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_LeaveChatRoomGroup_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_LeaveChatRoomGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_LeaveChatRoomGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_LeaveChatRoomGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_LeaveChatRoomGroup_Response;
    })();
    
    $root.CChatRoom_CreateChatRoom_Request = (function() {
    
        /**
         * Properties of a CChatRoom_CreateChatRoom_Request.
         * @exports ICChatRoom_CreateChatRoom_Request
         * @interface ICChatRoom_CreateChatRoom_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_CreateChatRoom_Request chat_group_id
         * @property {string|null} [name] CChatRoom_CreateChatRoom_Request name
         * @property {boolean|null} [allow_voice] CChatRoom_CreateChatRoom_Request allow_voice
         */
    
        /**
         * Constructs a new CChatRoom_CreateChatRoom_Request.
         * @exports CChatRoom_CreateChatRoom_Request
         * @classdesc Represents a CChatRoom_CreateChatRoom_Request.
         * @implements ICChatRoom_CreateChatRoom_Request
         * @constructor
         * @param {ICChatRoom_CreateChatRoom_Request=} [properties] Properties to set
         */
        function CChatRoom_CreateChatRoom_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateChatRoom_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_CreateChatRoom_Request
         * @instance
         */
        CChatRoom_CreateChatRoom_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_CreateChatRoom_Request name.
         * @member {string} name
         * @memberof CChatRoom_CreateChatRoom_Request
         * @instance
         */
        CChatRoom_CreateChatRoom_Request.prototype.name = "";
    
        /**
         * CChatRoom_CreateChatRoom_Request allow_voice.
         * @member {boolean} allow_voice
         * @memberof CChatRoom_CreateChatRoom_Request
         * @instance
         */
        CChatRoom_CreateChatRoom_Request.prototype.allow_voice = false;
    
        /**
         * Creates a new CChatRoom_CreateChatRoom_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {ICChatRoom_CreateChatRoom_Request=} [properties] Properties to set
         * @returns {CChatRoom_CreateChatRoom_Request} CChatRoom_CreateChatRoom_Request instance
         */
        CChatRoom_CreateChatRoom_Request.create = function create(properties) {
            return new CChatRoom_CreateChatRoom_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoom_Request message. Does not implicitly {@link CChatRoom_CreateChatRoom_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {ICChatRoom_CreateChatRoom_Request} message CChatRoom_CreateChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoom_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.allow_voice != null && message.hasOwnProperty("allow_voice"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allow_voice);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoom_Request message, length delimited. Does not implicitly {@link CChatRoom_CreateChatRoom_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {ICChatRoom_CreateChatRoom_Request} message CChatRoom_CreateChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoom_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoom_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateChatRoom_Request} CChatRoom_CreateChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoom_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateChatRoom_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.allow_voice = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoom_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateChatRoom_Request} CChatRoom_CreateChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoom_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateChatRoom_Request message.
         * @function verify
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateChatRoom_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.allow_voice != null && message.hasOwnProperty("allow_voice"))
                if (typeof message.allow_voice !== "boolean")
                    return "allow_voice: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateChatRoom_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateChatRoom_Request} CChatRoom_CreateChatRoom_Request
         */
        CChatRoom_CreateChatRoom_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateChatRoom_Request)
                return object;
            var message = new $root.CChatRoom_CreateChatRoom_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            if (object.allow_voice != null)
                message.allow_voice = Boolean(object.allow_voice);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateChatRoom_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateChatRoom_Request
         * @static
         * @param {CChatRoom_CreateChatRoom_Request} message CChatRoom_CreateChatRoom_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateChatRoom_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.name = "";
                object.allow_voice = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.allow_voice != null && message.hasOwnProperty("allow_voice"))
                object.allow_voice = message.allow_voice;
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateChatRoom_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateChatRoom_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateChatRoom_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateChatRoom_Request;
    })();
    
    $root.CChatRoom_CreateChatRoom_Response = (function() {
    
        /**
         * Properties of a CChatRoom_CreateChatRoom_Response.
         * @exports ICChatRoom_CreateChatRoom_Response
         * @interface ICChatRoom_CreateChatRoom_Response
         * @property {ICChatRoomState|null} [chat_room] CChatRoom_CreateChatRoom_Response chat_room
         */
    
        /**
         * Constructs a new CChatRoom_CreateChatRoom_Response.
         * @exports CChatRoom_CreateChatRoom_Response
         * @classdesc Represents a CChatRoom_CreateChatRoom_Response.
         * @implements ICChatRoom_CreateChatRoom_Response
         * @constructor
         * @param {ICChatRoom_CreateChatRoom_Response=} [properties] Properties to set
         */
        function CChatRoom_CreateChatRoom_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateChatRoom_Response chat_room.
         * @member {ICChatRoomState|null|undefined} chat_room
         * @memberof CChatRoom_CreateChatRoom_Response
         * @instance
         */
        CChatRoom_CreateChatRoom_Response.prototype.chat_room = null;
    
        /**
         * Creates a new CChatRoom_CreateChatRoom_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {ICChatRoom_CreateChatRoom_Response=} [properties] Properties to set
         * @returns {CChatRoom_CreateChatRoom_Response} CChatRoom_CreateChatRoom_Response instance
         */
        CChatRoom_CreateChatRoom_Response.create = function create(properties) {
            return new CChatRoom_CreateChatRoom_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoom_Response message. Does not implicitly {@link CChatRoom_CreateChatRoom_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {ICChatRoom_CreateChatRoom_Response} message CChatRoom_CreateChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoom_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_room != null && message.hasOwnProperty("chat_room"))
                $root.CChatRoomState.encode(message.chat_room, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateChatRoom_Response message, length delimited. Does not implicitly {@link CChatRoom_CreateChatRoom_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {ICChatRoom_CreateChatRoom_Response} message CChatRoom_CreateChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateChatRoom_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoom_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateChatRoom_Response} CChatRoom_CreateChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoom_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateChatRoom_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_room = $root.CChatRoomState.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateChatRoom_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateChatRoom_Response} CChatRoom_CreateChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateChatRoom_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateChatRoom_Response message.
         * @function verify
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateChatRoom_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_room != null && message.hasOwnProperty("chat_room")) {
                var error = $root.CChatRoomState.verify(message.chat_room);
                if (error)
                    return "chat_room." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateChatRoom_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateChatRoom_Response} CChatRoom_CreateChatRoom_Response
         */
        CChatRoom_CreateChatRoom_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateChatRoom_Response)
                return object;
            var message = new $root.CChatRoom_CreateChatRoom_Response();
            if (object.chat_room != null) {
                if (typeof object.chat_room !== "object")
                    throw TypeError(".CChatRoom_CreateChatRoom_Response.chat_room: object expected");
                message.chat_room = $root.CChatRoomState.fromObject(object.chat_room);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateChatRoom_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateChatRoom_Response
         * @static
         * @param {CChatRoom_CreateChatRoom_Response} message CChatRoom_CreateChatRoom_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateChatRoom_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.chat_room = null;
            if (message.chat_room != null && message.hasOwnProperty("chat_room"))
                object.chat_room = $root.CChatRoomState.toObject(message.chat_room, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateChatRoom_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateChatRoom_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateChatRoom_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateChatRoom_Response;
    })();
    
    $root.CChatRoom_DeleteChatRoom_Request = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteChatRoom_Request.
         * @exports ICChatRoom_DeleteChatRoom_Request
         * @interface ICChatRoom_DeleteChatRoom_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_DeleteChatRoom_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_DeleteChatRoom_Request chat_id
         */
    
        /**
         * Constructs a new CChatRoom_DeleteChatRoom_Request.
         * @exports CChatRoom_DeleteChatRoom_Request
         * @classdesc Represents a CChatRoom_DeleteChatRoom_Request.
         * @implements ICChatRoom_DeleteChatRoom_Request
         * @constructor
         * @param {ICChatRoom_DeleteChatRoom_Request=} [properties] Properties to set
         */
        function CChatRoom_DeleteChatRoom_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteChatRoom_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @instance
         */
        CChatRoom_DeleteChatRoom_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteChatRoom_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @instance
         */
        CChatRoom_DeleteChatRoom_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_DeleteChatRoom_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Request=} [properties] Properties to set
         * @returns {CChatRoom_DeleteChatRoom_Request} CChatRoom_DeleteChatRoom_Request instance
         */
        CChatRoom_DeleteChatRoom_Request.create = function create(properties) {
            return new CChatRoom_DeleteChatRoom_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatRoom_Request message. Does not implicitly {@link CChatRoom_DeleteChatRoom_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Request} message CChatRoom_DeleteChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatRoom_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatRoom_Request message, length delimited. Does not implicitly {@link CChatRoom_DeleteChatRoom_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Request} message CChatRoom_DeleteChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatRoom_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatRoom_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteChatRoom_Request} CChatRoom_DeleteChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatRoom_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteChatRoom_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatRoom_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteChatRoom_Request} CChatRoom_DeleteChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatRoom_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteChatRoom_Request message.
         * @function verify
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteChatRoom_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteChatRoom_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteChatRoom_Request} CChatRoom_DeleteChatRoom_Request
         */
        CChatRoom_DeleteChatRoom_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteChatRoom_Request)
                return object;
            var message = new $root.CChatRoom_DeleteChatRoom_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteChatRoom_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @static
         * @param {CChatRoom_DeleteChatRoom_Request} message CChatRoom_DeleteChatRoom_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteChatRoom_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteChatRoom_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteChatRoom_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteChatRoom_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteChatRoom_Request;
    })();
    
    $root.CChatRoom_DeleteChatRoom_Response = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteChatRoom_Response.
         * @exports ICChatRoom_DeleteChatRoom_Response
         * @interface ICChatRoom_DeleteChatRoom_Response
         */
    
        /**
         * Constructs a new CChatRoom_DeleteChatRoom_Response.
         * @exports CChatRoom_DeleteChatRoom_Response
         * @classdesc Represents a CChatRoom_DeleteChatRoom_Response.
         * @implements ICChatRoom_DeleteChatRoom_Response
         * @constructor
         * @param {ICChatRoom_DeleteChatRoom_Response=} [properties] Properties to set
         */
        function CChatRoom_DeleteChatRoom_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_DeleteChatRoom_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Response=} [properties] Properties to set
         * @returns {CChatRoom_DeleteChatRoom_Response} CChatRoom_DeleteChatRoom_Response instance
         */
        CChatRoom_DeleteChatRoom_Response.create = function create(properties) {
            return new CChatRoom_DeleteChatRoom_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatRoom_Response message. Does not implicitly {@link CChatRoom_DeleteChatRoom_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Response} message CChatRoom_DeleteChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatRoom_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatRoom_Response message, length delimited. Does not implicitly {@link CChatRoom_DeleteChatRoom_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {ICChatRoom_DeleteChatRoom_Response} message CChatRoom_DeleteChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatRoom_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatRoom_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteChatRoom_Response} CChatRoom_DeleteChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatRoom_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteChatRoom_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatRoom_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteChatRoom_Response} CChatRoom_DeleteChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatRoom_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteChatRoom_Response message.
         * @function verify
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteChatRoom_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteChatRoom_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteChatRoom_Response} CChatRoom_DeleteChatRoom_Response
         */
        CChatRoom_DeleteChatRoom_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteChatRoom_Response)
                return object;
            return new $root.CChatRoom_DeleteChatRoom_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteChatRoom_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @static
         * @param {CChatRoom_DeleteChatRoom_Response} message CChatRoom_DeleteChatRoom_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteChatRoom_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_DeleteChatRoom_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteChatRoom_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteChatRoom_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteChatRoom_Response;
    })();
    
    $root.CChatRoom_RenameChatRoom_Request = (function() {
    
        /**
         * Properties of a CChatRoom_RenameChatRoom_Request.
         * @exports ICChatRoom_RenameChatRoom_Request
         * @interface ICChatRoom_RenameChatRoom_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_RenameChatRoom_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_RenameChatRoom_Request chat_id
         * @property {string|null} [name] CChatRoom_RenameChatRoom_Request name
         */
    
        /**
         * Constructs a new CChatRoom_RenameChatRoom_Request.
         * @exports CChatRoom_RenameChatRoom_Request
         * @classdesc Represents a CChatRoom_RenameChatRoom_Request.
         * @implements ICChatRoom_RenameChatRoom_Request
         * @constructor
         * @param {ICChatRoom_RenameChatRoom_Request=} [properties] Properties to set
         */
        function CChatRoom_RenameChatRoom_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_RenameChatRoom_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_RenameChatRoom_Request
         * @instance
         */
        CChatRoom_RenameChatRoom_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RenameChatRoom_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_RenameChatRoom_Request
         * @instance
         */
        CChatRoom_RenameChatRoom_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_RenameChatRoom_Request name.
         * @member {string} name
         * @memberof CChatRoom_RenameChatRoom_Request
         * @instance
         */
        CChatRoom_RenameChatRoom_Request.prototype.name = "";
    
        /**
         * Creates a new CChatRoom_RenameChatRoom_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {ICChatRoom_RenameChatRoom_Request=} [properties] Properties to set
         * @returns {CChatRoom_RenameChatRoom_Request} CChatRoom_RenameChatRoom_Request instance
         */
        CChatRoom_RenameChatRoom_Request.create = function create(properties) {
            return new CChatRoom_RenameChatRoom_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoom_Request message. Does not implicitly {@link CChatRoom_RenameChatRoom_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {ICChatRoom_RenameChatRoom_Request} message CChatRoom_RenameChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoom_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoom_Request message, length delimited. Does not implicitly {@link CChatRoom_RenameChatRoom_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {ICChatRoom_RenameChatRoom_Request} message CChatRoom_RenameChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoom_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoom_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameChatRoom_Request} CChatRoom_RenameChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoom_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameChatRoom_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoom_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameChatRoom_Request} CChatRoom_RenameChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoom_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameChatRoom_Request message.
         * @function verify
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameChatRoom_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameChatRoom_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameChatRoom_Request} CChatRoom_RenameChatRoom_Request
         */
        CChatRoom_RenameChatRoom_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameChatRoom_Request)
                return object;
            var message = new $root.CChatRoom_RenameChatRoom_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameChatRoom_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameChatRoom_Request
         * @static
         * @param {CChatRoom_RenameChatRoom_Request} message CChatRoom_RenameChatRoom_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameChatRoom_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_RenameChatRoom_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameChatRoom_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameChatRoom_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameChatRoom_Request;
    })();
    
    $root.CChatRoom_RenameChatRoom_Response = (function() {
    
        /**
         * Properties of a CChatRoom_RenameChatRoom_Response.
         * @exports ICChatRoom_RenameChatRoom_Response
         * @interface ICChatRoom_RenameChatRoom_Response
         */
    
        /**
         * Constructs a new CChatRoom_RenameChatRoom_Response.
         * @exports CChatRoom_RenameChatRoom_Response
         * @classdesc Represents a CChatRoom_RenameChatRoom_Response.
         * @implements ICChatRoom_RenameChatRoom_Response
         * @constructor
         * @param {ICChatRoom_RenameChatRoom_Response=} [properties] Properties to set
         */
        function CChatRoom_RenameChatRoom_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_RenameChatRoom_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {ICChatRoom_RenameChatRoom_Response=} [properties] Properties to set
         * @returns {CChatRoom_RenameChatRoom_Response} CChatRoom_RenameChatRoom_Response instance
         */
        CChatRoom_RenameChatRoom_Response.create = function create(properties) {
            return new CChatRoom_RenameChatRoom_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoom_Response message. Does not implicitly {@link CChatRoom_RenameChatRoom_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {ICChatRoom_RenameChatRoom_Response} message CChatRoom_RenameChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoom_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_RenameChatRoom_Response message, length delimited. Does not implicitly {@link CChatRoom_RenameChatRoom_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {ICChatRoom_RenameChatRoom_Response} message CChatRoom_RenameChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_RenameChatRoom_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoom_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_RenameChatRoom_Response} CChatRoom_RenameChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoom_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_RenameChatRoom_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_RenameChatRoom_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_RenameChatRoom_Response} CChatRoom_RenameChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_RenameChatRoom_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_RenameChatRoom_Response message.
         * @function verify
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_RenameChatRoom_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_RenameChatRoom_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_RenameChatRoom_Response} CChatRoom_RenameChatRoom_Response
         */
        CChatRoom_RenameChatRoom_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_RenameChatRoom_Response)
                return object;
            return new $root.CChatRoom_RenameChatRoom_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_RenameChatRoom_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_RenameChatRoom_Response
         * @static
         * @param {CChatRoom_RenameChatRoom_Response} message CChatRoom_RenameChatRoom_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_RenameChatRoom_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_RenameChatRoom_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_RenameChatRoom_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_RenameChatRoom_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_RenameChatRoom_Response;
    })();
    
    $root.CChatRoom_ReorderChatRoom_Request = (function() {
    
        /**
         * Properties of a CChatRoom_ReorderChatRoom_Request.
         * @exports ICChatRoom_ReorderChatRoom_Request
         * @interface ICChatRoom_ReorderChatRoom_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_ReorderChatRoom_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_ReorderChatRoom_Request chat_id
         * @property {number|Long|null} [move_after_chat_id] CChatRoom_ReorderChatRoom_Request move_after_chat_id
         */
    
        /**
         * Constructs a new CChatRoom_ReorderChatRoom_Request.
         * @exports CChatRoom_ReorderChatRoom_Request
         * @classdesc Represents a CChatRoom_ReorderChatRoom_Request.
         * @implements ICChatRoom_ReorderChatRoom_Request
         * @constructor
         * @param {ICChatRoom_ReorderChatRoom_Request=} [properties] Properties to set
         */
        function CChatRoom_ReorderChatRoom_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ReorderChatRoom_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @instance
         */
        CChatRoom_ReorderChatRoom_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReorderChatRoom_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @instance
         */
        CChatRoom_ReorderChatRoom_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ReorderChatRoom_Request move_after_chat_id.
         * @member {number|Long} move_after_chat_id
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @instance
         */
        CChatRoom_ReorderChatRoom_Request.prototype.move_after_chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_ReorderChatRoom_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Request=} [properties] Properties to set
         * @returns {CChatRoom_ReorderChatRoom_Request} CChatRoom_ReorderChatRoom_Request instance
         */
        CChatRoom_ReorderChatRoom_Request.create = function create(properties) {
            return new CChatRoom_ReorderChatRoom_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderChatRoom_Request message. Does not implicitly {@link CChatRoom_ReorderChatRoom_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Request} message CChatRoom_ReorderChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderChatRoom_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.move_after_chat_id != null && message.hasOwnProperty("move_after_chat_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.move_after_chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderChatRoom_Request message, length delimited. Does not implicitly {@link CChatRoom_ReorderChatRoom_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Request} message CChatRoom_ReorderChatRoom_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderChatRoom_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReorderChatRoom_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReorderChatRoom_Request} CChatRoom_ReorderChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderChatRoom_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReorderChatRoom_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.move_after_chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReorderChatRoom_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReorderChatRoom_Request} CChatRoom_ReorderChatRoom_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderChatRoom_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReorderChatRoom_Request message.
         * @function verify
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReorderChatRoom_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.move_after_chat_id != null && message.hasOwnProperty("move_after_chat_id"))
                if (!$util.isInteger(message.move_after_chat_id) && !(message.move_after_chat_id && $util.isInteger(message.move_after_chat_id.low) && $util.isInteger(message.move_after_chat_id.high)))
                    return "move_after_chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReorderChatRoom_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReorderChatRoom_Request} CChatRoom_ReorderChatRoom_Request
         */
        CChatRoom_ReorderChatRoom_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReorderChatRoom_Request)
                return object;
            var message = new $root.CChatRoom_ReorderChatRoom_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.move_after_chat_id != null)
                if ($util.Long)
                    (message.move_after_chat_id = $util.Long.fromValue(object.move_after_chat_id)).unsigned = true;
                else if (typeof object.move_after_chat_id === "string")
                    message.move_after_chat_id = parseInt(object.move_after_chat_id, 10);
                else if (typeof object.move_after_chat_id === "number")
                    message.move_after_chat_id = object.move_after_chat_id;
                else if (typeof object.move_after_chat_id === "object")
                    message.move_after_chat_id = new $util.LongBits(object.move_after_chat_id.low >>> 0, object.move_after_chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReorderChatRoom_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @static
         * @param {CChatRoom_ReorderChatRoom_Request} message CChatRoom_ReorderChatRoom_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReorderChatRoom_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.move_after_chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.move_after_chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.move_after_chat_id != null && message.hasOwnProperty("move_after_chat_id"))
                if (typeof message.move_after_chat_id === "number")
                    object.move_after_chat_id = options.longs === String ? String(message.move_after_chat_id) : message.move_after_chat_id;
                else
                    object.move_after_chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.move_after_chat_id) : options.longs === Number ? new $util.LongBits(message.move_after_chat_id.low >>> 0, message.move_after_chat_id.high >>> 0).toNumber(true) : message.move_after_chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_ReorderChatRoom_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReorderChatRoom_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReorderChatRoom_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReorderChatRoom_Request;
    })();
    
    $root.CChatRoom_ReorderChatRoom_Response = (function() {
    
        /**
         * Properties of a CChatRoom_ReorderChatRoom_Response.
         * @exports ICChatRoom_ReorderChatRoom_Response
         * @interface ICChatRoom_ReorderChatRoom_Response
         */
    
        /**
         * Constructs a new CChatRoom_ReorderChatRoom_Response.
         * @exports CChatRoom_ReorderChatRoom_Response
         * @classdesc Represents a CChatRoom_ReorderChatRoom_Response.
         * @implements ICChatRoom_ReorderChatRoom_Response
         * @constructor
         * @param {ICChatRoom_ReorderChatRoom_Response=} [properties] Properties to set
         */
        function CChatRoom_ReorderChatRoom_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_ReorderChatRoom_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Response=} [properties] Properties to set
         * @returns {CChatRoom_ReorderChatRoom_Response} CChatRoom_ReorderChatRoom_Response instance
         */
        CChatRoom_ReorderChatRoom_Response.create = function create(properties) {
            return new CChatRoom_ReorderChatRoom_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderChatRoom_Response message. Does not implicitly {@link CChatRoom_ReorderChatRoom_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Response} message CChatRoom_ReorderChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderChatRoom_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ReorderChatRoom_Response message, length delimited. Does not implicitly {@link CChatRoom_ReorderChatRoom_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {ICChatRoom_ReorderChatRoom_Response} message CChatRoom_ReorderChatRoom_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ReorderChatRoom_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ReorderChatRoom_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ReorderChatRoom_Response} CChatRoom_ReorderChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderChatRoom_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ReorderChatRoom_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ReorderChatRoom_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ReorderChatRoom_Response} CChatRoom_ReorderChatRoom_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ReorderChatRoom_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ReorderChatRoom_Response message.
         * @function verify
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ReorderChatRoom_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ReorderChatRoom_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ReorderChatRoom_Response} CChatRoom_ReorderChatRoom_Response
         */
        CChatRoom_ReorderChatRoom_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ReorderChatRoom_Response)
                return object;
            return new $root.CChatRoom_ReorderChatRoom_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_ReorderChatRoom_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @static
         * @param {CChatRoom_ReorderChatRoom_Response} message CChatRoom_ReorderChatRoom_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ReorderChatRoom_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_ReorderChatRoom_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_ReorderChatRoom_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ReorderChatRoom_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ReorderChatRoom_Response;
    })();
    
    $root.CChatRoom_SendChatMessage_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SendChatMessage_Request.
         * @exports ICChatRoom_SendChatMessage_Request
         * @interface ICChatRoom_SendChatMessage_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SendChatMessage_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_SendChatMessage_Request chat_id
         * @property {string|null} [message] CChatRoom_SendChatMessage_Request message
         * @property {boolean|null} [echo_to_sender] CChatRoom_SendChatMessage_Request echo_to_sender
         */
    
        /**
         * Constructs a new CChatRoom_SendChatMessage_Request.
         * @exports CChatRoom_SendChatMessage_Request
         * @classdesc Represents a CChatRoom_SendChatMessage_Request.
         * @implements ICChatRoom_SendChatMessage_Request
         * @constructor
         * @param {ICChatRoom_SendChatMessage_Request=} [properties] Properties to set
         */
        function CChatRoom_SendChatMessage_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SendChatMessage_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SendChatMessage_Request
         * @instance
         */
        CChatRoom_SendChatMessage_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SendChatMessage_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_SendChatMessage_Request
         * @instance
         */
        CChatRoom_SendChatMessage_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SendChatMessage_Request message.
         * @member {string} message
         * @memberof CChatRoom_SendChatMessage_Request
         * @instance
         */
        CChatRoom_SendChatMessage_Request.prototype.message = "";
    
        /**
         * CChatRoom_SendChatMessage_Request echo_to_sender.
         * @member {boolean} echo_to_sender
         * @memberof CChatRoom_SendChatMessage_Request
         * @instance
         */
        CChatRoom_SendChatMessage_Request.prototype.echo_to_sender = false;
    
        /**
         * Creates a new CChatRoom_SendChatMessage_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {ICChatRoom_SendChatMessage_Request=} [properties] Properties to set
         * @returns {CChatRoom_SendChatMessage_Request} CChatRoom_SendChatMessage_Request instance
         */
        CChatRoom_SendChatMessage_Request.create = function create(properties) {
            return new CChatRoom_SendChatMessage_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SendChatMessage_Request message. Does not implicitly {@link CChatRoom_SendChatMessage_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {ICChatRoom_SendChatMessage_Request} message CChatRoom_SendChatMessage_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SendChatMessage_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.message != null && message.hasOwnProperty("message"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
            if (message.echo_to_sender != null && message.hasOwnProperty("echo_to_sender"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.echo_to_sender);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SendChatMessage_Request message, length delimited. Does not implicitly {@link CChatRoom_SendChatMessage_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {ICChatRoom_SendChatMessage_Request} message CChatRoom_SendChatMessage_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SendChatMessage_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SendChatMessage_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SendChatMessage_Request} CChatRoom_SendChatMessage_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SendChatMessage_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SendChatMessage_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.message = reader.string();
                    break;
                case 4:
                    message.echo_to_sender = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SendChatMessage_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SendChatMessage_Request} CChatRoom_SendChatMessage_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SendChatMessage_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SendChatMessage_Request message.
         * @function verify
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SendChatMessage_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            if (message.echo_to_sender != null && message.hasOwnProperty("echo_to_sender"))
                if (typeof message.echo_to_sender !== "boolean")
                    return "echo_to_sender: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SendChatMessage_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SendChatMessage_Request} CChatRoom_SendChatMessage_Request
         */
        CChatRoom_SendChatMessage_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SendChatMessage_Request)
                return object;
            var message = new $root.CChatRoom_SendChatMessage_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.message != null)
                message.message = String(object.message);
            if (object.echo_to_sender != null)
                message.echo_to_sender = Boolean(object.echo_to_sender);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SendChatMessage_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SendChatMessage_Request
         * @static
         * @param {CChatRoom_SendChatMessage_Request} message CChatRoom_SendChatMessage_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SendChatMessage_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.message = "";
                object.echo_to_sender = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            if (message.echo_to_sender != null && message.hasOwnProperty("echo_to_sender"))
                object.echo_to_sender = message.echo_to_sender;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SendChatMessage_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SendChatMessage_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SendChatMessage_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SendChatMessage_Request;
    })();
    
    $root.CChatRoom_SendChatMessage_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SendChatMessage_Response.
         * @exports ICChatRoom_SendChatMessage_Response
         * @interface ICChatRoom_SendChatMessage_Response
         * @property {string|null} [modified_message] CChatRoom_SendChatMessage_Response modified_message
         * @property {number|null} [server_timestamp] CChatRoom_SendChatMessage_Response server_timestamp
         * @property {number|null} [ordinal] CChatRoom_SendChatMessage_Response ordinal
         * @property {string|null} [message_without_bb_code] CChatRoom_SendChatMessage_Response message_without_bb_code
         */
    
        /**
         * Constructs a new CChatRoom_SendChatMessage_Response.
         * @exports CChatRoom_SendChatMessage_Response
         * @classdesc Represents a CChatRoom_SendChatMessage_Response.
         * @implements ICChatRoom_SendChatMessage_Response
         * @constructor
         * @param {ICChatRoom_SendChatMessage_Response=} [properties] Properties to set
         */
        function CChatRoom_SendChatMessage_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SendChatMessage_Response modified_message.
         * @member {string} modified_message
         * @memberof CChatRoom_SendChatMessage_Response
         * @instance
         */
        CChatRoom_SendChatMessage_Response.prototype.modified_message = "";
    
        /**
         * CChatRoom_SendChatMessage_Response server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_SendChatMessage_Response
         * @instance
         */
        CChatRoom_SendChatMessage_Response.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_SendChatMessage_Response ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_SendChatMessage_Response
         * @instance
         */
        CChatRoom_SendChatMessage_Response.prototype.ordinal = 0;
    
        /**
         * CChatRoom_SendChatMessage_Response message_without_bb_code.
         * @member {string} message_without_bb_code
         * @memberof CChatRoom_SendChatMessage_Response
         * @instance
         */
        CChatRoom_SendChatMessage_Response.prototype.message_without_bb_code = "";
    
        /**
         * Creates a new CChatRoom_SendChatMessage_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {ICChatRoom_SendChatMessage_Response=} [properties] Properties to set
         * @returns {CChatRoom_SendChatMessage_Response} CChatRoom_SendChatMessage_Response instance
         */
        CChatRoom_SendChatMessage_Response.create = function create(properties) {
            return new CChatRoom_SendChatMessage_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SendChatMessage_Response message. Does not implicitly {@link CChatRoom_SendChatMessage_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {ICChatRoom_SendChatMessage_Response} message CChatRoom_SendChatMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SendChatMessage_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.modified_message != null && message.hasOwnProperty("modified_message"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.modified_message);
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ordinal);
            if (message.message_without_bb_code != null && message.hasOwnProperty("message_without_bb_code"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.message_without_bb_code);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SendChatMessage_Response message, length delimited. Does not implicitly {@link CChatRoom_SendChatMessage_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {ICChatRoom_SendChatMessage_Response} message CChatRoom_SendChatMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SendChatMessage_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SendChatMessage_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SendChatMessage_Response} CChatRoom_SendChatMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SendChatMessage_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SendChatMessage_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.modified_message = reader.string();
                    break;
                case 2:
                    message.server_timestamp = reader.uint32();
                    break;
                case 3:
                    message.ordinal = reader.uint32();
                    break;
                case 4:
                    message.message_without_bb_code = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SendChatMessage_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SendChatMessage_Response} CChatRoom_SendChatMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SendChatMessage_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SendChatMessage_Response message.
         * @function verify
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SendChatMessage_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.modified_message != null && message.hasOwnProperty("modified_message"))
                if (!$util.isString(message.modified_message))
                    return "modified_message: string expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.message_without_bb_code != null && message.hasOwnProperty("message_without_bb_code"))
                if (!$util.isString(message.message_without_bb_code))
                    return "message_without_bb_code: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SendChatMessage_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SendChatMessage_Response} CChatRoom_SendChatMessage_Response
         */
        CChatRoom_SendChatMessage_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SendChatMessage_Response)
                return object;
            var message = new $root.CChatRoom_SendChatMessage_Response();
            if (object.modified_message != null)
                message.modified_message = String(object.modified_message);
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.message_without_bb_code != null)
                message.message_without_bb_code = String(object.message_without_bb_code);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SendChatMessage_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SendChatMessage_Response
         * @static
         * @param {CChatRoom_SendChatMessage_Response} message CChatRoom_SendChatMessage_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SendChatMessage_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.modified_message = "";
                object.server_timestamp = 0;
                object.ordinal = 0;
                object.message_without_bb_code = "";
            }
            if (message.modified_message != null && message.hasOwnProperty("modified_message"))
                object.modified_message = message.modified_message;
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.message_without_bb_code != null && message.hasOwnProperty("message_without_bb_code"))
                object.message_without_bb_code = message.message_without_bb_code;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SendChatMessage_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SendChatMessage_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SendChatMessage_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SendChatMessage_Response;
    })();
    
    $root.CChatRoom_JoinVoiceChat_Request = (function() {
    
        /**
         * Properties of a CChatRoom_JoinVoiceChat_Request.
         * @exports ICChatRoom_JoinVoiceChat_Request
         * @interface ICChatRoom_JoinVoiceChat_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_JoinVoiceChat_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_JoinVoiceChat_Request chat_id
         */
    
        /**
         * Constructs a new CChatRoom_JoinVoiceChat_Request.
         * @exports CChatRoom_JoinVoiceChat_Request
         * @classdesc Represents a CChatRoom_JoinVoiceChat_Request.
         * @implements ICChatRoom_JoinVoiceChat_Request
         * @constructor
         * @param {ICChatRoom_JoinVoiceChat_Request=} [properties] Properties to set
         */
        function CChatRoom_JoinVoiceChat_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_JoinVoiceChat_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @instance
         */
        CChatRoom_JoinVoiceChat_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_JoinVoiceChat_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @instance
         */
        CChatRoom_JoinVoiceChat_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_JoinVoiceChat_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Request=} [properties] Properties to set
         * @returns {CChatRoom_JoinVoiceChat_Request} CChatRoom_JoinVoiceChat_Request instance
         */
        CChatRoom_JoinVoiceChat_Request.create = function create(properties) {
            return new CChatRoom_JoinVoiceChat_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_JoinVoiceChat_Request message. Does not implicitly {@link CChatRoom_JoinVoiceChat_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Request} message CChatRoom_JoinVoiceChat_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinVoiceChat_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_JoinVoiceChat_Request message, length delimited. Does not implicitly {@link CChatRoom_JoinVoiceChat_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Request} message CChatRoom_JoinVoiceChat_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinVoiceChat_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_JoinVoiceChat_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_JoinVoiceChat_Request} CChatRoom_JoinVoiceChat_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinVoiceChat_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_JoinVoiceChat_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_JoinVoiceChat_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_JoinVoiceChat_Request} CChatRoom_JoinVoiceChat_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinVoiceChat_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_JoinVoiceChat_Request message.
         * @function verify
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_JoinVoiceChat_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_JoinVoiceChat_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_JoinVoiceChat_Request} CChatRoom_JoinVoiceChat_Request
         */
        CChatRoom_JoinVoiceChat_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_JoinVoiceChat_Request)
                return object;
            var message = new $root.CChatRoom_JoinVoiceChat_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_JoinVoiceChat_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @static
         * @param {CChatRoom_JoinVoiceChat_Request} message CChatRoom_JoinVoiceChat_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_JoinVoiceChat_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_JoinVoiceChat_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_JoinVoiceChat_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_JoinVoiceChat_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_JoinVoiceChat_Request;
    })();
    
    $root.CChatRoom_JoinVoiceChat_Response = (function() {
    
        /**
         * Properties of a CChatRoom_JoinVoiceChat_Response.
         * @exports ICChatRoom_JoinVoiceChat_Response
         * @interface ICChatRoom_JoinVoiceChat_Response
         * @property {number|Long|null} [voice_chatid] CChatRoom_JoinVoiceChat_Response voice_chatid
         */
    
        /**
         * Constructs a new CChatRoom_JoinVoiceChat_Response.
         * @exports CChatRoom_JoinVoiceChat_Response
         * @classdesc Represents a CChatRoom_JoinVoiceChat_Response.
         * @implements ICChatRoom_JoinVoiceChat_Response
         * @constructor
         * @param {ICChatRoom_JoinVoiceChat_Response=} [properties] Properties to set
         */
        function CChatRoom_JoinVoiceChat_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_JoinVoiceChat_Response voice_chatid.
         * @member {number|Long} voice_chatid
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @instance
         */
        CChatRoom_JoinVoiceChat_Response.prototype.voice_chatid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_JoinVoiceChat_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Response=} [properties] Properties to set
         * @returns {CChatRoom_JoinVoiceChat_Response} CChatRoom_JoinVoiceChat_Response instance
         */
        CChatRoom_JoinVoiceChat_Response.create = function create(properties) {
            return new CChatRoom_JoinVoiceChat_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_JoinVoiceChat_Response message. Does not implicitly {@link CChatRoom_JoinVoiceChat_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Response} message CChatRoom_JoinVoiceChat_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinVoiceChat_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.voice_chatid != null && message.hasOwnProperty("voice_chatid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.voice_chatid);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_JoinVoiceChat_Response message, length delimited. Does not implicitly {@link CChatRoom_JoinVoiceChat_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {ICChatRoom_JoinVoiceChat_Response} message CChatRoom_JoinVoiceChat_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_JoinVoiceChat_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_JoinVoiceChat_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_JoinVoiceChat_Response} CChatRoom_JoinVoiceChat_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinVoiceChat_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_JoinVoiceChat_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.voice_chatid = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_JoinVoiceChat_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_JoinVoiceChat_Response} CChatRoom_JoinVoiceChat_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_JoinVoiceChat_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_JoinVoiceChat_Response message.
         * @function verify
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_JoinVoiceChat_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.voice_chatid != null && message.hasOwnProperty("voice_chatid"))
                if (!$util.isInteger(message.voice_chatid) && !(message.voice_chatid && $util.isInteger(message.voice_chatid.low) && $util.isInteger(message.voice_chatid.high)))
                    return "voice_chatid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_JoinVoiceChat_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_JoinVoiceChat_Response} CChatRoom_JoinVoiceChat_Response
         */
        CChatRoom_JoinVoiceChat_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_JoinVoiceChat_Response)
                return object;
            var message = new $root.CChatRoom_JoinVoiceChat_Response();
            if (object.voice_chatid != null)
                if ($util.Long)
                    (message.voice_chatid = $util.Long.fromValue(object.voice_chatid)).unsigned = true;
                else if (typeof object.voice_chatid === "string")
                    message.voice_chatid = parseInt(object.voice_chatid, 10);
                else if (typeof object.voice_chatid === "number")
                    message.voice_chatid = object.voice_chatid;
                else if (typeof object.voice_chatid === "object")
                    message.voice_chatid = new $util.LongBits(object.voice_chatid.low >>> 0, object.voice_chatid.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_JoinVoiceChat_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @static
         * @param {CChatRoom_JoinVoiceChat_Response} message CChatRoom_JoinVoiceChat_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_JoinVoiceChat_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.voice_chatid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.voice_chatid = options.longs === String ? "0" : 0;
            if (message.voice_chatid != null && message.hasOwnProperty("voice_chatid"))
                if (typeof message.voice_chatid === "number")
                    object.voice_chatid = options.longs === String ? String(message.voice_chatid) : message.voice_chatid;
                else
                    object.voice_chatid = options.longs === String ? $util.Long.prototype.toString.call(message.voice_chatid) : options.longs === Number ? new $util.LongBits(message.voice_chatid.low >>> 0, message.voice_chatid.high >>> 0).toNumber(true) : message.voice_chatid;
            return object;
        };
    
        /**
         * Converts this CChatRoom_JoinVoiceChat_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_JoinVoiceChat_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_JoinVoiceChat_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_JoinVoiceChat_Response;
    })();
    
    $root.CChatRoom_LeaveVoiceChat_Request = (function() {
    
        /**
         * Properties of a CChatRoom_LeaveVoiceChat_Request.
         * @exports ICChatRoom_LeaveVoiceChat_Request
         * @interface ICChatRoom_LeaveVoiceChat_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_LeaveVoiceChat_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_LeaveVoiceChat_Request chat_id
         */
    
        /**
         * Constructs a new CChatRoom_LeaveVoiceChat_Request.
         * @exports CChatRoom_LeaveVoiceChat_Request
         * @classdesc Represents a CChatRoom_LeaveVoiceChat_Request.
         * @implements ICChatRoom_LeaveVoiceChat_Request
         * @constructor
         * @param {ICChatRoom_LeaveVoiceChat_Request=} [properties] Properties to set
         */
        function CChatRoom_LeaveVoiceChat_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_LeaveVoiceChat_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @instance
         */
        CChatRoom_LeaveVoiceChat_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_LeaveVoiceChat_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @instance
         */
        CChatRoom_LeaveVoiceChat_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_LeaveVoiceChat_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Request=} [properties] Properties to set
         * @returns {CChatRoom_LeaveVoiceChat_Request} CChatRoom_LeaveVoiceChat_Request instance
         */
        CChatRoom_LeaveVoiceChat_Request.create = function create(properties) {
            return new CChatRoom_LeaveVoiceChat_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveVoiceChat_Request message. Does not implicitly {@link CChatRoom_LeaveVoiceChat_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Request} message CChatRoom_LeaveVoiceChat_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveVoiceChat_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveVoiceChat_Request message, length delimited. Does not implicitly {@link CChatRoom_LeaveVoiceChat_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Request} message CChatRoom_LeaveVoiceChat_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveVoiceChat_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_LeaveVoiceChat_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_LeaveVoiceChat_Request} CChatRoom_LeaveVoiceChat_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveVoiceChat_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_LeaveVoiceChat_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_LeaveVoiceChat_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_LeaveVoiceChat_Request} CChatRoom_LeaveVoiceChat_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveVoiceChat_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_LeaveVoiceChat_Request message.
         * @function verify
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_LeaveVoiceChat_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_LeaveVoiceChat_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_LeaveVoiceChat_Request} CChatRoom_LeaveVoiceChat_Request
         */
        CChatRoom_LeaveVoiceChat_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_LeaveVoiceChat_Request)
                return object;
            var message = new $root.CChatRoom_LeaveVoiceChat_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_LeaveVoiceChat_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @static
         * @param {CChatRoom_LeaveVoiceChat_Request} message CChatRoom_LeaveVoiceChat_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_LeaveVoiceChat_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_LeaveVoiceChat_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_LeaveVoiceChat_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_LeaveVoiceChat_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_LeaveVoiceChat_Request;
    })();
    
    $root.CChatRoom_LeaveVoiceChat_Response = (function() {
    
        /**
         * Properties of a CChatRoom_LeaveVoiceChat_Response.
         * @exports ICChatRoom_LeaveVoiceChat_Response
         * @interface ICChatRoom_LeaveVoiceChat_Response
         */
    
        /**
         * Constructs a new CChatRoom_LeaveVoiceChat_Response.
         * @exports CChatRoom_LeaveVoiceChat_Response
         * @classdesc Represents a CChatRoom_LeaveVoiceChat_Response.
         * @implements ICChatRoom_LeaveVoiceChat_Response
         * @constructor
         * @param {ICChatRoom_LeaveVoiceChat_Response=} [properties] Properties to set
         */
        function CChatRoom_LeaveVoiceChat_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_LeaveVoiceChat_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Response=} [properties] Properties to set
         * @returns {CChatRoom_LeaveVoiceChat_Response} CChatRoom_LeaveVoiceChat_Response instance
         */
        CChatRoom_LeaveVoiceChat_Response.create = function create(properties) {
            return new CChatRoom_LeaveVoiceChat_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveVoiceChat_Response message. Does not implicitly {@link CChatRoom_LeaveVoiceChat_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Response} message CChatRoom_LeaveVoiceChat_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveVoiceChat_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_LeaveVoiceChat_Response message, length delimited. Does not implicitly {@link CChatRoom_LeaveVoiceChat_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {ICChatRoom_LeaveVoiceChat_Response} message CChatRoom_LeaveVoiceChat_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_LeaveVoiceChat_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_LeaveVoiceChat_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_LeaveVoiceChat_Response} CChatRoom_LeaveVoiceChat_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveVoiceChat_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_LeaveVoiceChat_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_LeaveVoiceChat_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_LeaveVoiceChat_Response} CChatRoom_LeaveVoiceChat_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_LeaveVoiceChat_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_LeaveVoiceChat_Response message.
         * @function verify
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_LeaveVoiceChat_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_LeaveVoiceChat_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_LeaveVoiceChat_Response} CChatRoom_LeaveVoiceChat_Response
         */
        CChatRoom_LeaveVoiceChat_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_LeaveVoiceChat_Response)
                return object;
            return new $root.CChatRoom_LeaveVoiceChat_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_LeaveVoiceChat_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @static
         * @param {CChatRoom_LeaveVoiceChat_Response} message CChatRoom_LeaveVoiceChat_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_LeaveVoiceChat_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_LeaveVoiceChat_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_LeaveVoiceChat_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_LeaveVoiceChat_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_LeaveVoiceChat_Response;
    })();
    
    $root.CChatRoom_GetMessageHistory_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageHistory_Request.
         * @exports ICChatRoom_GetMessageHistory_Request
         * @interface ICChatRoom_GetMessageHistory_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetMessageHistory_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_GetMessageHistory_Request chat_id
         * @property {number|null} [last_time] CChatRoom_GetMessageHistory_Request last_time
         * @property {number|null} [last_ordinal] CChatRoom_GetMessageHistory_Request last_ordinal
         * @property {number|null} [start_time] CChatRoom_GetMessageHistory_Request start_time
         * @property {number|null} [start_ordinal] CChatRoom_GetMessageHistory_Request start_ordinal
         * @property {number|null} [max_count] CChatRoom_GetMessageHistory_Request max_count
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageHistory_Request.
         * @exports CChatRoom_GetMessageHistory_Request
         * @classdesc Represents a CChatRoom_GetMessageHistory_Request.
         * @implements ICChatRoom_GetMessageHistory_Request
         * @constructor
         * @param {ICChatRoom_GetMessageHistory_Request=} [properties] Properties to set
         */
        function CChatRoom_GetMessageHistory_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageHistory_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request last_time.
         * @member {number} last_time
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.last_time = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request last_ordinal.
         * @member {number} last_ordinal
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.last_ordinal = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request start_time.
         * @member {number} start_time
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.start_time = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request start_ordinal.
         * @member {number} start_ordinal
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.start_ordinal = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Request max_count.
         * @member {number} max_count
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         */
        CChatRoom_GetMessageHistory_Request.prototype.max_count = 0;
    
        /**
         * Creates a new CChatRoom_GetMessageHistory_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {ICChatRoom_GetMessageHistory_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageHistory_Request} CChatRoom_GetMessageHistory_Request instance
         */
        CChatRoom_GetMessageHistory_Request.create = function create(properties) {
            return new CChatRoom_GetMessageHistory_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Request message. Does not implicitly {@link CChatRoom_GetMessageHistory_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {ICChatRoom_GetMessageHistory_Request} message CChatRoom_GetMessageHistory_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.last_time != null && message.hasOwnProperty("last_time"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.last_time);
            if (message.last_ordinal != null && message.hasOwnProperty("last_ordinal"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.last_ordinal);
            if (message.start_time != null && message.hasOwnProperty("start_time"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.start_time);
            if (message.start_ordinal != null && message.hasOwnProperty("start_ordinal"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.start_ordinal);
            if (message.max_count != null && message.hasOwnProperty("max_count"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.max_count);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Request message, length delimited. Does not implicitly {@link CChatRoom_GetMessageHistory_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {ICChatRoom_GetMessageHistory_Request} message CChatRoom_GetMessageHistory_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageHistory_Request} CChatRoom_GetMessageHistory_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageHistory_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.last_time = reader.uint32();
                    break;
                case 4:
                    message.last_ordinal = reader.uint32();
                    break;
                case 5:
                    message.start_time = reader.uint32();
                    break;
                case 6:
                    message.start_ordinal = reader.uint32();
                    break;
                case 7:
                    message.max_count = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageHistory_Request} CChatRoom_GetMessageHistory_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageHistory_Request message.
         * @function verify
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageHistory_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.last_time != null && message.hasOwnProperty("last_time"))
                if (!$util.isInteger(message.last_time))
                    return "last_time: integer expected";
            if (message.last_ordinal != null && message.hasOwnProperty("last_ordinal"))
                if (!$util.isInteger(message.last_ordinal))
                    return "last_ordinal: integer expected";
            if (message.start_time != null && message.hasOwnProperty("start_time"))
                if (!$util.isInteger(message.start_time))
                    return "start_time: integer expected";
            if (message.start_ordinal != null && message.hasOwnProperty("start_ordinal"))
                if (!$util.isInteger(message.start_ordinal))
                    return "start_ordinal: integer expected";
            if (message.max_count != null && message.hasOwnProperty("max_count"))
                if (!$util.isInteger(message.max_count))
                    return "max_count: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageHistory_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageHistory_Request} CChatRoom_GetMessageHistory_Request
         */
        CChatRoom_GetMessageHistory_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageHistory_Request)
                return object;
            var message = new $root.CChatRoom_GetMessageHistory_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.last_time != null)
                message.last_time = object.last_time >>> 0;
            if (object.last_ordinal != null)
                message.last_ordinal = object.last_ordinal >>> 0;
            if (object.start_time != null)
                message.start_time = object.start_time >>> 0;
            if (object.start_ordinal != null)
                message.start_ordinal = object.start_ordinal >>> 0;
            if (object.max_count != null)
                message.max_count = object.max_count >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageHistory_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageHistory_Request
         * @static
         * @param {CChatRoom_GetMessageHistory_Request} message CChatRoom_GetMessageHistory_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageHistory_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.last_time = 0;
                object.last_ordinal = 0;
                object.start_time = 0;
                object.start_ordinal = 0;
                object.max_count = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.last_time != null && message.hasOwnProperty("last_time"))
                object.last_time = message.last_time;
            if (message.last_ordinal != null && message.hasOwnProperty("last_ordinal"))
                object.last_ordinal = message.last_ordinal;
            if (message.start_time != null && message.hasOwnProperty("start_time"))
                object.start_time = message.start_time;
            if (message.start_ordinal != null && message.hasOwnProperty("start_ordinal"))
                object.start_ordinal = message.start_ordinal;
            if (message.max_count != null && message.hasOwnProperty("max_count"))
                object.max_count = message.max_count;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageHistory_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageHistory_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageHistory_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageHistory_Request;
    })();
    
    $root.CChatRoom_GetMessageHistory_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageHistory_Response.
         * @exports ICChatRoom_GetMessageHistory_Response
         * @interface ICChatRoom_GetMessageHistory_Response
         * @property {Array.<ICChatRoom_GetMessageHistory_Response_ChatMessage>|null} [messages] CChatRoom_GetMessageHistory_Response messages
         * @property {boolean|null} [more_available] CChatRoom_GetMessageHistory_Response more_available
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageHistory_Response.
         * @exports CChatRoom_GetMessageHistory_Response
         * @classdesc Represents a CChatRoom_GetMessageHistory_Response.
         * @implements ICChatRoom_GetMessageHistory_Response
         * @constructor
         * @param {ICChatRoom_GetMessageHistory_Response=} [properties] Properties to set
         */
        function CChatRoom_GetMessageHistory_Response(properties) {
            this.messages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageHistory_Response messages.
         * @member {Array.<ICChatRoom_GetMessageHistory_Response_ChatMessage>} messages
         * @memberof CChatRoom_GetMessageHistory_Response
         * @instance
         */
        CChatRoom_GetMessageHistory_Response.prototype.messages = $util.emptyArray;
    
        /**
         * CChatRoom_GetMessageHistory_Response more_available.
         * @member {boolean} more_available
         * @memberof CChatRoom_GetMessageHistory_Response
         * @instance
         */
        CChatRoom_GetMessageHistory_Response.prototype.more_available = false;
    
        /**
         * Creates a new CChatRoom_GetMessageHistory_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageHistory_Response} CChatRoom_GetMessageHistory_Response instance
         */
        CChatRoom_GetMessageHistory_Response.create = function create(properties) {
            return new CChatRoom_GetMessageHistory_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response message. Does not implicitly {@link CChatRoom_GetMessageHistory_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response} message CChatRoom_GetMessageHistory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.messages != null && message.messages.length)
                for (var i = 0; i < message.messages.length; ++i)
                    $root.CChatRoom_GetMessageHistory_Response_ChatMessage.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.more_available != null && message.hasOwnProperty("more_available"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.more_available);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response message, length delimited. Does not implicitly {@link CChatRoom_GetMessageHistory_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response} message CChatRoom_GetMessageHistory_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageHistory_Response} CChatRoom_GetMessageHistory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageHistory_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.messages && message.messages.length))
                        message.messages = [];
                    message.messages.push($root.CChatRoom_GetMessageHistory_Response_ChatMessage.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.more_available = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageHistory_Response} CChatRoom_GetMessageHistory_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageHistory_Response message.
         * @function verify
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageHistory_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.messages != null && message.hasOwnProperty("messages")) {
                if (!Array.isArray(message.messages))
                    return "messages: array expected";
                for (var i = 0; i < message.messages.length; ++i) {
                    var error = $root.CChatRoom_GetMessageHistory_Response_ChatMessage.verify(message.messages[i]);
                    if (error)
                        return "messages." + error;
                }
            }
            if (message.more_available != null && message.hasOwnProperty("more_available"))
                if (typeof message.more_available !== "boolean")
                    return "more_available: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageHistory_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageHistory_Response} CChatRoom_GetMessageHistory_Response
         */
        CChatRoom_GetMessageHistory_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageHistory_Response)
                return object;
            var message = new $root.CChatRoom_GetMessageHistory_Response();
            if (object.messages) {
                if (!Array.isArray(object.messages))
                    throw TypeError(".CChatRoom_GetMessageHistory_Response.messages: array expected");
                message.messages = [];
                for (var i = 0; i < object.messages.length; ++i) {
                    if (typeof object.messages[i] !== "object")
                        throw TypeError(".CChatRoom_GetMessageHistory_Response.messages: object expected");
                    message.messages[i] = $root.CChatRoom_GetMessageHistory_Response_ChatMessage.fromObject(object.messages[i]);
                }
            }
            if (object.more_available != null)
                message.more_available = Boolean(object.more_available);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageHistory_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageHistory_Response
         * @static
         * @param {CChatRoom_GetMessageHistory_Response} message CChatRoom_GetMessageHistory_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageHistory_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.messages = [];
            if (options.defaults)
                object.more_available = false;
            if (message.messages && message.messages.length) {
                object.messages = [];
                for (var j = 0; j < message.messages.length; ++j)
                    object.messages[j] = $root.CChatRoom_GetMessageHistory_Response_ChatMessage.toObject(message.messages[j], options);
            }
            if (message.more_available != null && message.hasOwnProperty("more_available"))
                object.more_available = message.more_available;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageHistory_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageHistory_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageHistory_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageHistory_Response;
    })();
    
    $root.CChatRoom_GetMessageHistory_Response_ChatMessage = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageHistory_Response_ChatMessage.
         * @exports ICChatRoom_GetMessageHistory_Response_ChatMessage
         * @interface ICChatRoom_GetMessageHistory_Response_ChatMessage
         * @property {number|null} [sender] CChatRoom_GetMessageHistory_Response_ChatMessage sender
         * @property {number|null} [server_timestamp] CChatRoom_GetMessageHistory_Response_ChatMessage server_timestamp
         * @property {string|null} [message] CChatRoom_GetMessageHistory_Response_ChatMessage message
         * @property {number|null} [ordinal] CChatRoom_GetMessageHistory_Response_ChatMessage ordinal
         * @property {IServerMessage|null} [server_message] CChatRoom_GetMessageHistory_Response_ChatMessage server_message
         * @property {boolean|null} [deleted] CChatRoom_GetMessageHistory_Response_ChatMessage deleted
         * @property {Array.<ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction>|null} [reactions] CChatRoom_GetMessageHistory_Response_ChatMessage reactions
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageHistory_Response_ChatMessage.
         * @exports CChatRoom_GetMessageHistory_Response_ChatMessage
         * @classdesc Represents a CChatRoom_GetMessageHistory_Response_ChatMessage.
         * @implements ICChatRoom_GetMessageHistory_Response_ChatMessage
         * @constructor
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage=} [properties] Properties to set
         */
        function CChatRoom_GetMessageHistory_Response_ChatMessage(properties) {
            this.reactions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage sender.
         * @member {number} sender
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.sender = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage message.
         * @member {string} message
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.message = "";
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.ordinal = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage server_message.
         * @member {IServerMessage|null|undefined} server_message
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.server_message = null;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage deleted.
         * @member {boolean} deleted
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.deleted = false;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage reactions.
         * @member {Array.<ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction>} reactions
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.reactions = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetMessageHistory_Response_ChatMessage instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage} CChatRoom_GetMessageHistory_Response_ChatMessage instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.create = function create(properties) {
            return new CChatRoom_GetMessageHistory_Response_ChatMessage(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response_ChatMessage message. Does not implicitly {@link CChatRoom_GetMessageHistory_Response_ChatMessage.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage} message CChatRoom_GetMessageHistory_Response_ChatMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sender != null && message.hasOwnProperty("sender"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sender);
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_timestamp);
            if (message.message != null && message.hasOwnProperty("message"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ordinal);
            if (message.server_message != null && message.hasOwnProperty("server_message"))
                $root.ServerMessage.encode(message.server_message, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deleted);
            if (message.reactions != null && message.reactions.length)
                for (var i = 0; i < message.reactions.length; ++i)
                    $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.encode(message.reactions[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response_ChatMessage message, length delimited. Does not implicitly {@link CChatRoom_GetMessageHistory_Response_ChatMessage.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage} message CChatRoom_GetMessageHistory_Response_ChatMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response_ChatMessage message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage} CChatRoom_GetMessageHistory_Response_ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageHistory_Response_ChatMessage();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.sender = reader.uint32();
                    break;
                case 2:
                    message.server_timestamp = reader.uint32();
                    break;
                case 3:
                    message.message = reader.string();
                    break;
                case 4:
                    message.ordinal = reader.uint32();
                    break;
                case 5:
                    message.server_message = $root.ServerMessage.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.deleted = reader.bool();
                    break;
                case 7:
                    if (!(message.reactions && message.reactions.length))
                        message.reactions = [];
                    message.reactions.push($root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response_ChatMessage message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage} CChatRoom_GetMessageHistory_Response_ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageHistory_Response_ChatMessage message.
         * @function verify
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sender != null && message.hasOwnProperty("sender"))
                if (!$util.isInteger(message.sender))
                    return "sender: integer expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.server_message != null && message.hasOwnProperty("server_message")) {
                var error = $root.ServerMessage.verify(message.server_message);
                if (error)
                    return "server_message." + error;
            }
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                if (typeof message.deleted !== "boolean")
                    return "deleted: boolean expected";
            if (message.reactions != null && message.hasOwnProperty("reactions")) {
                if (!Array.isArray(message.reactions))
                    return "reactions: array expected";
                for (var i = 0; i < message.reactions.length; ++i) {
                    var error = $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.verify(message.reactions[i]);
                    if (error)
                        return "reactions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageHistory_Response_ChatMessage message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage} CChatRoom_GetMessageHistory_Response_ChatMessage
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageHistory_Response_ChatMessage)
                return object;
            var message = new $root.CChatRoom_GetMessageHistory_Response_ChatMessage();
            if (object.sender != null)
                message.sender = object.sender >>> 0;
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.message != null)
                message.message = String(object.message);
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.server_message != null) {
                if (typeof object.server_message !== "object")
                    throw TypeError(".CChatRoom_GetMessageHistory_Response_ChatMessage.server_message: object expected");
                message.server_message = $root.ServerMessage.fromObject(object.server_message);
            }
            if (object.deleted != null)
                message.deleted = Boolean(object.deleted);
            if (object.reactions) {
                if (!Array.isArray(object.reactions))
                    throw TypeError(".CChatRoom_GetMessageHistory_Response_ChatMessage.reactions: array expected");
                message.reactions = [];
                for (var i = 0; i < object.reactions.length; ++i) {
                    if (typeof object.reactions[i] !== "object")
                        throw TypeError(".CChatRoom_GetMessageHistory_Response_ChatMessage.reactions: object expected");
                    message.reactions[i] = $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.fromObject(object.reactions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageHistory_Response_ChatMessage message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @static
         * @param {CChatRoom_GetMessageHistory_Response_ChatMessage} message CChatRoom_GetMessageHistory_Response_ChatMessage
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.reactions = [];
            if (options.defaults) {
                object.sender = 0;
                object.server_timestamp = 0;
                object.message = "";
                object.ordinal = 0;
                object.server_message = null;
                object.deleted = false;
            }
            if (message.sender != null && message.hasOwnProperty("sender"))
                object.sender = message.sender;
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.server_message != null && message.hasOwnProperty("server_message"))
                object.server_message = $root.ServerMessage.toObject(message.server_message, options);
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                object.deleted = message.deleted;
            if (message.reactions && message.reactions.length) {
                object.reactions = [];
                for (var j = 0; j < message.reactions.length; ++j)
                    object.reactions[j] = $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.toObject(message.reactions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageHistory_Response_ChatMessage to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageHistory_Response_ChatMessage;
    })();
    
    $root.ServerMessage = (function() {
    
        /**
         * Properties of a ServerMessage.
         * @exports IServerMessage
         * @interface IServerMessage
         * @property {number|null} [message] ServerMessage message
         * @property {string|null} [string_param] ServerMessage string_param
         * @property {number|null} [accountid_param] ServerMessage accountid_param
         */
    
        /**
         * Constructs a new ServerMessage.
         * @exports ServerMessage
         * @classdesc Represents a ServerMessage.
         * @implements IServerMessage
         * @constructor
         * @param {IServerMessage=} [properties] Properties to set
         */
        function ServerMessage(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * ServerMessage message.
         * @member {number} message
         * @memberof ServerMessage
         * @instance
         */
        ServerMessage.prototype.message = 0;
    
        /**
         * ServerMessage string_param.
         * @member {string} string_param
         * @memberof ServerMessage
         * @instance
         */
        ServerMessage.prototype.string_param = "";
    
        /**
         * ServerMessage accountid_param.
         * @member {number} accountid_param
         * @memberof ServerMessage
         * @instance
         */
        ServerMessage.prototype.accountid_param = 0;
    
        /**
         * Creates a new ServerMessage instance using the specified properties.
         * @function create
         * @memberof ServerMessage
         * @static
         * @param {IServerMessage=} [properties] Properties to set
         * @returns {ServerMessage} ServerMessage instance
         */
        ServerMessage.create = function create(properties) {
            return new ServerMessage(properties);
        };
    
        /**
         * Encodes the specified ServerMessage message. Does not implicitly {@link ServerMessage.verify|verify} messages.
         * @function encode
         * @memberof ServerMessage
         * @static
         * @param {IServerMessage} message ServerMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ServerMessage.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.message != null && message.hasOwnProperty("message"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.message);
            if (message.string_param != null && message.hasOwnProperty("string_param"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.string_param);
            if (message.accountid_param != null && message.hasOwnProperty("accountid_param"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.accountid_param);
            return writer;
        };
    
        /**
         * Encodes the specified ServerMessage message, length delimited. Does not implicitly {@link ServerMessage.verify|verify} messages.
         * @function encodeDelimited
         * @memberof ServerMessage
         * @static
         * @param {IServerMessage} message ServerMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ServerMessage.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a ServerMessage message from the specified reader or buffer.
         * @function decode
         * @memberof ServerMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {ServerMessage} ServerMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ServerMessage.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ServerMessage();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.message = reader.int32();
                    break;
                case 2:
                    message.string_param = reader.string();
                    break;
                case 3:
                    message.accountid_param = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a ServerMessage message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof ServerMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {ServerMessage} ServerMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ServerMessage.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a ServerMessage message.
         * @function verify
         * @memberof ServerMessage
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        ServerMessage.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isInteger(message.message))
                    return "message: integer expected";
            if (message.string_param != null && message.hasOwnProperty("string_param"))
                if (!$util.isString(message.string_param))
                    return "string_param: string expected";
            if (message.accountid_param != null && message.hasOwnProperty("accountid_param"))
                if (!$util.isInteger(message.accountid_param))
                    return "accountid_param: integer expected";
            return null;
        };
    
        /**
         * Creates a ServerMessage message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof ServerMessage
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {ServerMessage} ServerMessage
         */
        ServerMessage.fromObject = function fromObject(object) {
            if (object instanceof $root.ServerMessage)
                return object;
            var message = new $root.ServerMessage();
            if (object.message != null)
                message.message = object.message | 0;
            if (object.string_param != null)
                message.string_param = String(object.string_param);
            if (object.accountid_param != null)
                message.accountid_param = object.accountid_param >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a ServerMessage message. Also converts values to other types if specified.
         * @function toObject
         * @memberof ServerMessage
         * @static
         * @param {ServerMessage} message ServerMessage
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        ServerMessage.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.message = 0;
                object.string_param = "";
                object.accountid_param = 0;
            }
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            if (message.string_param != null && message.hasOwnProperty("string_param"))
                object.string_param = message.string_param;
            if (message.accountid_param != null && message.hasOwnProperty("accountid_param"))
                object.accountid_param = message.accountid_param;
            return object;
        };
    
        /**
         * Converts this ServerMessage to JSON.
         * @function toJSON
         * @memberof ServerMessage
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        ServerMessage.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return ServerMessage;
    })();
    
    $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.
         * @exports ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @interface ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @property {number|null} [reaction_type] CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction reaction_type
         * @property {string|null} [reaction] CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction reaction
         * @property {number|null} [num_reactors] CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction num_reactors
         * @property {boolean|null} [has_user_reacted] CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction has_user_reacted
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.
         * @exports CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @classdesc Represents a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.
         * @implements ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @constructor
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction=} [properties] Properties to set
         */
        function CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction reaction_type.
         * @member {number} reaction_type
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.prototype.reaction_type = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction reaction.
         * @member {string} reaction
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.prototype.reaction = "";
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction num_reactors.
         * @member {number} num_reactors
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.prototype.num_reactors = 0;
    
        /**
         * CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction has_user_reacted.
         * @member {boolean} has_user_reacted
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.prototype.has_user_reacted = false;
    
        /**
         * Creates a new CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction instance
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.create = function create(properties) {
            return new CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message. Does not implicitly {@link CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} message CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.reaction_type);
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.reaction);
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.num_reactors);
            if (message.has_user_reacted != null && message.hasOwnProperty("has_user_reacted"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.has_user_reacted);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message, length delimited. Does not implicitly {@link CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {ICChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} message CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.reaction_type = reader.int32();
                    break;
                case 2:
                    message.reaction = reader.string();
                    break;
                case 3:
                    message.num_reactors = reader.uint32();
                    break;
                case 4:
                    message.has_user_reacted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message.
         * @function verify
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                if (!$util.isInteger(message.reaction_type))
                    return "reaction_type: integer expected";
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                if (!$util.isString(message.reaction))
                    return "reaction: string expected";
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                if (!$util.isInteger(message.num_reactors))
                    return "num_reactors: integer expected";
            if (message.has_user_reacted != null && message.hasOwnProperty("has_user_reacted"))
                if (typeof message.has_user_reacted !== "boolean")
                    return "has_user_reacted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction)
                return object;
            var message = new $root.CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction();
            if (object.reaction_type != null)
                message.reaction_type = object.reaction_type | 0;
            if (object.reaction != null)
                message.reaction = String(object.reaction);
            if (object.num_reactors != null)
                message.num_reactors = object.num_reactors >>> 0;
            if (object.has_user_reacted != null)
                message.has_user_reacted = Boolean(object.has_user_reacted);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @static
         * @param {CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction} message CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.reaction_type = 0;
                object.reaction = "";
                object.num_reactors = 0;
                object.has_user_reacted = false;
            }
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                object.reaction_type = message.reaction_type;
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                object.reaction = message.reaction;
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                object.num_reactors = message.num_reactors;
            if (message.has_user_reacted != null && message.hasOwnProperty("has_user_reacted"))
                object.has_user_reacted = message.has_user_reacted;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageHistory_Response_ChatMessage_MessageReaction;
    })();
    
    $root.CChatRoom_GetMyChatRoomGroups_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetMyChatRoomGroups_Request.
         * @exports ICChatRoom_GetMyChatRoomGroups_Request
         * @interface ICChatRoom_GetMyChatRoomGroups_Request
         */
    
        /**
         * Constructs a new CChatRoom_GetMyChatRoomGroups_Request.
         * @exports CChatRoom_GetMyChatRoomGroups_Request
         * @classdesc Represents a CChatRoom_GetMyChatRoomGroups_Request.
         * @implements ICChatRoom_GetMyChatRoomGroups_Request
         * @constructor
         * @param {ICChatRoom_GetMyChatRoomGroups_Request=} [properties] Properties to set
         */
        function CChatRoom_GetMyChatRoomGroups_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_GetMyChatRoomGroups_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetMyChatRoomGroups_Request} CChatRoom_GetMyChatRoomGroups_Request instance
         */
        CChatRoom_GetMyChatRoomGroups_Request.create = function create(properties) {
            return new CChatRoom_GetMyChatRoomGroups_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMyChatRoomGroups_Request message. Does not implicitly {@link CChatRoom_GetMyChatRoomGroups_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Request} message CChatRoom_GetMyChatRoomGroups_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMyChatRoomGroups_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMyChatRoomGroups_Request message, length delimited. Does not implicitly {@link CChatRoom_GetMyChatRoomGroups_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Request} message CChatRoom_GetMyChatRoomGroups_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMyChatRoomGroups_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMyChatRoomGroups_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMyChatRoomGroups_Request} CChatRoom_GetMyChatRoomGroups_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMyChatRoomGroups_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMyChatRoomGroups_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMyChatRoomGroups_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMyChatRoomGroups_Request} CChatRoom_GetMyChatRoomGroups_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMyChatRoomGroups_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMyChatRoomGroups_Request message.
         * @function verify
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMyChatRoomGroups_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMyChatRoomGroups_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMyChatRoomGroups_Request} CChatRoom_GetMyChatRoomGroups_Request
         */
        CChatRoom_GetMyChatRoomGroups_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMyChatRoomGroups_Request)
                return object;
            return new $root.CChatRoom_GetMyChatRoomGroups_Request();
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMyChatRoomGroups_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @static
         * @param {CChatRoom_GetMyChatRoomGroups_Request} message CChatRoom_GetMyChatRoomGroups_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMyChatRoomGroups_Request.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_GetMyChatRoomGroups_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMyChatRoomGroups_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMyChatRoomGroups_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMyChatRoomGroups_Request;
    })();
    
    $root.CChatRoom_GetMyChatRoomGroups_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetMyChatRoomGroups_Response.
         * @exports ICChatRoom_GetMyChatRoomGroups_Response
         * @interface ICChatRoom_GetMyChatRoomGroups_Response
         * @property {Array.<ICChatRoomSummaryPair>|null} [chat_room_groups] CChatRoom_GetMyChatRoomGroups_Response chat_room_groups
         */
    
        /**
         * Constructs a new CChatRoom_GetMyChatRoomGroups_Response.
         * @exports CChatRoom_GetMyChatRoomGroups_Response
         * @classdesc Represents a CChatRoom_GetMyChatRoomGroups_Response.
         * @implements ICChatRoom_GetMyChatRoomGroups_Response
         * @constructor
         * @param {ICChatRoom_GetMyChatRoomGroups_Response=} [properties] Properties to set
         */
        function CChatRoom_GetMyChatRoomGroups_Response(properties) {
            this.chat_room_groups = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMyChatRoomGroups_Response chat_room_groups.
         * @member {Array.<ICChatRoomSummaryPair>} chat_room_groups
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @instance
         */
        CChatRoom_GetMyChatRoomGroups_Response.prototype.chat_room_groups = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetMyChatRoomGroups_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetMyChatRoomGroups_Response} CChatRoom_GetMyChatRoomGroups_Response instance
         */
        CChatRoom_GetMyChatRoomGroups_Response.create = function create(properties) {
            return new CChatRoom_GetMyChatRoomGroups_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMyChatRoomGroups_Response message. Does not implicitly {@link CChatRoom_GetMyChatRoomGroups_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Response} message CChatRoom_GetMyChatRoomGroups_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMyChatRoomGroups_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_room_groups != null && message.chat_room_groups.length)
                for (var i = 0; i < message.chat_room_groups.length; ++i)
                    $root.CChatRoomSummaryPair.encode(message.chat_room_groups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMyChatRoomGroups_Response message, length delimited. Does not implicitly {@link CChatRoom_GetMyChatRoomGroups_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_GetMyChatRoomGroups_Response} message CChatRoom_GetMyChatRoomGroups_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMyChatRoomGroups_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMyChatRoomGroups_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMyChatRoomGroups_Response} CChatRoom_GetMyChatRoomGroups_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMyChatRoomGroups_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMyChatRoomGroups_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.chat_room_groups && message.chat_room_groups.length))
                        message.chat_room_groups = [];
                    message.chat_room_groups.push($root.CChatRoomSummaryPair.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMyChatRoomGroups_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMyChatRoomGroups_Response} CChatRoom_GetMyChatRoomGroups_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMyChatRoomGroups_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMyChatRoomGroups_Response message.
         * @function verify
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMyChatRoomGroups_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_room_groups != null && message.hasOwnProperty("chat_room_groups")) {
                if (!Array.isArray(message.chat_room_groups))
                    return "chat_room_groups: array expected";
                for (var i = 0; i < message.chat_room_groups.length; ++i) {
                    var error = $root.CChatRoomSummaryPair.verify(message.chat_room_groups[i]);
                    if (error)
                        return "chat_room_groups." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMyChatRoomGroups_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMyChatRoomGroups_Response} CChatRoom_GetMyChatRoomGroups_Response
         */
        CChatRoom_GetMyChatRoomGroups_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMyChatRoomGroups_Response)
                return object;
            var message = new $root.CChatRoom_GetMyChatRoomGroups_Response();
            if (object.chat_room_groups) {
                if (!Array.isArray(object.chat_room_groups))
                    throw TypeError(".CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups: array expected");
                message.chat_room_groups = [];
                for (var i = 0; i < object.chat_room_groups.length; ++i) {
                    if (typeof object.chat_room_groups[i] !== "object")
                        throw TypeError(".CChatRoom_GetMyChatRoomGroups_Response.chat_room_groups: object expected");
                    message.chat_room_groups[i] = $root.CChatRoomSummaryPair.fromObject(object.chat_room_groups[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMyChatRoomGroups_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @static
         * @param {CChatRoom_GetMyChatRoomGroups_Response} message CChatRoom_GetMyChatRoomGroups_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMyChatRoomGroups_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.chat_room_groups = [];
            if (message.chat_room_groups && message.chat_room_groups.length) {
                object.chat_room_groups = [];
                for (var j = 0; j < message.chat_room_groups.length; ++j)
                    object.chat_room_groups[j] = $root.CChatRoomSummaryPair.toObject(message.chat_room_groups[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMyChatRoomGroups_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMyChatRoomGroups_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMyChatRoomGroups_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMyChatRoomGroups_Response;
    })();
    
    $root.CChatRoomSummaryPair = (function() {
    
        /**
         * Properties of a CChatRoomSummaryPair.
         * @exports ICChatRoomSummaryPair
         * @interface ICChatRoomSummaryPair
         * @property {ICUserChatRoomGroupState|null} [user_chat_group_state] CChatRoomSummaryPair user_chat_group_state
         * @property {ICChatRoom_GetChatRoomGroupSummary_Response|null} [group_summary] CChatRoomSummaryPair group_summary
         */
    
        /**
         * Constructs a new CChatRoomSummaryPair.
         * @exports CChatRoomSummaryPair
         * @classdesc Represents a CChatRoomSummaryPair.
         * @implements ICChatRoomSummaryPair
         * @constructor
         * @param {ICChatRoomSummaryPair=} [properties] Properties to set
         */
        function CChatRoomSummaryPair(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomSummaryPair user_chat_group_state.
         * @member {ICUserChatRoomGroupState|null|undefined} user_chat_group_state
         * @memberof CChatRoomSummaryPair
         * @instance
         */
        CChatRoomSummaryPair.prototype.user_chat_group_state = null;
    
        /**
         * CChatRoomSummaryPair group_summary.
         * @member {ICChatRoom_GetChatRoomGroupSummary_Response|null|undefined} group_summary
         * @memberof CChatRoomSummaryPair
         * @instance
         */
        CChatRoomSummaryPair.prototype.group_summary = null;
    
        /**
         * Creates a new CChatRoomSummaryPair instance using the specified properties.
         * @function create
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {ICChatRoomSummaryPair=} [properties] Properties to set
         * @returns {CChatRoomSummaryPair} CChatRoomSummaryPair instance
         */
        CChatRoomSummaryPair.create = function create(properties) {
            return new CChatRoomSummaryPair(properties);
        };
    
        /**
         * Encodes the specified CChatRoomSummaryPair message. Does not implicitly {@link CChatRoomSummaryPair.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {ICChatRoomSummaryPair} message CChatRoomSummaryPair message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomSummaryPair.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                $root.CUserChatRoomGroupState.encode(message.user_chat_group_state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                $root.CChatRoom_GetChatRoomGroupSummary_Response.encode(message.group_summary, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomSummaryPair message, length delimited. Does not implicitly {@link CChatRoomSummaryPair.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {ICChatRoomSummaryPair} message CChatRoomSummaryPair message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomSummaryPair.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomSummaryPair message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomSummaryPair} CChatRoomSummaryPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomSummaryPair.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomSummaryPair();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.user_chat_group_state = $root.CUserChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomSummaryPair message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomSummaryPair} CChatRoomSummaryPair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomSummaryPair.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomSummaryPair message.
         * @function verify
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomSummaryPair.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state")) {
                var error = $root.CUserChatRoomGroupState.verify(message.user_chat_group_state);
                if (error)
                    return "user_chat_group_state." + error;
            }
            if (message.group_summary != null && message.hasOwnProperty("group_summary")) {
                var error = $root.CChatRoom_GetChatRoomGroupSummary_Response.verify(message.group_summary);
                if (error)
                    return "group_summary." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoomSummaryPair message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomSummaryPair} CChatRoomSummaryPair
         */
        CChatRoomSummaryPair.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomSummaryPair)
                return object;
            var message = new $root.CChatRoomSummaryPair();
            if (object.user_chat_group_state != null) {
                if (typeof object.user_chat_group_state !== "object")
                    throw TypeError(".CChatRoomSummaryPair.user_chat_group_state: object expected");
                message.user_chat_group_state = $root.CUserChatRoomGroupState.fromObject(object.user_chat_group_state);
            }
            if (object.group_summary != null) {
                if (typeof object.group_summary !== "object")
                    throw TypeError(".CChatRoomSummaryPair.group_summary: object expected");
                message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.fromObject(object.group_summary);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomSummaryPair message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomSummaryPair
         * @static
         * @param {CChatRoomSummaryPair} message CChatRoomSummaryPair
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomSummaryPair.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.user_chat_group_state = null;
                object.group_summary = null;
            }
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                object.user_chat_group_state = $root.CUserChatRoomGroupState.toObject(message.user_chat_group_state, options);
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                object.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.toObject(message.group_summary, options);
            return object;
        };
    
        /**
         * Converts this CChatRoomSummaryPair to JSON.
         * @function toJSON
         * @memberof CChatRoomSummaryPair
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomSummaryPair.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomSummaryPair;
    })();
    
    $root.CChatRoom_GetChatRoomGroupState_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetChatRoomGroupState_Response.
         * @exports ICChatRoom_GetChatRoomGroupState_Response
         * @interface ICChatRoom_GetChatRoomGroupState_Response
         * @property {ICChatRoomGroupState|null} [state] CChatRoom_GetChatRoomGroupState_Response state
         */
    
        /**
         * Constructs a new CChatRoom_GetChatRoomGroupState_Response.
         * @exports CChatRoom_GetChatRoomGroupState_Response
         * @classdesc Represents a CChatRoom_GetChatRoomGroupState_Response.
         * @implements ICChatRoom_GetChatRoomGroupState_Response
         * @constructor
         * @param {ICChatRoom_GetChatRoomGroupState_Response=} [properties] Properties to set
         */
        function CChatRoom_GetChatRoomGroupState_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetChatRoomGroupState_Response state.
         * @member {ICChatRoomGroupState|null|undefined} state
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupState_Response.prototype.state = null;
    
        /**
         * Creates a new CChatRoom_GetChatRoomGroupState_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupState_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetChatRoomGroupState_Response} CChatRoom_GetChatRoomGroupState_Response instance
         */
        CChatRoom_GetChatRoomGroupState_Response.create = function create(properties) {
            return new CChatRoom_GetChatRoomGroupState_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetChatRoomGroupState_Response message. Does not implicitly {@link CChatRoom_GetChatRoomGroupState_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupState_Response} message CChatRoom_GetChatRoomGroupState_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetChatRoomGroupState_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.state != null && message.hasOwnProperty("state"))
                $root.CChatRoomGroupState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetChatRoomGroupState_Response message, length delimited. Does not implicitly {@link CChatRoom_GetChatRoomGroupState_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupState_Response} message CChatRoom_GetChatRoomGroupState_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetChatRoomGroupState_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetChatRoomGroupState_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetChatRoomGroupState_Response} CChatRoom_GetChatRoomGroupState_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetChatRoomGroupState_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetChatRoomGroupState_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.state = $root.CChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetChatRoomGroupState_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetChatRoomGroupState_Response} CChatRoom_GetChatRoomGroupState_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetChatRoomGroupState_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetChatRoomGroupState_Response message.
         * @function verify
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetChatRoomGroupState_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.state != null && message.hasOwnProperty("state")) {
                var error = $root.CChatRoomGroupState.verify(message.state);
                if (error)
                    return "state." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetChatRoomGroupState_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetChatRoomGroupState_Response} CChatRoom_GetChatRoomGroupState_Response
         */
        CChatRoom_GetChatRoomGroupState_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetChatRoomGroupState_Response)
                return object;
            var message = new $root.CChatRoom_GetChatRoomGroupState_Response();
            if (object.state != null) {
                if (typeof object.state !== "object")
                    throw TypeError(".CChatRoom_GetChatRoomGroupState_Response.state: object expected");
                message.state = $root.CChatRoomGroupState.fromObject(object.state);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetChatRoomGroupState_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @static
         * @param {CChatRoom_GetChatRoomGroupState_Response} message CChatRoom_GetChatRoomGroupState_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetChatRoomGroupState_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.state = null;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = $root.CChatRoomGroupState.toObject(message.state, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetChatRoomGroupState_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetChatRoomGroupState_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetChatRoomGroupState_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetChatRoomGroupState_Response;
    })();
    
    $root.CChatRoom_SetAppChatRoomGroupForceActive_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetAppChatRoomGroupForceActive_Response.
         * @exports ICChatRoom_SetAppChatRoomGroupForceActive_Response
         * @interface ICChatRoom_SetAppChatRoomGroupForceActive_Response
         * @property {number|null} [result] CChatRoom_SetAppChatRoomGroupForceActive_Response result
         * @property {Array.<number>|null} [accounts_in_channel] CChatRoom_SetAppChatRoomGroupForceActive_Response accounts_in_channel
         */
    
        /**
         * Constructs a new CChatRoom_SetAppChatRoomGroupForceActive_Response.
         * @exports CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @classdesc Represents a CChatRoom_SetAppChatRoomGroupForceActive_Response.
         * @implements ICChatRoom_SetAppChatRoomGroupForceActive_Response
         * @constructor
         * @param {ICChatRoom_SetAppChatRoomGroupForceActive_Response=} [properties] Properties to set
         */
        function CChatRoom_SetAppChatRoomGroupForceActive_Response(properties) {
            this.accounts_in_channel = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetAppChatRoomGroupForceActive_Response result.
         * @member {number} result
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @instance
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.prototype.result = 0;
    
        /**
         * CChatRoom_SetAppChatRoomGroupForceActive_Response accounts_in_channel.
         * @member {Array.<number>} accounts_in_channel
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @instance
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.prototype.accounts_in_channel = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_SetAppChatRoomGroupForceActive_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {ICChatRoom_SetAppChatRoomGroupForceActive_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetAppChatRoomGroupForceActive_Response} CChatRoom_SetAppChatRoomGroupForceActive_Response instance
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.create = function create(properties) {
            return new CChatRoom_SetAppChatRoomGroupForceActive_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetAppChatRoomGroupForceActive_Response message. Does not implicitly {@link CChatRoom_SetAppChatRoomGroupForceActive_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {ICChatRoom_SetAppChatRoomGroupForceActive_Response} message CChatRoom_SetAppChatRoomGroupForceActive_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && message.hasOwnProperty("result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            if (message.accounts_in_channel != null && message.accounts_in_channel.length)
                for (var i = 0; i < message.accounts_in_channel.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accounts_in_channel[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetAppChatRoomGroupForceActive_Response message, length delimited. Does not implicitly {@link CChatRoom_SetAppChatRoomGroupForceActive_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {ICChatRoom_SetAppChatRoomGroupForceActive_Response} message CChatRoom_SetAppChatRoomGroupForceActive_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetAppChatRoomGroupForceActive_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetAppChatRoomGroupForceActive_Response} CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetAppChatRoomGroupForceActive_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.result = reader.uint32();
                    break;
                case 2:
                    if (!(message.accounts_in_channel && message.accounts_in_channel.length))
                        message.accounts_in_channel = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.accounts_in_channel.push(reader.uint32());
                    } else
                        message.accounts_in_channel.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetAppChatRoomGroupForceActive_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetAppChatRoomGroupForceActive_Response} CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetAppChatRoomGroupForceActive_Response message.
         * @function verify
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.accounts_in_channel != null && message.hasOwnProperty("accounts_in_channel")) {
                if (!Array.isArray(message.accounts_in_channel))
                    return "accounts_in_channel: array expected";
                for (var i = 0; i < message.accounts_in_channel.length; ++i)
                    if (!$util.isInteger(message.accounts_in_channel[i]))
                        return "accounts_in_channel: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetAppChatRoomGroupForceActive_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetAppChatRoomGroupForceActive_Response} CChatRoom_SetAppChatRoomGroupForceActive_Response
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetAppChatRoomGroupForceActive_Response)
                return object;
            var message = new $root.CChatRoom_SetAppChatRoomGroupForceActive_Response();
            if (object.result != null)
                message.result = object.result >>> 0;
            if (object.accounts_in_channel) {
                if (!Array.isArray(object.accounts_in_channel))
                    throw TypeError(".CChatRoom_SetAppChatRoomGroupForceActive_Response.accounts_in_channel: array expected");
                message.accounts_in_channel = [];
                for (var i = 0; i < object.accounts_in_channel.length; ++i)
                    message.accounts_in_channel[i] = object.accounts_in_channel[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetAppChatRoomGroupForceActive_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @static
         * @param {CChatRoom_SetAppChatRoomGroupForceActive_Response} message CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.accounts_in_channel = [];
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.accounts_in_channel && message.accounts_in_channel.length) {
                object.accounts_in_channel = [];
                for (var j = 0; j < message.accounts_in_channel.length; ++j)
                    object.accounts_in_channel[j] = message.accounts_in_channel[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetAppChatRoomGroupForceActive_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetAppChatRoomGroupForceActive_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetAppChatRoomGroupForceActive_Response;
    })();
    
    $root.CChatRoom_AckChatMessage_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_AckChatMessage_Notification.
         * @exports ICChatRoom_AckChatMessage_Notification
         * @interface ICChatRoom_AckChatMessage_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_AckChatMessage_Notification chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_AckChatMessage_Notification chat_id
         * @property {number|null} [timestamp] CChatRoom_AckChatMessage_Notification timestamp
         */
    
        /**
         * Constructs a new CChatRoom_AckChatMessage_Notification.
         * @exports CChatRoom_AckChatMessage_Notification
         * @classdesc Represents a CChatRoom_AckChatMessage_Notification.
         * @implements ICChatRoom_AckChatMessage_Notification
         * @constructor
         * @param {ICChatRoom_AckChatMessage_Notification=} [properties] Properties to set
         */
        function CChatRoom_AckChatMessage_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_AckChatMessage_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_AckChatMessage_Notification
         * @instance
         */
        CChatRoom_AckChatMessage_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_AckChatMessage_Notification chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_AckChatMessage_Notification
         * @instance
         */
        CChatRoom_AckChatMessage_Notification.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_AckChatMessage_Notification timestamp.
         * @member {number} timestamp
         * @memberof CChatRoom_AckChatMessage_Notification
         * @instance
         */
        CChatRoom_AckChatMessage_Notification.prototype.timestamp = 0;
    
        /**
         * Creates a new CChatRoom_AckChatMessage_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {ICChatRoom_AckChatMessage_Notification=} [properties] Properties to set
         * @returns {CChatRoom_AckChatMessage_Notification} CChatRoom_AckChatMessage_Notification instance
         */
        CChatRoom_AckChatMessage_Notification.create = function create(properties) {
            return new CChatRoom_AckChatMessage_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_AckChatMessage_Notification message. Does not implicitly {@link CChatRoom_AckChatMessage_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {ICChatRoom_AckChatMessage_Notification} message CChatRoom_AckChatMessage_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AckChatMessage_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_AckChatMessage_Notification message, length delimited. Does not implicitly {@link CChatRoom_AckChatMessage_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {ICChatRoom_AckChatMessage_Notification} message CChatRoom_AckChatMessage_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_AckChatMessage_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_AckChatMessage_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_AckChatMessage_Notification} CChatRoom_AckChatMessage_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AckChatMessage_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_AckChatMessage_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.timestamp = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_AckChatMessage_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_AckChatMessage_Notification} CChatRoom_AckChatMessage_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_AckChatMessage_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_AckChatMessage_Notification message.
         * @function verify
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_AckChatMessage_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_AckChatMessage_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_AckChatMessage_Notification} CChatRoom_AckChatMessage_Notification
         */
        CChatRoom_AckChatMessage_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_AckChatMessage_Notification)
                return object;
            var message = new $root.CChatRoom_AckChatMessage_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.timestamp != null)
                message.timestamp = object.timestamp >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_AckChatMessage_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_AckChatMessage_Notification
         * @static
         * @param {CChatRoom_AckChatMessage_Notification} message CChatRoom_AckChatMessage_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_AckChatMessage_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.timestamp = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                object.timestamp = message.timestamp;
            return object;
        };
    
        /**
         * Converts this CChatRoom_AckChatMessage_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_AckChatMessage_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_AckChatMessage_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_AckChatMessage_Notification;
    })();
    
    $root.CChatRoom_CreateInviteLink_Request = (function() {
    
        /**
         * Properties of a CChatRoom_CreateInviteLink_Request.
         * @exports ICChatRoom_CreateInviteLink_Request
         * @interface ICChatRoom_CreateInviteLink_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_CreateInviteLink_Request chat_group_id
         * @property {number|null} [seconds_valid] CChatRoom_CreateInviteLink_Request seconds_valid
         * @property {number|Long|null} [chat_id] CChatRoom_CreateInviteLink_Request chat_id
         */
    
        /**
         * Constructs a new CChatRoom_CreateInviteLink_Request.
         * @exports CChatRoom_CreateInviteLink_Request
         * @classdesc Represents a CChatRoom_CreateInviteLink_Request.
         * @implements ICChatRoom_CreateInviteLink_Request
         * @constructor
         * @param {ICChatRoom_CreateInviteLink_Request=} [properties] Properties to set
         */
        function CChatRoom_CreateInviteLink_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateInviteLink_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_CreateInviteLink_Request
         * @instance
         */
        CChatRoom_CreateInviteLink_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_CreateInviteLink_Request seconds_valid.
         * @member {number} seconds_valid
         * @memberof CChatRoom_CreateInviteLink_Request
         * @instance
         */
        CChatRoom_CreateInviteLink_Request.prototype.seconds_valid = 0;
    
        /**
         * CChatRoom_CreateInviteLink_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_CreateInviteLink_Request
         * @instance
         */
        CChatRoom_CreateInviteLink_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_CreateInviteLink_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {ICChatRoom_CreateInviteLink_Request=} [properties] Properties to set
         * @returns {CChatRoom_CreateInviteLink_Request} CChatRoom_CreateInviteLink_Request instance
         */
        CChatRoom_CreateInviteLink_Request.create = function create(properties) {
            return new CChatRoom_CreateInviteLink_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateInviteLink_Request message. Does not implicitly {@link CChatRoom_CreateInviteLink_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {ICChatRoom_CreateInviteLink_Request} message CChatRoom_CreateInviteLink_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateInviteLink_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seconds_valid);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateInviteLink_Request message, length delimited. Does not implicitly {@link CChatRoom_CreateInviteLink_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {ICChatRoom_CreateInviteLink_Request} message CChatRoom_CreateInviteLink_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateInviteLink_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateInviteLink_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateInviteLink_Request} CChatRoom_CreateInviteLink_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateInviteLink_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateInviteLink_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.seconds_valid = reader.uint32();
                    break;
                case 3:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateInviteLink_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateInviteLink_Request} CChatRoom_CreateInviteLink_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateInviteLink_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateInviteLink_Request message.
         * @function verify
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateInviteLink_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                if (!$util.isInteger(message.seconds_valid))
                    return "seconds_valid: integer expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateInviteLink_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateInviteLink_Request} CChatRoom_CreateInviteLink_Request
         */
        CChatRoom_CreateInviteLink_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateInviteLink_Request)
                return object;
            var message = new $root.CChatRoom_CreateInviteLink_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.seconds_valid != null)
                message.seconds_valid = object.seconds_valid >>> 0;
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateInviteLink_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateInviteLink_Request
         * @static
         * @param {CChatRoom_CreateInviteLink_Request} message CChatRoom_CreateInviteLink_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateInviteLink_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.seconds_valid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                object.seconds_valid = message.seconds_valid;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateInviteLink_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateInviteLink_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateInviteLink_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateInviteLink_Request;
    })();
    
    $root.CChatRoom_CreateInviteLink_Response = (function() {
    
        /**
         * Properties of a CChatRoom_CreateInviteLink_Response.
         * @exports ICChatRoom_CreateInviteLink_Response
         * @interface ICChatRoom_CreateInviteLink_Response
         * @property {string|null} [invite_code] CChatRoom_CreateInviteLink_Response invite_code
         * @property {number|null} [seconds_valid] CChatRoom_CreateInviteLink_Response seconds_valid
         */
    
        /**
         * Constructs a new CChatRoom_CreateInviteLink_Response.
         * @exports CChatRoom_CreateInviteLink_Response
         * @classdesc Represents a CChatRoom_CreateInviteLink_Response.
         * @implements ICChatRoom_CreateInviteLink_Response
         * @constructor
         * @param {ICChatRoom_CreateInviteLink_Response=} [properties] Properties to set
         */
        function CChatRoom_CreateInviteLink_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_CreateInviteLink_Response invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_CreateInviteLink_Response
         * @instance
         */
        CChatRoom_CreateInviteLink_Response.prototype.invite_code = "";
    
        /**
         * CChatRoom_CreateInviteLink_Response seconds_valid.
         * @member {number} seconds_valid
         * @memberof CChatRoom_CreateInviteLink_Response
         * @instance
         */
        CChatRoom_CreateInviteLink_Response.prototype.seconds_valid = 0;
    
        /**
         * Creates a new CChatRoom_CreateInviteLink_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {ICChatRoom_CreateInviteLink_Response=} [properties] Properties to set
         * @returns {CChatRoom_CreateInviteLink_Response} CChatRoom_CreateInviteLink_Response instance
         */
        CChatRoom_CreateInviteLink_Response.create = function create(properties) {
            return new CChatRoom_CreateInviteLink_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_CreateInviteLink_Response message. Does not implicitly {@link CChatRoom_CreateInviteLink_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {ICChatRoom_CreateInviteLink_Response} message CChatRoom_CreateInviteLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateInviteLink_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.invite_code);
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seconds_valid);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_CreateInviteLink_Response message, length delimited. Does not implicitly {@link CChatRoom_CreateInviteLink_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {ICChatRoom_CreateInviteLink_Response} message CChatRoom_CreateInviteLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_CreateInviteLink_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_CreateInviteLink_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_CreateInviteLink_Response} CChatRoom_CreateInviteLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateInviteLink_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_CreateInviteLink_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.invite_code = reader.string();
                    break;
                case 2:
                    message.seconds_valid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_CreateInviteLink_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_CreateInviteLink_Response} CChatRoom_CreateInviteLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_CreateInviteLink_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_CreateInviteLink_Response message.
         * @function verify
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_CreateInviteLink_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                if (!$util.isInteger(message.seconds_valid))
                    return "seconds_valid: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_CreateInviteLink_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_CreateInviteLink_Response} CChatRoom_CreateInviteLink_Response
         */
        CChatRoom_CreateInviteLink_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_CreateInviteLink_Response)
                return object;
            var message = new $root.CChatRoom_CreateInviteLink_Response();
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            if (object.seconds_valid != null)
                message.seconds_valid = object.seconds_valid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_CreateInviteLink_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_CreateInviteLink_Response
         * @static
         * @param {CChatRoom_CreateInviteLink_Response} message CChatRoom_CreateInviteLink_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_CreateInviteLink_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.invite_code = "";
                object.seconds_valid = 0;
            }
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            if (message.seconds_valid != null && message.hasOwnProperty("seconds_valid"))
                object.seconds_valid = message.seconds_valid;
            return object;
        };
    
        /**
         * Converts this CChatRoom_CreateInviteLink_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_CreateInviteLink_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_CreateInviteLink_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_CreateInviteLink_Response;
    })();
    
    $root.CChatRoom_GetInviteLinkInfo_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteLinkInfo_Request.
         * @exports ICChatRoom_GetInviteLinkInfo_Request
         * @interface ICChatRoom_GetInviteLinkInfo_Request
         * @property {string|null} [invite_code] CChatRoom_GetInviteLinkInfo_Request invite_code
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteLinkInfo_Request.
         * @exports CChatRoom_GetInviteLinkInfo_Request
         * @classdesc Represents a CChatRoom_GetInviteLinkInfo_Request.
         * @implements ICChatRoom_GetInviteLinkInfo_Request
         * @constructor
         * @param {ICChatRoom_GetInviteLinkInfo_Request=} [properties] Properties to set
         */
        function CChatRoom_GetInviteLinkInfo_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteLinkInfo_Request invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Request.prototype.invite_code = "";
    
        /**
         * Creates a new CChatRoom_GetInviteLinkInfo_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteLinkInfo_Request} CChatRoom_GetInviteLinkInfo_Request instance
         */
        CChatRoom_GetInviteLinkInfo_Request.create = function create(properties) {
            return new CChatRoom_GetInviteLinkInfo_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinkInfo_Request message. Does not implicitly {@link CChatRoom_GetInviteLinkInfo_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Request} message CChatRoom_GetInviteLinkInfo_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinkInfo_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.invite_code);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinkInfo_Request message, length delimited. Does not implicitly {@link CChatRoom_GetInviteLinkInfo_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Request} message CChatRoom_GetInviteLinkInfo_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinkInfo_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinkInfo_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteLinkInfo_Request} CChatRoom_GetInviteLinkInfo_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinkInfo_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteLinkInfo_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.invite_code = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinkInfo_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteLinkInfo_Request} CChatRoom_GetInviteLinkInfo_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinkInfo_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteLinkInfo_Request message.
         * @function verify
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteLinkInfo_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteLinkInfo_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteLinkInfo_Request} CChatRoom_GetInviteLinkInfo_Request
         */
        CChatRoom_GetInviteLinkInfo_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteLinkInfo_Request)
                return object;
            var message = new $root.CChatRoom_GetInviteLinkInfo_Request();
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteLinkInfo_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @static
         * @param {CChatRoom_GetInviteLinkInfo_Request} message CChatRoom_GetInviteLinkInfo_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteLinkInfo_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.invite_code = "";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteLinkInfo_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteLinkInfo_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteLinkInfo_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteLinkInfo_Request;
    })();
    
    $root.CChatRoom_GetInviteLinkInfo_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteLinkInfo_Response.
         * @exports ICChatRoom_GetInviteLinkInfo_Response
         * @interface ICChatRoom_GetInviteLinkInfo_Response
         * @property {number|Long|null} [steamid_sender] CChatRoom_GetInviteLinkInfo_Response steamid_sender
         * @property {number|null} [time_expires] CChatRoom_GetInviteLinkInfo_Response time_expires
         * @property {number|Long|null} [chat_id] CChatRoom_GetInviteLinkInfo_Response chat_id
         * @property {ICChatRoom_GetChatRoomGroupSummary_Response|null} [group_summary] CChatRoom_GetInviteLinkInfo_Response group_summary
         * @property {ICUserChatRoomGroupState|null} [user_chat_group_state] CChatRoom_GetInviteLinkInfo_Response user_chat_group_state
         * @property {number|null} [time_kick_expire] CChatRoom_GetInviteLinkInfo_Response time_kick_expire
         * @property {boolean|null} [banned] CChatRoom_GetInviteLinkInfo_Response banned
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteLinkInfo_Response.
         * @exports CChatRoom_GetInviteLinkInfo_Response
         * @classdesc Represents a CChatRoom_GetInviteLinkInfo_Response.
         * @implements ICChatRoom_GetInviteLinkInfo_Response
         * @constructor
         * @param {ICChatRoom_GetInviteLinkInfo_Response=} [properties] Properties to set
         */
        function CChatRoom_GetInviteLinkInfo_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response steamid_sender.
         * @member {number|Long} steamid_sender
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.steamid_sender = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response time_expires.
         * @member {number} time_expires
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.time_expires = 0;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response group_summary.
         * @member {ICChatRoom_GetChatRoomGroupSummary_Response|null|undefined} group_summary
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.group_summary = null;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response user_chat_group_state.
         * @member {ICUserChatRoomGroupState|null|undefined} user_chat_group_state
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.user_chat_group_state = null;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response time_kick_expire.
         * @member {number} time_kick_expire
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.time_kick_expire = 0;
    
        /**
         * CChatRoom_GetInviteLinkInfo_Response banned.
         * @member {boolean} banned
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.banned = false;
    
        /**
         * Creates a new CChatRoom_GetInviteLinkInfo_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteLinkInfo_Response} CChatRoom_GetInviteLinkInfo_Response instance
         */
        CChatRoom_GetInviteLinkInfo_Response.create = function create(properties) {
            return new CChatRoom_GetInviteLinkInfo_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinkInfo_Response message. Does not implicitly {@link CChatRoom_GetInviteLinkInfo_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Response} message CChatRoom_GetInviteLinkInfo_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinkInfo_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid_sender);
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.time_expires);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.chat_id);
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                $root.CChatRoom_GetChatRoomGroupSummary_Response.encode(message.group_summary, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                $root.CUserChatRoomGroupState.encode(message.user_chat_group_state, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.time_kick_expire);
            if (message.banned != null && message.hasOwnProperty("banned"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.banned);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinkInfo_Response message, length delimited. Does not implicitly {@link CChatRoom_GetInviteLinkInfo_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteLinkInfo_Response} message CChatRoom_GetInviteLinkInfo_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinkInfo_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinkInfo_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteLinkInfo_Response} CChatRoom_GetInviteLinkInfo_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinkInfo_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteLinkInfo_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 3:
                    message.steamid_sender = reader.fixed64();
                    break;
                case 4:
                    message.time_expires = reader.uint32();
                    break;
                case 6:
                    message.chat_id = reader.uint64();
                    break;
                case 8:
                    message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.decode(reader, reader.uint32());
                    break;
                case 9:
                    message.user_chat_group_state = $root.CUserChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 10:
                    message.time_kick_expire = reader.uint32();
                    break;
                case 11:
                    message.banned = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinkInfo_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteLinkInfo_Response} CChatRoom_GetInviteLinkInfo_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinkInfo_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteLinkInfo_Response message.
         * @function verify
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteLinkInfo_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                if (!$util.isInteger(message.steamid_sender) && !(message.steamid_sender && $util.isInteger(message.steamid_sender.low) && $util.isInteger(message.steamid_sender.high)))
                    return "steamid_sender: integer|Long expected";
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                if (!$util.isInteger(message.time_expires))
                    return "time_expires: integer expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.group_summary != null && message.hasOwnProperty("group_summary")) {
                var error = $root.CChatRoom_GetChatRoomGroupSummary_Response.verify(message.group_summary);
                if (error)
                    return "group_summary." + error;
            }
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state")) {
                var error = $root.CUserChatRoomGroupState.verify(message.user_chat_group_state);
                if (error)
                    return "user_chat_group_state." + error;
            }
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                if (!$util.isInteger(message.time_kick_expire))
                    return "time_kick_expire: integer expected";
            if (message.banned != null && message.hasOwnProperty("banned"))
                if (typeof message.banned !== "boolean")
                    return "banned: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteLinkInfo_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteLinkInfo_Response} CChatRoom_GetInviteLinkInfo_Response
         */
        CChatRoom_GetInviteLinkInfo_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteLinkInfo_Response)
                return object;
            var message = new $root.CChatRoom_GetInviteLinkInfo_Response();
            if (object.steamid_sender != null)
                if ($util.Long)
                    (message.steamid_sender = $util.Long.fromValue(object.steamid_sender)).unsigned = false;
                else if (typeof object.steamid_sender === "string")
                    message.steamid_sender = parseInt(object.steamid_sender, 10);
                else if (typeof object.steamid_sender === "number")
                    message.steamid_sender = object.steamid_sender;
                else if (typeof object.steamid_sender === "object")
                    message.steamid_sender = new $util.LongBits(object.steamid_sender.low >>> 0, object.steamid_sender.high >>> 0).toNumber();
            if (object.time_expires != null)
                message.time_expires = object.time_expires >>> 0;
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.group_summary != null) {
                if (typeof object.group_summary !== "object")
                    throw TypeError(".CChatRoom_GetInviteLinkInfo_Response.group_summary: object expected");
                message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.fromObject(object.group_summary);
            }
            if (object.user_chat_group_state != null) {
                if (typeof object.user_chat_group_state !== "object")
                    throw TypeError(".CChatRoom_GetInviteLinkInfo_Response.user_chat_group_state: object expected");
                message.user_chat_group_state = $root.CUserChatRoomGroupState.fromObject(object.user_chat_group_state);
            }
            if (object.time_kick_expire != null)
                message.time_kick_expire = object.time_kick_expire >>> 0;
            if (object.banned != null)
                message.banned = Boolean(object.banned);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteLinkInfo_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @static
         * @param {CChatRoom_GetInviteLinkInfo_Response} message CChatRoom_GetInviteLinkInfo_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteLinkInfo_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_sender = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_sender = options.longs === String ? "0" : 0;
                object.time_expires = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.group_summary = null;
                object.user_chat_group_state = null;
                object.time_kick_expire = 0;
                object.banned = false;
            }
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                if (typeof message.steamid_sender === "number")
                    object.steamid_sender = options.longs === String ? String(message.steamid_sender) : message.steamid_sender;
                else
                    object.steamid_sender = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_sender) : options.longs === Number ? new $util.LongBits(message.steamid_sender.low >>> 0, message.steamid_sender.high >>> 0).toNumber() : message.steamid_sender;
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                object.time_expires = message.time_expires;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                object.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.toObject(message.group_summary, options);
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                object.user_chat_group_state = $root.CUserChatRoomGroupState.toObject(message.user_chat_group_state, options);
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                object.time_kick_expire = message.time_kick_expire;
            if (message.banned != null && message.hasOwnProperty("banned"))
                object.banned = message.banned;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteLinkInfo_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteLinkInfo_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteLinkInfo_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteLinkInfo_Response;
    })();
    
    $root.CChatRoom_GetInviteInfo_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteInfo_Request.
         * @exports ICChatRoom_GetInviteInfo_Request
         * @interface ICChatRoom_GetInviteInfo_Request
         * @property {number|Long|null} [steamid_invitee] CChatRoom_GetInviteInfo_Request steamid_invitee
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetInviteInfo_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_GetInviteInfo_Request chat_id
         * @property {string|null} [invite_code] CChatRoom_GetInviteInfo_Request invite_code
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteInfo_Request.
         * @exports CChatRoom_GetInviteInfo_Request
         * @classdesc Represents a CChatRoom_GetInviteInfo_Request.
         * @implements ICChatRoom_GetInviteInfo_Request
         * @constructor
         * @param {ICChatRoom_GetInviteInfo_Request=} [properties] Properties to set
         */
        function CChatRoom_GetInviteInfo_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteInfo_Request steamid_invitee.
         * @member {number|Long} steamid_invitee
         * @memberof CChatRoom_GetInviteInfo_Request
         * @instance
         */
        CChatRoom_GetInviteInfo_Request.prototype.steamid_invitee = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_GetInviteInfo_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetInviteInfo_Request
         * @instance
         */
        CChatRoom_GetInviteInfo_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetInviteInfo_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_GetInviteInfo_Request
         * @instance
         */
        CChatRoom_GetInviteInfo_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetInviteInfo_Request invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_GetInviteInfo_Request
         * @instance
         */
        CChatRoom_GetInviteInfo_Request.prototype.invite_code = "";
    
        /**
         * Creates a new CChatRoom_GetInviteInfo_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteInfo_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteInfo_Request} CChatRoom_GetInviteInfo_Request instance
         */
        CChatRoom_GetInviteInfo_Request.create = function create(properties) {
            return new CChatRoom_GetInviteInfo_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteInfo_Request message. Does not implicitly {@link CChatRoom_GetInviteInfo_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteInfo_Request} message CChatRoom_GetInviteInfo_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteInfo_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_invitee != null && message.hasOwnProperty("steamid_invitee"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_invitee);
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.chat_id);
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.invite_code);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteInfo_Request message, length delimited. Does not implicitly {@link CChatRoom_GetInviteInfo_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {ICChatRoom_GetInviteInfo_Request} message CChatRoom_GetInviteInfo_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteInfo_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteInfo_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteInfo_Request} CChatRoom_GetInviteInfo_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteInfo_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteInfo_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_invitee = reader.fixed64();
                    break;
                case 2:
                    message.chat_group_id = reader.uint64();
                    break;
                case 3:
                    message.chat_id = reader.uint64();
                    break;
                case 4:
                    message.invite_code = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteInfo_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteInfo_Request} CChatRoom_GetInviteInfo_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteInfo_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteInfo_Request message.
         * @function verify
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteInfo_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_invitee != null && message.hasOwnProperty("steamid_invitee"))
                if (!$util.isInteger(message.steamid_invitee) && !(message.steamid_invitee && $util.isInteger(message.steamid_invitee.low) && $util.isInteger(message.steamid_invitee.high)))
                    return "steamid_invitee: integer|Long expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteInfo_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteInfo_Request} CChatRoom_GetInviteInfo_Request
         */
        CChatRoom_GetInviteInfo_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteInfo_Request)
                return object;
            var message = new $root.CChatRoom_GetInviteInfo_Request();
            if (object.steamid_invitee != null)
                if ($util.Long)
                    (message.steamid_invitee = $util.Long.fromValue(object.steamid_invitee)).unsigned = false;
                else if (typeof object.steamid_invitee === "string")
                    message.steamid_invitee = parseInt(object.steamid_invitee, 10);
                else if (typeof object.steamid_invitee === "number")
                    message.steamid_invitee = object.steamid_invitee;
                else if (typeof object.steamid_invitee === "object")
                    message.steamid_invitee = new $util.LongBits(object.steamid_invitee.low >>> 0, object.steamid_invitee.high >>> 0).toNumber();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteInfo_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteInfo_Request
         * @static
         * @param {CChatRoom_GetInviteInfo_Request} message CChatRoom_GetInviteInfo_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteInfo_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_invitee = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_invitee = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.invite_code = "";
            }
            if (message.steamid_invitee != null && message.hasOwnProperty("steamid_invitee"))
                if (typeof message.steamid_invitee === "number")
                    object.steamid_invitee = options.longs === String ? String(message.steamid_invitee) : message.steamid_invitee;
                else
                    object.steamid_invitee = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_invitee) : options.longs === Number ? new $util.LongBits(message.steamid_invitee.low >>> 0, message.steamid_invitee.high >>> 0).toNumber() : message.steamid_invitee;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteInfo_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteInfo_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteInfo_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteInfo_Request;
    })();
    
    $root.CChatRoom_GetInviteInfo_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteInfo_Response.
         * @exports ICChatRoom_GetInviteInfo_Response
         * @interface ICChatRoom_GetInviteInfo_Response
         * @property {ICChatRoom_GetChatRoomGroupSummary_Response|null} [group_summary] CChatRoom_GetInviteInfo_Response group_summary
         * @property {number|null} [time_kick_expire] CChatRoom_GetInviteInfo_Response time_kick_expire
         * @property {boolean|null} [banned] CChatRoom_GetInviteInfo_Response banned
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteInfo_Response.
         * @exports CChatRoom_GetInviteInfo_Response
         * @classdesc Represents a CChatRoom_GetInviteInfo_Response.
         * @implements ICChatRoom_GetInviteInfo_Response
         * @constructor
         * @param {ICChatRoom_GetInviteInfo_Response=} [properties] Properties to set
         */
        function CChatRoom_GetInviteInfo_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteInfo_Response group_summary.
         * @member {ICChatRoom_GetChatRoomGroupSummary_Response|null|undefined} group_summary
         * @memberof CChatRoom_GetInviteInfo_Response
         * @instance
         */
        CChatRoom_GetInviteInfo_Response.prototype.group_summary = null;
    
        /**
         * CChatRoom_GetInviteInfo_Response time_kick_expire.
         * @member {number} time_kick_expire
         * @memberof CChatRoom_GetInviteInfo_Response
         * @instance
         */
        CChatRoom_GetInviteInfo_Response.prototype.time_kick_expire = 0;
    
        /**
         * CChatRoom_GetInviteInfo_Response banned.
         * @member {boolean} banned
         * @memberof CChatRoom_GetInviteInfo_Response
         * @instance
         */
        CChatRoom_GetInviteInfo_Response.prototype.banned = false;
    
        /**
         * Creates a new CChatRoom_GetInviteInfo_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteInfo_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteInfo_Response} CChatRoom_GetInviteInfo_Response instance
         */
        CChatRoom_GetInviteInfo_Response.create = function create(properties) {
            return new CChatRoom_GetInviteInfo_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteInfo_Response message. Does not implicitly {@link CChatRoom_GetInviteInfo_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteInfo_Response} message CChatRoom_GetInviteInfo_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteInfo_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                $root.CChatRoom_GetChatRoomGroupSummary_Response.encode(message.group_summary, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.time_kick_expire);
            if (message.banned != null && message.hasOwnProperty("banned"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.banned);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteInfo_Response message, length delimited. Does not implicitly {@link CChatRoom_GetInviteInfo_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {ICChatRoom_GetInviteInfo_Response} message CChatRoom_GetInviteInfo_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteInfo_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteInfo_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteInfo_Response} CChatRoom_GetInviteInfo_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteInfo_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteInfo_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.time_kick_expire = reader.uint32();
                    break;
                case 3:
                    message.banned = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteInfo_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteInfo_Response} CChatRoom_GetInviteInfo_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteInfo_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteInfo_Response message.
         * @function verify
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteInfo_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.group_summary != null && message.hasOwnProperty("group_summary")) {
                var error = $root.CChatRoom_GetChatRoomGroupSummary_Response.verify(message.group_summary);
                if (error)
                    return "group_summary." + error;
            }
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                if (!$util.isInteger(message.time_kick_expire))
                    return "time_kick_expire: integer expected";
            if (message.banned != null && message.hasOwnProperty("banned"))
                if (typeof message.banned !== "boolean")
                    return "banned: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteInfo_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteInfo_Response} CChatRoom_GetInviteInfo_Response
         */
        CChatRoom_GetInviteInfo_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteInfo_Response)
                return object;
            var message = new $root.CChatRoom_GetInviteInfo_Response();
            if (object.group_summary != null) {
                if (typeof object.group_summary !== "object")
                    throw TypeError(".CChatRoom_GetInviteInfo_Response.group_summary: object expected");
                message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.fromObject(object.group_summary);
            }
            if (object.time_kick_expire != null)
                message.time_kick_expire = object.time_kick_expire >>> 0;
            if (object.banned != null)
                message.banned = Boolean(object.banned);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteInfo_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteInfo_Response
         * @static
         * @param {CChatRoom_GetInviteInfo_Response} message CChatRoom_GetInviteInfo_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteInfo_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.group_summary = null;
                object.time_kick_expire = 0;
                object.banned = false;
            }
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                object.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.toObject(message.group_summary, options);
            if (message.time_kick_expire != null && message.hasOwnProperty("time_kick_expire"))
                object.time_kick_expire = message.time_kick_expire;
            if (message.banned != null && message.hasOwnProperty("banned"))
                object.banned = message.banned;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteInfo_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteInfo_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteInfo_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteInfo_Response;
    })();
    
    $root.CChatRoom_GetInviteLinksForGroup_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteLinksForGroup_Request.
         * @exports ICChatRoom_GetInviteLinksForGroup_Request
         * @interface ICChatRoom_GetInviteLinksForGroup_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetInviteLinksForGroup_Request chat_group_id
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteLinksForGroup_Request.
         * @exports CChatRoom_GetInviteLinksForGroup_Request
         * @classdesc Represents a CChatRoom_GetInviteLinksForGroup_Request.
         * @implements ICChatRoom_GetInviteLinksForGroup_Request
         * @constructor
         * @param {ICChatRoom_GetInviteLinksForGroup_Request=} [properties] Properties to set
         */
        function CChatRoom_GetInviteLinksForGroup_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_GetInviteLinksForGroup_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteLinksForGroup_Request} CChatRoom_GetInviteLinksForGroup_Request instance
         */
        CChatRoom_GetInviteLinksForGroup_Request.create = function create(properties) {
            return new CChatRoom_GetInviteLinksForGroup_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Request message. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Request} message CChatRoom_GetInviteLinksForGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Request message, length delimited. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Request} message CChatRoom_GetInviteLinksForGroup_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteLinksForGroup_Request} CChatRoom_GetInviteLinksForGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteLinksForGroup_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteLinksForGroup_Request} CChatRoom_GetInviteLinksForGroup_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteLinksForGroup_Request message.
         * @function verify
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteLinksForGroup_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteLinksForGroup_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteLinksForGroup_Request} CChatRoom_GetInviteLinksForGroup_Request
         */
        CChatRoom_GetInviteLinksForGroup_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteLinksForGroup_Request)
                return object;
            var message = new $root.CChatRoom_GetInviteLinksForGroup_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteLinksForGroup_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @static
         * @param {CChatRoom_GetInviteLinksForGroup_Request} message CChatRoom_GetInviteLinksForGroup_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteLinksForGroup_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteLinksForGroup_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteLinksForGroup_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteLinksForGroup_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteLinksForGroup_Request;
    })();
    
    $root.CChatRoom_GetInviteLinksForGroup_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteLinksForGroup_Response.
         * @exports ICChatRoom_GetInviteLinksForGroup_Response
         * @interface ICChatRoom_GetInviteLinksForGroup_Response
         * @property {Array.<ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo>|null} [invite_links] CChatRoom_GetInviteLinksForGroup_Response invite_links
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteLinksForGroup_Response.
         * @exports CChatRoom_GetInviteLinksForGroup_Response
         * @classdesc Represents a CChatRoom_GetInviteLinksForGroup_Response.
         * @implements ICChatRoom_GetInviteLinksForGroup_Response
         * @constructor
         * @param {ICChatRoom_GetInviteLinksForGroup_Response=} [properties] Properties to set
         */
        function CChatRoom_GetInviteLinksForGroup_Response(properties) {
            this.invite_links = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Response invite_links.
         * @member {Array.<ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo>} invite_links
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Response.prototype.invite_links = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetInviteLinksForGroup_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteLinksForGroup_Response} CChatRoom_GetInviteLinksForGroup_Response instance
         */
        CChatRoom_GetInviteLinksForGroup_Response.create = function create(properties) {
            return new CChatRoom_GetInviteLinksForGroup_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Response message. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response} message CChatRoom_GetInviteLinksForGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.invite_links != null && message.invite_links.length)
                for (var i = 0; i < message.invite_links.length; ++i)
                    $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.encode(message.invite_links[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Response message, length delimited. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response} message CChatRoom_GetInviteLinksForGroup_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteLinksForGroup_Response} CChatRoom_GetInviteLinksForGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteLinksForGroup_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.invite_links && message.invite_links.length))
                        message.invite_links = [];
                    message.invite_links.push($root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteLinksForGroup_Response} CChatRoom_GetInviteLinksForGroup_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteLinksForGroup_Response message.
         * @function verify
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteLinksForGroup_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.invite_links != null && message.hasOwnProperty("invite_links")) {
                if (!Array.isArray(message.invite_links))
                    return "invite_links: array expected";
                for (var i = 0; i < message.invite_links.length; ++i) {
                    var error = $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.verify(message.invite_links[i]);
                    if (error)
                        return "invite_links." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteLinksForGroup_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteLinksForGroup_Response} CChatRoom_GetInviteLinksForGroup_Response
         */
        CChatRoom_GetInviteLinksForGroup_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteLinksForGroup_Response)
                return object;
            var message = new $root.CChatRoom_GetInviteLinksForGroup_Response();
            if (object.invite_links) {
                if (!Array.isArray(object.invite_links))
                    throw TypeError(".CChatRoom_GetInviteLinksForGroup_Response.invite_links: array expected");
                message.invite_links = [];
                for (var i = 0; i < object.invite_links.length; ++i) {
                    if (typeof object.invite_links[i] !== "object")
                        throw TypeError(".CChatRoom_GetInviteLinksForGroup_Response.invite_links: object expected");
                    message.invite_links[i] = $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.fromObject(object.invite_links[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteLinksForGroup_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @static
         * @param {CChatRoom_GetInviteLinksForGroup_Response} message CChatRoom_GetInviteLinksForGroup_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteLinksForGroup_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.invite_links = [];
            if (message.invite_links && message.invite_links.length) {
                object.invite_links = [];
                for (var j = 0; j < message.invite_links.length; ++j)
                    object.invite_links[j] = $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.toObject(message.invite_links[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteLinksForGroup_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteLinksForGroup_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteLinksForGroup_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteLinksForGroup_Response;
    })();
    
    $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.
         * @exports ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @interface ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @property {string|null} [invite_code] CChatRoom_GetInviteLinksForGroup_Response_LinkInfo invite_code
         * @property {number|Long|null} [steamid_creator] CChatRoom_GetInviteLinksForGroup_Response_LinkInfo steamid_creator
         * @property {number|null} [time_expires] CChatRoom_GetInviteLinksForGroup_Response_LinkInfo time_expires
         * @property {number|Long|null} [chat_id] CChatRoom_GetInviteLinksForGroup_Response_LinkInfo chat_id
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.
         * @exports CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @classdesc Represents a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.
         * @implements ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @constructor
         * @param {ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo=} [properties] Properties to set
         */
        function CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Response_LinkInfo invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.prototype.invite_code = "";
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Response_LinkInfo steamid_creator.
         * @member {number|Long} steamid_creator
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.prototype.steamid_creator = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Response_LinkInfo time_expires.
         * @member {number} time_expires
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.prototype.time_expires = 0;
    
        /**
         * CChatRoom_GetInviteLinksForGroup_Response_LinkInfo chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @instance
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_GetInviteLinksForGroup_Response_LinkInfo instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteLinksForGroup_Response_LinkInfo} CChatRoom_GetInviteLinksForGroup_Response_LinkInfo instance
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.create = function create(properties) {
            return new CChatRoom_GetInviteLinksForGroup_Response_LinkInfo(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo} message CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.invite_code);
            if (message.steamid_creator != null && message.hasOwnProperty("steamid_creator"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid_creator);
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_expires);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.chat_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message, length delimited. Does not implicitly {@link CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {ICChatRoom_GetInviteLinksForGroup_Response_LinkInfo} message CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteLinksForGroup_Response_LinkInfo} CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.invite_code = reader.string();
                    break;
                case 2:
                    message.steamid_creator = reader.fixed64();
                    break;
                case 3:
                    message.time_expires = reader.uint32();
                    break;
                case 4:
                    message.chat_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteLinksForGroup_Response_LinkInfo} CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message.
         * @function verify
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            if (message.steamid_creator != null && message.hasOwnProperty("steamid_creator"))
                if (!$util.isInteger(message.steamid_creator) && !(message.steamid_creator && $util.isInteger(message.steamid_creator.low) && $util.isInteger(message.steamid_creator.high)))
                    return "steamid_creator: integer|Long expected";
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                if (!$util.isInteger(message.time_expires))
                    return "time_expires: integer expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteLinksForGroup_Response_LinkInfo} CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo)
                return object;
            var message = new $root.CChatRoom_GetInviteLinksForGroup_Response_LinkInfo();
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            if (object.steamid_creator != null)
                if ($util.Long)
                    (message.steamid_creator = $util.Long.fromValue(object.steamid_creator)).unsigned = false;
                else if (typeof object.steamid_creator === "string")
                    message.steamid_creator = parseInt(object.steamid_creator, 10);
                else if (typeof object.steamid_creator === "number")
                    message.steamid_creator = object.steamid_creator;
                else if (typeof object.steamid_creator === "object")
                    message.steamid_creator = new $util.LongBits(object.steamid_creator.low >>> 0, object.steamid_creator.high >>> 0).toNumber();
            if (object.time_expires != null)
                message.time_expires = object.time_expires >>> 0;
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteLinksForGroup_Response_LinkInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @static
         * @param {CChatRoom_GetInviteLinksForGroup_Response_LinkInfo} message CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.invite_code = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_creator = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_creator = options.longs === String ? "0" : 0;
                object.time_expires = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            if (message.steamid_creator != null && message.hasOwnProperty("steamid_creator"))
                if (typeof message.steamid_creator === "number")
                    object.steamid_creator = options.longs === String ? String(message.steamid_creator) : message.steamid_creator;
                else
                    object.steamid_creator = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_creator) : options.longs === Number ? new $util.LongBits(message.steamid_creator.low >>> 0, message.steamid_creator.high >>> 0).toNumber() : message.steamid_creator;
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                object.time_expires = message.time_expires;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteLinksForGroup_Response_LinkInfo to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteLinksForGroup_Response_LinkInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteLinksForGroup_Response_LinkInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteLinksForGroup_Response_LinkInfo;
    })();
    
    $root.CChatRoom_GetBanList_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetBanList_Request.
         * @exports ICChatRoom_GetBanList_Request
         * @interface ICChatRoom_GetBanList_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetBanList_Request chat_group_id
         */
    
        /**
         * Constructs a new CChatRoom_GetBanList_Request.
         * @exports CChatRoom_GetBanList_Request
         * @classdesc Represents a CChatRoom_GetBanList_Request.
         * @implements ICChatRoom_GetBanList_Request
         * @constructor
         * @param {ICChatRoom_GetBanList_Request=} [properties] Properties to set
         */
        function CChatRoom_GetBanList_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetBanList_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetBanList_Request
         * @instance
         */
        CChatRoom_GetBanList_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_GetBanList_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {ICChatRoom_GetBanList_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetBanList_Request} CChatRoom_GetBanList_Request instance
         */
        CChatRoom_GetBanList_Request.create = function create(properties) {
            return new CChatRoom_GetBanList_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Request message. Does not implicitly {@link CChatRoom_GetBanList_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {ICChatRoom_GetBanList_Request} message CChatRoom_GetBanList_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Request message, length delimited. Does not implicitly {@link CChatRoom_GetBanList_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {ICChatRoom_GetBanList_Request} message CChatRoom_GetBanList_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetBanList_Request} CChatRoom_GetBanList_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetBanList_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetBanList_Request} CChatRoom_GetBanList_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetBanList_Request message.
         * @function verify
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetBanList_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetBanList_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetBanList_Request} CChatRoom_GetBanList_Request
         */
        CChatRoom_GetBanList_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetBanList_Request)
                return object;
            var message = new $root.CChatRoom_GetBanList_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetBanList_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetBanList_Request
         * @static
         * @param {CChatRoom_GetBanList_Request} message CChatRoom_GetBanList_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetBanList_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetBanList_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetBanList_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetBanList_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetBanList_Request;
    })();
    
    $root.CChatRoom_GetBanList_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetBanList_Response.
         * @exports ICChatRoom_GetBanList_Response
         * @interface ICChatRoom_GetBanList_Response
         * @property {Array.<ICChatRoom_GetBanList_Response_BanInfo>|null} [bans] CChatRoom_GetBanList_Response bans
         */
    
        /**
         * Constructs a new CChatRoom_GetBanList_Response.
         * @exports CChatRoom_GetBanList_Response
         * @classdesc Represents a CChatRoom_GetBanList_Response.
         * @implements ICChatRoom_GetBanList_Response
         * @constructor
         * @param {ICChatRoom_GetBanList_Response=} [properties] Properties to set
         */
        function CChatRoom_GetBanList_Response(properties) {
            this.bans = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetBanList_Response bans.
         * @member {Array.<ICChatRoom_GetBanList_Response_BanInfo>} bans
         * @memberof CChatRoom_GetBanList_Response
         * @instance
         */
        CChatRoom_GetBanList_Response.prototype.bans = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetBanList_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {ICChatRoom_GetBanList_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetBanList_Response} CChatRoom_GetBanList_Response instance
         */
        CChatRoom_GetBanList_Response.create = function create(properties) {
            return new CChatRoom_GetBanList_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Response message. Does not implicitly {@link CChatRoom_GetBanList_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {ICChatRoom_GetBanList_Response} message CChatRoom_GetBanList_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.bans != null && message.bans.length)
                for (var i = 0; i < message.bans.length; ++i)
                    $root.CChatRoom_GetBanList_Response_BanInfo.encode(message.bans[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Response message, length delimited. Does not implicitly {@link CChatRoom_GetBanList_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {ICChatRoom_GetBanList_Response} message CChatRoom_GetBanList_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetBanList_Response} CChatRoom_GetBanList_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetBanList_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.bans && message.bans.length))
                        message.bans = [];
                    message.bans.push($root.CChatRoom_GetBanList_Response_BanInfo.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetBanList_Response} CChatRoom_GetBanList_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetBanList_Response message.
         * @function verify
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetBanList_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.bans != null && message.hasOwnProperty("bans")) {
                if (!Array.isArray(message.bans))
                    return "bans: array expected";
                for (var i = 0; i < message.bans.length; ++i) {
                    var error = $root.CChatRoom_GetBanList_Response_BanInfo.verify(message.bans[i]);
                    if (error)
                        return "bans." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetBanList_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetBanList_Response} CChatRoom_GetBanList_Response
         */
        CChatRoom_GetBanList_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetBanList_Response)
                return object;
            var message = new $root.CChatRoom_GetBanList_Response();
            if (object.bans) {
                if (!Array.isArray(object.bans))
                    throw TypeError(".CChatRoom_GetBanList_Response.bans: array expected");
                message.bans = [];
                for (var i = 0; i < object.bans.length; ++i) {
                    if (typeof object.bans[i] !== "object")
                        throw TypeError(".CChatRoom_GetBanList_Response.bans: object expected");
                    message.bans[i] = $root.CChatRoom_GetBanList_Response_BanInfo.fromObject(object.bans[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetBanList_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetBanList_Response
         * @static
         * @param {CChatRoom_GetBanList_Response} message CChatRoom_GetBanList_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetBanList_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.bans = [];
            if (message.bans && message.bans.length) {
                object.bans = [];
                for (var j = 0; j < message.bans.length; ++j)
                    object.bans[j] = $root.CChatRoom_GetBanList_Response_BanInfo.toObject(message.bans[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetBanList_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetBanList_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetBanList_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetBanList_Response;
    })();
    
    $root.CChatRoom_GetBanList_Response_BanInfo = (function() {
    
        /**
         * Properties of a CChatRoom_GetBanList_Response_BanInfo.
         * @exports ICChatRoom_GetBanList_Response_BanInfo
         * @interface ICChatRoom_GetBanList_Response_BanInfo
         * @property {number|null} [accountid] CChatRoom_GetBanList_Response_BanInfo accountid
         * @property {number|null} [accountid_actor] CChatRoom_GetBanList_Response_BanInfo accountid_actor
         * @property {number|null} [time_banned] CChatRoom_GetBanList_Response_BanInfo time_banned
         * @property {string|null} [ban_reason] CChatRoom_GetBanList_Response_BanInfo ban_reason
         */
    
        /**
         * Constructs a new CChatRoom_GetBanList_Response_BanInfo.
         * @exports CChatRoom_GetBanList_Response_BanInfo
         * @classdesc Represents a CChatRoom_GetBanList_Response_BanInfo.
         * @implements ICChatRoom_GetBanList_Response_BanInfo
         * @constructor
         * @param {ICChatRoom_GetBanList_Response_BanInfo=} [properties] Properties to set
         */
        function CChatRoom_GetBanList_Response_BanInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetBanList_Response_BanInfo accountid.
         * @member {number} accountid
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @instance
         */
        CChatRoom_GetBanList_Response_BanInfo.prototype.accountid = 0;
    
        /**
         * CChatRoom_GetBanList_Response_BanInfo accountid_actor.
         * @member {number} accountid_actor
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @instance
         */
        CChatRoom_GetBanList_Response_BanInfo.prototype.accountid_actor = 0;
    
        /**
         * CChatRoom_GetBanList_Response_BanInfo time_banned.
         * @member {number} time_banned
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @instance
         */
        CChatRoom_GetBanList_Response_BanInfo.prototype.time_banned = 0;
    
        /**
         * CChatRoom_GetBanList_Response_BanInfo ban_reason.
         * @member {string} ban_reason
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @instance
         */
        CChatRoom_GetBanList_Response_BanInfo.prototype.ban_reason = "";
    
        /**
         * Creates a new CChatRoom_GetBanList_Response_BanInfo instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {ICChatRoom_GetBanList_Response_BanInfo=} [properties] Properties to set
         * @returns {CChatRoom_GetBanList_Response_BanInfo} CChatRoom_GetBanList_Response_BanInfo instance
         */
        CChatRoom_GetBanList_Response_BanInfo.create = function create(properties) {
            return new CChatRoom_GetBanList_Response_BanInfo(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Response_BanInfo message. Does not implicitly {@link CChatRoom_GetBanList_Response_BanInfo.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {ICChatRoom_GetBanList_Response_BanInfo} message CChatRoom_GetBanList_Response_BanInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Response_BanInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountid);
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountid_actor);
            if (message.time_banned != null && message.hasOwnProperty("time_banned"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_banned);
            if (message.ban_reason != null && message.hasOwnProperty("ban_reason"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.ban_reason);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetBanList_Response_BanInfo message, length delimited. Does not implicitly {@link CChatRoom_GetBanList_Response_BanInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {ICChatRoom_GetBanList_Response_BanInfo} message CChatRoom_GetBanList_Response_BanInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetBanList_Response_BanInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Response_BanInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetBanList_Response_BanInfo} CChatRoom_GetBanList_Response_BanInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Response_BanInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetBanList_Response_BanInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.accountid = reader.uint32();
                    break;
                case 2:
                    message.accountid_actor = reader.uint32();
                    break;
                case 3:
                    message.time_banned = reader.uint32();
                    break;
                case 4:
                    message.ban_reason = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetBanList_Response_BanInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetBanList_Response_BanInfo} CChatRoom_GetBanList_Response_BanInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetBanList_Response_BanInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetBanList_Response_BanInfo message.
         * @function verify
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetBanList_Response_BanInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                if (!$util.isInteger(message.accountid_actor))
                    return "accountid_actor: integer expected";
            if (message.time_banned != null && message.hasOwnProperty("time_banned"))
                if (!$util.isInteger(message.time_banned))
                    return "time_banned: integer expected";
            if (message.ban_reason != null && message.hasOwnProperty("ban_reason"))
                if (!$util.isString(message.ban_reason))
                    return "ban_reason: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetBanList_Response_BanInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetBanList_Response_BanInfo} CChatRoom_GetBanList_Response_BanInfo
         */
        CChatRoom_GetBanList_Response_BanInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetBanList_Response_BanInfo)
                return object;
            var message = new $root.CChatRoom_GetBanList_Response_BanInfo();
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.accountid_actor != null)
                message.accountid_actor = object.accountid_actor >>> 0;
            if (object.time_banned != null)
                message.time_banned = object.time_banned >>> 0;
            if (object.ban_reason != null)
                message.ban_reason = String(object.ban_reason);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetBanList_Response_BanInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @static
         * @param {CChatRoom_GetBanList_Response_BanInfo} message CChatRoom_GetBanList_Response_BanInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetBanList_Response_BanInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountid = 0;
                object.accountid_actor = 0;
                object.time_banned = 0;
                object.ban_reason = "";
            }
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                object.accountid_actor = message.accountid_actor;
            if (message.time_banned != null && message.hasOwnProperty("time_banned"))
                object.time_banned = message.time_banned;
            if (message.ban_reason != null && message.hasOwnProperty("ban_reason"))
                object.ban_reason = message.ban_reason;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetBanList_Response_BanInfo to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetBanList_Response_BanInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetBanList_Response_BanInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetBanList_Response_BanInfo;
    })();
    
    $root.CChatRoom_GetInviteList_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteList_Request.
         * @exports ICChatRoom_GetInviteList_Request
         * @interface ICChatRoom_GetInviteList_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetInviteList_Request chat_group_id
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteList_Request.
         * @exports CChatRoom_GetInviteList_Request
         * @classdesc Represents a CChatRoom_GetInviteList_Request.
         * @implements ICChatRoom_GetInviteList_Request
         * @constructor
         * @param {ICChatRoom_GetInviteList_Request=} [properties] Properties to set
         */
        function CChatRoom_GetInviteList_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteList_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetInviteList_Request
         * @instance
         */
        CChatRoom_GetInviteList_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_GetInviteList_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {ICChatRoom_GetInviteList_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteList_Request} CChatRoom_GetInviteList_Request instance
         */
        CChatRoom_GetInviteList_Request.create = function create(properties) {
            return new CChatRoom_GetInviteList_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteList_Request message. Does not implicitly {@link CChatRoom_GetInviteList_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {ICChatRoom_GetInviteList_Request} message CChatRoom_GetInviteList_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteList_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteList_Request message, length delimited. Does not implicitly {@link CChatRoom_GetInviteList_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {ICChatRoom_GetInviteList_Request} message CChatRoom_GetInviteList_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteList_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteList_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteList_Request} CChatRoom_GetInviteList_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteList_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteList_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteList_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteList_Request} CChatRoom_GetInviteList_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteList_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteList_Request message.
         * @function verify
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteList_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteList_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteList_Request} CChatRoom_GetInviteList_Request
         */
        CChatRoom_GetInviteList_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteList_Request)
                return object;
            var message = new $root.CChatRoom_GetInviteList_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteList_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteList_Request
         * @static
         * @param {CChatRoom_GetInviteList_Request} message CChatRoom_GetInviteList_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteList_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteList_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteList_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteList_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteList_Request;
    })();
    
    $root.CChatRoom_GetInviteList_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetInviteList_Response.
         * @exports ICChatRoom_GetInviteList_Response
         * @interface ICChatRoom_GetInviteList_Response
         * @property {Array.<ICChatRoomGroupInvite>|null} [invites] CChatRoom_GetInviteList_Response invites
         */
    
        /**
         * Constructs a new CChatRoom_GetInviteList_Response.
         * @exports CChatRoom_GetInviteList_Response
         * @classdesc Represents a CChatRoom_GetInviteList_Response.
         * @implements ICChatRoom_GetInviteList_Response
         * @constructor
         * @param {ICChatRoom_GetInviteList_Response=} [properties] Properties to set
         */
        function CChatRoom_GetInviteList_Response(properties) {
            this.invites = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetInviteList_Response invites.
         * @member {Array.<ICChatRoomGroupInvite>} invites
         * @memberof CChatRoom_GetInviteList_Response
         * @instance
         */
        CChatRoom_GetInviteList_Response.prototype.invites = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetInviteList_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {ICChatRoom_GetInviteList_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetInviteList_Response} CChatRoom_GetInviteList_Response instance
         */
        CChatRoom_GetInviteList_Response.create = function create(properties) {
            return new CChatRoom_GetInviteList_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteList_Response message. Does not implicitly {@link CChatRoom_GetInviteList_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {ICChatRoom_GetInviteList_Response} message CChatRoom_GetInviteList_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteList_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.invites != null && message.invites.length)
                for (var i = 0; i < message.invites.length; ++i)
                    $root.CChatRoomGroupInvite.encode(message.invites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetInviteList_Response message, length delimited. Does not implicitly {@link CChatRoom_GetInviteList_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {ICChatRoom_GetInviteList_Response} message CChatRoom_GetInviteList_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetInviteList_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetInviteList_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetInviteList_Response} CChatRoom_GetInviteList_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteList_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetInviteList_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.invites && message.invites.length))
                        message.invites = [];
                    message.invites.push($root.CChatRoomGroupInvite.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetInviteList_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetInviteList_Response} CChatRoom_GetInviteList_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetInviteList_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetInviteList_Response message.
         * @function verify
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetInviteList_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.invites != null && message.hasOwnProperty("invites")) {
                if (!Array.isArray(message.invites))
                    return "invites: array expected";
                for (var i = 0; i < message.invites.length; ++i) {
                    var error = $root.CChatRoomGroupInvite.verify(message.invites[i]);
                    if (error)
                        return "invites." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetInviteList_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetInviteList_Response} CChatRoom_GetInviteList_Response
         */
        CChatRoom_GetInviteList_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetInviteList_Response)
                return object;
            var message = new $root.CChatRoom_GetInviteList_Response();
            if (object.invites) {
                if (!Array.isArray(object.invites))
                    throw TypeError(".CChatRoom_GetInviteList_Response.invites: array expected");
                message.invites = [];
                for (var i = 0; i < object.invites.length; ++i) {
                    if (typeof object.invites[i] !== "object")
                        throw TypeError(".CChatRoom_GetInviteList_Response.invites: object expected");
                    message.invites[i] = $root.CChatRoomGroupInvite.fromObject(object.invites[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetInviteList_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetInviteList_Response
         * @static
         * @param {CChatRoom_GetInviteList_Response} message CChatRoom_GetInviteList_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetInviteList_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.invites = [];
            if (message.invites && message.invites.length) {
                object.invites = [];
                for (var j = 0; j < message.invites.length; ++j)
                    object.invites[j] = $root.CChatRoomGroupInvite.toObject(message.invites[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetInviteList_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetInviteList_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetInviteList_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetInviteList_Response;
    })();
    
    $root.CChatRoomGroupInvite = (function() {
    
        /**
         * Properties of a CChatRoomGroupInvite.
         * @exports ICChatRoomGroupInvite
         * @interface ICChatRoomGroupInvite
         * @property {number|null} [accountid] CChatRoomGroupInvite accountid
         * @property {number|null} [accountid_actor] CChatRoomGroupInvite accountid_actor
         * @property {number|null} [time_invited] CChatRoomGroupInvite time_invited
         */
    
        /**
         * Constructs a new CChatRoomGroupInvite.
         * @exports CChatRoomGroupInvite
         * @classdesc Represents a CChatRoomGroupInvite.
         * @implements ICChatRoomGroupInvite
         * @constructor
         * @param {ICChatRoomGroupInvite=} [properties] Properties to set
         */
        function CChatRoomGroupInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomGroupInvite accountid.
         * @member {number} accountid
         * @memberof CChatRoomGroupInvite
         * @instance
         */
        CChatRoomGroupInvite.prototype.accountid = 0;
    
        /**
         * CChatRoomGroupInvite accountid_actor.
         * @member {number} accountid_actor
         * @memberof CChatRoomGroupInvite
         * @instance
         */
        CChatRoomGroupInvite.prototype.accountid_actor = 0;
    
        /**
         * CChatRoomGroupInvite time_invited.
         * @member {number} time_invited
         * @memberof CChatRoomGroupInvite
         * @instance
         */
        CChatRoomGroupInvite.prototype.time_invited = 0;
    
        /**
         * Creates a new CChatRoomGroupInvite instance using the specified properties.
         * @function create
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {ICChatRoomGroupInvite=} [properties] Properties to set
         * @returns {CChatRoomGroupInvite} CChatRoomGroupInvite instance
         */
        CChatRoomGroupInvite.create = function create(properties) {
            return new CChatRoomGroupInvite(properties);
        };
    
        /**
         * Encodes the specified CChatRoomGroupInvite message. Does not implicitly {@link CChatRoomGroupInvite.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {ICChatRoomGroupInvite} message CChatRoomGroupInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountid);
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountid_actor);
            if (message.time_invited != null && message.hasOwnProperty("time_invited"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_invited);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomGroupInvite message, length delimited. Does not implicitly {@link CChatRoomGroupInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {ICChatRoomGroupInvite} message CChatRoomGroupInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomGroupInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomGroupInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomGroupInvite} CChatRoomGroupInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupInvite.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomGroupInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.accountid = reader.uint32();
                    break;
                case 2:
                    message.accountid_actor = reader.uint32();
                    break;
                case 3:
                    message.time_invited = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomGroupInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomGroupInvite} CChatRoomGroupInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomGroupInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomGroupInvite message.
         * @function verify
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomGroupInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                if (!$util.isInteger(message.accountid_actor))
                    return "accountid_actor: integer expected";
            if (message.time_invited != null && message.hasOwnProperty("time_invited"))
                if (!$util.isInteger(message.time_invited))
                    return "time_invited: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoomGroupInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomGroupInvite} CChatRoomGroupInvite
         */
        CChatRoomGroupInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomGroupInvite)
                return object;
            var message = new $root.CChatRoomGroupInvite();
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.accountid_actor != null)
                message.accountid_actor = object.accountid_actor >>> 0;
            if (object.time_invited != null)
                message.time_invited = object.time_invited >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomGroupInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomGroupInvite
         * @static
         * @param {CChatRoomGroupInvite} message CChatRoomGroupInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomGroupInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountid = 0;
                object.accountid_actor = 0;
                object.time_invited = 0;
            }
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.accountid_actor != null && message.hasOwnProperty("accountid_actor"))
                object.accountid_actor = message.accountid_actor;
            if (message.time_invited != null && message.hasOwnProperty("time_invited"))
                object.time_invited = message.time_invited;
            return object;
        };
    
        /**
         * Converts this CChatRoomGroupInvite to JSON.
         * @function toJSON
         * @memberof CChatRoomGroupInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomGroupInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomGroupInvite;
    })();
    
    $root.CChatRoom_DeleteInviteLink_Request = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteInviteLink_Request.
         * @exports ICChatRoom_DeleteInviteLink_Request
         * @interface ICChatRoom_DeleteInviteLink_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_DeleteInviteLink_Request chat_group_id
         * @property {string|null} [invite_code] CChatRoom_DeleteInviteLink_Request invite_code
         */
    
        /**
         * Constructs a new CChatRoom_DeleteInviteLink_Request.
         * @exports CChatRoom_DeleteInviteLink_Request
         * @classdesc Represents a CChatRoom_DeleteInviteLink_Request.
         * @implements ICChatRoom_DeleteInviteLink_Request
         * @constructor
         * @param {ICChatRoom_DeleteInviteLink_Request=} [properties] Properties to set
         */
        function CChatRoom_DeleteInviteLink_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteInviteLink_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @instance
         */
        CChatRoom_DeleteInviteLink_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteInviteLink_Request invite_code.
         * @member {string} invite_code
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @instance
         */
        CChatRoom_DeleteInviteLink_Request.prototype.invite_code = "";
    
        /**
         * Creates a new CChatRoom_DeleteInviteLink_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Request=} [properties] Properties to set
         * @returns {CChatRoom_DeleteInviteLink_Request} CChatRoom_DeleteInviteLink_Request instance
         */
        CChatRoom_DeleteInviteLink_Request.create = function create(properties) {
            return new CChatRoom_DeleteInviteLink_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteInviteLink_Request message. Does not implicitly {@link CChatRoom_DeleteInviteLink_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Request} message CChatRoom_DeleteInviteLink_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteInviteLink_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.invite_code);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteInviteLink_Request message, length delimited. Does not implicitly {@link CChatRoom_DeleteInviteLink_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Request} message CChatRoom_DeleteInviteLink_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteInviteLink_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteInviteLink_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteInviteLink_Request} CChatRoom_DeleteInviteLink_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteInviteLink_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteInviteLink_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.invite_code = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteInviteLink_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteInviteLink_Request} CChatRoom_DeleteInviteLink_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteInviteLink_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteInviteLink_Request message.
         * @function verify
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteInviteLink_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                if (!$util.isString(message.invite_code))
                    return "invite_code: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteInviteLink_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteInviteLink_Request} CChatRoom_DeleteInviteLink_Request
         */
        CChatRoom_DeleteInviteLink_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteInviteLink_Request)
                return object;
            var message = new $root.CChatRoom_DeleteInviteLink_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.invite_code != null)
                message.invite_code = String(object.invite_code);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteInviteLink_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @static
         * @param {CChatRoom_DeleteInviteLink_Request} message CChatRoom_DeleteInviteLink_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteInviteLink_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.invite_code = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.invite_code != null && message.hasOwnProperty("invite_code"))
                object.invite_code = message.invite_code;
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteInviteLink_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteInviteLink_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteInviteLink_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteInviteLink_Request;
    })();
    
    $root.CChatRoom_DeleteInviteLink_Response = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteInviteLink_Response.
         * @exports ICChatRoom_DeleteInviteLink_Response
         * @interface ICChatRoom_DeleteInviteLink_Response
         */
    
        /**
         * Constructs a new CChatRoom_DeleteInviteLink_Response.
         * @exports CChatRoom_DeleteInviteLink_Response
         * @classdesc Represents a CChatRoom_DeleteInviteLink_Response.
         * @implements ICChatRoom_DeleteInviteLink_Response
         * @constructor
         * @param {ICChatRoom_DeleteInviteLink_Response=} [properties] Properties to set
         */
        function CChatRoom_DeleteInviteLink_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_DeleteInviteLink_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Response=} [properties] Properties to set
         * @returns {CChatRoom_DeleteInviteLink_Response} CChatRoom_DeleteInviteLink_Response instance
         */
        CChatRoom_DeleteInviteLink_Response.create = function create(properties) {
            return new CChatRoom_DeleteInviteLink_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteInviteLink_Response message. Does not implicitly {@link CChatRoom_DeleteInviteLink_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Response} message CChatRoom_DeleteInviteLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteInviteLink_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteInviteLink_Response message, length delimited. Does not implicitly {@link CChatRoom_DeleteInviteLink_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {ICChatRoom_DeleteInviteLink_Response} message CChatRoom_DeleteInviteLink_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteInviteLink_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteInviteLink_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteInviteLink_Response} CChatRoom_DeleteInviteLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteInviteLink_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteInviteLink_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteInviteLink_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteInviteLink_Response} CChatRoom_DeleteInviteLink_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteInviteLink_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteInviteLink_Response message.
         * @function verify
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteInviteLink_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteInviteLink_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteInviteLink_Response} CChatRoom_DeleteInviteLink_Response
         */
        CChatRoom_DeleteInviteLink_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteInviteLink_Response)
                return object;
            return new $root.CChatRoom_DeleteInviteLink_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteInviteLink_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @static
         * @param {CChatRoom_DeleteInviteLink_Response} message CChatRoom_DeleteInviteLink_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteInviteLink_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_DeleteInviteLink_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteInviteLink_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteInviteLink_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteInviteLink_Response;
    })();
    
    $root.CChatRoom_SetSessionActiveChatRoomGroups_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetSessionActiveChatRoomGroups_Request.
         * @exports ICChatRoom_SetSessionActiveChatRoomGroups_Request
         * @interface ICChatRoom_SetSessionActiveChatRoomGroups_Request
         * @property {Array.<number|Long>|null} [chat_group_ids] CChatRoom_SetSessionActiveChatRoomGroups_Request chat_group_ids
         * @property {Array.<number|Long>|null} [chat_groups_data_requested] CChatRoom_SetSessionActiveChatRoomGroups_Request chat_groups_data_requested
         * @property {number|null} [virtualize_members_threshold] CChatRoom_SetSessionActiveChatRoomGroups_Request virtualize_members_threshold
         */
    
        /**
         * Constructs a new CChatRoom_SetSessionActiveChatRoomGroups_Request.
         * @exports CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @classdesc Represents a CChatRoom_SetSessionActiveChatRoomGroups_Request.
         * @implements ICChatRoom_SetSessionActiveChatRoomGroups_Request
         * @constructor
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request=} [properties] Properties to set
         */
        function CChatRoom_SetSessionActiveChatRoomGroups_Request(properties) {
            this.chat_group_ids = [];
            this.chat_groups_data_requested = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetSessionActiveChatRoomGroups_Request chat_group_ids.
         * @member {Array.<number|Long>} chat_group_ids
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.prototype.chat_group_ids = $util.emptyArray;
    
        /**
         * CChatRoom_SetSessionActiveChatRoomGroups_Request chat_groups_data_requested.
         * @member {Array.<number|Long>} chat_groups_data_requested
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.prototype.chat_groups_data_requested = $util.emptyArray;
    
        /**
         * CChatRoom_SetSessionActiveChatRoomGroups_Request virtualize_members_threshold.
         * @member {number} virtualize_members_threshold
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.prototype.virtualize_members_threshold = 0;
    
        /**
         * Creates a new CChatRoom_SetSessionActiveChatRoomGroups_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Request} CChatRoom_SetSessionActiveChatRoomGroups_Request instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.create = function create(properties) {
            return new CChatRoom_SetSessionActiveChatRoomGroups_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetSessionActiveChatRoomGroups_Request message. Does not implicitly {@link CChatRoom_SetSessionActiveChatRoomGroups_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request} message CChatRoom_SetSessionActiveChatRoomGroups_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_ids != null && message.chat_group_ids.length)
                for (var i = 0; i < message.chat_group_ids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_ids[i]);
            if (message.chat_groups_data_requested != null && message.chat_groups_data_requested.length)
                for (var i = 0; i < message.chat_groups_data_requested.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_groups_data_requested[i]);
            if (message.virtualize_members_threshold != null && message.hasOwnProperty("virtualize_members_threshold"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.virtualize_members_threshold);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetSessionActiveChatRoomGroups_Request message, length delimited. Does not implicitly {@link CChatRoom_SetSessionActiveChatRoomGroups_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request} message CChatRoom_SetSessionActiveChatRoomGroups_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetSessionActiveChatRoomGroups_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Request} CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetSessionActiveChatRoomGroups_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.chat_group_ids && message.chat_group_ids.length))
                        message.chat_group_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.chat_group_ids.push(reader.uint64());
                    } else
                        message.chat_group_ids.push(reader.uint64());
                    break;
                case 2:
                    if (!(message.chat_groups_data_requested && message.chat_groups_data_requested.length))
                        message.chat_groups_data_requested = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.chat_groups_data_requested.push(reader.uint64());
                    } else
                        message.chat_groups_data_requested.push(reader.uint64());
                    break;
                case 3:
                    message.virtualize_members_threshold = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetSessionActiveChatRoomGroups_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Request} CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetSessionActiveChatRoomGroups_Request message.
         * @function verify
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_ids != null && message.hasOwnProperty("chat_group_ids")) {
                if (!Array.isArray(message.chat_group_ids))
                    return "chat_group_ids: array expected";
                for (var i = 0; i < message.chat_group_ids.length; ++i)
                    if (!$util.isInteger(message.chat_group_ids[i]) && !(message.chat_group_ids[i] && $util.isInteger(message.chat_group_ids[i].low) && $util.isInteger(message.chat_group_ids[i].high)))
                        return "chat_group_ids: integer|Long[] expected";
            }
            if (message.chat_groups_data_requested != null && message.hasOwnProperty("chat_groups_data_requested")) {
                if (!Array.isArray(message.chat_groups_data_requested))
                    return "chat_groups_data_requested: array expected";
                for (var i = 0; i < message.chat_groups_data_requested.length; ++i)
                    if (!$util.isInteger(message.chat_groups_data_requested[i]) && !(message.chat_groups_data_requested[i] && $util.isInteger(message.chat_groups_data_requested[i].low) && $util.isInteger(message.chat_groups_data_requested[i].high)))
                        return "chat_groups_data_requested: integer|Long[] expected";
            }
            if (message.virtualize_members_threshold != null && message.hasOwnProperty("virtualize_members_threshold"))
                if (!$util.isInteger(message.virtualize_members_threshold))
                    return "virtualize_members_threshold: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetSessionActiveChatRoomGroups_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Request} CChatRoom_SetSessionActiveChatRoomGroups_Request
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetSessionActiveChatRoomGroups_Request)
                return object;
            var message = new $root.CChatRoom_SetSessionActiveChatRoomGroups_Request();
            if (object.chat_group_ids) {
                if (!Array.isArray(object.chat_group_ids))
                    throw TypeError(".CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_group_ids: array expected");
                message.chat_group_ids = [];
                for (var i = 0; i < object.chat_group_ids.length; ++i)
                    if ($util.Long)
                        (message.chat_group_ids[i] = $util.Long.fromValue(object.chat_group_ids[i])).unsigned = true;
                    else if (typeof object.chat_group_ids[i] === "string")
                        message.chat_group_ids[i] = parseInt(object.chat_group_ids[i], 10);
                    else if (typeof object.chat_group_ids[i] === "number")
                        message.chat_group_ids[i] = object.chat_group_ids[i];
                    else if (typeof object.chat_group_ids[i] === "object")
                        message.chat_group_ids[i] = new $util.LongBits(object.chat_group_ids[i].low >>> 0, object.chat_group_ids[i].high >>> 0).toNumber(true);
            }
            if (object.chat_groups_data_requested) {
                if (!Array.isArray(object.chat_groups_data_requested))
                    throw TypeError(".CChatRoom_SetSessionActiveChatRoomGroups_Request.chat_groups_data_requested: array expected");
                message.chat_groups_data_requested = [];
                for (var i = 0; i < object.chat_groups_data_requested.length; ++i)
                    if ($util.Long)
                        (message.chat_groups_data_requested[i] = $util.Long.fromValue(object.chat_groups_data_requested[i])).unsigned = true;
                    else if (typeof object.chat_groups_data_requested[i] === "string")
                        message.chat_groups_data_requested[i] = parseInt(object.chat_groups_data_requested[i], 10);
                    else if (typeof object.chat_groups_data_requested[i] === "number")
                        message.chat_groups_data_requested[i] = object.chat_groups_data_requested[i];
                    else if (typeof object.chat_groups_data_requested[i] === "object")
                        message.chat_groups_data_requested[i] = new $util.LongBits(object.chat_groups_data_requested[i].low >>> 0, object.chat_groups_data_requested[i].high >>> 0).toNumber(true);
            }
            if (object.virtualize_members_threshold != null)
                message.virtualize_members_threshold = object.virtualize_members_threshold | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetSessionActiveChatRoomGroups_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @static
         * @param {CChatRoom_SetSessionActiveChatRoomGroups_Request} message CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.chat_group_ids = [];
                object.chat_groups_data_requested = [];
            }
            if (options.defaults)
                object.virtualize_members_threshold = 0;
            if (message.chat_group_ids && message.chat_group_ids.length) {
                object.chat_group_ids = [];
                for (var j = 0; j < message.chat_group_ids.length; ++j)
                    if (typeof message.chat_group_ids[j] === "number")
                        object.chat_group_ids[j] = options.longs === String ? String(message.chat_group_ids[j]) : message.chat_group_ids[j];
                    else
                        object.chat_group_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_ids[j]) : options.longs === Number ? new $util.LongBits(message.chat_group_ids[j].low >>> 0, message.chat_group_ids[j].high >>> 0).toNumber(true) : message.chat_group_ids[j];
            }
            if (message.chat_groups_data_requested && message.chat_groups_data_requested.length) {
                object.chat_groups_data_requested = [];
                for (var j = 0; j < message.chat_groups_data_requested.length; ++j)
                    if (typeof message.chat_groups_data_requested[j] === "number")
                        object.chat_groups_data_requested[j] = options.longs === String ? String(message.chat_groups_data_requested[j]) : message.chat_groups_data_requested[j];
                    else
                        object.chat_groups_data_requested[j] = options.longs === String ? $util.Long.prototype.toString.call(message.chat_groups_data_requested[j]) : options.longs === Number ? new $util.LongBits(message.chat_groups_data_requested[j].low >>> 0, message.chat_groups_data_requested[j].high >>> 0).toNumber(true) : message.chat_groups_data_requested[j];
            }
            if (message.virtualize_members_threshold != null && message.hasOwnProperty("virtualize_members_threshold"))
                object.virtualize_members_threshold = message.virtualize_members_threshold;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetSessionActiveChatRoomGroups_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetSessionActiveChatRoomGroups_Request;
    })();
    
    $root.CChatRoom_SetSessionActiveChatRoomGroups_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetSessionActiveChatRoomGroups_Response.
         * @exports ICChatRoom_SetSessionActiveChatRoomGroups_Response
         * @interface ICChatRoom_SetSessionActiveChatRoomGroups_Response
         * @property {Array.<ICChatRoomGroupState>|null} [chat_states] CChatRoom_SetSessionActiveChatRoomGroups_Response chat_states
         * @property {Array.<number|Long>|null} [virtualize_members_chat_group_ids] CChatRoom_SetSessionActiveChatRoomGroups_Response virtualize_members_chat_group_ids
         */
    
        /**
         * Constructs a new CChatRoom_SetSessionActiveChatRoomGroups_Response.
         * @exports CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @classdesc Represents a CChatRoom_SetSessionActiveChatRoomGroups_Response.
         * @implements ICChatRoom_SetSessionActiveChatRoomGroups_Response
         * @constructor
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Response=} [properties] Properties to set
         */
        function CChatRoom_SetSessionActiveChatRoomGroups_Response(properties) {
            this.chat_states = [];
            this.virtualize_members_chat_group_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetSessionActiveChatRoomGroups_Response chat_states.
         * @member {Array.<ICChatRoomGroupState>} chat_states
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.prototype.chat_states = $util.emptyArray;
    
        /**
         * CChatRoom_SetSessionActiveChatRoomGroups_Response virtualize_members_chat_group_ids.
         * @member {Array.<number|Long>} virtualize_members_chat_group_ids
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.prototype.virtualize_members_chat_group_ids = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_SetSessionActiveChatRoomGroups_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Response} CChatRoom_SetSessionActiveChatRoomGroups_Response instance
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.create = function create(properties) {
            return new CChatRoom_SetSessionActiveChatRoomGroups_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetSessionActiveChatRoomGroups_Response message. Does not implicitly {@link CChatRoom_SetSessionActiveChatRoomGroups_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Response} message CChatRoom_SetSessionActiveChatRoomGroups_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_states != null && message.chat_states.length)
                for (var i = 0; i < message.chat_states.length; ++i)
                    $root.CChatRoomGroupState.encode(message.chat_states[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.virtualize_members_chat_group_ids != null && message.virtualize_members_chat_group_ids.length)
                for (var i = 0; i < message.virtualize_members_chat_group_ids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.virtualize_members_chat_group_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetSessionActiveChatRoomGroups_Response message, length delimited. Does not implicitly {@link CChatRoom_SetSessionActiveChatRoomGroups_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Response} message CChatRoom_SetSessionActiveChatRoomGroups_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetSessionActiveChatRoomGroups_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Response} CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetSessionActiveChatRoomGroups_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.chat_states && message.chat_states.length))
                        message.chat_states = [];
                    message.chat_states.push($root.CChatRoomGroupState.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.virtualize_members_chat_group_ids && message.virtualize_members_chat_group_ids.length))
                        message.virtualize_members_chat_group_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.virtualize_members_chat_group_ids.push(reader.uint64());
                    } else
                        message.virtualize_members_chat_group_ids.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetSessionActiveChatRoomGroups_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Response} CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetSessionActiveChatRoomGroups_Response message.
         * @function verify
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_states != null && message.hasOwnProperty("chat_states")) {
                if (!Array.isArray(message.chat_states))
                    return "chat_states: array expected";
                for (var i = 0; i < message.chat_states.length; ++i) {
                    var error = $root.CChatRoomGroupState.verify(message.chat_states[i]);
                    if (error)
                        return "chat_states." + error;
                }
            }
            if (message.virtualize_members_chat_group_ids != null && message.hasOwnProperty("virtualize_members_chat_group_ids")) {
                if (!Array.isArray(message.virtualize_members_chat_group_ids))
                    return "virtualize_members_chat_group_ids: array expected";
                for (var i = 0; i < message.virtualize_members_chat_group_ids.length; ++i)
                    if (!$util.isInteger(message.virtualize_members_chat_group_ids[i]) && !(message.virtualize_members_chat_group_ids[i] && $util.isInteger(message.virtualize_members_chat_group_ids[i].low) && $util.isInteger(message.virtualize_members_chat_group_ids[i].high)))
                        return "virtualize_members_chat_group_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetSessionActiveChatRoomGroups_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetSessionActiveChatRoomGroups_Response} CChatRoom_SetSessionActiveChatRoomGroups_Response
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetSessionActiveChatRoomGroups_Response)
                return object;
            var message = new $root.CChatRoom_SetSessionActiveChatRoomGroups_Response();
            if (object.chat_states) {
                if (!Array.isArray(object.chat_states))
                    throw TypeError(".CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states: array expected");
                message.chat_states = [];
                for (var i = 0; i < object.chat_states.length; ++i) {
                    if (typeof object.chat_states[i] !== "object")
                        throw TypeError(".CChatRoom_SetSessionActiveChatRoomGroups_Response.chat_states: object expected");
                    message.chat_states[i] = $root.CChatRoomGroupState.fromObject(object.chat_states[i]);
                }
            }
            if (object.virtualize_members_chat_group_ids) {
                if (!Array.isArray(object.virtualize_members_chat_group_ids))
                    throw TypeError(".CChatRoom_SetSessionActiveChatRoomGroups_Response.virtualize_members_chat_group_ids: array expected");
                message.virtualize_members_chat_group_ids = [];
                for (var i = 0; i < object.virtualize_members_chat_group_ids.length; ++i)
                    if ($util.Long)
                        (message.virtualize_members_chat_group_ids[i] = $util.Long.fromValue(object.virtualize_members_chat_group_ids[i])).unsigned = true;
                    else if (typeof object.virtualize_members_chat_group_ids[i] === "string")
                        message.virtualize_members_chat_group_ids[i] = parseInt(object.virtualize_members_chat_group_ids[i], 10);
                    else if (typeof object.virtualize_members_chat_group_ids[i] === "number")
                        message.virtualize_members_chat_group_ids[i] = object.virtualize_members_chat_group_ids[i];
                    else if (typeof object.virtualize_members_chat_group_ids[i] === "object")
                        message.virtualize_members_chat_group_ids[i] = new $util.LongBits(object.virtualize_members_chat_group_ids[i].low >>> 0, object.virtualize_members_chat_group_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetSessionActiveChatRoomGroups_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @static
         * @param {CChatRoom_SetSessionActiveChatRoomGroups_Response} message CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.chat_states = [];
                object.virtualize_members_chat_group_ids = [];
            }
            if (message.chat_states && message.chat_states.length) {
                object.chat_states = [];
                for (var j = 0; j < message.chat_states.length; ++j)
                    object.chat_states[j] = $root.CChatRoomGroupState.toObject(message.chat_states[j], options);
            }
            if (message.virtualize_members_chat_group_ids && message.virtualize_members_chat_group_ids.length) {
                object.virtualize_members_chat_group_ids = [];
                for (var j = 0; j < message.virtualize_members_chat_group_ids.length; ++j)
                    if (typeof message.virtualize_members_chat_group_ids[j] === "number")
                        object.virtualize_members_chat_group_ids[j] = options.longs === String ? String(message.virtualize_members_chat_group_ids[j]) : message.virtualize_members_chat_group_ids[j];
                    else
                        object.virtualize_members_chat_group_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.virtualize_members_chat_group_ids[j]) : options.longs === Number ? new $util.LongBits(message.virtualize_members_chat_group_ids[j].low >>> 0, message.virtualize_members_chat_group_ids[j].high >>> 0).toNumber(true) : message.virtualize_members_chat_group_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetSessionActiveChatRoomGroups_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetSessionActiveChatRoomGroups_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetSessionActiveChatRoomGroups_Response;
    })();
    
    $root.CChatRoom_SetUserChatGroupPreferences_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserChatGroupPreferences_Request.
         * @exports ICChatRoom_SetUserChatGroupPreferences_Request
         * @interface ICChatRoom_SetUserChatGroupPreferences_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SetUserChatGroupPreferences_Request chat_group_id
         * @property {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences|null} [chat_group_preferences] CChatRoom_SetUserChatGroupPreferences_Request chat_group_preferences
         * @property {Array.<ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>|null} [chat_room_preferences] CChatRoom_SetUserChatGroupPreferences_Request chat_room_preferences
         */
    
        /**
         * Constructs a new CChatRoom_SetUserChatGroupPreferences_Request.
         * @exports CChatRoom_SetUserChatGroupPreferences_Request
         * @classdesc Represents a CChatRoom_SetUserChatGroupPreferences_Request.
         * @implements ICChatRoom_SetUserChatGroupPreferences_Request
         * @constructor
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request=} [properties] Properties to set
         */
        function CChatRoom_SetUserChatGroupPreferences_Request(properties) {
            this.chat_room_preferences = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request chat_group_preferences.
         * @member {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences|null|undefined} chat_group_preferences
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request.prototype.chat_group_preferences = null;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request chat_room_preferences.
         * @member {Array.<ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences>} chat_room_preferences
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request.prototype.chat_room_preferences = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_SetUserChatGroupPreferences_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request=} [properties] Properties to set
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request} CChatRoom_SetUserChatGroupPreferences_Request instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request.create = function create(properties) {
            return new CChatRoom_SetUserChatGroupPreferences_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request message. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request} message CChatRoom_SetUserChatGroupPreferences_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_group_preferences != null && message.hasOwnProperty("chat_group_preferences"))
                $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.encode(message.chat_group_preferences, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.chat_room_preferences != null && message.chat_room_preferences.length)
                for (var i = 0; i < message.chat_room_preferences.length; ++i)
                    $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.encode(message.chat_room_preferences[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request message, length delimited. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request} message CChatRoom_SetUserChatGroupPreferences_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request} CChatRoom_SetUserChatGroupPreferences_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserChatGroupPreferences_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_group_preferences = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.decode(reader, reader.uint32());
                    break;
                case 3:
                    if (!(message.chat_room_preferences && message.chat_room_preferences.length))
                        message.chat_room_preferences = [];
                    message.chat_room_preferences.push($root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request} CChatRoom_SetUserChatGroupPreferences_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserChatGroupPreferences_Request message.
         * @function verify
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserChatGroupPreferences_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_group_preferences != null && message.hasOwnProperty("chat_group_preferences")) {
                var error = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.verify(message.chat_group_preferences);
                if (error)
                    return "chat_group_preferences." + error;
            }
            if (message.chat_room_preferences != null && message.hasOwnProperty("chat_room_preferences")) {
                if (!Array.isArray(message.chat_room_preferences))
                    return "chat_room_preferences: array expected";
                for (var i = 0; i < message.chat_room_preferences.length; ++i) {
                    var error = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.verify(message.chat_room_preferences[i]);
                    if (error)
                        return "chat_room_preferences." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserChatGroupPreferences_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request} CChatRoom_SetUserChatGroupPreferences_Request
         */
        CChatRoom_SetUserChatGroupPreferences_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserChatGroupPreferences_Request)
                return object;
            var message = new $root.CChatRoom_SetUserChatGroupPreferences_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_group_preferences != null) {
                if (typeof object.chat_group_preferences !== "object")
                    throw TypeError(".CChatRoom_SetUserChatGroupPreferences_Request.chat_group_preferences: object expected");
                message.chat_group_preferences = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.fromObject(object.chat_group_preferences);
            }
            if (object.chat_room_preferences) {
                if (!Array.isArray(object.chat_room_preferences))
                    throw TypeError(".CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences: array expected");
                message.chat_room_preferences = [];
                for (var i = 0; i < object.chat_room_preferences.length; ++i) {
                    if (typeof object.chat_room_preferences[i] !== "object")
                        throw TypeError(".CChatRoom_SetUserChatGroupPreferences_Request.chat_room_preferences: object expected");
                    message.chat_room_preferences[i] = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.fromObject(object.chat_room_preferences[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserChatGroupPreferences_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @static
         * @param {CChatRoom_SetUserChatGroupPreferences_Request} message CChatRoom_SetUserChatGroupPreferences_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserChatGroupPreferences_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.chat_room_preferences = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.chat_group_preferences = null;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_group_preferences != null && message.hasOwnProperty("chat_group_preferences"))
                object.chat_group_preferences = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.toObject(message.chat_group_preferences, options);
            if (message.chat_room_preferences && message.chat_room_preferences.length) {
                object.chat_room_preferences = [];
                for (var j = 0; j < message.chat_room_preferences.length; ++j)
                    object.chat_room_preferences[j] = $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.toObject(message.chat_room_preferences[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetUserChatGroupPreferences_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserChatGroupPreferences_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserChatGroupPreferences_Request;
    })();
    
    $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.
         * @exports ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @interface ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @property {number|null} [desktop_notification_level] CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences desktop_notification_level
         * @property {number|null} [mobile_notification_level] CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences mobile_notification_level
         * @property {boolean|null} [unread_indicator_muted] CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences unread_indicator_muted
         */
    
        /**
         * Constructs a new CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.
         * @exports CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @classdesc Represents a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.
         * @implements ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @constructor
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences=} [properties] Properties to set
         */
        function CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences desktop_notification_level.
         * @member {number} desktop_notification_level
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.prototype.desktop_notification_level = 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences mobile_notification_level.
         * @member {number} mobile_notification_level
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.prototype.mobile_notification_level = 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences unread_indicator_muted.
         * @member {boolean} unread_indicator_muted
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.prototype.unread_indicator_muted = false;
    
        /**
         * Creates a new CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences=} [properties] Properties to set
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.create = function create(properties) {
            return new CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.desktop_notification_level);
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mobile_notification_level);
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.unread_indicator_muted);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message, length delimited. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.desktop_notification_level = reader.int32();
                    break;
                case 2:
                    message.mobile_notification_level = reader.int32();
                    break;
                case 3:
                    message.unread_indicator_muted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message.
         * @function verify
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                if (!$util.isInteger(message.desktop_notification_level))
                    return "desktop_notification_level: integer expected";
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                if (!$util.isInteger(message.mobile_notification_level))
                    return "mobile_notification_level: integer expected";
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                if (typeof message.unread_indicator_muted !== "boolean")
                    return "unread_indicator_muted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences)
                return object;
            var message = new $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences();
            if (object.desktop_notification_level != null)
                message.desktop_notification_level = object.desktop_notification_level | 0;
            if (object.mobile_notification_level != null)
                message.mobile_notification_level = object.mobile_notification_level | 0;
            if (object.unread_indicator_muted != null)
                message.unread_indicator_muted = Boolean(object.unread_indicator_muted);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @static
         * @param {CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.desktop_notification_level = 0;
                object.mobile_notification_level = 0;
                object.unread_indicator_muted = false;
            }
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                object.desktop_notification_level = message.desktop_notification_level;
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                object.mobile_notification_level = message.mobile_notification_level;
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                object.unread_indicator_muted = message.unread_indicator_muted;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences;
    })();
    
    $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.
         * @exports ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @interface ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @property {number|Long|null} [chat_id] CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences chat_id
         * @property {number|null} [desktop_notification_level] CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences desktop_notification_level
         * @property {number|null} [mobile_notification_level] CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences mobile_notification_level
         * @property {boolean|null} [unread_indicator_muted] CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences unread_indicator_muted
         */
    
        /**
         * Constructs a new CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.
         * @exports CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @classdesc Represents a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.
         * @implements ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @constructor
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences=} [properties] Properties to set
         */
        function CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences desktop_notification_level.
         * @member {number} desktop_notification_level
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.prototype.desktop_notification_level = 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences mobile_notification_level.
         * @member {number} mobile_notification_level
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.prototype.mobile_notification_level = 0;
    
        /**
         * CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences unread_indicator_muted.
         * @member {boolean} unread_indicator_muted
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.prototype.unread_indicator_muted = false;
    
        /**
         * Creates a new CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences=} [properties] Properties to set
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences instance
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.create = function create(properties) {
            return new CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_id);
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.desktop_notification_level);
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.mobile_notification_level);
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.unread_indicator_muted);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message, length delimited. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_id = reader.uint64();
                    break;
                case 2:
                    message.desktop_notification_level = reader.int32();
                    break;
                case 3:
                    message.mobile_notification_level = reader.int32();
                    break;
                case 4:
                    message.unread_indicator_muted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message.
         * @function verify
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                if (!$util.isInteger(message.desktop_notification_level))
                    return "desktop_notification_level: integer expected";
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                if (!$util.isInteger(message.mobile_notification_level))
                    return "mobile_notification_level: integer expected";
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                if (typeof message.unread_indicator_muted !== "boolean")
                    return "unread_indicator_muted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences)
                return object;
            var message = new $root.CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences();
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.desktop_notification_level != null)
                message.desktop_notification_level = object.desktop_notification_level | 0;
            if (object.mobile_notification_level != null)
                message.mobile_notification_level = object.mobile_notification_level | 0;
            if (object.unread_indicator_muted != null)
                message.unread_indicator_muted = Boolean(object.unread_indicator_muted);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @static
         * @param {CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences} message CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.desktop_notification_level = 0;
                object.mobile_notification_level = 0;
                object.unread_indicator_muted = false;
            }
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.desktop_notification_level != null && message.hasOwnProperty("desktop_notification_level"))
                object.desktop_notification_level = message.desktop_notification_level;
            if (message.mobile_notification_level != null && message.hasOwnProperty("mobile_notification_level"))
                object.mobile_notification_level = message.mobile_notification_level;
            if (message.unread_indicator_muted != null && message.hasOwnProperty("unread_indicator_muted"))
                object.unread_indicator_muted = message.unread_indicator_muted;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences;
    })();
    
    $root.CChatRoom_SetUserChatGroupPreferences_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SetUserChatGroupPreferences_Response.
         * @exports ICChatRoom_SetUserChatGroupPreferences_Response
         * @interface ICChatRoom_SetUserChatGroupPreferences_Response
         */
    
        /**
         * Constructs a new CChatRoom_SetUserChatGroupPreferences_Response.
         * @exports CChatRoom_SetUserChatGroupPreferences_Response
         * @classdesc Represents a CChatRoom_SetUserChatGroupPreferences_Response.
         * @implements ICChatRoom_SetUserChatGroupPreferences_Response
         * @constructor
         * @param {ICChatRoom_SetUserChatGroupPreferences_Response=} [properties] Properties to set
         */
        function CChatRoom_SetUserChatGroupPreferences_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_SetUserChatGroupPreferences_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Response=} [properties] Properties to set
         * @returns {CChatRoom_SetUserChatGroupPreferences_Response} CChatRoom_SetUserChatGroupPreferences_Response instance
         */
        CChatRoom_SetUserChatGroupPreferences_Response.create = function create(properties) {
            return new CChatRoom_SetUserChatGroupPreferences_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Response message. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Response} message CChatRoom_SetUserChatGroupPreferences_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SetUserChatGroupPreferences_Response message, length delimited. Does not implicitly {@link CChatRoom_SetUserChatGroupPreferences_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {ICChatRoom_SetUserChatGroupPreferences_Response} message CChatRoom_SetUserChatGroupPreferences_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SetUserChatGroupPreferences_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SetUserChatGroupPreferences_Response} CChatRoom_SetUserChatGroupPreferences_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SetUserChatGroupPreferences_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SetUserChatGroupPreferences_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SetUserChatGroupPreferences_Response} CChatRoom_SetUserChatGroupPreferences_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SetUserChatGroupPreferences_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SetUserChatGroupPreferences_Response message.
         * @function verify
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SetUserChatGroupPreferences_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SetUserChatGroupPreferences_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SetUserChatGroupPreferences_Response} CChatRoom_SetUserChatGroupPreferences_Response
         */
        CChatRoom_SetUserChatGroupPreferences_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SetUserChatGroupPreferences_Response)
                return object;
            return new $root.CChatRoom_SetUserChatGroupPreferences_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_SetUserChatGroupPreferences_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @static
         * @param {CChatRoom_SetUserChatGroupPreferences_Response} message CChatRoom_SetUserChatGroupPreferences_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SetUserChatGroupPreferences_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_SetUserChatGroupPreferences_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SetUserChatGroupPreferences_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SetUserChatGroupPreferences_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SetUserChatGroupPreferences_Response;
    })();
    
    $root.CChatRoom_DeleteChatMessages_Request = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteChatMessages_Request.
         * @exports ICChatRoom_DeleteChatMessages_Request
         * @interface ICChatRoom_DeleteChatMessages_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_DeleteChatMessages_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_DeleteChatMessages_Request chat_id
         * @property {Array.<ICChatRoom_DeleteChatMessages_Request_Message>|null} [messages] CChatRoom_DeleteChatMessages_Request messages
         */
    
        /**
         * Constructs a new CChatRoom_DeleteChatMessages_Request.
         * @exports CChatRoom_DeleteChatMessages_Request
         * @classdesc Represents a CChatRoom_DeleteChatMessages_Request.
         * @implements ICChatRoom_DeleteChatMessages_Request
         * @constructor
         * @param {ICChatRoom_DeleteChatMessages_Request=} [properties] Properties to set
         */
        function CChatRoom_DeleteChatMessages_Request(properties) {
            this.messages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteChatMessages_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @instance
         */
        CChatRoom_DeleteChatMessages_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteChatMessages_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @instance
         */
        CChatRoom_DeleteChatMessages_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_DeleteChatMessages_Request messages.
         * @member {Array.<ICChatRoom_DeleteChatMessages_Request_Message>} messages
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @instance
         */
        CChatRoom_DeleteChatMessages_Request.prototype.messages = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_DeleteChatMessages_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request=} [properties] Properties to set
         * @returns {CChatRoom_DeleteChatMessages_Request} CChatRoom_DeleteChatMessages_Request instance
         */
        CChatRoom_DeleteChatMessages_Request.create = function create(properties) {
            return new CChatRoom_DeleteChatMessages_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Request message. Does not implicitly {@link CChatRoom_DeleteChatMessages_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request} message CChatRoom_DeleteChatMessages_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.messages != null && message.messages.length)
                for (var i = 0; i < message.messages.length; ++i)
                    $root.CChatRoom_DeleteChatMessages_Request_Message.encode(message.messages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Request message, length delimited. Does not implicitly {@link CChatRoom_DeleteChatMessages_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request} message CChatRoom_DeleteChatMessages_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteChatMessages_Request} CChatRoom_DeleteChatMessages_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteChatMessages_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    if (!(message.messages && message.messages.length))
                        message.messages = [];
                    message.messages.push($root.CChatRoom_DeleteChatMessages_Request_Message.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteChatMessages_Request} CChatRoom_DeleteChatMessages_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteChatMessages_Request message.
         * @function verify
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteChatMessages_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.messages != null && message.hasOwnProperty("messages")) {
                if (!Array.isArray(message.messages))
                    return "messages: array expected";
                for (var i = 0; i < message.messages.length; ++i) {
                    var error = $root.CChatRoom_DeleteChatMessages_Request_Message.verify(message.messages[i]);
                    if (error)
                        return "messages." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteChatMessages_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteChatMessages_Request} CChatRoom_DeleteChatMessages_Request
         */
        CChatRoom_DeleteChatMessages_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteChatMessages_Request)
                return object;
            var message = new $root.CChatRoom_DeleteChatMessages_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.messages) {
                if (!Array.isArray(object.messages))
                    throw TypeError(".CChatRoom_DeleteChatMessages_Request.messages: array expected");
                message.messages = [];
                for (var i = 0; i < object.messages.length; ++i) {
                    if (typeof object.messages[i] !== "object")
                        throw TypeError(".CChatRoom_DeleteChatMessages_Request.messages: object expected");
                    message.messages[i] = $root.CChatRoom_DeleteChatMessages_Request_Message.fromObject(object.messages[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteChatMessages_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @static
         * @param {CChatRoom_DeleteChatMessages_Request} message CChatRoom_DeleteChatMessages_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteChatMessages_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.messages = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.messages && message.messages.length) {
                object.messages = [];
                for (var j = 0; j < message.messages.length; ++j)
                    object.messages[j] = $root.CChatRoom_DeleteChatMessages_Request_Message.toObject(message.messages[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteChatMessages_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteChatMessages_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteChatMessages_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteChatMessages_Request;
    })();
    
    $root.CChatRoom_DeleteChatMessages_Request_Message = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteChatMessages_Request_Message.
         * @exports ICChatRoom_DeleteChatMessages_Request_Message
         * @interface ICChatRoom_DeleteChatMessages_Request_Message
         * @property {number|null} [server_timestamp] CChatRoom_DeleteChatMessages_Request_Message server_timestamp
         * @property {number|null} [ordinal] CChatRoom_DeleteChatMessages_Request_Message ordinal
         */
    
        /**
         * Constructs a new CChatRoom_DeleteChatMessages_Request_Message.
         * @exports CChatRoom_DeleteChatMessages_Request_Message
         * @classdesc Represents a CChatRoom_DeleteChatMessages_Request_Message.
         * @implements ICChatRoom_DeleteChatMessages_Request_Message
         * @constructor
         * @param {ICChatRoom_DeleteChatMessages_Request_Message=} [properties] Properties to set
         */
        function CChatRoom_DeleteChatMessages_Request_Message(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_DeleteChatMessages_Request_Message server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @instance
         */
        CChatRoom_DeleteChatMessages_Request_Message.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_DeleteChatMessages_Request_Message ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @instance
         */
        CChatRoom_DeleteChatMessages_Request_Message.prototype.ordinal = 0;
    
        /**
         * Creates a new CChatRoom_DeleteChatMessages_Request_Message instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request_Message=} [properties] Properties to set
         * @returns {CChatRoom_DeleteChatMessages_Request_Message} CChatRoom_DeleteChatMessages_Request_Message instance
         */
        CChatRoom_DeleteChatMessages_Request_Message.create = function create(properties) {
            return new CChatRoom_DeleteChatMessages_Request_Message(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Request_Message message. Does not implicitly {@link CChatRoom_DeleteChatMessages_Request_Message.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request_Message} message CChatRoom_DeleteChatMessages_Request_Message message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Request_Message.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ordinal);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Request_Message message, length delimited. Does not implicitly {@link CChatRoom_DeleteChatMessages_Request_Message.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Request_Message} message CChatRoom_DeleteChatMessages_Request_Message message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Request_Message.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Request_Message message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteChatMessages_Request_Message} CChatRoom_DeleteChatMessages_Request_Message
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Request_Message.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteChatMessages_Request_Message();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.server_timestamp = reader.uint32();
                    break;
                case 2:
                    message.ordinal = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Request_Message message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteChatMessages_Request_Message} CChatRoom_DeleteChatMessages_Request_Message
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Request_Message.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteChatMessages_Request_Message message.
         * @function verify
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteChatMessages_Request_Message.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteChatMessages_Request_Message message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteChatMessages_Request_Message} CChatRoom_DeleteChatMessages_Request_Message
         */
        CChatRoom_DeleteChatMessages_Request_Message.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteChatMessages_Request_Message)
                return object;
            var message = new $root.CChatRoom_DeleteChatMessages_Request_Message();
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteChatMessages_Request_Message message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @static
         * @param {CChatRoom_DeleteChatMessages_Request_Message} message CChatRoom_DeleteChatMessages_Request_Message
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteChatMessages_Request_Message.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.server_timestamp = 0;
                object.ordinal = 0;
            }
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            return object;
        };
    
        /**
         * Converts this CChatRoom_DeleteChatMessages_Request_Message to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteChatMessages_Request_Message
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteChatMessages_Request_Message.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteChatMessages_Request_Message;
    })();
    
    $root.CChatRoom_DeleteChatMessages_Response = (function() {
    
        /**
         * Properties of a CChatRoom_DeleteChatMessages_Response.
         * @exports ICChatRoom_DeleteChatMessages_Response
         * @interface ICChatRoom_DeleteChatMessages_Response
         */
    
        /**
         * Constructs a new CChatRoom_DeleteChatMessages_Response.
         * @exports CChatRoom_DeleteChatMessages_Response
         * @classdesc Represents a CChatRoom_DeleteChatMessages_Response.
         * @implements ICChatRoom_DeleteChatMessages_Response
         * @constructor
         * @param {ICChatRoom_DeleteChatMessages_Response=} [properties] Properties to set
         */
        function CChatRoom_DeleteChatMessages_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CChatRoom_DeleteChatMessages_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Response=} [properties] Properties to set
         * @returns {CChatRoom_DeleteChatMessages_Response} CChatRoom_DeleteChatMessages_Response instance
         */
        CChatRoom_DeleteChatMessages_Response.create = function create(properties) {
            return new CChatRoom_DeleteChatMessages_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Response message. Does not implicitly {@link CChatRoom_DeleteChatMessages_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Response} message CChatRoom_DeleteChatMessages_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_DeleteChatMessages_Response message, length delimited. Does not implicitly {@link CChatRoom_DeleteChatMessages_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {ICChatRoom_DeleteChatMessages_Response} message CChatRoom_DeleteChatMessages_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_DeleteChatMessages_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_DeleteChatMessages_Response} CChatRoom_DeleteChatMessages_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_DeleteChatMessages_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_DeleteChatMessages_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_DeleteChatMessages_Response} CChatRoom_DeleteChatMessages_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_DeleteChatMessages_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_DeleteChatMessages_Response message.
         * @function verify
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_DeleteChatMessages_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_DeleteChatMessages_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_DeleteChatMessages_Response} CChatRoom_DeleteChatMessages_Response
         */
        CChatRoom_DeleteChatMessages_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_DeleteChatMessages_Response)
                return object;
            return new $root.CChatRoom_DeleteChatMessages_Response();
        };
    
        /**
         * Creates a plain object from a CChatRoom_DeleteChatMessages_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @static
         * @param {CChatRoom_DeleteChatMessages_Response} message CChatRoom_DeleteChatMessages_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_DeleteChatMessages_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CChatRoom_DeleteChatMessages_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_DeleteChatMessages_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_DeleteChatMessages_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_DeleteChatMessages_Response;
    })();
    
    $root.CChatRoom_UpdateMemberListView_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_UpdateMemberListView_Notification.
         * @exports ICChatRoom_UpdateMemberListView_Notification
         * @interface ICChatRoom_UpdateMemberListView_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_UpdateMemberListView_Notification chat_group_id
         * @property {number|Long|null} [view_id] CChatRoom_UpdateMemberListView_Notification view_id
         * @property {number|null} [start] CChatRoom_UpdateMemberListView_Notification start
         * @property {number|null} [end] CChatRoom_UpdateMemberListView_Notification end
         * @property {number|null} [client_changenumber] CChatRoom_UpdateMemberListView_Notification client_changenumber
         * @property {boolean|null} [delete_view] CChatRoom_UpdateMemberListView_Notification delete_view
         * @property {Array.<number>|null} [persona_subscribe_accountids] CChatRoom_UpdateMemberListView_Notification persona_subscribe_accountids
         * @property {Array.<number>|null} [persona_unsubscribe_accountids] CChatRoom_UpdateMemberListView_Notification persona_unsubscribe_accountids
         */
    
        /**
         * Constructs a new CChatRoom_UpdateMemberListView_Notification.
         * @exports CChatRoom_UpdateMemberListView_Notification
         * @classdesc Represents a CChatRoom_UpdateMemberListView_Notification.
         * @implements ICChatRoom_UpdateMemberListView_Notification
         * @constructor
         * @param {ICChatRoom_UpdateMemberListView_Notification=} [properties] Properties to set
         */
        function CChatRoom_UpdateMemberListView_Notification(properties) {
            this.persona_subscribe_accountids = [];
            this.persona_unsubscribe_accountids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_UpdateMemberListView_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification view_id.
         * @member {number|Long} view_id
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.view_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification start.
         * @member {number} start
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.start = 0;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification end.
         * @member {number} end
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.end = 0;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification client_changenumber.
         * @member {number} client_changenumber
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.client_changenumber = 0;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification delete_view.
         * @member {boolean} delete_view
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.delete_view = false;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification persona_subscribe_accountids.
         * @member {Array.<number>} persona_subscribe_accountids
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.persona_subscribe_accountids = $util.emptyArray;
    
        /**
         * CChatRoom_UpdateMemberListView_Notification persona_unsubscribe_accountids.
         * @member {Array.<number>} persona_unsubscribe_accountids
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.persona_unsubscribe_accountids = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_UpdateMemberListView_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {ICChatRoom_UpdateMemberListView_Notification=} [properties] Properties to set
         * @returns {CChatRoom_UpdateMemberListView_Notification} CChatRoom_UpdateMemberListView_Notification instance
         */
        CChatRoom_UpdateMemberListView_Notification.create = function create(properties) {
            return new CChatRoom_UpdateMemberListView_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMemberListView_Notification message. Does not implicitly {@link CChatRoom_UpdateMemberListView_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {ICChatRoom_UpdateMemberListView_Notification} message CChatRoom_UpdateMemberListView_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMemberListView_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.view_id);
            if (message.start != null && message.hasOwnProperty("start"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.start);
            if (message.end != null && message.hasOwnProperty("end"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.client_changenumber);
            if (message.delete_view != null && message.hasOwnProperty("delete_view"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.delete_view);
            if (message.persona_subscribe_accountids != null && message.persona_subscribe_accountids.length)
                for (var i = 0; i < message.persona_subscribe_accountids.length; ++i)
                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.persona_subscribe_accountids[i]);
            if (message.persona_unsubscribe_accountids != null && message.persona_unsubscribe_accountids.length)
                for (var i = 0; i < message.persona_unsubscribe_accountids.length; ++i)
                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.persona_unsubscribe_accountids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMemberListView_Notification message, length delimited. Does not implicitly {@link CChatRoom_UpdateMemberListView_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {ICChatRoom_UpdateMemberListView_Notification} message CChatRoom_UpdateMemberListView_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMemberListView_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_UpdateMemberListView_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_UpdateMemberListView_Notification} CChatRoom_UpdateMemberListView_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMemberListView_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_UpdateMemberListView_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.view_id = reader.uint64();
                    break;
                case 3:
                    message.start = reader.int32();
                    break;
                case 4:
                    message.end = reader.int32();
                    break;
                case 5:
                    message.client_changenumber = reader.int32();
                    break;
                case 6:
                    message.delete_view = reader.bool();
                    break;
                case 7:
                    if (!(message.persona_subscribe_accountids && message.persona_subscribe_accountids.length))
                        message.persona_subscribe_accountids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.persona_subscribe_accountids.push(reader.int32());
                    } else
                        message.persona_subscribe_accountids.push(reader.int32());
                    break;
                case 8:
                    if (!(message.persona_unsubscribe_accountids && message.persona_unsubscribe_accountids.length))
                        message.persona_unsubscribe_accountids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.persona_unsubscribe_accountids.push(reader.int32());
                    } else
                        message.persona_unsubscribe_accountids.push(reader.int32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_UpdateMemberListView_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_UpdateMemberListView_Notification} CChatRoom_UpdateMemberListView_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMemberListView_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_UpdateMemberListView_Notification message.
         * @function verify
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_UpdateMemberListView_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                if (!$util.isInteger(message.view_id) && !(message.view_id && $util.isInteger(message.view_id.low) && $util.isInteger(message.view_id.high)))
                    return "view_id: integer|Long expected";
            if (message.start != null && message.hasOwnProperty("start"))
                if (!$util.isInteger(message.start))
                    return "start: integer expected";
            if (message.end != null && message.hasOwnProperty("end"))
                if (!$util.isInteger(message.end))
                    return "end: integer expected";
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                if (!$util.isInteger(message.client_changenumber))
                    return "client_changenumber: integer expected";
            if (message.delete_view != null && message.hasOwnProperty("delete_view"))
                if (typeof message.delete_view !== "boolean")
                    return "delete_view: boolean expected";
            if (message.persona_subscribe_accountids != null && message.hasOwnProperty("persona_subscribe_accountids")) {
                if (!Array.isArray(message.persona_subscribe_accountids))
                    return "persona_subscribe_accountids: array expected";
                for (var i = 0; i < message.persona_subscribe_accountids.length; ++i)
                    if (!$util.isInteger(message.persona_subscribe_accountids[i]))
                        return "persona_subscribe_accountids: integer[] expected";
            }
            if (message.persona_unsubscribe_accountids != null && message.hasOwnProperty("persona_unsubscribe_accountids")) {
                if (!Array.isArray(message.persona_unsubscribe_accountids))
                    return "persona_unsubscribe_accountids: array expected";
                for (var i = 0; i < message.persona_unsubscribe_accountids.length; ++i)
                    if (!$util.isInteger(message.persona_unsubscribe_accountids[i]))
                        return "persona_unsubscribe_accountids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_UpdateMemberListView_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_UpdateMemberListView_Notification} CChatRoom_UpdateMemberListView_Notification
         */
        CChatRoom_UpdateMemberListView_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_UpdateMemberListView_Notification)
                return object;
            var message = new $root.CChatRoom_UpdateMemberListView_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.view_id != null)
                if ($util.Long)
                    (message.view_id = $util.Long.fromValue(object.view_id)).unsigned = true;
                else if (typeof object.view_id === "string")
                    message.view_id = parseInt(object.view_id, 10);
                else if (typeof object.view_id === "number")
                    message.view_id = object.view_id;
                else if (typeof object.view_id === "object")
                    message.view_id = new $util.LongBits(object.view_id.low >>> 0, object.view_id.high >>> 0).toNumber(true);
            if (object.start != null)
                message.start = object.start | 0;
            if (object.end != null)
                message.end = object.end | 0;
            if (object.client_changenumber != null)
                message.client_changenumber = object.client_changenumber | 0;
            if (object.delete_view != null)
                message.delete_view = Boolean(object.delete_view);
            if (object.persona_subscribe_accountids) {
                if (!Array.isArray(object.persona_subscribe_accountids))
                    throw TypeError(".CChatRoom_UpdateMemberListView_Notification.persona_subscribe_accountids: array expected");
                message.persona_subscribe_accountids = [];
                for (var i = 0; i < object.persona_subscribe_accountids.length; ++i)
                    message.persona_subscribe_accountids[i] = object.persona_subscribe_accountids[i] | 0;
            }
            if (object.persona_unsubscribe_accountids) {
                if (!Array.isArray(object.persona_unsubscribe_accountids))
                    throw TypeError(".CChatRoom_UpdateMemberListView_Notification.persona_unsubscribe_accountids: array expected");
                message.persona_unsubscribe_accountids = [];
                for (var i = 0; i < object.persona_unsubscribe_accountids.length; ++i)
                    message.persona_unsubscribe_accountids[i] = object.persona_unsubscribe_accountids[i] | 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_UpdateMemberListView_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @static
         * @param {CChatRoom_UpdateMemberListView_Notification} message CChatRoom_UpdateMemberListView_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_UpdateMemberListView_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.persona_subscribe_accountids = [];
                object.persona_unsubscribe_accountids = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.view_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.view_id = options.longs === String ? "0" : 0;
                object.start = 0;
                object.end = 0;
                object.client_changenumber = 0;
                object.delete_view = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                if (typeof message.view_id === "number")
                    object.view_id = options.longs === String ? String(message.view_id) : message.view_id;
                else
                    object.view_id = options.longs === String ? $util.Long.prototype.toString.call(message.view_id) : options.longs === Number ? new $util.LongBits(message.view_id.low >>> 0, message.view_id.high >>> 0).toNumber(true) : message.view_id;
            if (message.start != null && message.hasOwnProperty("start"))
                object.start = message.start;
            if (message.end != null && message.hasOwnProperty("end"))
                object.end = message.end;
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                object.client_changenumber = message.client_changenumber;
            if (message.delete_view != null && message.hasOwnProperty("delete_view"))
                object.delete_view = message.delete_view;
            if (message.persona_subscribe_accountids && message.persona_subscribe_accountids.length) {
                object.persona_subscribe_accountids = [];
                for (var j = 0; j < message.persona_subscribe_accountids.length; ++j)
                    object.persona_subscribe_accountids[j] = message.persona_subscribe_accountids[j];
            }
            if (message.persona_unsubscribe_accountids && message.persona_unsubscribe_accountids.length) {
                object.persona_unsubscribe_accountids = [];
                for (var j = 0; j < message.persona_unsubscribe_accountids.length; ++j)
                    object.persona_unsubscribe_accountids[j] = message.persona_unsubscribe_accountids[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_UpdateMemberListView_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_UpdateMemberListView_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_UpdateMemberListView_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_UpdateMemberListView_Notification;
    })();
    
    $root.CChatRoom_SearchMembers_Request = (function() {
    
        /**
         * Properties of a CChatRoom_SearchMembers_Request.
         * @exports ICChatRoom_SearchMembers_Request
         * @interface ICChatRoom_SearchMembers_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_SearchMembers_Request chat_group_id
         * @property {number|Long|null} [search_id] CChatRoom_SearchMembers_Request search_id
         * @property {string|null} [search_text] CChatRoom_SearchMembers_Request search_text
         * @property {number|null} [max_results] CChatRoom_SearchMembers_Request max_results
         */
    
        /**
         * Constructs a new CChatRoom_SearchMembers_Request.
         * @exports CChatRoom_SearchMembers_Request
         * @classdesc Represents a CChatRoom_SearchMembers_Request.
         * @implements ICChatRoom_SearchMembers_Request
         * @constructor
         * @param {ICChatRoom_SearchMembers_Request=} [properties] Properties to set
         */
        function CChatRoom_SearchMembers_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SearchMembers_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_SearchMembers_Request
         * @instance
         */
        CChatRoom_SearchMembers_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SearchMembers_Request search_id.
         * @member {number|Long} search_id
         * @memberof CChatRoom_SearchMembers_Request
         * @instance
         */
        CChatRoom_SearchMembers_Request.prototype.search_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_SearchMembers_Request search_text.
         * @member {string} search_text
         * @memberof CChatRoom_SearchMembers_Request
         * @instance
         */
        CChatRoom_SearchMembers_Request.prototype.search_text = "";
    
        /**
         * CChatRoom_SearchMembers_Request max_results.
         * @member {number} max_results
         * @memberof CChatRoom_SearchMembers_Request
         * @instance
         */
        CChatRoom_SearchMembers_Request.prototype.max_results = 0;
    
        /**
         * Creates a new CChatRoom_SearchMembers_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {ICChatRoom_SearchMembers_Request=} [properties] Properties to set
         * @returns {CChatRoom_SearchMembers_Request} CChatRoom_SearchMembers_Request instance
         */
        CChatRoom_SearchMembers_Request.create = function create(properties) {
            return new CChatRoom_SearchMembers_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Request message. Does not implicitly {@link CChatRoom_SearchMembers_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {ICChatRoom_SearchMembers_Request} message CChatRoom_SearchMembers_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.search_id != null && message.hasOwnProperty("search_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.search_id);
            if (message.search_text != null && message.hasOwnProperty("search_text"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.search_text);
            if (message.max_results != null && message.hasOwnProperty("max_results"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.max_results);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Request message, length delimited. Does not implicitly {@link CChatRoom_SearchMembers_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {ICChatRoom_SearchMembers_Request} message CChatRoom_SearchMembers_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SearchMembers_Request} CChatRoom_SearchMembers_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SearchMembers_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.search_id = reader.uint64();
                    break;
                case 3:
                    message.search_text = reader.string();
                    break;
                case 4:
                    message.max_results = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SearchMembers_Request} CChatRoom_SearchMembers_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SearchMembers_Request message.
         * @function verify
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SearchMembers_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.search_id != null && message.hasOwnProperty("search_id"))
                if (!$util.isInteger(message.search_id) && !(message.search_id && $util.isInteger(message.search_id.low) && $util.isInteger(message.search_id.high)))
                    return "search_id: integer|Long expected";
            if (message.search_text != null && message.hasOwnProperty("search_text"))
                if (!$util.isString(message.search_text))
                    return "search_text: string expected";
            if (message.max_results != null && message.hasOwnProperty("max_results"))
                if (!$util.isInteger(message.max_results))
                    return "max_results: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SearchMembers_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SearchMembers_Request} CChatRoom_SearchMembers_Request
         */
        CChatRoom_SearchMembers_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SearchMembers_Request)
                return object;
            var message = new $root.CChatRoom_SearchMembers_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.search_id != null)
                if ($util.Long)
                    (message.search_id = $util.Long.fromValue(object.search_id)).unsigned = true;
                else if (typeof object.search_id === "string")
                    message.search_id = parseInt(object.search_id, 10);
                else if (typeof object.search_id === "number")
                    message.search_id = object.search_id;
                else if (typeof object.search_id === "object")
                    message.search_id = new $util.LongBits(object.search_id.low >>> 0, object.search_id.high >>> 0).toNumber(true);
            if (object.search_text != null)
                message.search_text = String(object.search_text);
            if (object.max_results != null)
                message.max_results = object.max_results | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SearchMembers_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SearchMembers_Request
         * @static
         * @param {CChatRoom_SearchMembers_Request} message CChatRoom_SearchMembers_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SearchMembers_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.search_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.search_id = options.longs === String ? "0" : 0;
                object.search_text = "";
                object.max_results = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.search_id != null && message.hasOwnProperty("search_id"))
                if (typeof message.search_id === "number")
                    object.search_id = options.longs === String ? String(message.search_id) : message.search_id;
                else
                    object.search_id = options.longs === String ? $util.Long.prototype.toString.call(message.search_id) : options.longs === Number ? new $util.LongBits(message.search_id.low >>> 0, message.search_id.high >>> 0).toNumber(true) : message.search_id;
            if (message.search_text != null && message.hasOwnProperty("search_text"))
                object.search_text = message.search_text;
            if (message.max_results != null && message.hasOwnProperty("max_results"))
                object.max_results = message.max_results;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SearchMembers_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_SearchMembers_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SearchMembers_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SearchMembers_Request;
    })();
    
    $root.CChatRoom_SearchMembers_Response = (function() {
    
        /**
         * Properties of a CChatRoom_SearchMembers_Response.
         * @exports ICChatRoom_SearchMembers_Response
         * @interface ICChatRoom_SearchMembers_Response
         * @property {Array.<ICChatRoom_SearchMembers_Response_MemberMatch>|null} [matching_members] CChatRoom_SearchMembers_Response matching_members
         * @property {number|null} [status_flags] CChatRoom_SearchMembers_Response status_flags
         */
    
        /**
         * Constructs a new CChatRoom_SearchMembers_Response.
         * @exports CChatRoom_SearchMembers_Response
         * @classdesc Represents a CChatRoom_SearchMembers_Response.
         * @implements ICChatRoom_SearchMembers_Response
         * @constructor
         * @param {ICChatRoom_SearchMembers_Response=} [properties] Properties to set
         */
        function CChatRoom_SearchMembers_Response(properties) {
            this.matching_members = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SearchMembers_Response matching_members.
         * @member {Array.<ICChatRoom_SearchMembers_Response_MemberMatch>} matching_members
         * @memberof CChatRoom_SearchMembers_Response
         * @instance
         */
        CChatRoom_SearchMembers_Response.prototype.matching_members = $util.emptyArray;
    
        /**
         * CChatRoom_SearchMembers_Response status_flags.
         * @member {number} status_flags
         * @memberof CChatRoom_SearchMembers_Response
         * @instance
         */
        CChatRoom_SearchMembers_Response.prototype.status_flags = 0;
    
        /**
         * Creates a new CChatRoom_SearchMembers_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {ICChatRoom_SearchMembers_Response=} [properties] Properties to set
         * @returns {CChatRoom_SearchMembers_Response} CChatRoom_SearchMembers_Response instance
         */
        CChatRoom_SearchMembers_Response.create = function create(properties) {
            return new CChatRoom_SearchMembers_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Response message. Does not implicitly {@link CChatRoom_SearchMembers_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {ICChatRoom_SearchMembers_Response} message CChatRoom_SearchMembers_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.matching_members != null && message.matching_members.length)
                for (var i = 0; i < message.matching_members.length; ++i)
                    $root.CChatRoom_SearchMembers_Response_MemberMatch.encode(message.matching_members[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.status_flags);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Response message, length delimited. Does not implicitly {@link CChatRoom_SearchMembers_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {ICChatRoom_SearchMembers_Response} message CChatRoom_SearchMembers_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SearchMembers_Response} CChatRoom_SearchMembers_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SearchMembers_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.matching_members && message.matching_members.length))
                        message.matching_members = [];
                    message.matching_members.push($root.CChatRoom_SearchMembers_Response_MemberMatch.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.status_flags = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SearchMembers_Response} CChatRoom_SearchMembers_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SearchMembers_Response message.
         * @function verify
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SearchMembers_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.matching_members != null && message.hasOwnProperty("matching_members")) {
                if (!Array.isArray(message.matching_members))
                    return "matching_members: array expected";
                for (var i = 0; i < message.matching_members.length; ++i) {
                    var error = $root.CChatRoom_SearchMembers_Response_MemberMatch.verify(message.matching_members[i]);
                    if (error)
                        return "matching_members." + error;
                }
            }
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                if (!$util.isInteger(message.status_flags))
                    return "status_flags: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_SearchMembers_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SearchMembers_Response} CChatRoom_SearchMembers_Response
         */
        CChatRoom_SearchMembers_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SearchMembers_Response)
                return object;
            var message = new $root.CChatRoom_SearchMembers_Response();
            if (object.matching_members) {
                if (!Array.isArray(object.matching_members))
                    throw TypeError(".CChatRoom_SearchMembers_Response.matching_members: array expected");
                message.matching_members = [];
                for (var i = 0; i < object.matching_members.length; ++i) {
                    if (typeof object.matching_members[i] !== "object")
                        throw TypeError(".CChatRoom_SearchMembers_Response.matching_members: object expected");
                    message.matching_members[i] = $root.CChatRoom_SearchMembers_Response_MemberMatch.fromObject(object.matching_members[i]);
                }
            }
            if (object.status_flags != null)
                message.status_flags = object.status_flags >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SearchMembers_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SearchMembers_Response
         * @static
         * @param {CChatRoom_SearchMembers_Response} message CChatRoom_SearchMembers_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SearchMembers_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.matching_members = [];
            if (options.defaults)
                object.status_flags = 0;
            if (message.matching_members && message.matching_members.length) {
                object.matching_members = [];
                for (var j = 0; j < message.matching_members.length; ++j)
                    object.matching_members[j] = $root.CChatRoom_SearchMembers_Response_MemberMatch.toObject(message.matching_members[j], options);
            }
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                object.status_flags = message.status_flags;
            return object;
        };
    
        /**
         * Converts this CChatRoom_SearchMembers_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_SearchMembers_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SearchMembers_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SearchMembers_Response;
    })();
    
    $root.CChatRoom_SearchMembers_Response_MemberMatch = (function() {
    
        /**
         * Properties of a CChatRoom_SearchMembers_Response_MemberMatch.
         * @exports ICChatRoom_SearchMembers_Response_MemberMatch
         * @interface ICChatRoom_SearchMembers_Response_MemberMatch
         * @property {number|null} [accountid] CChatRoom_SearchMembers_Response_MemberMatch accountid
         * @property {ICMsgClientPersonaState_Friend|null} [persona] CChatRoom_SearchMembers_Response_MemberMatch persona
         */
    
        /**
         * Constructs a new CChatRoom_SearchMembers_Response_MemberMatch.
         * @exports CChatRoom_SearchMembers_Response_MemberMatch
         * @classdesc Represents a CChatRoom_SearchMembers_Response_MemberMatch.
         * @implements ICChatRoom_SearchMembers_Response_MemberMatch
         * @constructor
         * @param {ICChatRoom_SearchMembers_Response_MemberMatch=} [properties] Properties to set
         */
        function CChatRoom_SearchMembers_Response_MemberMatch(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_SearchMembers_Response_MemberMatch accountid.
         * @member {number} accountid
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @instance
         */
        CChatRoom_SearchMembers_Response_MemberMatch.prototype.accountid = 0;
    
        /**
         * CChatRoom_SearchMembers_Response_MemberMatch persona.
         * @member {ICMsgClientPersonaState_Friend|null|undefined} persona
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @instance
         */
        CChatRoom_SearchMembers_Response_MemberMatch.prototype.persona = null;
    
        /**
         * Creates a new CChatRoom_SearchMembers_Response_MemberMatch instance using the specified properties.
         * @function create
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {ICChatRoom_SearchMembers_Response_MemberMatch=} [properties] Properties to set
         * @returns {CChatRoom_SearchMembers_Response_MemberMatch} CChatRoom_SearchMembers_Response_MemberMatch instance
         */
        CChatRoom_SearchMembers_Response_MemberMatch.create = function create(properties) {
            return new CChatRoom_SearchMembers_Response_MemberMatch(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Response_MemberMatch message. Does not implicitly {@link CChatRoom_SearchMembers_Response_MemberMatch.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {ICChatRoom_SearchMembers_Response_MemberMatch} message CChatRoom_SearchMembers_Response_MemberMatch message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Response_MemberMatch.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.accountid);
            if (message.persona != null && message.hasOwnProperty("persona"))
                $root.CMsgClientPersonaState_Friend.encode(message.persona, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_SearchMembers_Response_MemberMatch message, length delimited. Does not implicitly {@link CChatRoom_SearchMembers_Response_MemberMatch.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {ICChatRoom_SearchMembers_Response_MemberMatch} message CChatRoom_SearchMembers_Response_MemberMatch message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_SearchMembers_Response_MemberMatch.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Response_MemberMatch message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_SearchMembers_Response_MemberMatch} CChatRoom_SearchMembers_Response_MemberMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Response_MemberMatch.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_SearchMembers_Response_MemberMatch();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.accountid = reader.int32();
                    break;
                case 2:
                    message.persona = $root.CMsgClientPersonaState_Friend.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_SearchMembers_Response_MemberMatch message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_SearchMembers_Response_MemberMatch} CChatRoom_SearchMembers_Response_MemberMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_SearchMembers_Response_MemberMatch.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_SearchMembers_Response_MemberMatch message.
         * @function verify
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_SearchMembers_Response_MemberMatch.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.persona != null && message.hasOwnProperty("persona")) {
                var error = $root.CMsgClientPersonaState_Friend.verify(message.persona);
                if (error)
                    return "persona." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_SearchMembers_Response_MemberMatch message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_SearchMembers_Response_MemberMatch} CChatRoom_SearchMembers_Response_MemberMatch
         */
        CChatRoom_SearchMembers_Response_MemberMatch.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_SearchMembers_Response_MemberMatch)
                return object;
            var message = new $root.CChatRoom_SearchMembers_Response_MemberMatch();
            if (object.accountid != null)
                message.accountid = object.accountid | 0;
            if (object.persona != null) {
                if (typeof object.persona !== "object")
                    throw TypeError(".CChatRoom_SearchMembers_Response_MemberMatch.persona: object expected");
                message.persona = $root.CMsgClientPersonaState_Friend.fromObject(object.persona);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_SearchMembers_Response_MemberMatch message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @static
         * @param {CChatRoom_SearchMembers_Response_MemberMatch} message CChatRoom_SearchMembers_Response_MemberMatch
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_SearchMembers_Response_MemberMatch.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accountid = 0;
                object.persona = null;
            }
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.persona != null && message.hasOwnProperty("persona"))
                object.persona = $root.CMsgClientPersonaState_Friend.toObject(message.persona, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_SearchMembers_Response_MemberMatch to JSON.
         * @function toJSON
         * @memberof CChatRoom_SearchMembers_Response_MemberMatch
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_SearchMembers_Response_MemberMatch.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_SearchMembers_Response_MemberMatch;
    })();
    
    $root.CChatRoom_UpdateMessageReaction_Request = (function() {
    
        /**
         * Properties of a CChatRoom_UpdateMessageReaction_Request.
         * @exports ICChatRoom_UpdateMessageReaction_Request
         * @interface ICChatRoom_UpdateMessageReaction_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_UpdateMessageReaction_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_UpdateMessageReaction_Request chat_id
         * @property {number|null} [server_timestamp] CChatRoom_UpdateMessageReaction_Request server_timestamp
         * @property {number|null} [ordinal] CChatRoom_UpdateMessageReaction_Request ordinal
         * @property {number|null} [reaction_type] CChatRoom_UpdateMessageReaction_Request reaction_type
         * @property {string|null} [reaction] CChatRoom_UpdateMessageReaction_Request reaction
         * @property {boolean|null} [is_add] CChatRoom_UpdateMessageReaction_Request is_add
         */
    
        /**
         * Constructs a new CChatRoom_UpdateMessageReaction_Request.
         * @exports CChatRoom_UpdateMessageReaction_Request
         * @classdesc Represents a CChatRoom_UpdateMessageReaction_Request.
         * @implements ICChatRoom_UpdateMessageReaction_Request
         * @constructor
         * @param {ICChatRoom_UpdateMessageReaction_Request=} [properties] Properties to set
         */
        function CChatRoom_UpdateMessageReaction_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_UpdateMessageReaction_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_UpdateMessageReaction_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_UpdateMessageReaction_Request server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_UpdateMessageReaction_Request ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.ordinal = 0;
    
        /**
         * CChatRoom_UpdateMessageReaction_Request reaction_type.
         * @member {number} reaction_type
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.reaction_type = 0;
    
        /**
         * CChatRoom_UpdateMessageReaction_Request reaction.
         * @member {string} reaction
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.reaction = "";
    
        /**
         * CChatRoom_UpdateMessageReaction_Request is_add.
         * @member {boolean} is_add
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.is_add = false;
    
        /**
         * Creates a new CChatRoom_UpdateMessageReaction_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Request=} [properties] Properties to set
         * @returns {CChatRoom_UpdateMessageReaction_Request} CChatRoom_UpdateMessageReaction_Request instance
         */
        CChatRoom_UpdateMessageReaction_Request.create = function create(properties) {
            return new CChatRoom_UpdateMessageReaction_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMessageReaction_Request message. Does not implicitly {@link CChatRoom_UpdateMessageReaction_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Request} message CChatRoom_UpdateMessageReaction_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMessageReaction_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ordinal);
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reaction_type);
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.reaction);
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.is_add);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMessageReaction_Request message, length delimited. Does not implicitly {@link CChatRoom_UpdateMessageReaction_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Request} message CChatRoom_UpdateMessageReaction_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMessageReaction_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_UpdateMessageReaction_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_UpdateMessageReaction_Request} CChatRoom_UpdateMessageReaction_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMessageReaction_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_UpdateMessageReaction_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.server_timestamp = reader.uint32();
                    break;
                case 4:
                    message.ordinal = reader.uint32();
                    break;
                case 5:
                    message.reaction_type = reader.int32();
                    break;
                case 6:
                    message.reaction = reader.string();
                    break;
                case 7:
                    message.is_add = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_UpdateMessageReaction_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_UpdateMessageReaction_Request} CChatRoom_UpdateMessageReaction_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMessageReaction_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_UpdateMessageReaction_Request message.
         * @function verify
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_UpdateMessageReaction_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                if (!$util.isInteger(message.reaction_type))
                    return "reaction_type: integer expected";
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                if (!$util.isString(message.reaction))
                    return "reaction: string expected";
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                if (typeof message.is_add !== "boolean")
                    return "is_add: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_UpdateMessageReaction_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_UpdateMessageReaction_Request} CChatRoom_UpdateMessageReaction_Request
         */
        CChatRoom_UpdateMessageReaction_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_UpdateMessageReaction_Request)
                return object;
            var message = new $root.CChatRoom_UpdateMessageReaction_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.reaction_type != null)
                message.reaction_type = object.reaction_type | 0;
            if (object.reaction != null)
                message.reaction = String(object.reaction);
            if (object.is_add != null)
                message.is_add = Boolean(object.is_add);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_UpdateMessageReaction_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @static
         * @param {CChatRoom_UpdateMessageReaction_Request} message CChatRoom_UpdateMessageReaction_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_UpdateMessageReaction_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.server_timestamp = 0;
                object.ordinal = 0;
                object.reaction_type = 0;
                object.reaction = "";
                object.is_add = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                object.reaction_type = message.reaction_type;
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                object.reaction = message.reaction;
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                object.is_add = message.is_add;
            return object;
        };
    
        /**
         * Converts this CChatRoom_UpdateMessageReaction_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_UpdateMessageReaction_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_UpdateMessageReaction_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_UpdateMessageReaction_Request;
    })();
    
    $root.CChatRoom_UpdateMessageReaction_Response = (function() {
    
        /**
         * Properties of a CChatRoom_UpdateMessageReaction_Response.
         * @exports ICChatRoom_UpdateMessageReaction_Response
         * @interface ICChatRoom_UpdateMessageReaction_Response
         * @property {number|null} [num_reactors] CChatRoom_UpdateMessageReaction_Response num_reactors
         */
    
        /**
         * Constructs a new CChatRoom_UpdateMessageReaction_Response.
         * @exports CChatRoom_UpdateMessageReaction_Response
         * @classdesc Represents a CChatRoom_UpdateMessageReaction_Response.
         * @implements ICChatRoom_UpdateMessageReaction_Response
         * @constructor
         * @param {ICChatRoom_UpdateMessageReaction_Response=} [properties] Properties to set
         */
        function CChatRoom_UpdateMessageReaction_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_UpdateMessageReaction_Response num_reactors.
         * @member {number} num_reactors
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @instance
         */
        CChatRoom_UpdateMessageReaction_Response.prototype.num_reactors = 0;
    
        /**
         * Creates a new CChatRoom_UpdateMessageReaction_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Response=} [properties] Properties to set
         * @returns {CChatRoom_UpdateMessageReaction_Response} CChatRoom_UpdateMessageReaction_Response instance
         */
        CChatRoom_UpdateMessageReaction_Response.create = function create(properties) {
            return new CChatRoom_UpdateMessageReaction_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMessageReaction_Response message. Does not implicitly {@link CChatRoom_UpdateMessageReaction_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Response} message CChatRoom_UpdateMessageReaction_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMessageReaction_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.num_reactors);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_UpdateMessageReaction_Response message, length delimited. Does not implicitly {@link CChatRoom_UpdateMessageReaction_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {ICChatRoom_UpdateMessageReaction_Response} message CChatRoom_UpdateMessageReaction_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_UpdateMessageReaction_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_UpdateMessageReaction_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_UpdateMessageReaction_Response} CChatRoom_UpdateMessageReaction_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMessageReaction_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_UpdateMessageReaction_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.num_reactors = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_UpdateMessageReaction_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_UpdateMessageReaction_Response} CChatRoom_UpdateMessageReaction_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_UpdateMessageReaction_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_UpdateMessageReaction_Response message.
         * @function verify
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_UpdateMessageReaction_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                if (!$util.isInteger(message.num_reactors))
                    return "num_reactors: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_UpdateMessageReaction_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_UpdateMessageReaction_Response} CChatRoom_UpdateMessageReaction_Response
         */
        CChatRoom_UpdateMessageReaction_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_UpdateMessageReaction_Response)
                return object;
            var message = new $root.CChatRoom_UpdateMessageReaction_Response();
            if (object.num_reactors != null)
                message.num_reactors = object.num_reactors >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_UpdateMessageReaction_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @static
         * @param {CChatRoom_UpdateMessageReaction_Response} message CChatRoom_UpdateMessageReaction_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_UpdateMessageReaction_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.num_reactors = 0;
            if (message.num_reactors != null && message.hasOwnProperty("num_reactors"))
                object.num_reactors = message.num_reactors;
            return object;
        };
    
        /**
         * Converts this CChatRoom_UpdateMessageReaction_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_UpdateMessageReaction_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_UpdateMessageReaction_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_UpdateMessageReaction_Response;
    })();
    
    $root.CChatRoom_GetMessageReactionReactors_Request = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageReactionReactors_Request.
         * @exports ICChatRoom_GetMessageReactionReactors_Request
         * @interface ICChatRoom_GetMessageReactionReactors_Request
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetMessageReactionReactors_Request chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_GetMessageReactionReactors_Request chat_id
         * @property {number|null} [server_timestamp] CChatRoom_GetMessageReactionReactors_Request server_timestamp
         * @property {number|null} [ordinal] CChatRoom_GetMessageReactionReactors_Request ordinal
         * @property {number|null} [reaction_type] CChatRoom_GetMessageReactionReactors_Request reaction_type
         * @property {string|null} [reaction] CChatRoom_GetMessageReactionReactors_Request reaction
         * @property {number|null} [limit] CChatRoom_GetMessageReactionReactors_Request limit
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageReactionReactors_Request.
         * @exports CChatRoom_GetMessageReactionReactors_Request
         * @classdesc Represents a CChatRoom_GetMessageReactionReactors_Request.
         * @implements ICChatRoom_GetMessageReactionReactors_Request
         * @constructor
         * @param {ICChatRoom_GetMessageReactionReactors_Request=} [properties] Properties to set
         */
        function CChatRoom_GetMessageReactionReactors_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.ordinal = 0;
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request reaction_type.
         * @member {number} reaction_type
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.reaction_type = 0;
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request reaction.
         * @member {string} reaction
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.reaction = "";
    
        /**
         * CChatRoom_GetMessageReactionReactors_Request limit.
         * @member {number} limit
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.limit = 0;
    
        /**
         * Creates a new CChatRoom_GetMessageReactionReactors_Request instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Request=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageReactionReactors_Request} CChatRoom_GetMessageReactionReactors_Request instance
         */
        CChatRoom_GetMessageReactionReactors_Request.create = function create(properties) {
            return new CChatRoom_GetMessageReactionReactors_Request(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageReactionReactors_Request message. Does not implicitly {@link CChatRoom_GetMessageReactionReactors_Request.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Request} message CChatRoom_GetMessageReactionReactors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageReactionReactors_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ordinal);
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reaction_type);
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.reaction);
            if (message.limit != null && message.hasOwnProperty("limit"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.limit);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageReactionReactors_Request message, length delimited. Does not implicitly {@link CChatRoom_GetMessageReactionReactors_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Request} message CChatRoom_GetMessageReactionReactors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageReactionReactors_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageReactionReactors_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageReactionReactors_Request} CChatRoom_GetMessageReactionReactors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageReactionReactors_Request.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageReactionReactors_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.server_timestamp = reader.uint32();
                    break;
                case 4:
                    message.ordinal = reader.uint32();
                    break;
                case 5:
                    message.reaction_type = reader.int32();
                    break;
                case 6:
                    message.reaction = reader.string();
                    break;
                case 7:
                    message.limit = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageReactionReactors_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageReactionReactors_Request} CChatRoom_GetMessageReactionReactors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageReactionReactors_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageReactionReactors_Request message.
         * @function verify
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageReactionReactors_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                if (!$util.isInteger(message.reaction_type))
                    return "reaction_type: integer expected";
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                if (!$util.isString(message.reaction))
                    return "reaction: string expected";
            if (message.limit != null && message.hasOwnProperty("limit"))
                if (!$util.isInteger(message.limit))
                    return "limit: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageReactionReactors_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageReactionReactors_Request} CChatRoom_GetMessageReactionReactors_Request
         */
        CChatRoom_GetMessageReactionReactors_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageReactionReactors_Request)
                return object;
            var message = new $root.CChatRoom_GetMessageReactionReactors_Request();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.reaction_type != null)
                message.reaction_type = object.reaction_type | 0;
            if (object.reaction != null)
                message.reaction = String(object.reaction);
            if (object.limit != null)
                message.limit = object.limit >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageReactionReactors_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @static
         * @param {CChatRoom_GetMessageReactionReactors_Request} message CChatRoom_GetMessageReactionReactors_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageReactionReactors_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.server_timestamp = 0;
                object.ordinal = 0;
                object.reaction_type = 0;
                object.reaction = "";
                object.limit = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                object.reaction_type = message.reaction_type;
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                object.reaction = message.reaction;
            if (message.limit != null && message.hasOwnProperty("limit"))
                object.limit = message.limit;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageReactionReactors_Request to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageReactionReactors_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageReactionReactors_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageReactionReactors_Request;
    })();
    
    $root.CChatRoom_GetMessageReactionReactors_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetMessageReactionReactors_Response.
         * @exports ICChatRoom_GetMessageReactionReactors_Response
         * @interface ICChatRoom_GetMessageReactionReactors_Response
         * @property {Array.<number>|null} [reactors] CChatRoom_GetMessageReactionReactors_Response reactors
         */
    
        /**
         * Constructs a new CChatRoom_GetMessageReactionReactors_Response.
         * @exports CChatRoom_GetMessageReactionReactors_Response
         * @classdesc Represents a CChatRoom_GetMessageReactionReactors_Response.
         * @implements ICChatRoom_GetMessageReactionReactors_Response
         * @constructor
         * @param {ICChatRoom_GetMessageReactionReactors_Response=} [properties] Properties to set
         */
        function CChatRoom_GetMessageReactionReactors_Response(properties) {
            this.reactors = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetMessageReactionReactors_Response reactors.
         * @member {Array.<number>} reactors
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @instance
         */
        CChatRoom_GetMessageReactionReactors_Response.prototype.reactors = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_GetMessageReactionReactors_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetMessageReactionReactors_Response} CChatRoom_GetMessageReactionReactors_Response instance
         */
        CChatRoom_GetMessageReactionReactors_Response.create = function create(properties) {
            return new CChatRoom_GetMessageReactionReactors_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageReactionReactors_Response message. Does not implicitly {@link CChatRoom_GetMessageReactionReactors_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Response} message CChatRoom_GetMessageReactionReactors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageReactionReactors_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.reactors != null && message.reactors.length)
                for (var i = 0; i < message.reactors.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.reactors[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetMessageReactionReactors_Response message, length delimited. Does not implicitly {@link CChatRoom_GetMessageReactionReactors_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {ICChatRoom_GetMessageReactionReactors_Response} message CChatRoom_GetMessageReactionReactors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetMessageReactionReactors_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetMessageReactionReactors_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetMessageReactionReactors_Response} CChatRoom_GetMessageReactionReactors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageReactionReactors_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetMessageReactionReactors_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.reactors && message.reactors.length))
                        message.reactors = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.reactors.push(reader.uint32());
                    } else
                        message.reactors.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetMessageReactionReactors_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetMessageReactionReactors_Response} CChatRoom_GetMessageReactionReactors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetMessageReactionReactors_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetMessageReactionReactors_Response message.
         * @function verify
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetMessageReactionReactors_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.reactors != null && message.hasOwnProperty("reactors")) {
                if (!Array.isArray(message.reactors))
                    return "reactors: array expected";
                for (var i = 0; i < message.reactors.length; ++i)
                    if (!$util.isInteger(message.reactors[i]))
                        return "reactors: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetMessageReactionReactors_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetMessageReactionReactors_Response} CChatRoom_GetMessageReactionReactors_Response
         */
        CChatRoom_GetMessageReactionReactors_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetMessageReactionReactors_Response)
                return object;
            var message = new $root.CChatRoom_GetMessageReactionReactors_Response();
            if (object.reactors) {
                if (!Array.isArray(object.reactors))
                    throw TypeError(".CChatRoom_GetMessageReactionReactors_Response.reactors: array expected");
                message.reactors = [];
                for (var i = 0; i < object.reactors.length; ++i)
                    message.reactors[i] = object.reactors[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetMessageReactionReactors_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @static
         * @param {CChatRoom_GetMessageReactionReactors_Response} message CChatRoom_GetMessageReactionReactors_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetMessageReactionReactors_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.reactors = [];
            if (message.reactors && message.reactors.length) {
                object.reactors = [];
                for (var j = 0; j < message.reactors.length; ++j)
                    object.reactors[j] = message.reactors[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetMessageReactionReactors_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetMessageReactionReactors_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetMessageReactionReactors_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetMessageReactionReactors_Response;
    })();
    
    $root.CChatRoom_IncomingChatMessage_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_IncomingChatMessage_Notification.
         * @exports ICChatRoom_IncomingChatMessage_Notification
         * @interface ICChatRoom_IncomingChatMessage_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_IncomingChatMessage_Notification chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_IncomingChatMessage_Notification chat_id
         * @property {number|Long|null} [steamid_sender] CChatRoom_IncomingChatMessage_Notification steamid_sender
         * @property {string|null} [message] CChatRoom_IncomingChatMessage_Notification message
         * @property {number|null} [timestamp] CChatRoom_IncomingChatMessage_Notification timestamp
         * @property {ICChatMentions|null} [mentions] CChatRoom_IncomingChatMessage_Notification mentions
         * @property {number|null} [ordinal] CChatRoom_IncomingChatMessage_Notification ordinal
         * @property {IServerMessage|null} [server_message] CChatRoom_IncomingChatMessage_Notification server_message
         * @property {string|null} [message_no_bbcode] CChatRoom_IncomingChatMessage_Notification message_no_bbcode
         * @property {string|null} [chat_name] CChatRoom_IncomingChatMessage_Notification chat_name
         */
    
        /**
         * Constructs a new CChatRoom_IncomingChatMessage_Notification.
         * @exports CChatRoom_IncomingChatMessage_Notification
         * @classdesc Represents a CChatRoom_IncomingChatMessage_Notification.
         * @implements ICChatRoom_IncomingChatMessage_Notification
         * @constructor
         * @param {ICChatRoom_IncomingChatMessage_Notification=} [properties] Properties to set
         */
        function CChatRoom_IncomingChatMessage_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_IncomingChatMessage_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification steamid_sender.
         * @member {number|Long} steamid_sender
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.steamid_sender = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification message.
         * @member {string} message
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.message = "";
    
        /**
         * CChatRoom_IncomingChatMessage_Notification timestamp.
         * @member {number} timestamp
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.timestamp = 0;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification mentions.
         * @member {ICChatMentions|null|undefined} mentions
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.mentions = null;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.ordinal = 0;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification server_message.
         * @member {IServerMessage|null|undefined} server_message
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.server_message = null;
    
        /**
         * CChatRoom_IncomingChatMessage_Notification message_no_bbcode.
         * @member {string} message_no_bbcode
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.message_no_bbcode = "";
    
        /**
         * CChatRoom_IncomingChatMessage_Notification chat_name.
         * @member {string} chat_name
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.chat_name = "";
    
        /**
         * Creates a new CChatRoom_IncomingChatMessage_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {ICChatRoom_IncomingChatMessage_Notification=} [properties] Properties to set
         * @returns {CChatRoom_IncomingChatMessage_Notification} CChatRoom_IncomingChatMessage_Notification instance
         */
        CChatRoom_IncomingChatMessage_Notification.create = function create(properties) {
            return new CChatRoom_IncomingChatMessage_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_IncomingChatMessage_Notification message. Does not implicitly {@link CChatRoom_IncomingChatMessage_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {ICChatRoom_IncomingChatMessage_Notification} message CChatRoom_IncomingChatMessage_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_IncomingChatMessage_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid_sender);
            if (message.message != null && message.hasOwnProperty("message"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.message);
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.timestamp);
            if (message.mentions != null && message.hasOwnProperty("mentions"))
                $root.CChatMentions.encode(message.mentions, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.ordinal);
            if (message.server_message != null && message.hasOwnProperty("server_message"))
                $root.ServerMessage.encode(message.server_message, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
            if (message.message_no_bbcode != null && message.hasOwnProperty("message_no_bbcode"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.message_no_bbcode);
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.chat_name);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_IncomingChatMessage_Notification message, length delimited. Does not implicitly {@link CChatRoom_IncomingChatMessage_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {ICChatRoom_IncomingChatMessage_Notification} message CChatRoom_IncomingChatMessage_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_IncomingChatMessage_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_IncomingChatMessage_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_IncomingChatMessage_Notification} CChatRoom_IncomingChatMessage_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_IncomingChatMessage_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_IncomingChatMessage_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.steamid_sender = reader.fixed64();
                    break;
                case 4:
                    message.message = reader.string();
                    break;
                case 5:
                    message.timestamp = reader.uint32();
                    break;
                case 6:
                    message.mentions = $root.CChatMentions.decode(reader, reader.uint32());
                    break;
                case 7:
                    message.ordinal = reader.uint32();
                    break;
                case 8:
                    message.server_message = $root.ServerMessage.decode(reader, reader.uint32());
                    break;
                case 9:
                    message.message_no_bbcode = reader.string();
                    break;
                case 10:
                    message.chat_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_IncomingChatMessage_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_IncomingChatMessage_Notification} CChatRoom_IncomingChatMessage_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_IncomingChatMessage_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_IncomingChatMessage_Notification message.
         * @function verify
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_IncomingChatMessage_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                if (!$util.isInteger(message.steamid_sender) && !(message.steamid_sender && $util.isInteger(message.steamid_sender.low) && $util.isInteger(message.steamid_sender.high)))
                    return "steamid_sender: integer|Long expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
            if (message.mentions != null && message.hasOwnProperty("mentions")) {
                var error = $root.CChatMentions.verify(message.mentions);
                if (error)
                    return "mentions." + error;
            }
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.server_message != null && message.hasOwnProperty("server_message")) {
                var error = $root.ServerMessage.verify(message.server_message);
                if (error)
                    return "server_message." + error;
            }
            if (message.message_no_bbcode != null && message.hasOwnProperty("message_no_bbcode"))
                if (!$util.isString(message.message_no_bbcode))
                    return "message_no_bbcode: string expected";
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                if (!$util.isString(message.chat_name))
                    return "chat_name: string expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_IncomingChatMessage_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_IncomingChatMessage_Notification} CChatRoom_IncomingChatMessage_Notification
         */
        CChatRoom_IncomingChatMessage_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_IncomingChatMessage_Notification)
                return object;
            var message = new $root.CChatRoom_IncomingChatMessage_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.steamid_sender != null)
                if ($util.Long)
                    (message.steamid_sender = $util.Long.fromValue(object.steamid_sender)).unsigned = false;
                else if (typeof object.steamid_sender === "string")
                    message.steamid_sender = parseInt(object.steamid_sender, 10);
                else if (typeof object.steamid_sender === "number")
                    message.steamid_sender = object.steamid_sender;
                else if (typeof object.steamid_sender === "object")
                    message.steamid_sender = new $util.LongBits(object.steamid_sender.low >>> 0, object.steamid_sender.high >>> 0).toNumber();
            if (object.message != null)
                message.message = String(object.message);
            if (object.timestamp != null)
                message.timestamp = object.timestamp >>> 0;
            if (object.mentions != null) {
                if (typeof object.mentions !== "object")
                    throw TypeError(".CChatRoom_IncomingChatMessage_Notification.mentions: object expected");
                message.mentions = $root.CChatMentions.fromObject(object.mentions);
            }
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.server_message != null) {
                if (typeof object.server_message !== "object")
                    throw TypeError(".CChatRoom_IncomingChatMessage_Notification.server_message: object expected");
                message.server_message = $root.ServerMessage.fromObject(object.server_message);
            }
            if (object.message_no_bbcode != null)
                message.message_no_bbcode = String(object.message_no_bbcode);
            if (object.chat_name != null)
                message.chat_name = String(object.chat_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_IncomingChatMessage_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @static
         * @param {CChatRoom_IncomingChatMessage_Notification} message CChatRoom_IncomingChatMessage_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_IncomingChatMessage_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_sender = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_sender = options.longs === String ? "0" : 0;
                object.message = "";
                object.timestamp = 0;
                object.mentions = null;
                object.ordinal = 0;
                object.server_message = null;
                object.message_no_bbcode = "";
                object.chat_name = "";
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.steamid_sender != null && message.hasOwnProperty("steamid_sender"))
                if (typeof message.steamid_sender === "number")
                    object.steamid_sender = options.longs === String ? String(message.steamid_sender) : message.steamid_sender;
                else
                    object.steamid_sender = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_sender) : options.longs === Number ? new $util.LongBits(message.steamid_sender.low >>> 0, message.steamid_sender.high >>> 0).toNumber() : message.steamid_sender;
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                object.timestamp = message.timestamp;
            if (message.mentions != null && message.hasOwnProperty("mentions"))
                object.mentions = $root.CChatMentions.toObject(message.mentions, options);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.server_message != null && message.hasOwnProperty("server_message"))
                object.server_message = $root.ServerMessage.toObject(message.server_message, options);
            if (message.message_no_bbcode != null && message.hasOwnProperty("message_no_bbcode"))
                object.message_no_bbcode = message.message_no_bbcode;
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                object.chat_name = message.chat_name;
            return object;
        };
    
        /**
         * Converts this CChatRoom_IncomingChatMessage_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_IncomingChatMessage_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_IncomingChatMessage_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_IncomingChatMessage_Notification;
    })();
    
    $root.CChatMentions = (function() {
    
        /**
         * Properties of a CChatMentions.
         * @exports ICChatMentions
         * @interface ICChatMentions
         * @property {boolean|null} [mention_all] CChatMentions mention_all
         * @property {boolean|null} [mention_here] CChatMentions mention_here
         * @property {Array.<number>|null} [mention_accountids] CChatMentions mention_accountids
         */
    
        /**
         * Constructs a new CChatMentions.
         * @exports CChatMentions
         * @classdesc Represents a CChatMentions.
         * @implements ICChatMentions
         * @constructor
         * @param {ICChatMentions=} [properties] Properties to set
         */
        function CChatMentions(properties) {
            this.mention_accountids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatMentions mention_all.
         * @member {boolean} mention_all
         * @memberof CChatMentions
         * @instance
         */
        CChatMentions.prototype.mention_all = false;
    
        /**
         * CChatMentions mention_here.
         * @member {boolean} mention_here
         * @memberof CChatMentions
         * @instance
         */
        CChatMentions.prototype.mention_here = false;
    
        /**
         * CChatMentions mention_accountids.
         * @member {Array.<number>} mention_accountids
         * @memberof CChatMentions
         * @instance
         */
        CChatMentions.prototype.mention_accountids = $util.emptyArray;
    
        /**
         * Creates a new CChatMentions instance using the specified properties.
         * @function create
         * @memberof CChatMentions
         * @static
         * @param {ICChatMentions=} [properties] Properties to set
         * @returns {CChatMentions} CChatMentions instance
         */
        CChatMentions.create = function create(properties) {
            return new CChatMentions(properties);
        };
    
        /**
         * Encodes the specified CChatMentions message. Does not implicitly {@link CChatMentions.verify|verify} messages.
         * @function encode
         * @memberof CChatMentions
         * @static
         * @param {ICChatMentions} message CChatMentions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatMentions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.mention_all != null && message.hasOwnProperty("mention_all"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.mention_all);
            if (message.mention_here != null && message.hasOwnProperty("mention_here"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.mention_here);
            if (message.mention_accountids != null && message.mention_accountids.length)
                for (var i = 0; i < message.mention_accountids.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.mention_accountids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CChatMentions message, length delimited. Does not implicitly {@link CChatMentions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatMentions
         * @static
         * @param {ICChatMentions} message CChatMentions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatMentions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatMentions message from the specified reader or buffer.
         * @function decode
         * @memberof CChatMentions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatMentions} CChatMentions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatMentions.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatMentions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.mention_all = reader.bool();
                    break;
                case 2:
                    message.mention_here = reader.bool();
                    break;
                case 3:
                    if (!(message.mention_accountids && message.mention_accountids.length))
                        message.mention_accountids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.mention_accountids.push(reader.uint32());
                    } else
                        message.mention_accountids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatMentions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatMentions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatMentions} CChatMentions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatMentions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatMentions message.
         * @function verify
         * @memberof CChatMentions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatMentions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.mention_all != null && message.hasOwnProperty("mention_all"))
                if (typeof message.mention_all !== "boolean")
                    return "mention_all: boolean expected";
            if (message.mention_here != null && message.hasOwnProperty("mention_here"))
                if (typeof message.mention_here !== "boolean")
                    return "mention_here: boolean expected";
            if (message.mention_accountids != null && message.hasOwnProperty("mention_accountids")) {
                if (!Array.isArray(message.mention_accountids))
                    return "mention_accountids: array expected";
                for (var i = 0; i < message.mention_accountids.length; ++i)
                    if (!$util.isInteger(message.mention_accountids[i]))
                        return "mention_accountids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CChatMentions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatMentions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatMentions} CChatMentions
         */
        CChatMentions.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatMentions)
                return object;
            var message = new $root.CChatMentions();
            if (object.mention_all != null)
                message.mention_all = Boolean(object.mention_all);
            if (object.mention_here != null)
                message.mention_here = Boolean(object.mention_here);
            if (object.mention_accountids) {
                if (!Array.isArray(object.mention_accountids))
                    throw TypeError(".CChatMentions.mention_accountids: array expected");
                message.mention_accountids = [];
                for (var i = 0; i < object.mention_accountids.length; ++i)
                    message.mention_accountids[i] = object.mention_accountids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatMentions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatMentions
         * @static
         * @param {CChatMentions} message CChatMentions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatMentions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.mention_accountids = [];
            if (options.defaults) {
                object.mention_all = false;
                object.mention_here = false;
            }
            if (message.mention_all != null && message.hasOwnProperty("mention_all"))
                object.mention_all = message.mention_all;
            if (message.mention_here != null && message.hasOwnProperty("mention_here"))
                object.mention_here = message.mention_here;
            if (message.mention_accountids && message.mention_accountids.length) {
                object.mention_accountids = [];
                for (var j = 0; j < message.mention_accountids.length; ++j)
                    object.mention_accountids[j] = message.mention_accountids[j];
            }
            return object;
        };
    
        /**
         * Converts this CChatMentions to JSON.
         * @function toJSON
         * @memberof CChatMentions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatMentions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatMentions;
    })();
    
    $root.CChatRoom_ChatMessageModified_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_ChatMessageModified_Notification.
         * @exports ICChatRoom_ChatMessageModified_Notification
         * @interface ICChatRoom_ChatMessageModified_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_ChatMessageModified_Notification chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_ChatMessageModified_Notification chat_id
         * @property {Array.<ICChatRoom_ChatMessageModified_Notification_ChatMessage>|null} [messages] CChatRoom_ChatMessageModified_Notification messages
         */
    
        /**
         * Constructs a new CChatRoom_ChatMessageModified_Notification.
         * @exports CChatRoom_ChatMessageModified_Notification
         * @classdesc Represents a CChatRoom_ChatMessageModified_Notification.
         * @implements ICChatRoom_ChatMessageModified_Notification
         * @constructor
         * @param {ICChatRoom_ChatMessageModified_Notification=} [properties] Properties to set
         */
        function CChatRoom_ChatMessageModified_Notification(properties) {
            this.messages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ChatMessageModified_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ChatMessageModified_Notification chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ChatMessageModified_Notification messages.
         * @member {Array.<ICChatRoom_ChatMessageModified_Notification_ChatMessage>} messages
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification.prototype.messages = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_ChatMessageModified_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification=} [properties] Properties to set
         * @returns {CChatRoom_ChatMessageModified_Notification} CChatRoom_ChatMessageModified_Notification instance
         */
        CChatRoom_ChatMessageModified_Notification.create = function create(properties) {
            return new CChatRoom_ChatMessageModified_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ChatMessageModified_Notification message. Does not implicitly {@link CChatRoom_ChatMessageModified_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification} message CChatRoom_ChatMessageModified_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatMessageModified_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.messages != null && message.messages.length)
                for (var i = 0; i < message.messages.length; ++i)
                    $root.CChatRoom_ChatMessageModified_Notification_ChatMessage.encode(message.messages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ChatMessageModified_Notification message, length delimited. Does not implicitly {@link CChatRoom_ChatMessageModified_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification} message CChatRoom_ChatMessageModified_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatMessageModified_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ChatMessageModified_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ChatMessageModified_Notification} CChatRoom_ChatMessageModified_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatMessageModified_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ChatMessageModified_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    if (!(message.messages && message.messages.length))
                        message.messages = [];
                    message.messages.push($root.CChatRoom_ChatMessageModified_Notification_ChatMessage.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ChatMessageModified_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ChatMessageModified_Notification} CChatRoom_ChatMessageModified_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatMessageModified_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ChatMessageModified_Notification message.
         * @function verify
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ChatMessageModified_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.messages != null && message.hasOwnProperty("messages")) {
                if (!Array.isArray(message.messages))
                    return "messages: array expected";
                for (var i = 0; i < message.messages.length; ++i) {
                    var error = $root.CChatRoom_ChatMessageModified_Notification_ChatMessage.verify(message.messages[i]);
                    if (error)
                        return "messages." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_ChatMessageModified_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ChatMessageModified_Notification} CChatRoom_ChatMessageModified_Notification
         */
        CChatRoom_ChatMessageModified_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ChatMessageModified_Notification)
                return object;
            var message = new $root.CChatRoom_ChatMessageModified_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.messages) {
                if (!Array.isArray(object.messages))
                    throw TypeError(".CChatRoom_ChatMessageModified_Notification.messages: array expected");
                message.messages = [];
                for (var i = 0; i < object.messages.length; ++i) {
                    if (typeof object.messages[i] !== "object")
                        throw TypeError(".CChatRoom_ChatMessageModified_Notification.messages: object expected");
                    message.messages[i] = $root.CChatRoom_ChatMessageModified_Notification_ChatMessage.fromObject(object.messages[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ChatMessageModified_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @static
         * @param {CChatRoom_ChatMessageModified_Notification} message CChatRoom_ChatMessageModified_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ChatMessageModified_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.messages = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.messages && message.messages.length) {
                object.messages = [];
                for (var j = 0; j < message.messages.length; ++j)
                    object.messages[j] = $root.CChatRoom_ChatMessageModified_Notification_ChatMessage.toObject(message.messages[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_ChatMessageModified_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_ChatMessageModified_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ChatMessageModified_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ChatMessageModified_Notification;
    })();
    
    $root.CChatRoom_ChatMessageModified_Notification_ChatMessage = (function() {
    
        /**
         * Properties of a CChatRoom_ChatMessageModified_Notification_ChatMessage.
         * @exports ICChatRoom_ChatMessageModified_Notification_ChatMessage
         * @interface ICChatRoom_ChatMessageModified_Notification_ChatMessage
         * @property {number|null} [server_timestamp] CChatRoom_ChatMessageModified_Notification_ChatMessage server_timestamp
         * @property {number|null} [ordinal] CChatRoom_ChatMessageModified_Notification_ChatMessage ordinal
         * @property {boolean|null} [deleted] CChatRoom_ChatMessageModified_Notification_ChatMessage deleted
         */
    
        /**
         * Constructs a new CChatRoom_ChatMessageModified_Notification_ChatMessage.
         * @exports CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @classdesc Represents a CChatRoom_ChatMessageModified_Notification_ChatMessage.
         * @implements ICChatRoom_ChatMessageModified_Notification_ChatMessage
         * @constructor
         * @param {ICChatRoom_ChatMessageModified_Notification_ChatMessage=} [properties] Properties to set
         */
        function CChatRoom_ChatMessageModified_Notification_ChatMessage(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ChatMessageModified_Notification_ChatMessage server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_ChatMessageModified_Notification_ChatMessage ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.prototype.ordinal = 0;
    
        /**
         * CChatRoom_ChatMessageModified_Notification_ChatMessage deleted.
         * @member {boolean} deleted
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @instance
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.prototype.deleted = false;
    
        /**
         * Creates a new CChatRoom_ChatMessageModified_Notification_ChatMessage instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification_ChatMessage=} [properties] Properties to set
         * @returns {CChatRoom_ChatMessageModified_Notification_ChatMessage} CChatRoom_ChatMessageModified_Notification_ChatMessage instance
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.create = function create(properties) {
            return new CChatRoom_ChatMessageModified_Notification_ChatMessage(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ChatMessageModified_Notification_ChatMessage message. Does not implicitly {@link CChatRoom_ChatMessageModified_Notification_ChatMessage.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification_ChatMessage} message CChatRoom_ChatMessageModified_Notification_ChatMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ordinal);
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deleted);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ChatMessageModified_Notification_ChatMessage message, length delimited. Does not implicitly {@link CChatRoom_ChatMessageModified_Notification_ChatMessage.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {ICChatRoom_ChatMessageModified_Notification_ChatMessage} message CChatRoom_ChatMessageModified_Notification_ChatMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ChatMessageModified_Notification_ChatMessage message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ChatMessageModified_Notification_ChatMessage} CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ChatMessageModified_Notification_ChatMessage();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.server_timestamp = reader.uint32();
                    break;
                case 2:
                    message.ordinal = reader.uint32();
                    break;
                case 3:
                    message.deleted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ChatMessageModified_Notification_ChatMessage message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ChatMessageModified_Notification_ChatMessage} CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ChatMessageModified_Notification_ChatMessage message.
         * @function verify
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                if (typeof message.deleted !== "boolean")
                    return "deleted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_ChatMessageModified_Notification_ChatMessage message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ChatMessageModified_Notification_ChatMessage} CChatRoom_ChatMessageModified_Notification_ChatMessage
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ChatMessageModified_Notification_ChatMessage)
                return object;
            var message = new $root.CChatRoom_ChatMessageModified_Notification_ChatMessage();
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.deleted != null)
                message.deleted = Boolean(object.deleted);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ChatMessageModified_Notification_ChatMessage message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @static
         * @param {CChatRoom_ChatMessageModified_Notification_ChatMessage} message CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.server_timestamp = 0;
                object.ordinal = 0;
                object.deleted = false;
            }
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.deleted != null && message.hasOwnProperty("deleted"))
                object.deleted = message.deleted;
            return object;
        };
    
        /**
         * Converts this CChatRoom_ChatMessageModified_Notification_ChatMessage to JSON.
         * @function toJSON
         * @memberof CChatRoom_ChatMessageModified_Notification_ChatMessage
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ChatMessageModified_Notification_ChatMessage.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ChatMessageModified_Notification_ChatMessage;
    })();
    
    $root.CChatRoom_MemberStateChange_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_MemberStateChange_Notification.
         * @exports ICChatRoom_MemberStateChange_Notification
         * @interface ICChatRoom_MemberStateChange_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_MemberStateChange_Notification chat_group_id
         * @property {ICChatRoomMember|null} [member] CChatRoom_MemberStateChange_Notification member
         * @property {number|null} [change] CChatRoom_MemberStateChange_Notification change
         */
    
        /**
         * Constructs a new CChatRoom_MemberStateChange_Notification.
         * @exports CChatRoom_MemberStateChange_Notification
         * @classdesc Represents a CChatRoom_MemberStateChange_Notification.
         * @implements ICChatRoom_MemberStateChange_Notification
         * @constructor
         * @param {ICChatRoom_MemberStateChange_Notification=} [properties] Properties to set
         */
        function CChatRoom_MemberStateChange_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_MemberStateChange_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_MemberStateChange_Notification
         * @instance
         */
        CChatRoom_MemberStateChange_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_MemberStateChange_Notification member.
         * @member {ICChatRoomMember|null|undefined} member
         * @memberof CChatRoom_MemberStateChange_Notification
         * @instance
         */
        CChatRoom_MemberStateChange_Notification.prototype.member = null;
    
        /**
         * CChatRoom_MemberStateChange_Notification change.
         * @member {number} change
         * @memberof CChatRoom_MemberStateChange_Notification
         * @instance
         */
        CChatRoom_MemberStateChange_Notification.prototype.change = 0;
    
        /**
         * Creates a new CChatRoom_MemberStateChange_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {ICChatRoom_MemberStateChange_Notification=} [properties] Properties to set
         * @returns {CChatRoom_MemberStateChange_Notification} CChatRoom_MemberStateChange_Notification instance
         */
        CChatRoom_MemberStateChange_Notification.create = function create(properties) {
            return new CChatRoom_MemberStateChange_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_MemberStateChange_Notification message. Does not implicitly {@link CChatRoom_MemberStateChange_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {ICChatRoom_MemberStateChange_Notification} message CChatRoom_MemberStateChange_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MemberStateChange_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.member != null && message.hasOwnProperty("member"))
                $root.CChatRoomMember.encode(message.member, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.change != null && message.hasOwnProperty("change"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.change);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_MemberStateChange_Notification message, length delimited. Does not implicitly {@link CChatRoom_MemberStateChange_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {ICChatRoom_MemberStateChange_Notification} message CChatRoom_MemberStateChange_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MemberStateChange_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_MemberStateChange_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_MemberStateChange_Notification} CChatRoom_MemberStateChange_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MemberStateChange_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_MemberStateChange_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.member = $root.CChatRoomMember.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.change = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_MemberStateChange_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_MemberStateChange_Notification} CChatRoom_MemberStateChange_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MemberStateChange_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_MemberStateChange_Notification message.
         * @function verify
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_MemberStateChange_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.member != null && message.hasOwnProperty("member")) {
                var error = $root.CChatRoomMember.verify(message.member);
                if (error)
                    return "member." + error;
            }
            if (message.change != null && message.hasOwnProperty("change"))
                if (!$util.isInteger(message.change))
                    return "change: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_MemberStateChange_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_MemberStateChange_Notification} CChatRoom_MemberStateChange_Notification
         */
        CChatRoom_MemberStateChange_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_MemberStateChange_Notification)
                return object;
            var message = new $root.CChatRoom_MemberStateChange_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.member != null) {
                if (typeof object.member !== "object")
                    throw TypeError(".CChatRoom_MemberStateChange_Notification.member: object expected");
                message.member = $root.CChatRoomMember.fromObject(object.member);
            }
            if (object.change != null)
                message.change = object.change | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_MemberStateChange_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_MemberStateChange_Notification
         * @static
         * @param {CChatRoom_MemberStateChange_Notification} message CChatRoom_MemberStateChange_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_MemberStateChange_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.member = null;
                object.change = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.member != null && message.hasOwnProperty("member"))
                object.member = $root.CChatRoomMember.toObject(message.member, options);
            if (message.change != null && message.hasOwnProperty("change"))
                object.change = message.change;
            return object;
        };
    
        /**
         * Converts this CChatRoom_MemberStateChange_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_MemberStateChange_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_MemberStateChange_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_MemberStateChange_Notification;
    })();
    
    $root.CChatRoom_ChatRoomHeaderState_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_ChatRoomHeaderState_Notification.
         * @exports ICChatRoom_ChatRoomHeaderState_Notification
         * @interface ICChatRoom_ChatRoomHeaderState_Notification
         * @property {ICChatRoomGroupHeaderState|null} [header_state] CChatRoom_ChatRoomHeaderState_Notification header_state
         */
    
        /**
         * Constructs a new CChatRoom_ChatRoomHeaderState_Notification.
         * @exports CChatRoom_ChatRoomHeaderState_Notification
         * @classdesc Represents a CChatRoom_ChatRoomHeaderState_Notification.
         * @implements ICChatRoom_ChatRoomHeaderState_Notification
         * @constructor
         * @param {ICChatRoom_ChatRoomHeaderState_Notification=} [properties] Properties to set
         */
        function CChatRoom_ChatRoomHeaderState_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ChatRoomHeaderState_Notification header_state.
         * @member {ICChatRoomGroupHeaderState|null|undefined} header_state
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @instance
         */
        CChatRoom_ChatRoomHeaderState_Notification.prototype.header_state = null;
    
        /**
         * Creates a new CChatRoom_ChatRoomHeaderState_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {ICChatRoom_ChatRoomHeaderState_Notification=} [properties] Properties to set
         * @returns {CChatRoom_ChatRoomHeaderState_Notification} CChatRoom_ChatRoomHeaderState_Notification instance
         */
        CChatRoom_ChatRoomHeaderState_Notification.create = function create(properties) {
            return new CChatRoom_ChatRoomHeaderState_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ChatRoomHeaderState_Notification message. Does not implicitly {@link CChatRoom_ChatRoomHeaderState_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {ICChatRoom_ChatRoomHeaderState_Notification} message CChatRoom_ChatRoomHeaderState_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatRoomHeaderState_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.header_state != null && message.hasOwnProperty("header_state"))
                $root.CChatRoomGroupHeaderState.encode(message.header_state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ChatRoomHeaderState_Notification message, length delimited. Does not implicitly {@link CChatRoom_ChatRoomHeaderState_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {ICChatRoom_ChatRoomHeaderState_Notification} message CChatRoom_ChatRoomHeaderState_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatRoomHeaderState_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ChatRoomHeaderState_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ChatRoomHeaderState_Notification} CChatRoom_ChatRoomHeaderState_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatRoomHeaderState_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ChatRoomHeaderState_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.header_state = $root.CChatRoomGroupHeaderState.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ChatRoomHeaderState_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ChatRoomHeaderState_Notification} CChatRoom_ChatRoomHeaderState_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatRoomHeaderState_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ChatRoomHeaderState_Notification message.
         * @function verify
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ChatRoomHeaderState_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.header_state != null && message.hasOwnProperty("header_state")) {
                var error = $root.CChatRoomGroupHeaderState.verify(message.header_state);
                if (error)
                    return "header_state." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_ChatRoomHeaderState_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ChatRoomHeaderState_Notification} CChatRoom_ChatRoomHeaderState_Notification
         */
        CChatRoom_ChatRoomHeaderState_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ChatRoomHeaderState_Notification)
                return object;
            var message = new $root.CChatRoom_ChatRoomHeaderState_Notification();
            if (object.header_state != null) {
                if (typeof object.header_state !== "object")
                    throw TypeError(".CChatRoom_ChatRoomHeaderState_Notification.header_state: object expected");
                message.header_state = $root.CChatRoomGroupHeaderState.fromObject(object.header_state);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ChatRoomHeaderState_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @static
         * @param {CChatRoom_ChatRoomHeaderState_Notification} message CChatRoom_ChatRoomHeaderState_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ChatRoomHeaderState_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.header_state = null;
            if (message.header_state != null && message.hasOwnProperty("header_state"))
                object.header_state = $root.CChatRoomGroupHeaderState.toObject(message.header_state, options);
            return object;
        };
    
        /**
         * Converts this CChatRoom_ChatRoomHeaderState_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_ChatRoomHeaderState_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ChatRoomHeaderState_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ChatRoomHeaderState_Notification;
    })();
    
    $root.CChatRoom_ChatRoomGroupRoomsChange_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_ChatRoomGroupRoomsChange_Notification.
         * @exports ICChatRoom_ChatRoomGroupRoomsChange_Notification
         * @interface ICChatRoom_ChatRoomGroupRoomsChange_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_ChatRoomGroupRoomsChange_Notification chat_group_id
         * @property {number|Long|null} [default_chat_id] CChatRoom_ChatRoomGroupRoomsChange_Notification default_chat_id
         * @property {Array.<ICChatRoomState>|null} [chat_rooms] CChatRoom_ChatRoomGroupRoomsChange_Notification chat_rooms
         */
    
        /**
         * Constructs a new CChatRoom_ChatRoomGroupRoomsChange_Notification.
         * @exports CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @classdesc Represents a CChatRoom_ChatRoomGroupRoomsChange_Notification.
         * @implements ICChatRoom_ChatRoomGroupRoomsChange_Notification
         * @constructor
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification=} [properties] Properties to set
         */
        function CChatRoom_ChatRoomGroupRoomsChange_Notification(properties) {
            this.chat_rooms = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_ChatRoomGroupRoomsChange_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @instance
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ChatRoomGroupRoomsChange_Notification default_chat_id.
         * @member {number|Long} default_chat_id
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @instance
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.prototype.default_chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_ChatRoomGroupRoomsChange_Notification chat_rooms.
         * @member {Array.<ICChatRoomState>} chat_rooms
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @instance
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.prototype.chat_rooms = $util.emptyArray;
    
        /**
         * Creates a new CChatRoom_ChatRoomGroupRoomsChange_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification=} [properties] Properties to set
         * @returns {CChatRoom_ChatRoomGroupRoomsChange_Notification} CChatRoom_ChatRoomGroupRoomsChange_Notification instance
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.create = function create(properties) {
            return new CChatRoom_ChatRoomGroupRoomsChange_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_ChatRoomGroupRoomsChange_Notification message. Does not implicitly {@link CChatRoom_ChatRoomGroupRoomsChange_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification} message CChatRoom_ChatRoomGroupRoomsChange_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.default_chat_id);
            if (message.chat_rooms != null && message.chat_rooms.length)
                for (var i = 0; i < message.chat_rooms.length; ++i)
                    $root.CChatRoomState.encode(message.chat_rooms[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_ChatRoomGroupRoomsChange_Notification message, length delimited. Does not implicitly {@link CChatRoom_ChatRoomGroupRoomsChange_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification} message CChatRoom_ChatRoomGroupRoomsChange_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_ChatRoomGroupRoomsChange_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_ChatRoomGroupRoomsChange_Notification} CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_ChatRoomGroupRoomsChange_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.default_chat_id = reader.uint64();
                    break;
                case 3:
                    if (!(message.chat_rooms && message.chat_rooms.length))
                        message.chat_rooms = [];
                    message.chat_rooms.push($root.CChatRoomState.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_ChatRoomGroupRoomsChange_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_ChatRoomGroupRoomsChange_Notification} CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_ChatRoomGroupRoomsChange_Notification message.
         * @function verify
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (!$util.isInteger(message.default_chat_id) && !(message.default_chat_id && $util.isInteger(message.default_chat_id.low) && $util.isInteger(message.default_chat_id.high)))
                    return "default_chat_id: integer|Long expected";
            if (message.chat_rooms != null && message.hasOwnProperty("chat_rooms")) {
                if (!Array.isArray(message.chat_rooms))
                    return "chat_rooms: array expected";
                for (var i = 0; i < message.chat_rooms.length; ++i) {
                    var error = $root.CChatRoomState.verify(message.chat_rooms[i]);
                    if (error)
                        return "chat_rooms." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoom_ChatRoomGroupRoomsChange_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_ChatRoomGroupRoomsChange_Notification} CChatRoom_ChatRoomGroupRoomsChange_Notification
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_ChatRoomGroupRoomsChange_Notification)
                return object;
            var message = new $root.CChatRoom_ChatRoomGroupRoomsChange_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.default_chat_id != null)
                if ($util.Long)
                    (message.default_chat_id = $util.Long.fromValue(object.default_chat_id)).unsigned = true;
                else if (typeof object.default_chat_id === "string")
                    message.default_chat_id = parseInt(object.default_chat_id, 10);
                else if (typeof object.default_chat_id === "number")
                    message.default_chat_id = object.default_chat_id;
                else if (typeof object.default_chat_id === "object")
                    message.default_chat_id = new $util.LongBits(object.default_chat_id.low >>> 0, object.default_chat_id.high >>> 0).toNumber(true);
            if (object.chat_rooms) {
                if (!Array.isArray(object.chat_rooms))
                    throw TypeError(".CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms: array expected");
                message.chat_rooms = [];
                for (var i = 0; i < object.chat_rooms.length; ++i) {
                    if (typeof object.chat_rooms[i] !== "object")
                        throw TypeError(".CChatRoom_ChatRoomGroupRoomsChange_Notification.chat_rooms: object expected");
                    message.chat_rooms[i] = $root.CChatRoomState.fromObject(object.chat_rooms[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_ChatRoomGroupRoomsChange_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @static
         * @param {CChatRoom_ChatRoomGroupRoomsChange_Notification} message CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.chat_rooms = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.default_chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.default_chat_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (typeof message.default_chat_id === "number")
                    object.default_chat_id = options.longs === String ? String(message.default_chat_id) : message.default_chat_id;
                else
                    object.default_chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.default_chat_id) : options.longs === Number ? new $util.LongBits(message.default_chat_id.low >>> 0, message.default_chat_id.high >>> 0).toNumber(true) : message.default_chat_id;
            if (message.chat_rooms && message.chat_rooms.length) {
                object.chat_rooms = [];
                for (var j = 0; j < message.chat_rooms.length; ++j)
                    object.chat_rooms[j] = $root.CChatRoomState.toObject(message.chat_rooms[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoom_ChatRoomGroupRoomsChange_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_ChatRoomGroupRoomsChange_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_ChatRoomGroupRoomsChange_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_ChatRoomGroupRoomsChange_Notification;
    })();
    
    $root.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.
         * @exports ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @interface ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @property {number|Long|null} [chat_id] CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification chat_id
         * @property {number|Long|null} [chat_group_id] CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification chat_group_id
         */
    
        /**
         * Constructs a new CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.
         * @exports CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @classdesc Represents a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.
         * @implements ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @constructor
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification=} [properties] Properties to set
         */
        function CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @instance
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @instance
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification=} [properties] Properties to set
         * @returns {CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification instance
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.create = function create(properties) {
            return new CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message. Does not implicitly {@link CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} message CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_id);
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message, length delimited. Does not implicitly {@link CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} message CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_id = reader.uint64();
                    break;
                case 2:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message.
         * @function verify
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification)
                return object;
            var message = new $root.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification();
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @static
         * @param {CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} message CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            }
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification;
    })();
    
    $root.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification = (function() {
    
        /**
         * Properties of a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.
         * @exports IChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @interface IChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @property {number|Long|null} [chat_group_id] ChatRoomClient_NotifyChatGroupUserStateChanged_Notification chat_group_id
         * @property {ICUserChatRoomGroupState|null} [user_chat_group_state] ChatRoomClient_NotifyChatGroupUserStateChanged_Notification user_chat_group_state
         * @property {ICChatRoom_GetChatRoomGroupSummary_Response|null} [group_summary] ChatRoomClient_NotifyChatGroupUserStateChanged_Notification group_summary
         * @property {number|null} [user_action] ChatRoomClient_NotifyChatGroupUserStateChanged_Notification user_action
         */
    
        /**
         * Constructs a new ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.
         * @exports ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @classdesc Represents a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.
         * @implements IChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @constructor
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification=} [properties] Properties to set
         */
        function ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * ChatRoomClient_NotifyChatGroupUserStateChanged_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @instance
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * ChatRoomClient_NotifyChatGroupUserStateChanged_Notification user_chat_group_state.
         * @member {ICUserChatRoomGroupState|null|undefined} user_chat_group_state
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @instance
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.prototype.user_chat_group_state = null;
    
        /**
         * ChatRoomClient_NotifyChatGroupUserStateChanged_Notification group_summary.
         * @member {ICChatRoom_GetChatRoomGroupSummary_Response|null|undefined} group_summary
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @instance
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.prototype.group_summary = null;
    
        /**
         * ChatRoomClient_NotifyChatGroupUserStateChanged_Notification user_action.
         * @member {number} user_action
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @instance
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.prototype.user_action = 0;
    
        /**
         * Creates a new ChatRoomClient_NotifyChatGroupUserStateChanged_Notification instance using the specified properties.
         * @function create
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification=} [properties] Properties to set
         * @returns {ChatRoomClient_NotifyChatGroupUserStateChanged_Notification} ChatRoomClient_NotifyChatGroupUserStateChanged_Notification instance
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.create = function create(properties) {
            return new ChatRoomClient_NotifyChatGroupUserStateChanged_Notification(properties);
        };
    
        /**
         * Encodes the specified ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message. Does not implicitly {@link ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.verify|verify} messages.
         * @function encode
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification} message ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                $root.CUserChatRoomGroupState.encode(message.user_chat_group_state, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                $root.CChatRoom_GetChatRoomGroupSummary_Response.encode(message.group_summary, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.user_action != null && message.hasOwnProperty("user_action"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.user_action);
            return writer;
        };
    
        /**
         * Encodes the specified ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message, length delimited. Does not implicitly {@link ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification} message ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {ChatRoomClient_NotifyChatGroupUserStateChanged_Notification} ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.user_chat_group_state = $root.CUserChatRoomGroupState.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.user_action = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {ChatRoomClient_NotifyChatGroupUserStateChanged_Notification} ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message.
         * @function verify
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state")) {
                var error = $root.CUserChatRoomGroupState.verify(message.user_chat_group_state);
                if (error)
                    return "user_chat_group_state." + error;
            }
            if (message.group_summary != null && message.hasOwnProperty("group_summary")) {
                var error = $root.CChatRoom_GetChatRoomGroupSummary_Response.verify(message.group_summary);
                if (error)
                    return "group_summary." + error;
            }
            if (message.user_action != null && message.hasOwnProperty("user_action"))
                if (!$util.isInteger(message.user_action))
                    return "user_action: integer expected";
            return null;
        };
    
        /**
         * Creates a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {ChatRoomClient_NotifyChatGroupUserStateChanged_Notification} ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification)
                return object;
            var message = new $root.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.user_chat_group_state != null) {
                if (typeof object.user_chat_group_state !== "object")
                    throw TypeError(".ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.user_chat_group_state: object expected");
                message.user_chat_group_state = $root.CUserChatRoomGroupState.fromObject(object.user_chat_group_state);
            }
            if (object.group_summary != null) {
                if (typeof object.group_summary !== "object")
                    throw TypeError(".ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.group_summary: object expected");
                message.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.fromObject(object.group_summary);
            }
            if (object.user_action != null)
                message.user_action = object.user_action | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @static
         * @param {ChatRoomClient_NotifyChatGroupUserStateChanged_Notification} message ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.user_chat_group_state = null;
                object.group_summary = null;
                object.user_action = 0;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.user_chat_group_state != null && message.hasOwnProperty("user_chat_group_state"))
                object.user_chat_group_state = $root.CUserChatRoomGroupState.toObject(message.user_chat_group_state, options);
            if (message.group_summary != null && message.hasOwnProperty("group_summary"))
                object.group_summary = $root.CChatRoom_GetChatRoomGroupSummary_Response.toObject(message.group_summary, options);
            if (message.user_action != null && message.hasOwnProperty("user_action"))
                object.user_action = message.user_action;
            return object;
        };
    
        /**
         * Converts this ChatRoomClient_NotifyChatGroupUserStateChanged_Notification to JSON.
         * @function toJSON
         * @memberof ChatRoomClient_NotifyChatGroupUserStateChanged_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        ChatRoomClient_NotifyChatGroupUserStateChanged_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return ChatRoomClient_NotifyChatGroupUserStateChanged_Notification;
    })();
    
    $root.ChatRoomClient_NotifyChatRoomDisconnect_Notification = (function() {
    
        /**
         * Properties of a ChatRoomClient_NotifyChatRoomDisconnect_Notification.
         * @exports IChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @interface IChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @property {Array.<number|Long>|null} [chat_group_ids] ChatRoomClient_NotifyChatRoomDisconnect_Notification chat_group_ids
         */
    
        /**
         * Constructs a new ChatRoomClient_NotifyChatRoomDisconnect_Notification.
         * @exports ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @classdesc Represents a ChatRoomClient_NotifyChatRoomDisconnect_Notification.
         * @implements IChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @constructor
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification=} [properties] Properties to set
         */
        function ChatRoomClient_NotifyChatRoomDisconnect_Notification(properties) {
            this.chat_group_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * ChatRoomClient_NotifyChatRoomDisconnect_Notification chat_group_ids.
         * @member {Array.<number|Long>} chat_group_ids
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @instance
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.prototype.chat_group_ids = $util.emptyArray;
    
        /**
         * Creates a new ChatRoomClient_NotifyChatRoomDisconnect_Notification instance using the specified properties.
         * @function create
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification=} [properties] Properties to set
         * @returns {ChatRoomClient_NotifyChatRoomDisconnect_Notification} ChatRoomClient_NotifyChatRoomDisconnect_Notification instance
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.create = function create(properties) {
            return new ChatRoomClient_NotifyChatRoomDisconnect_Notification(properties);
        };
    
        /**
         * Encodes the specified ChatRoomClient_NotifyChatRoomDisconnect_Notification message. Does not implicitly {@link ChatRoomClient_NotifyChatRoomDisconnect_Notification.verify|verify} messages.
         * @function encode
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification} message ChatRoomClient_NotifyChatRoomDisconnect_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_ids != null && message.chat_group_ids.length)
                for (var i = 0; i < message.chat_group_ids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified ChatRoomClient_NotifyChatRoomDisconnect_Notification message, length delimited. Does not implicitly {@link ChatRoomClient_NotifyChatRoomDisconnect_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification} message ChatRoomClient_NotifyChatRoomDisconnect_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a ChatRoomClient_NotifyChatRoomDisconnect_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {ChatRoomClient_NotifyChatRoomDisconnect_Notification} ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatRoomClient_NotifyChatRoomDisconnect_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.chat_group_ids && message.chat_group_ids.length))
                        message.chat_group_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.chat_group_ids.push(reader.uint64());
                    } else
                        message.chat_group_ids.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a ChatRoomClient_NotifyChatRoomDisconnect_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {ChatRoomClient_NotifyChatRoomDisconnect_Notification} ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a ChatRoomClient_NotifyChatRoomDisconnect_Notification message.
         * @function verify
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_ids != null && message.hasOwnProperty("chat_group_ids")) {
                if (!Array.isArray(message.chat_group_ids))
                    return "chat_group_ids: array expected";
                for (var i = 0; i < message.chat_group_ids.length; ++i)
                    if (!$util.isInteger(message.chat_group_ids[i]) && !(message.chat_group_ids[i] && $util.isInteger(message.chat_group_ids[i].low) && $util.isInteger(message.chat_group_ids[i].high)))
                        return "chat_group_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a ChatRoomClient_NotifyChatRoomDisconnect_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {ChatRoomClient_NotifyChatRoomDisconnect_Notification} ChatRoomClient_NotifyChatRoomDisconnect_Notification
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.ChatRoomClient_NotifyChatRoomDisconnect_Notification)
                return object;
            var message = new $root.ChatRoomClient_NotifyChatRoomDisconnect_Notification();
            if (object.chat_group_ids) {
                if (!Array.isArray(object.chat_group_ids))
                    throw TypeError(".ChatRoomClient_NotifyChatRoomDisconnect_Notification.chat_group_ids: array expected");
                message.chat_group_ids = [];
                for (var i = 0; i < object.chat_group_ids.length; ++i)
                    if ($util.Long)
                        (message.chat_group_ids[i] = $util.Long.fromValue(object.chat_group_ids[i])).unsigned = true;
                    else if (typeof object.chat_group_ids[i] === "string")
                        message.chat_group_ids[i] = parseInt(object.chat_group_ids[i], 10);
                    else if (typeof object.chat_group_ids[i] === "number")
                        message.chat_group_ids[i] = object.chat_group_ids[i];
                    else if (typeof object.chat_group_ids[i] === "object")
                        message.chat_group_ids[i] = new $util.LongBits(object.chat_group_ids[i].low >>> 0, object.chat_group_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a ChatRoomClient_NotifyChatRoomDisconnect_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @static
         * @param {ChatRoomClient_NotifyChatRoomDisconnect_Notification} message ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.chat_group_ids = [];
            if (message.chat_group_ids && message.chat_group_ids.length) {
                object.chat_group_ids = [];
                for (var j = 0; j < message.chat_group_ids.length; ++j)
                    if (typeof message.chat_group_ids[j] === "number")
                        object.chat_group_ids[j] = options.longs === String ? String(message.chat_group_ids[j]) : message.chat_group_ids[j];
                    else
                        object.chat_group_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_ids[j]) : options.longs === Number ? new $util.LongBits(message.chat_group_ids[j].low >>> 0, message.chat_group_ids[j].high >>> 0).toNumber(true) : message.chat_group_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this ChatRoomClient_NotifyChatRoomDisconnect_Notification to JSON.
         * @function toJSON
         * @memberof ChatRoomClient_NotifyChatRoomDisconnect_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        ChatRoomClient_NotifyChatRoomDisconnect_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return ChatRoomClient_NotifyChatRoomDisconnect_Notification;
    })();
    
    $root.CChatRoomClient_MemberListViewUpdated_Notification = (function() {
    
        /**
         * Properties of a CChatRoomClient_MemberListViewUpdated_Notification.
         * @exports ICChatRoomClient_MemberListViewUpdated_Notification
         * @interface ICChatRoomClient_MemberListViewUpdated_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoomClient_MemberListViewUpdated_Notification chat_group_id
         * @property {number|Long|null} [view_id] CChatRoomClient_MemberListViewUpdated_Notification view_id
         * @property {ICChatRoomMemberListView|null} [view] CChatRoomClient_MemberListViewUpdated_Notification view
         * @property {Array.<ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry>|null} [members] CChatRoomClient_MemberListViewUpdated_Notification members
         * @property {number|null} [status_flags] CChatRoomClient_MemberListViewUpdated_Notification status_flags
         * @property {ICChatRoomMemberSummaryCounts|null} [member_summary] CChatRoomClient_MemberListViewUpdated_Notification member_summary
         * @property {Array.<ICMsgClientPersonaState_Friend>|null} [subscribed_personas] CChatRoomClient_MemberListViewUpdated_Notification subscribed_personas
         */
    
        /**
         * Constructs a new CChatRoomClient_MemberListViewUpdated_Notification.
         * @exports CChatRoomClient_MemberListViewUpdated_Notification
         * @classdesc Represents a CChatRoomClient_MemberListViewUpdated_Notification.
         * @implements ICChatRoomClient_MemberListViewUpdated_Notification
         * @constructor
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification=} [properties] Properties to set
         */
        function CChatRoomClient_MemberListViewUpdated_Notification(properties) {
            this.members = [];
            this.subscribed_personas = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification view_id.
         * @member {number|Long} view_id
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.view_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification view.
         * @member {ICChatRoomMemberListView|null|undefined} view
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.view = null;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification members.
         * @member {Array.<ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry>} members
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.members = $util.emptyArray;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification status_flags.
         * @member {number} status_flags
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.status_flags = 0;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification member_summary.
         * @member {ICChatRoomMemberSummaryCounts|null|undefined} member_summary
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.member_summary = null;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification subscribed_personas.
         * @member {Array.<ICMsgClientPersonaState_Friend>} subscribed_personas
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.subscribed_personas = $util.emptyArray;
    
        /**
         * Creates a new CChatRoomClient_MemberListViewUpdated_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification=} [properties] Properties to set
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification} CChatRoomClient_MemberListViewUpdated_Notification instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification.create = function create(properties) {
            return new CChatRoomClient_MemberListViewUpdated_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoomClient_MemberListViewUpdated_Notification message. Does not implicitly {@link CChatRoomClient_MemberListViewUpdated_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification} message CChatRoomClient_MemberListViewUpdated_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomClient_MemberListViewUpdated_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.view_id);
            if (message.view != null && message.hasOwnProperty("view"))
                $root.CChatRoomMemberListView.encode(message.view, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.members != null && message.members.length)
                for (var i = 0; i < message.members.length; ++i)
                    $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.encode(message.members[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.status_flags);
            if (message.member_summary != null && message.hasOwnProperty("member_summary"))
                $root.CChatRoomMemberSummaryCounts.encode(message.member_summary, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.subscribed_personas != null && message.subscribed_personas.length)
                for (var i = 0; i < message.subscribed_personas.length; ++i)
                    $root.CMsgClientPersonaState_Friend.encode(message.subscribed_personas[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomClient_MemberListViewUpdated_Notification message, length delimited. Does not implicitly {@link CChatRoomClient_MemberListViewUpdated_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification} message CChatRoomClient_MemberListViewUpdated_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomClient_MemberListViewUpdated_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomClient_MemberListViewUpdated_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification} CChatRoomClient_MemberListViewUpdated_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomClient_MemberListViewUpdated_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomClient_MemberListViewUpdated_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.view_id = reader.uint64();
                    break;
                case 3:
                    message.view = $root.CChatRoomMemberListView.decode(reader, reader.uint32());
                    break;
                case 4:
                    if (!(message.members && message.members.length))
                        message.members = [];
                    message.members.push($root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.status_flags = reader.uint32();
                    break;
                case 6:
                    message.member_summary = $root.CChatRoomMemberSummaryCounts.decode(reader, reader.uint32());
                    break;
                case 7:
                    if (!(message.subscribed_personas && message.subscribed_personas.length))
                        message.subscribed_personas = [];
                    message.subscribed_personas.push($root.CMsgClientPersonaState_Friend.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomClient_MemberListViewUpdated_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification} CChatRoomClient_MemberListViewUpdated_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomClient_MemberListViewUpdated_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomClient_MemberListViewUpdated_Notification message.
         * @function verify
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomClient_MemberListViewUpdated_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                if (!$util.isInteger(message.view_id) && !(message.view_id && $util.isInteger(message.view_id.low) && $util.isInteger(message.view_id.high)))
                    return "view_id: integer|Long expected";
            if (message.view != null && message.hasOwnProperty("view")) {
                var error = $root.CChatRoomMemberListView.verify(message.view);
                if (error)
                    return "view." + error;
            }
            if (message.members != null && message.hasOwnProperty("members")) {
                if (!Array.isArray(message.members))
                    return "members: array expected";
                for (var i = 0; i < message.members.length; ++i) {
                    var error = $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.verify(message.members[i]);
                    if (error)
                        return "members." + error;
                }
            }
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                if (!$util.isInteger(message.status_flags))
                    return "status_flags: integer expected";
            if (message.member_summary != null && message.hasOwnProperty("member_summary")) {
                var error = $root.CChatRoomMemberSummaryCounts.verify(message.member_summary);
                if (error)
                    return "member_summary." + error;
            }
            if (message.subscribed_personas != null && message.hasOwnProperty("subscribed_personas")) {
                if (!Array.isArray(message.subscribed_personas))
                    return "subscribed_personas: array expected";
                for (var i = 0; i < message.subscribed_personas.length; ++i) {
                    var error = $root.CMsgClientPersonaState_Friend.verify(message.subscribed_personas[i]);
                    if (error)
                        return "subscribed_personas." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CChatRoomClient_MemberListViewUpdated_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification} CChatRoomClient_MemberListViewUpdated_Notification
         */
        CChatRoomClient_MemberListViewUpdated_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomClient_MemberListViewUpdated_Notification)
                return object;
            var message = new $root.CChatRoomClient_MemberListViewUpdated_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.view_id != null)
                if ($util.Long)
                    (message.view_id = $util.Long.fromValue(object.view_id)).unsigned = true;
                else if (typeof object.view_id === "string")
                    message.view_id = parseInt(object.view_id, 10);
                else if (typeof object.view_id === "number")
                    message.view_id = object.view_id;
                else if (typeof object.view_id === "object")
                    message.view_id = new $util.LongBits(object.view_id.low >>> 0, object.view_id.high >>> 0).toNumber(true);
            if (object.view != null) {
                if (typeof object.view !== "object")
                    throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.view: object expected");
                message.view = $root.CChatRoomMemberListView.fromObject(object.view);
            }
            if (object.members) {
                if (!Array.isArray(object.members))
                    throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.members: array expected");
                message.members = [];
                for (var i = 0; i < object.members.length; ++i) {
                    if (typeof object.members[i] !== "object")
                        throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.members: object expected");
                    message.members[i] = $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.fromObject(object.members[i]);
                }
            }
            if (object.status_flags != null)
                message.status_flags = object.status_flags >>> 0;
            if (object.member_summary != null) {
                if (typeof object.member_summary !== "object")
                    throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.member_summary: object expected");
                message.member_summary = $root.CChatRoomMemberSummaryCounts.fromObject(object.member_summary);
            }
            if (object.subscribed_personas) {
                if (!Array.isArray(object.subscribed_personas))
                    throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas: array expected");
                message.subscribed_personas = [];
                for (var i = 0; i < object.subscribed_personas.length; ++i) {
                    if (typeof object.subscribed_personas[i] !== "object")
                        throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification.subscribed_personas: object expected");
                    message.subscribed_personas[i] = $root.CMsgClientPersonaState_Friend.fromObject(object.subscribed_personas[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomClient_MemberListViewUpdated_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @static
         * @param {CChatRoomClient_MemberListViewUpdated_Notification} message CChatRoomClient_MemberListViewUpdated_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomClient_MemberListViewUpdated_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.members = [];
                object.subscribed_personas = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.view_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.view_id = options.longs === String ? "0" : 0;
                object.view = null;
                object.status_flags = 0;
                object.member_summary = null;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.view_id != null && message.hasOwnProperty("view_id"))
                if (typeof message.view_id === "number")
                    object.view_id = options.longs === String ? String(message.view_id) : message.view_id;
                else
                    object.view_id = options.longs === String ? $util.Long.prototype.toString.call(message.view_id) : options.longs === Number ? new $util.LongBits(message.view_id.low >>> 0, message.view_id.high >>> 0).toNumber(true) : message.view_id;
            if (message.view != null && message.hasOwnProperty("view"))
                object.view = $root.CChatRoomMemberListView.toObject(message.view, options);
            if (message.members && message.members.length) {
                object.members = [];
                for (var j = 0; j < message.members.length; ++j)
                    object.members[j] = $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.toObject(message.members[j], options);
            }
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                object.status_flags = message.status_flags;
            if (message.member_summary != null && message.hasOwnProperty("member_summary"))
                object.member_summary = $root.CChatRoomMemberSummaryCounts.toObject(message.member_summary, options);
            if (message.subscribed_personas && message.subscribed_personas.length) {
                object.subscribed_personas = [];
                for (var j = 0; j < message.subscribed_personas.length; ++j)
                    object.subscribed_personas[j] = $root.CMsgClientPersonaState_Friend.toObject(message.subscribed_personas[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CChatRoomClient_MemberListViewUpdated_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomClient_MemberListViewUpdated_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomClient_MemberListViewUpdated_Notification;
    })();
    
    $root.CChatRoomMemberListView = (function() {
    
        /**
         * Properties of a CChatRoomMemberListView.
         * @exports ICChatRoomMemberListView
         * @interface ICChatRoomMemberListView
         * @property {number|null} [start] CChatRoomMemberListView start
         * @property {number|null} [end] CChatRoomMemberListView end
         * @property {number|null} [total_count] CChatRoomMemberListView total_count
         * @property {number|null} [client_changenumber] CChatRoomMemberListView client_changenumber
         * @property {number|null} [server_changenumber] CChatRoomMemberListView server_changenumber
         */
    
        /**
         * Constructs a new CChatRoomMemberListView.
         * @exports CChatRoomMemberListView
         * @classdesc Represents a CChatRoomMemberListView.
         * @implements ICChatRoomMemberListView
         * @constructor
         * @param {ICChatRoomMemberListView=} [properties] Properties to set
         */
        function CChatRoomMemberListView(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomMemberListView start.
         * @member {number} start
         * @memberof CChatRoomMemberListView
         * @instance
         */
        CChatRoomMemberListView.prototype.start = 0;
    
        /**
         * CChatRoomMemberListView end.
         * @member {number} end
         * @memberof CChatRoomMemberListView
         * @instance
         */
        CChatRoomMemberListView.prototype.end = 0;
    
        /**
         * CChatRoomMemberListView total_count.
         * @member {number} total_count
         * @memberof CChatRoomMemberListView
         * @instance
         */
        CChatRoomMemberListView.prototype.total_count = 0;
    
        /**
         * CChatRoomMemberListView client_changenumber.
         * @member {number} client_changenumber
         * @memberof CChatRoomMemberListView
         * @instance
         */
        CChatRoomMemberListView.prototype.client_changenumber = 0;
    
        /**
         * CChatRoomMemberListView server_changenumber.
         * @member {number} server_changenumber
         * @memberof CChatRoomMemberListView
         * @instance
         */
        CChatRoomMemberListView.prototype.server_changenumber = 0;
    
        /**
         * Creates a new CChatRoomMemberListView instance using the specified properties.
         * @function create
         * @memberof CChatRoomMemberListView
         * @static
         * @param {ICChatRoomMemberListView=} [properties] Properties to set
         * @returns {CChatRoomMemberListView} CChatRoomMemberListView instance
         */
        CChatRoomMemberListView.create = function create(properties) {
            return new CChatRoomMemberListView(properties);
        };
    
        /**
         * Encodes the specified CChatRoomMemberListView message. Does not implicitly {@link CChatRoomMemberListView.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomMemberListView
         * @static
         * @param {ICChatRoomMemberListView} message CChatRoomMemberListView message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMemberListView.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.start != null && message.hasOwnProperty("start"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.start);
            if (message.end != null && message.hasOwnProperty("end"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
            if (message.total_count != null && message.hasOwnProperty("total_count"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.total_count);
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.client_changenumber);
            if (message.server_changenumber != null && message.hasOwnProperty("server_changenumber"))
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.server_changenumber);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomMemberListView message, length delimited. Does not implicitly {@link CChatRoomMemberListView.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomMemberListView
         * @static
         * @param {ICChatRoomMemberListView} message CChatRoomMemberListView message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMemberListView.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomMemberListView message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomMemberListView
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomMemberListView} CChatRoomMemberListView
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMemberListView.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomMemberListView();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 3:
                    message.start = reader.int32();
                    break;
                case 4:
                    message.end = reader.int32();
                    break;
                case 5:
                    message.total_count = reader.int32();
                    break;
                case 6:
                    message.client_changenumber = reader.int32();
                    break;
                case 7:
                    message.server_changenumber = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomMemberListView message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomMemberListView
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomMemberListView} CChatRoomMemberListView
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMemberListView.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomMemberListView message.
         * @function verify
         * @memberof CChatRoomMemberListView
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomMemberListView.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.start != null && message.hasOwnProperty("start"))
                if (!$util.isInteger(message.start))
                    return "start: integer expected";
            if (message.end != null && message.hasOwnProperty("end"))
                if (!$util.isInteger(message.end))
                    return "end: integer expected";
            if (message.total_count != null && message.hasOwnProperty("total_count"))
                if (!$util.isInteger(message.total_count))
                    return "total_count: integer expected";
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                if (!$util.isInteger(message.client_changenumber))
                    return "client_changenumber: integer expected";
            if (message.server_changenumber != null && message.hasOwnProperty("server_changenumber"))
                if (!$util.isInteger(message.server_changenumber))
                    return "server_changenumber: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoomMemberListView message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomMemberListView
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomMemberListView} CChatRoomMemberListView
         */
        CChatRoomMemberListView.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomMemberListView)
                return object;
            var message = new $root.CChatRoomMemberListView();
            if (object.start != null)
                message.start = object.start | 0;
            if (object.end != null)
                message.end = object.end | 0;
            if (object.total_count != null)
                message.total_count = object.total_count | 0;
            if (object.client_changenumber != null)
                message.client_changenumber = object.client_changenumber | 0;
            if (object.server_changenumber != null)
                message.server_changenumber = object.server_changenumber | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomMemberListView message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomMemberListView
         * @static
         * @param {CChatRoomMemberListView} message CChatRoomMemberListView
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomMemberListView.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.start = 0;
                object.end = 0;
                object.total_count = 0;
                object.client_changenumber = 0;
                object.server_changenumber = 0;
            }
            if (message.start != null && message.hasOwnProperty("start"))
                object.start = message.start;
            if (message.end != null && message.hasOwnProperty("end"))
                object.end = message.end;
            if (message.total_count != null && message.hasOwnProperty("total_count"))
                object.total_count = message.total_count;
            if (message.client_changenumber != null && message.hasOwnProperty("client_changenumber"))
                object.client_changenumber = message.client_changenumber;
            if (message.server_changenumber != null && message.hasOwnProperty("server_changenumber"))
                object.server_changenumber = message.server_changenumber;
            return object;
        };
    
        /**
         * Converts this CChatRoomMemberListView to JSON.
         * @function toJSON
         * @memberof CChatRoomMemberListView
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomMemberListView.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomMemberListView;
    })();
    
    $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry = (function() {
    
        /**
         * Properties of a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.
         * @exports ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @interface ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @property {number|null} [rank] CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry rank
         * @property {number|null} [accountid] CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry accountid
         * @property {ICMsgClientPersonaState_Friend|null} [persona] CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry persona
         */
    
        /**
         * Constructs a new CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.
         * @exports CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @classdesc Represents a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.
         * @implements ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @constructor
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry=} [properties] Properties to set
         */
        function CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry rank.
         * @member {number} rank
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.prototype.rank = 0;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry accountid.
         * @member {number} accountid
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.prototype.accountid = 0;
    
        /**
         * CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry persona.
         * @member {ICMsgClientPersonaState_Friend|null|undefined} persona
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.prototype.persona = null;
    
        /**
         * Creates a new CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry instance using the specified properties.
         * @function create
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry=} [properties] Properties to set
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry instance
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.create = function create(properties) {
            return new CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry(properties);
        };
    
        /**
         * Encodes the specified CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message. Does not implicitly {@link CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} message CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.rank != null && message.hasOwnProperty("rank"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.rank);
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.accountid);
            if (message.persona != null && message.hasOwnProperty("persona"))
                $root.CMsgClientPersonaState_Friend.encode(message.persona, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message, length delimited. Does not implicitly {@link CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} message CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.rank = reader.int32();
                    break;
                case 2:
                    message.accountid = reader.uint32();
                    break;
                case 3:
                    message.persona = $root.CMsgClientPersonaState_Friend.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message.
         * @function verify
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.rank != null && message.hasOwnProperty("rank"))
                if (!$util.isInteger(message.rank))
                    return "rank: integer expected";
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                if (!$util.isInteger(message.accountid))
                    return "accountid: integer expected";
            if (message.persona != null && message.hasOwnProperty("persona")) {
                var error = $root.CMsgClientPersonaState_Friend.verify(message.persona);
                if (error)
                    return "persona." + error;
            }
            return null;
        };
    
        /**
         * Creates a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry)
                return object;
            var message = new $root.CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry();
            if (object.rank != null)
                message.rank = object.rank | 0;
            if (object.accountid != null)
                message.accountid = object.accountid >>> 0;
            if (object.persona != null) {
                if (typeof object.persona !== "object")
                    throw TypeError(".CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.persona: object expected");
                message.persona = $root.CMsgClientPersonaState_Friend.fromObject(object.persona);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @static
         * @param {CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry} message CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.rank = 0;
                object.accountid = 0;
                object.persona = null;
            }
            if (message.rank != null && message.hasOwnProperty("rank"))
                object.rank = message.rank;
            if (message.accountid != null && message.hasOwnProperty("accountid"))
                object.accountid = message.accountid;
            if (message.persona != null && message.hasOwnProperty("persona"))
                object.persona = $root.CMsgClientPersonaState_Friend.toObject(message.persona, options);
            return object;
        };
    
        /**
         * Converts this CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry to JSON.
         * @function toJSON
         * @memberof CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomClient_MemberListViewUpdated_Notification_MemberListViewEntry;
    })();
    
    $root.CChatRoomMemberSummaryCounts = (function() {
    
        /**
         * Properties of a CChatRoomMemberSummaryCounts.
         * @exports ICChatRoomMemberSummaryCounts
         * @interface ICChatRoomMemberSummaryCounts
         * @property {number|null} [ingame] CChatRoomMemberSummaryCounts ingame
         * @property {number|null} [online] CChatRoomMemberSummaryCounts online
         * @property {number|null} [offline] CChatRoomMemberSummaryCounts offline
         */
    
        /**
         * Constructs a new CChatRoomMemberSummaryCounts.
         * @exports CChatRoomMemberSummaryCounts
         * @classdesc Represents a CChatRoomMemberSummaryCounts.
         * @implements ICChatRoomMemberSummaryCounts
         * @constructor
         * @param {ICChatRoomMemberSummaryCounts=} [properties] Properties to set
         */
        function CChatRoomMemberSummaryCounts(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomMemberSummaryCounts ingame.
         * @member {number} ingame
         * @memberof CChatRoomMemberSummaryCounts
         * @instance
         */
        CChatRoomMemberSummaryCounts.prototype.ingame = 0;
    
        /**
         * CChatRoomMemberSummaryCounts online.
         * @member {number} online
         * @memberof CChatRoomMemberSummaryCounts
         * @instance
         */
        CChatRoomMemberSummaryCounts.prototype.online = 0;
    
        /**
         * CChatRoomMemberSummaryCounts offline.
         * @member {number} offline
         * @memberof CChatRoomMemberSummaryCounts
         * @instance
         */
        CChatRoomMemberSummaryCounts.prototype.offline = 0;
    
        /**
         * Creates a new CChatRoomMemberSummaryCounts instance using the specified properties.
         * @function create
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {ICChatRoomMemberSummaryCounts=} [properties] Properties to set
         * @returns {CChatRoomMemberSummaryCounts} CChatRoomMemberSummaryCounts instance
         */
        CChatRoomMemberSummaryCounts.create = function create(properties) {
            return new CChatRoomMemberSummaryCounts(properties);
        };
    
        /**
         * Encodes the specified CChatRoomMemberSummaryCounts message. Does not implicitly {@link CChatRoomMemberSummaryCounts.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {ICChatRoomMemberSummaryCounts} message CChatRoomMemberSummaryCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMemberSummaryCounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ingame != null && message.hasOwnProperty("ingame"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ingame);
            if (message.online != null && message.hasOwnProperty("online"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.online);
            if (message.offline != null && message.hasOwnProperty("offline"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.offline);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomMemberSummaryCounts message, length delimited. Does not implicitly {@link CChatRoomMemberSummaryCounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {ICChatRoomMemberSummaryCounts} message CChatRoomMemberSummaryCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomMemberSummaryCounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomMemberSummaryCounts message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomMemberSummaryCounts} CChatRoomMemberSummaryCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMemberSummaryCounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomMemberSummaryCounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.ingame = reader.int32();
                    break;
                case 2:
                    message.online = reader.int32();
                    break;
                case 3:
                    message.offline = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomMemberSummaryCounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomMemberSummaryCounts} CChatRoomMemberSummaryCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomMemberSummaryCounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomMemberSummaryCounts message.
         * @function verify
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomMemberSummaryCounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ingame != null && message.hasOwnProperty("ingame"))
                if (!$util.isInteger(message.ingame))
                    return "ingame: integer expected";
            if (message.online != null && message.hasOwnProperty("online"))
                if (!$util.isInteger(message.online))
                    return "online: integer expected";
            if (message.offline != null && message.hasOwnProperty("offline"))
                if (!$util.isInteger(message.offline))
                    return "offline: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoomMemberSummaryCounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomMemberSummaryCounts} CChatRoomMemberSummaryCounts
         */
        CChatRoomMemberSummaryCounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomMemberSummaryCounts)
                return object;
            var message = new $root.CChatRoomMemberSummaryCounts();
            if (object.ingame != null)
                message.ingame = object.ingame | 0;
            if (object.online != null)
                message.online = object.online | 0;
            if (object.offline != null)
                message.offline = object.offline | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomMemberSummaryCounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomMemberSummaryCounts
         * @static
         * @param {CChatRoomMemberSummaryCounts} message CChatRoomMemberSummaryCounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomMemberSummaryCounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ingame = 0;
                object.online = 0;
                object.offline = 0;
            }
            if (message.ingame != null && message.hasOwnProperty("ingame"))
                object.ingame = message.ingame;
            if (message.online != null && message.hasOwnProperty("online"))
                object.online = message.online;
            if (message.offline != null && message.hasOwnProperty("offline"))
                object.offline = message.offline;
            return object;
        };
    
        /**
         * Converts this CChatRoomMemberSummaryCounts to JSON.
         * @function toJSON
         * @memberof CChatRoomMemberSummaryCounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomMemberSummaryCounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomMemberSummaryCounts;
    })();
    
    $root.CChatRoom_MessageReaction_Notification = (function() {
    
        /**
         * Properties of a CChatRoom_MessageReaction_Notification.
         * @exports ICChatRoom_MessageReaction_Notification
         * @interface ICChatRoom_MessageReaction_Notification
         * @property {number|Long|null} [chat_group_id] CChatRoom_MessageReaction_Notification chat_group_id
         * @property {number|Long|null} [chat_id] CChatRoom_MessageReaction_Notification chat_id
         * @property {number|null} [server_timestamp] CChatRoom_MessageReaction_Notification server_timestamp
         * @property {number|null} [ordinal] CChatRoom_MessageReaction_Notification ordinal
         * @property {number|Long|null} [reactor] CChatRoom_MessageReaction_Notification reactor
         * @property {number|null} [reaction_type] CChatRoom_MessageReaction_Notification reaction_type
         * @property {string|null} [reaction] CChatRoom_MessageReaction_Notification reaction
         * @property {boolean|null} [is_add] CChatRoom_MessageReaction_Notification is_add
         */
    
        /**
         * Constructs a new CChatRoom_MessageReaction_Notification.
         * @exports CChatRoom_MessageReaction_Notification
         * @classdesc Represents a CChatRoom_MessageReaction_Notification.
         * @implements ICChatRoom_MessageReaction_Notification
         * @constructor
         * @param {ICChatRoom_MessageReaction_Notification=} [properties] Properties to set
         */
        function CChatRoom_MessageReaction_Notification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_MessageReaction_Notification chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_MessageReaction_Notification chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_MessageReaction_Notification server_timestamp.
         * @member {number} server_timestamp
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.server_timestamp = 0;
    
        /**
         * CChatRoom_MessageReaction_Notification ordinal.
         * @member {number} ordinal
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.ordinal = 0;
    
        /**
         * CChatRoom_MessageReaction_Notification reactor.
         * @member {number|Long} reactor
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.reactor = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatRoom_MessageReaction_Notification reaction_type.
         * @member {number} reaction_type
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.reaction_type = 0;
    
        /**
         * CChatRoom_MessageReaction_Notification reaction.
         * @member {string} reaction
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.reaction = "";
    
        /**
         * CChatRoom_MessageReaction_Notification is_add.
         * @member {boolean} is_add
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         */
        CChatRoom_MessageReaction_Notification.prototype.is_add = false;
    
        /**
         * Creates a new CChatRoom_MessageReaction_Notification instance using the specified properties.
         * @function create
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {ICChatRoom_MessageReaction_Notification=} [properties] Properties to set
         * @returns {CChatRoom_MessageReaction_Notification} CChatRoom_MessageReaction_Notification instance
         */
        CChatRoom_MessageReaction_Notification.create = function create(properties) {
            return new CChatRoom_MessageReaction_Notification(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_MessageReaction_Notification message. Does not implicitly {@link CChatRoom_MessageReaction_Notification.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {ICChatRoom_MessageReaction_Notification} message CChatRoom_MessageReaction_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MessageReaction_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_id);
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.server_timestamp);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ordinal);
            if (message.reactor != null && message.hasOwnProperty("reactor"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.reactor);
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.reaction_type);
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.reaction);
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.is_add);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_MessageReaction_Notification message, length delimited. Does not implicitly {@link CChatRoom_MessageReaction_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {ICChatRoom_MessageReaction_Notification} message CChatRoom_MessageReaction_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_MessageReaction_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_MessageReaction_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_MessageReaction_Notification} CChatRoom_MessageReaction_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MessageReaction_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_MessageReaction_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_id = reader.uint64();
                    break;
                case 3:
                    message.server_timestamp = reader.uint32();
                    break;
                case 4:
                    message.ordinal = reader.uint32();
                    break;
                case 5:
                    message.reactor = reader.fixed64();
                    break;
                case 6:
                    message.reaction_type = reader.int32();
                    break;
                case 7:
                    message.reaction = reader.string();
                    break;
                case 8:
                    message.is_add = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_MessageReaction_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_MessageReaction_Notification} CChatRoom_MessageReaction_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_MessageReaction_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_MessageReaction_Notification message.
         * @function verify
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_MessageReaction_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                if (!$util.isInteger(message.server_timestamp))
                    return "server_timestamp: integer expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            if (message.reactor != null && message.hasOwnProperty("reactor"))
                if (!$util.isInteger(message.reactor) && !(message.reactor && $util.isInteger(message.reactor.low) && $util.isInteger(message.reactor.high)))
                    return "reactor: integer|Long expected";
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                if (!$util.isInteger(message.reaction_type))
                    return "reaction_type: integer expected";
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                if (!$util.isString(message.reaction))
                    return "reaction: string expected";
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                if (typeof message.is_add !== "boolean")
                    return "is_add: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_MessageReaction_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_MessageReaction_Notification} CChatRoom_MessageReaction_Notification
         */
        CChatRoom_MessageReaction_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_MessageReaction_Notification)
                return object;
            var message = new $root.CChatRoom_MessageReaction_Notification();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.server_timestamp != null)
                message.server_timestamp = object.server_timestamp >>> 0;
            if (object.ordinal != null)
                message.ordinal = object.ordinal >>> 0;
            if (object.reactor != null)
                if ($util.Long)
                    (message.reactor = $util.Long.fromValue(object.reactor)).unsigned = false;
                else if (typeof object.reactor === "string")
                    message.reactor = parseInt(object.reactor, 10);
                else if (typeof object.reactor === "number")
                    message.reactor = object.reactor;
                else if (typeof object.reactor === "object")
                    message.reactor = new $util.LongBits(object.reactor.low >>> 0, object.reactor.high >>> 0).toNumber();
            if (object.reaction_type != null)
                message.reaction_type = object.reaction_type | 0;
            if (object.reaction != null)
                message.reaction = String(object.reaction);
            if (object.is_add != null)
                message.is_add = Boolean(object.is_add);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_MessageReaction_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_MessageReaction_Notification
         * @static
         * @param {CChatRoom_MessageReaction_Notification} message CChatRoom_MessageReaction_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_MessageReaction_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.server_timestamp = 0;
                object.ordinal = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.reactor = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.reactor = options.longs === String ? "0" : 0;
                object.reaction_type = 0;
                object.reaction = "";
                object.is_add = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.server_timestamp != null && message.hasOwnProperty("server_timestamp"))
                object.server_timestamp = message.server_timestamp;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            if (message.reactor != null && message.hasOwnProperty("reactor"))
                if (typeof message.reactor === "number")
                    object.reactor = options.longs === String ? String(message.reactor) : message.reactor;
                else
                    object.reactor = options.longs === String ? $util.Long.prototype.toString.call(message.reactor) : options.longs === Number ? new $util.LongBits(message.reactor.low >>> 0, message.reactor.high >>> 0).toNumber() : message.reactor;
            if (message.reaction_type != null && message.hasOwnProperty("reaction_type"))
                object.reaction_type = message.reaction_type;
            if (message.reaction != null && message.hasOwnProperty("reaction"))
                object.reaction = message.reaction;
            if (message.is_add != null && message.hasOwnProperty("is_add"))
                object.is_add = message.is_add;
            return object;
        };
    
        /**
         * Converts this CChatRoom_MessageReaction_Notification to JSON.
         * @function toJSON
         * @memberof CChatRoom_MessageReaction_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_MessageReaction_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_MessageReaction_Notification;
    })();
    
    $root.ChatRoom = (function() {
    
        /**
         * Constructs a new ChatRoom service.
         * @exports ChatRoom
         * @classdesc Represents a ChatRoom
         * @extends $protobuf.rpc.Service
         * @constructor
         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
         */
        function ChatRoom(rpcImpl, requestDelimited, responseDelimited) {
            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
        }
    
        (ChatRoom.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ChatRoom;
    
        /**
         * Creates new ChatRoom service using the specified rpc implementation.
         * @function create
         * @memberof ChatRoom
         * @static
         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
         * @returns {ChatRoom} RPC service. Useful where requests and/or responses are streamed.
         */
        ChatRoom.create = function create(rpcImpl, requestDelimited, responseDelimited) {
            return new this(rpcImpl, requestDelimited, responseDelimited);
        };
    
        /**
         * Callback as used by {@link ChatRoom#createChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef CreateChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_CreateChatRoomGroup_Response} [response] CChatRoom_CreateChatRoomGroup_Response
         */
    
        /**
         * Calls CreateChatRoomGroup.
         * @function createChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateChatRoomGroup_Request} request CChatRoom_CreateChatRoomGroup_Request message or plain object
         * @param {ChatRoom.CreateChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_CreateChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.createChatRoomGroup = function createChatRoomGroup(request, callback) {
            return this.rpcCall(createChatRoomGroup, $root.CChatRoom_CreateChatRoomGroup_Request, $root.CChatRoom_CreateChatRoomGroup_Response, request, callback);
        }, "name", { value: "CreateChatRoomGroup" });
    
        /**
         * Calls CreateChatRoomGroup.
         * @function createChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateChatRoomGroup_Request} request CChatRoom_CreateChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_CreateChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#saveChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef SaveChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SaveChatRoomGroup_Response} [response] CChatRoom_SaveChatRoomGroup_Response
         */
    
        /**
         * Calls SaveChatRoomGroup.
         * @function saveChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SaveChatRoomGroup_Request} request CChatRoom_SaveChatRoomGroup_Request message or plain object
         * @param {ChatRoom.SaveChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_SaveChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.saveChatRoomGroup = function saveChatRoomGroup(request, callback) {
            return this.rpcCall(saveChatRoomGroup, $root.CChatRoom_SaveChatRoomGroup_Request, $root.CChatRoom_SaveChatRoomGroup_Response, request, callback);
        }, "name", { value: "SaveChatRoomGroup" });
    
        /**
         * Calls SaveChatRoomGroup.
         * @function saveChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SaveChatRoomGroup_Request} request CChatRoom_SaveChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_SaveChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#renameChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef RenameChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_RenameChatRoomGroup_Response} [response] CChatRoom_RenameChatRoomGroup_Response
         */
    
        /**
         * Calls RenameChatRoomGroup.
         * @function renameChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameChatRoomGroup_Request} request CChatRoom_RenameChatRoomGroup_Request message or plain object
         * @param {ChatRoom.RenameChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_RenameChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.renameChatRoomGroup = function renameChatRoomGroup(request, callback) {
            return this.rpcCall(renameChatRoomGroup, $root.CChatRoom_RenameChatRoomGroup_Request, $root.CChatRoom_RenameChatRoomGroup_Response, request, callback);
        }, "name", { value: "RenameChatRoomGroup" });
    
        /**
         * Calls RenameChatRoomGroup.
         * @function renameChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameChatRoomGroup_Request} request CChatRoom_RenameChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_RenameChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setChatRoomGroupTagline}.
         * @memberof ChatRoom
         * @typedef SetChatRoomGroupTaglineCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetChatRoomGroupTagline_Response} [response] CChatRoom_SetChatRoomGroupTagline_Response
         */
    
        /**
         * Calls SetChatRoomGroupTagline.
         * @function setChatRoomGroupTagline
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request} request CChatRoom_SetChatRoomGroupTagline_Request message or plain object
         * @param {ChatRoom.SetChatRoomGroupTaglineCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetChatRoomGroupTagline_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setChatRoomGroupTagline = function setChatRoomGroupTagline(request, callback) {
            return this.rpcCall(setChatRoomGroupTagline, $root.CChatRoom_SetChatRoomGroupTagline_Request, $root.CChatRoom_SetChatRoomGroupTagline_Response, request, callback);
        }, "name", { value: "SetChatRoomGroupTagline" });
    
        /**
         * Calls SetChatRoomGroupTagline.
         * @function setChatRoomGroupTagline
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupTagline_Request} request CChatRoom_SetChatRoomGroupTagline_Request message or plain object
         * @returns {Promise<CChatRoom_SetChatRoomGroupTagline_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setChatRoomGroupAvatar}.
         * @memberof ChatRoom
         * @typedef SetChatRoomGroupAvatarCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetChatRoomGroupAvatar_Response} [response] CChatRoom_SetChatRoomGroupAvatar_Response
         */
    
        /**
         * Calls SetChatRoomGroupAvatar.
         * @function setChatRoomGroupAvatar
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request} request CChatRoom_SetChatRoomGroupAvatar_Request message or plain object
         * @param {ChatRoom.SetChatRoomGroupAvatarCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetChatRoomGroupAvatar_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setChatRoomGroupAvatar = function setChatRoomGroupAvatar(request, callback) {
            return this.rpcCall(setChatRoomGroupAvatar, $root.CChatRoom_SetChatRoomGroupAvatar_Request, $root.CChatRoom_SetChatRoomGroupAvatar_Response, request, callback);
        }, "name", { value: "SetChatRoomGroupAvatar" });
    
        /**
         * Calls SetChatRoomGroupAvatar.
         * @function setChatRoomGroupAvatar
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupAvatar_Request} request CChatRoom_SetChatRoomGroupAvatar_Request message or plain object
         * @returns {Promise<CChatRoom_SetChatRoomGroupAvatar_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setChatRoomGroupWatchingBroadcast}.
         * @memberof ChatRoom
         * @typedef SetChatRoomGroupWatchingBroadcastCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetChatRoomGroupWatchingBroadcast_Response} [response] CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         */
    
        /**
         * Calls SetChatRoomGroupWatchingBroadcast.
         * @function setChatRoomGroupWatchingBroadcast
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request} request CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message or plain object
         * @param {ChatRoom.SetChatRoomGroupWatchingBroadcastCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetChatRoomGroupWatchingBroadcast_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setChatRoomGroupWatchingBroadcast = function setChatRoomGroupWatchingBroadcast(request, callback) {
            return this.rpcCall(setChatRoomGroupWatchingBroadcast, $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Request, $root.CChatRoom_SetChatRoomGroupWatchingBroadcast_Response, request, callback);
        }, "name", { value: "SetChatRoomGroupWatchingBroadcast" });
    
        /**
         * Calls SetChatRoomGroupWatchingBroadcast.
         * @function setChatRoomGroupWatchingBroadcast
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetChatRoomGroupWatchingBroadcast_Request} request CChatRoom_SetChatRoomGroupWatchingBroadcast_Request message or plain object
         * @returns {Promise<CChatRoom_SetChatRoomGroupWatchingBroadcast_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#joinMiniGameForChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef JoinMiniGameForChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_JoinMiniGameForChatRoomGroup_Response} [response] CChatRoom_JoinMiniGameForChatRoomGroup_Response
         */
    
        /**
         * Calls JoinMiniGameForChatRoomGroup.
         * @function joinMiniGameForChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.JoinMiniGameForChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_JoinMiniGameForChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.joinMiniGameForChatRoomGroup = function joinMiniGameForChatRoomGroup(request, callback) {
            return this.rpcCall(joinMiniGameForChatRoomGroup, $root.NotImplemented, $root.CChatRoom_JoinMiniGameForChatRoomGroup_Response, request, callback);
        }, "name", { value: "JoinMiniGameForChatRoomGroup" });
    
        /**
         * Calls JoinMiniGameForChatRoomGroup.
         * @function joinMiniGameForChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_JoinMiniGameForChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#endMiniGameForChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef EndMiniGameForChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_EndMiniGameForChatRoomGroup_Response} [response] CChatRoom_EndMiniGameForChatRoomGroup_Response
         */
    
        /**
         * Calls EndMiniGameForChatRoomGroup.
         * @function endMiniGameForChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.EndMiniGameForChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_EndMiniGameForChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.endMiniGameForChatRoomGroup = function endMiniGameForChatRoomGroup(request, callback) {
            return this.rpcCall(endMiniGameForChatRoomGroup, $root.NotImplemented, $root.CChatRoom_EndMiniGameForChatRoomGroup_Response, request, callback);
        }, "name", { value: "EndMiniGameForChatRoomGroup" });
    
        /**
         * Calls EndMiniGameForChatRoomGroup.
         * @function endMiniGameForChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_EndMiniGameForChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#muteUserInGroup}.
         * @memberof ChatRoom
         * @typedef MuteUserInGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_MuteUser_Response} [response] CChatRoom_MuteUser_Response
         */
    
        /**
         * Calls MuteUserInGroup.
         * @function muteUserInGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_MuteUser_Request} request CChatRoom_MuteUser_Request message or plain object
         * @param {ChatRoom.MuteUserInGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_MuteUser_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.muteUserInGroup = function muteUserInGroup(request, callback) {
            return this.rpcCall(muteUserInGroup, $root.CChatRoom_MuteUser_Request, $root.CChatRoom_MuteUser_Response, request, callback);
        }, "name", { value: "MuteUserInGroup" });
    
        /**
         * Calls MuteUserInGroup.
         * @function muteUserInGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_MuteUser_Request} request CChatRoom_MuteUser_Request message or plain object
         * @returns {Promise<CChatRoom_MuteUser_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#kickUserFromGroup}.
         * @memberof ChatRoom
         * @typedef KickUserFromGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_KickUser_Response} [response] CChatRoom_KickUser_Response
         */
    
        /**
         * Calls KickUserFromGroup.
         * @function kickUserFromGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_KickUser_Request} request CChatRoom_KickUser_Request message or plain object
         * @param {ChatRoom.KickUserFromGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_KickUser_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.kickUserFromGroup = function kickUserFromGroup(request, callback) {
            return this.rpcCall(kickUserFromGroup, $root.CChatRoom_KickUser_Request, $root.CChatRoom_KickUser_Response, request, callback);
        }, "name", { value: "KickUserFromGroup" });
    
        /**
         * Calls KickUserFromGroup.
         * @function kickUserFromGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_KickUser_Request} request CChatRoom_KickUser_Request message or plain object
         * @returns {Promise<CChatRoom_KickUser_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setUserBanState}.
         * @memberof ChatRoom
         * @typedef SetUserBanStateCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetUserBanState_Response} [response] CChatRoom_SetUserBanState_Response
         */
    
        /**
         * Calls SetUserBanState.
         * @function setUserBanState
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetUserBanState_Request} request CChatRoom_SetUserBanState_Request message or plain object
         * @param {ChatRoom.SetUserBanStateCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetUserBanState_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setUserBanState = function setUserBanState(request, callback) {
            return this.rpcCall(setUserBanState, $root.CChatRoom_SetUserBanState_Request, $root.CChatRoom_SetUserBanState_Response, request, callback);
        }, "name", { value: "SetUserBanState" });
    
        /**
         * Calls SetUserBanState.
         * @function setUserBanState
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetUserBanState_Request} request CChatRoom_SetUserBanState_Request message or plain object
         * @returns {Promise<CChatRoom_SetUserBanState_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#revokeInviteToGroup}.
         * @memberof ChatRoom
         * @typedef RevokeInviteToGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_RevokeInvite_Response} [response] CChatRoom_RevokeInvite_Response
         */
    
        /**
         * Calls RevokeInviteToGroup.
         * @function revokeInviteToGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RevokeInvite_Request} request CChatRoom_RevokeInvite_Request message or plain object
         * @param {ChatRoom.RevokeInviteToGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_RevokeInvite_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.revokeInviteToGroup = function revokeInviteToGroup(request, callback) {
            return this.rpcCall(revokeInviteToGroup, $root.CChatRoom_RevokeInvite_Request, $root.CChatRoom_RevokeInvite_Response, request, callback);
        }, "name", { value: "RevokeInviteToGroup" });
    
        /**
         * Calls RevokeInviteToGroup.
         * @function revokeInviteToGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RevokeInvite_Request} request CChatRoom_RevokeInvite_Request message or plain object
         * @returns {Promise<CChatRoom_RevokeInvite_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#createRole}.
         * @memberof ChatRoom
         * @typedef CreateRoleCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_CreateRole_Response} [response] CChatRoom_CreateRole_Response
         */
    
        /**
         * Calls CreateRole.
         * @function createRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateRole_Request} request CChatRoom_CreateRole_Request message or plain object
         * @param {ChatRoom.CreateRoleCallback} callback Node-style callback called with the error, if any, and CChatRoom_CreateRole_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.createRole = function createRole(request, callback) {
            return this.rpcCall(createRole, $root.CChatRoom_CreateRole_Request, $root.CChatRoom_CreateRole_Response, request, callback);
        }, "name", { value: "CreateRole" });
    
        /**
         * Calls CreateRole.
         * @function createRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateRole_Request} request CChatRoom_CreateRole_Request message or plain object
         * @returns {Promise<CChatRoom_CreateRole_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getRoles}.
         * @memberof ChatRoom
         * @typedef GetRolesCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetRoles_Response} [response] CChatRoom_GetRoles_Response
         */
    
        /**
         * Calls GetRoles.
         * @function getRoles
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.GetRolesCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetRoles_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getRoles = function getRoles(request, callback) {
            return this.rpcCall(getRoles, $root.NotImplemented, $root.CChatRoom_GetRoles_Response, request, callback);
        }, "name", { value: "GetRoles" });
    
        /**
         * Calls GetRoles.
         * @function getRoles
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_GetRoles_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#renameRole}.
         * @memberof ChatRoom
         * @typedef RenameRoleCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_RenameRole_Response} [response] CChatRoom_RenameRole_Response
         */
    
        /**
         * Calls RenameRole.
         * @function renameRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameRole_Request} request CChatRoom_RenameRole_Request message or plain object
         * @param {ChatRoom.RenameRoleCallback} callback Node-style callback called with the error, if any, and CChatRoom_RenameRole_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.renameRole = function renameRole(request, callback) {
            return this.rpcCall(renameRole, $root.CChatRoom_RenameRole_Request, $root.CChatRoom_RenameRole_Response, request, callback);
        }, "name", { value: "RenameRole" });
    
        /**
         * Calls RenameRole.
         * @function renameRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameRole_Request} request CChatRoom_RenameRole_Request message or plain object
         * @returns {Promise<CChatRoom_RenameRole_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#reorderRole}.
         * @memberof ChatRoom
         * @typedef ReorderRoleCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_ReorderRole_Response} [response] CChatRoom_ReorderRole_Response
         */
    
        /**
         * Calls ReorderRole.
         * @function reorderRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReorderRole_Request} request CChatRoom_ReorderRole_Request message or plain object
         * @param {ChatRoom.ReorderRoleCallback} callback Node-style callback called with the error, if any, and CChatRoom_ReorderRole_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.reorderRole = function reorderRole(request, callback) {
            return this.rpcCall(reorderRole, $root.CChatRoom_ReorderRole_Request, $root.CChatRoom_ReorderRole_Response, request, callback);
        }, "name", { value: "ReorderRole" });
    
        /**
         * Calls ReorderRole.
         * @function reorderRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReorderRole_Request} request CChatRoom_ReorderRole_Request message or plain object
         * @returns {Promise<CChatRoom_ReorderRole_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#deleteRole}.
         * @memberof ChatRoom
         * @typedef DeleteRoleCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_DeleteRole_Response} [response] CChatRoom_DeleteRole_Response
         */
    
        /**
         * Calls DeleteRole.
         * @function deleteRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteRole_Request} request CChatRoom_DeleteRole_Request message or plain object
         * @param {ChatRoom.DeleteRoleCallback} callback Node-style callback called with the error, if any, and CChatRoom_DeleteRole_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.deleteRole = function deleteRole(request, callback) {
            return this.rpcCall(deleteRole, $root.CChatRoom_DeleteRole_Request, $root.CChatRoom_DeleteRole_Response, request, callback);
        }, "name", { value: "DeleteRole" });
    
        /**
         * Calls DeleteRole.
         * @function deleteRole
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteRole_Request} request CChatRoom_DeleteRole_Request message or plain object
         * @returns {Promise<CChatRoom_DeleteRole_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getRoleActions}.
         * @memberof ChatRoom
         * @typedef GetRoleActionsCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetRoleActions_Response} [response] CChatRoom_GetRoleActions_Response
         */
    
        /**
         * Calls GetRoleActions.
         * @function getRoleActions
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.GetRoleActionsCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetRoleActions_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getRoleActions = function getRoleActions(request, callback) {
            return this.rpcCall(getRoleActions, $root.NotImplemented, $root.CChatRoom_GetRoleActions_Response, request, callback);
        }, "name", { value: "GetRoleActions" });
    
        /**
         * Calls GetRoleActions.
         * @function getRoleActions
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_GetRoleActions_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#replaceRoleActions}.
         * @memberof ChatRoom
         * @typedef ReplaceRoleActionsCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_ReplaceRoleActions_Response} [response] CChatRoom_ReplaceRoleActions_Response
         */
    
        /**
         * Calls ReplaceRoleActions.
         * @function replaceRoleActions
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReplaceRoleActions_Request} request CChatRoom_ReplaceRoleActions_Request message or plain object
         * @param {ChatRoom.ReplaceRoleActionsCallback} callback Node-style callback called with the error, if any, and CChatRoom_ReplaceRoleActions_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.replaceRoleActions = function replaceRoleActions(request, callback) {
            return this.rpcCall(replaceRoleActions, $root.CChatRoom_ReplaceRoleActions_Request, $root.CChatRoom_ReplaceRoleActions_Response, request, callback);
        }, "name", { value: "ReplaceRoleActions" });
    
        /**
         * Calls ReplaceRoleActions.
         * @function replaceRoleActions
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReplaceRoleActions_Request} request CChatRoom_ReplaceRoleActions_Request message or plain object
         * @returns {Promise<CChatRoom_ReplaceRoleActions_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#addRoleToUser}.
         * @memberof ChatRoom
         * @typedef AddRoleToUserCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_AddRoleToUser_Response} [response] CChatRoom_AddRoleToUser_Response
         */
    
        /**
         * Calls AddRoleToUser.
         * @function addRoleToUser
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_AddRoleToUser_Request} request CChatRoom_AddRoleToUser_Request message or plain object
         * @param {ChatRoom.AddRoleToUserCallback} callback Node-style callback called with the error, if any, and CChatRoom_AddRoleToUser_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.addRoleToUser = function addRoleToUser(request, callback) {
            return this.rpcCall(addRoleToUser, $root.CChatRoom_AddRoleToUser_Request, $root.CChatRoom_AddRoleToUser_Response, request, callback);
        }, "name", { value: "AddRoleToUser" });
    
        /**
         * Calls AddRoleToUser.
         * @function addRoleToUser
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_AddRoleToUser_Request} request CChatRoom_AddRoleToUser_Request message or plain object
         * @returns {Promise<CChatRoom_AddRoleToUser_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getRolesForUser}.
         * @memberof ChatRoom
         * @typedef GetRolesForUserCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetRolesForUser_Response} [response] CChatRoom_GetRolesForUser_Response
         */
    
        /**
         * Calls GetRolesForUser.
         * @function getRolesForUser
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.GetRolesForUserCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetRolesForUser_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getRolesForUser = function getRolesForUser(request, callback) {
            return this.rpcCall(getRolesForUser, $root.NotImplemented, $root.CChatRoom_GetRolesForUser_Response, request, callback);
        }, "name", { value: "GetRolesForUser" });
    
        /**
         * Calls GetRolesForUser.
         * @function getRolesForUser
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_GetRolesForUser_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#deleteRoleFromUser}.
         * @memberof ChatRoom
         * @typedef DeleteRoleFromUserCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_DeleteRoleFromUser_Response} [response] CChatRoom_DeleteRoleFromUser_Response
         */
    
        /**
         * Calls DeleteRoleFromUser.
         * @function deleteRoleFromUser
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteRoleFromUser_Request} request CChatRoom_DeleteRoleFromUser_Request message or plain object
         * @param {ChatRoom.DeleteRoleFromUserCallback} callback Node-style callback called with the error, if any, and CChatRoom_DeleteRoleFromUser_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.deleteRoleFromUser = function deleteRoleFromUser(request, callback) {
            return this.rpcCall(deleteRoleFromUser, $root.CChatRoom_DeleteRoleFromUser_Request, $root.CChatRoom_DeleteRoleFromUser_Response, request, callback);
        }, "name", { value: "DeleteRoleFromUser" });
    
        /**
         * Calls DeleteRoleFromUser.
         * @function deleteRoleFromUser
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteRoleFromUser_Request} request CChatRoom_DeleteRoleFromUser_Request message or plain object
         * @returns {Promise<CChatRoom_DeleteRoleFromUser_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#joinChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef JoinChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_JoinChatRoomGroup_Response} [response] CChatRoom_JoinChatRoomGroup_Response
         */
    
        /**
         * Calls JoinChatRoomGroup.
         * @function joinChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_JoinChatRoomGroup_Request} request CChatRoom_JoinChatRoomGroup_Request message or plain object
         * @param {ChatRoom.JoinChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_JoinChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.joinChatRoomGroup = function joinChatRoomGroup(request, callback) {
            return this.rpcCall(joinChatRoomGroup, $root.CChatRoom_JoinChatRoomGroup_Request, $root.CChatRoom_JoinChatRoomGroup_Response, request, callback);
        }, "name", { value: "JoinChatRoomGroup" });
    
        /**
         * Calls JoinChatRoomGroup.
         * @function joinChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_JoinChatRoomGroup_Request} request CChatRoom_JoinChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_JoinChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#inviteFriendToChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef InviteFriendToChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_InviteFriendToChatRoomGroup_Response} [response] CChatRoom_InviteFriendToChatRoomGroup_Response
         */
    
        /**
         * Calls InviteFriendToChatRoomGroup.
         * @function inviteFriendToChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request} request CChatRoom_InviteFriendToChatRoomGroup_Request message or plain object
         * @param {ChatRoom.InviteFriendToChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_InviteFriendToChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.inviteFriendToChatRoomGroup = function inviteFriendToChatRoomGroup(request, callback) {
            return this.rpcCall(inviteFriendToChatRoomGroup, $root.CChatRoom_InviteFriendToChatRoomGroup_Request, $root.CChatRoom_InviteFriendToChatRoomGroup_Response, request, callback);
        }, "name", { value: "InviteFriendToChatRoomGroup" });
    
        /**
         * Calls InviteFriendToChatRoomGroup.
         * @function inviteFriendToChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_InviteFriendToChatRoomGroup_Request} request CChatRoom_InviteFriendToChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_InviteFriendToChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#leaveChatRoomGroup}.
         * @memberof ChatRoom
         * @typedef LeaveChatRoomGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_LeaveChatRoomGroup_Response} [response] CChatRoom_LeaveChatRoomGroup_Response
         */
    
        /**
         * Calls LeaveChatRoomGroup.
         * @function leaveChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_LeaveChatRoomGroup_Request} request CChatRoom_LeaveChatRoomGroup_Request message or plain object
         * @param {ChatRoom.LeaveChatRoomGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_LeaveChatRoomGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.leaveChatRoomGroup = function leaveChatRoomGroup(request, callback) {
            return this.rpcCall(leaveChatRoomGroup, $root.CChatRoom_LeaveChatRoomGroup_Request, $root.CChatRoom_LeaveChatRoomGroup_Response, request, callback);
        }, "name", { value: "LeaveChatRoomGroup" });
    
        /**
         * Calls LeaveChatRoomGroup.
         * @function leaveChatRoomGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_LeaveChatRoomGroup_Request} request CChatRoom_LeaveChatRoomGroup_Request message or plain object
         * @returns {Promise<CChatRoom_LeaveChatRoomGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#createChatRoom}.
         * @memberof ChatRoom
         * @typedef CreateChatRoomCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_CreateChatRoom_Response} [response] CChatRoom_CreateChatRoom_Response
         */
    
        /**
         * Calls CreateChatRoom.
         * @function createChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateChatRoom_Request} request CChatRoom_CreateChatRoom_Request message or plain object
         * @param {ChatRoom.CreateChatRoomCallback} callback Node-style callback called with the error, if any, and CChatRoom_CreateChatRoom_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.createChatRoom = function createChatRoom(request, callback) {
            return this.rpcCall(createChatRoom, $root.CChatRoom_CreateChatRoom_Request, $root.CChatRoom_CreateChatRoom_Response, request, callback);
        }, "name", { value: "CreateChatRoom" });
    
        /**
         * Calls CreateChatRoom.
         * @function createChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateChatRoom_Request} request CChatRoom_CreateChatRoom_Request message or plain object
         * @returns {Promise<CChatRoom_CreateChatRoom_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#deleteChatRoom}.
         * @memberof ChatRoom
         * @typedef DeleteChatRoomCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_DeleteChatRoom_Response} [response] CChatRoom_DeleteChatRoom_Response
         */
    
        /**
         * Calls DeleteChatRoom.
         * @function deleteChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteChatRoom_Request} request CChatRoom_DeleteChatRoom_Request message or plain object
         * @param {ChatRoom.DeleteChatRoomCallback} callback Node-style callback called with the error, if any, and CChatRoom_DeleteChatRoom_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.deleteChatRoom = function deleteChatRoom(request, callback) {
            return this.rpcCall(deleteChatRoom, $root.CChatRoom_DeleteChatRoom_Request, $root.CChatRoom_DeleteChatRoom_Response, request, callback);
        }, "name", { value: "DeleteChatRoom" });
    
        /**
         * Calls DeleteChatRoom.
         * @function deleteChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteChatRoom_Request} request CChatRoom_DeleteChatRoom_Request message or plain object
         * @returns {Promise<CChatRoom_DeleteChatRoom_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#renameChatRoom}.
         * @memberof ChatRoom
         * @typedef RenameChatRoomCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_RenameChatRoom_Response} [response] CChatRoom_RenameChatRoom_Response
         */
    
        /**
         * Calls RenameChatRoom.
         * @function renameChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameChatRoom_Request} request CChatRoom_RenameChatRoom_Request message or plain object
         * @param {ChatRoom.RenameChatRoomCallback} callback Node-style callback called with the error, if any, and CChatRoom_RenameChatRoom_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.renameChatRoom = function renameChatRoom(request, callback) {
            return this.rpcCall(renameChatRoom, $root.CChatRoom_RenameChatRoom_Request, $root.CChatRoom_RenameChatRoom_Response, request, callback);
        }, "name", { value: "RenameChatRoom" });
    
        /**
         * Calls RenameChatRoom.
         * @function renameChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_RenameChatRoom_Request} request CChatRoom_RenameChatRoom_Request message or plain object
         * @returns {Promise<CChatRoom_RenameChatRoom_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#reorderChatRoom}.
         * @memberof ChatRoom
         * @typedef ReorderChatRoomCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_ReorderChatRoom_Response} [response] CChatRoom_ReorderChatRoom_Response
         */
    
        /**
         * Calls ReorderChatRoom.
         * @function reorderChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReorderChatRoom_Request} request CChatRoom_ReorderChatRoom_Request message or plain object
         * @param {ChatRoom.ReorderChatRoomCallback} callback Node-style callback called with the error, if any, and CChatRoom_ReorderChatRoom_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.reorderChatRoom = function reorderChatRoom(request, callback) {
            return this.rpcCall(reorderChatRoom, $root.CChatRoom_ReorderChatRoom_Request, $root.CChatRoom_ReorderChatRoom_Response, request, callback);
        }, "name", { value: "ReorderChatRoom" });
    
        /**
         * Calls ReorderChatRoom.
         * @function reorderChatRoom
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_ReorderChatRoom_Request} request CChatRoom_ReorderChatRoom_Request message or plain object
         * @returns {Promise<CChatRoom_ReorderChatRoom_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#sendChatMessage}.
         * @memberof ChatRoom
         * @typedef SendChatMessageCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SendChatMessage_Response} [response] CChatRoom_SendChatMessage_Response
         */
    
        /**
         * Calls SendChatMessage.
         * @function sendChatMessage
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SendChatMessage_Request} request CChatRoom_SendChatMessage_Request message or plain object
         * @param {ChatRoom.SendChatMessageCallback} callback Node-style callback called with the error, if any, and CChatRoom_SendChatMessage_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.sendChatMessage = function sendChatMessage(request, callback) {
            return this.rpcCall(sendChatMessage, $root.CChatRoom_SendChatMessage_Request, $root.CChatRoom_SendChatMessage_Response, request, callback);
        }, "name", { value: "SendChatMessage" });
    
        /**
         * Calls SendChatMessage.
         * @function sendChatMessage
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SendChatMessage_Request} request CChatRoom_SendChatMessage_Request message or plain object
         * @returns {Promise<CChatRoom_SendChatMessage_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#joinVoiceChat}.
         * @memberof ChatRoom
         * @typedef JoinVoiceChatCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_JoinVoiceChat_Response} [response] CChatRoom_JoinVoiceChat_Response
         */
    
        /**
         * Calls JoinVoiceChat.
         * @function joinVoiceChat
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_JoinVoiceChat_Request} request CChatRoom_JoinVoiceChat_Request message or plain object
         * @param {ChatRoom.JoinVoiceChatCallback} callback Node-style callback called with the error, if any, and CChatRoom_JoinVoiceChat_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.joinVoiceChat = function joinVoiceChat(request, callback) {
            return this.rpcCall(joinVoiceChat, $root.CChatRoom_JoinVoiceChat_Request, $root.CChatRoom_JoinVoiceChat_Response, request, callback);
        }, "name", { value: "JoinVoiceChat" });
    
        /**
         * Calls JoinVoiceChat.
         * @function joinVoiceChat
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_JoinVoiceChat_Request} request CChatRoom_JoinVoiceChat_Request message or plain object
         * @returns {Promise<CChatRoom_JoinVoiceChat_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#leaveVoiceChat}.
         * @memberof ChatRoom
         * @typedef LeaveVoiceChatCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_LeaveVoiceChat_Response} [response] CChatRoom_LeaveVoiceChat_Response
         */
    
        /**
         * Calls LeaveVoiceChat.
         * @function leaveVoiceChat
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_LeaveVoiceChat_Request} request CChatRoom_LeaveVoiceChat_Request message or plain object
         * @param {ChatRoom.LeaveVoiceChatCallback} callback Node-style callback called with the error, if any, and CChatRoom_LeaveVoiceChat_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.leaveVoiceChat = function leaveVoiceChat(request, callback) {
            return this.rpcCall(leaveVoiceChat, $root.CChatRoom_LeaveVoiceChat_Request, $root.CChatRoom_LeaveVoiceChat_Response, request, callback);
        }, "name", { value: "LeaveVoiceChat" });
    
        /**
         * Calls LeaveVoiceChat.
         * @function leaveVoiceChat
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_LeaveVoiceChat_Request} request CChatRoom_LeaveVoiceChat_Request message or plain object
         * @returns {Promise<CChatRoom_LeaveVoiceChat_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getMessageHistory}.
         * @memberof ChatRoom
         * @typedef GetMessageHistoryCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetMessageHistory_Response} [response] CChatRoom_GetMessageHistory_Response
         */
    
        /**
         * Calls GetMessageHistory.
         * @function getMessageHistory
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMessageHistory_Request} request CChatRoom_GetMessageHistory_Request message or plain object
         * @param {ChatRoom.GetMessageHistoryCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetMessageHistory_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getMessageHistory = function getMessageHistory(request, callback) {
            return this.rpcCall(getMessageHistory, $root.CChatRoom_GetMessageHistory_Request, $root.CChatRoom_GetMessageHistory_Response, request, callback);
        }, "name", { value: "GetMessageHistory" });
    
        /**
         * Calls GetMessageHistory.
         * @function getMessageHistory
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMessageHistory_Request} request CChatRoom_GetMessageHistory_Request message or plain object
         * @returns {Promise<CChatRoom_GetMessageHistory_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getMyChatRoomGroups}.
         * @memberof ChatRoom
         * @typedef GetMyChatRoomGroupsCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetMyChatRoomGroups_Response} [response] CChatRoom_GetMyChatRoomGroups_Response
         */
    
        /**
         * Calls GetMyChatRoomGroups.
         * @function getMyChatRoomGroups
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMyChatRoomGroups_Request} request CChatRoom_GetMyChatRoomGroups_Request message or plain object
         * @param {ChatRoom.GetMyChatRoomGroupsCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetMyChatRoomGroups_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getMyChatRoomGroups = function getMyChatRoomGroups(request, callback) {
            return this.rpcCall(getMyChatRoomGroups, $root.CChatRoom_GetMyChatRoomGroups_Request, $root.CChatRoom_GetMyChatRoomGroups_Response, request, callback);
        }, "name", { value: "GetMyChatRoomGroups" });
    
        /**
         * Calls GetMyChatRoomGroups.
         * @function getMyChatRoomGroups
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMyChatRoomGroups_Request} request CChatRoom_GetMyChatRoomGroups_Request message or plain object
         * @returns {Promise<CChatRoom_GetMyChatRoomGroups_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getChatRoomGroupState}.
         * @memberof ChatRoom
         * @typedef GetChatRoomGroupStateCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetChatRoomGroupState_Response} [response] CChatRoom_GetChatRoomGroupState_Response
         */
    
        /**
         * Calls GetChatRoomGroupState.
         * @function getChatRoomGroupState
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.GetChatRoomGroupStateCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetChatRoomGroupState_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getChatRoomGroupState = function getChatRoomGroupState(request, callback) {
            return this.rpcCall(getChatRoomGroupState, $root.NotImplemented, $root.CChatRoom_GetChatRoomGroupState_Response, request, callback);
        }, "name", { value: "GetChatRoomGroupState" });
    
        /**
         * Calls GetChatRoomGroupState.
         * @function getChatRoomGroupState
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_GetChatRoomGroupState_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getChatRoomGroupSummary}.
         * @memberof ChatRoom
         * @typedef GetChatRoomGroupSummaryCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetChatRoomGroupSummary_Response} [response] CChatRoom_GetChatRoomGroupSummary_Response
         */
    
        /**
         * Calls GetChatRoomGroupSummary.
         * @function getChatRoomGroupSummary
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.GetChatRoomGroupSummaryCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetChatRoomGroupSummary_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getChatRoomGroupSummary = function getChatRoomGroupSummary(request, callback) {
            return this.rpcCall(getChatRoomGroupSummary, $root.NotImplemented, $root.CChatRoom_GetChatRoomGroupSummary_Response, request, callback);
        }, "name", { value: "GetChatRoomGroupSummary" });
    
        /**
         * Calls GetChatRoomGroupSummary.
         * @function getChatRoomGroupSummary
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_GetChatRoomGroupSummary_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setAppChatRoomGroupForceActive}.
         * @memberof ChatRoom
         * @typedef SetAppChatRoomGroupForceActiveCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetAppChatRoomGroupForceActive_Response} [response] CChatRoom_SetAppChatRoomGroupForceActive_Response
         */
    
        /**
         * Calls SetAppChatRoomGroupForceActive.
         * @function setAppChatRoomGroupForceActive
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.SetAppChatRoomGroupForceActiveCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetAppChatRoomGroupForceActive_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setAppChatRoomGroupForceActive = function setAppChatRoomGroupForceActive(request, callback) {
            return this.rpcCall(setAppChatRoomGroupForceActive, $root.NotImplemented, $root.CChatRoom_SetAppChatRoomGroupForceActive_Response, request, callback);
        }, "name", { value: "SetAppChatRoomGroupForceActive" });
    
        /**
         * Calls SetAppChatRoomGroupForceActive.
         * @function setAppChatRoomGroupForceActive
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<CChatRoom_SetAppChatRoomGroupForceActive_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setAppChatRoomGroupStopForceActive}.
         * @memberof ChatRoom
         * @typedef SetAppChatRoomGroupStopForceActiveCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls SetAppChatRoomGroupStopForceActive.
         * @function setAppChatRoomGroupStopForceActive
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @param {ChatRoom.SetAppChatRoomGroupStopForceActiveCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setAppChatRoomGroupStopForceActive = function setAppChatRoomGroupStopForceActive(request, callback) {
            return this.rpcCall(setAppChatRoomGroupStopForceActive, $root.NotImplemented, $root.NoResponse, request, callback);
        }, "name", { value: "SetAppChatRoomGroupStopForceActive" });
    
        /**
         * Calls SetAppChatRoomGroupStopForceActive.
         * @function setAppChatRoomGroupStopForceActive
         * @memberof ChatRoom
         * @instance
         * @param {INotImplemented} request NotImplemented message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#ackChatMessage}.
         * @memberof ChatRoom
         * @typedef AckChatMessageCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls AckChatMessage.
         * @function ackChatMessage
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_AckChatMessage_Notification} request CChatRoom_AckChatMessage_Notification message or plain object
         * @param {ChatRoom.AckChatMessageCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.ackChatMessage = function ackChatMessage(request, callback) {
            return this.rpcCall(ackChatMessage, $root.CChatRoom_AckChatMessage_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "AckChatMessage" });
    
        /**
         * Calls AckChatMessage.
         * @function ackChatMessage
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_AckChatMessage_Notification} request CChatRoom_AckChatMessage_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#createInviteLink}.
         * @memberof ChatRoom
         * @typedef CreateInviteLinkCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_CreateInviteLink_Response} [response] CChatRoom_CreateInviteLink_Response
         */
    
        /**
         * Calls CreateInviteLink.
         * @function createInviteLink
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateInviteLink_Request} request CChatRoom_CreateInviteLink_Request message or plain object
         * @param {ChatRoom.CreateInviteLinkCallback} callback Node-style callback called with the error, if any, and CChatRoom_CreateInviteLink_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.createInviteLink = function createInviteLink(request, callback) {
            return this.rpcCall(createInviteLink, $root.CChatRoom_CreateInviteLink_Request, $root.CChatRoom_CreateInviteLink_Response, request, callback);
        }, "name", { value: "CreateInviteLink" });
    
        /**
         * Calls CreateInviteLink.
         * @function createInviteLink
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_CreateInviteLink_Request} request CChatRoom_CreateInviteLink_Request message or plain object
         * @returns {Promise<CChatRoom_CreateInviteLink_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getInviteLinkInfo}.
         * @memberof ChatRoom
         * @typedef GetInviteLinkInfoCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetInviteLinkInfo_Response} [response] CChatRoom_GetInviteLinkInfo_Response
         */
    
        /**
         * Calls GetInviteLinkInfo.
         * @function getInviteLinkInfo
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteLinkInfo_Request} request CChatRoom_GetInviteLinkInfo_Request message or plain object
         * @param {ChatRoom.GetInviteLinkInfoCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetInviteLinkInfo_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getInviteLinkInfo = function getInviteLinkInfo(request, callback) {
            return this.rpcCall(getInviteLinkInfo, $root.CChatRoom_GetInviteLinkInfo_Request, $root.CChatRoom_GetInviteLinkInfo_Response, request, callback);
        }, "name", { value: "GetInviteLinkInfo" });
    
        /**
         * Calls GetInviteLinkInfo.
         * @function getInviteLinkInfo
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteLinkInfo_Request} request CChatRoom_GetInviteLinkInfo_Request message or plain object
         * @returns {Promise<CChatRoom_GetInviteLinkInfo_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getInviteInfo}.
         * @memberof ChatRoom
         * @typedef GetInviteInfoCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetInviteInfo_Response} [response] CChatRoom_GetInviteInfo_Response
         */
    
        /**
         * Calls GetInviteInfo.
         * @function getInviteInfo
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteInfo_Request} request CChatRoom_GetInviteInfo_Request message or plain object
         * @param {ChatRoom.GetInviteInfoCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetInviteInfo_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getInviteInfo = function getInviteInfo(request, callback) {
            return this.rpcCall(getInviteInfo, $root.CChatRoom_GetInviteInfo_Request, $root.CChatRoom_GetInviteInfo_Response, request, callback);
        }, "name", { value: "GetInviteInfo" });
    
        /**
         * Calls GetInviteInfo.
         * @function getInviteInfo
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteInfo_Request} request CChatRoom_GetInviteInfo_Request message or plain object
         * @returns {Promise<CChatRoom_GetInviteInfo_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getInviteLinksForGroup}.
         * @memberof ChatRoom
         * @typedef GetInviteLinksForGroupCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetInviteLinksForGroup_Response} [response] CChatRoom_GetInviteLinksForGroup_Response
         */
    
        /**
         * Calls GetInviteLinksForGroup.
         * @function getInviteLinksForGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteLinksForGroup_Request} request CChatRoom_GetInviteLinksForGroup_Request message or plain object
         * @param {ChatRoom.GetInviteLinksForGroupCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetInviteLinksForGroup_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getInviteLinksForGroup = function getInviteLinksForGroup(request, callback) {
            return this.rpcCall(getInviteLinksForGroup, $root.CChatRoom_GetInviteLinksForGroup_Request, $root.CChatRoom_GetInviteLinksForGroup_Response, request, callback);
        }, "name", { value: "GetInviteLinksForGroup" });
    
        /**
         * Calls GetInviteLinksForGroup.
         * @function getInviteLinksForGroup
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteLinksForGroup_Request} request CChatRoom_GetInviteLinksForGroup_Request message or plain object
         * @returns {Promise<CChatRoom_GetInviteLinksForGroup_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getBanList}.
         * @memberof ChatRoom
         * @typedef GetBanListCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetBanList_Response} [response] CChatRoom_GetBanList_Response
         */
    
        /**
         * Calls GetBanList.
         * @function getBanList
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetBanList_Request} request CChatRoom_GetBanList_Request message or plain object
         * @param {ChatRoom.GetBanListCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetBanList_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getBanList = function getBanList(request, callback) {
            return this.rpcCall(getBanList, $root.CChatRoom_GetBanList_Request, $root.CChatRoom_GetBanList_Response, request, callback);
        }, "name", { value: "GetBanList" });
    
        /**
         * Calls GetBanList.
         * @function getBanList
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetBanList_Request} request CChatRoom_GetBanList_Request message or plain object
         * @returns {Promise<CChatRoom_GetBanList_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getInviteList}.
         * @memberof ChatRoom
         * @typedef GetInviteListCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetInviteList_Response} [response] CChatRoom_GetInviteList_Response
         */
    
        /**
         * Calls GetInviteList.
         * @function getInviteList
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteList_Request} request CChatRoom_GetInviteList_Request message or plain object
         * @param {ChatRoom.GetInviteListCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetInviteList_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getInviteList = function getInviteList(request, callback) {
            return this.rpcCall(getInviteList, $root.CChatRoom_GetInviteList_Request, $root.CChatRoom_GetInviteList_Response, request, callback);
        }, "name", { value: "GetInviteList" });
    
        /**
         * Calls GetInviteList.
         * @function getInviteList
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetInviteList_Request} request CChatRoom_GetInviteList_Request message or plain object
         * @returns {Promise<CChatRoom_GetInviteList_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#deleteInviteLink}.
         * @memberof ChatRoom
         * @typedef DeleteInviteLinkCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_DeleteInviteLink_Response} [response] CChatRoom_DeleteInviteLink_Response
         */
    
        /**
         * Calls DeleteInviteLink.
         * @function deleteInviteLink
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteInviteLink_Request} request CChatRoom_DeleteInviteLink_Request message or plain object
         * @param {ChatRoom.DeleteInviteLinkCallback} callback Node-style callback called with the error, if any, and CChatRoom_DeleteInviteLink_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.deleteInviteLink = function deleteInviteLink(request, callback) {
            return this.rpcCall(deleteInviteLink, $root.CChatRoom_DeleteInviteLink_Request, $root.CChatRoom_DeleteInviteLink_Response, request, callback);
        }, "name", { value: "DeleteInviteLink" });
    
        /**
         * Calls DeleteInviteLink.
         * @function deleteInviteLink
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteInviteLink_Request} request CChatRoom_DeleteInviteLink_Request message or plain object
         * @returns {Promise<CChatRoom_DeleteInviteLink_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setSessionActiveChatRoomGroups}.
         * @memberof ChatRoom
         * @typedef SetSessionActiveChatRoomGroupsCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetSessionActiveChatRoomGroups_Response} [response] CChatRoom_SetSessionActiveChatRoomGroups_Response
         */
    
        /**
         * Calls SetSessionActiveChatRoomGroups.
         * @function setSessionActiveChatRoomGroups
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request} request CChatRoom_SetSessionActiveChatRoomGroups_Request message or plain object
         * @param {ChatRoom.SetSessionActiveChatRoomGroupsCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetSessionActiveChatRoomGroups_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setSessionActiveChatRoomGroups = function setSessionActiveChatRoomGroups(request, callback) {
            return this.rpcCall(setSessionActiveChatRoomGroups, $root.CChatRoom_SetSessionActiveChatRoomGroups_Request, $root.CChatRoom_SetSessionActiveChatRoomGroups_Response, request, callback);
        }, "name", { value: "SetSessionActiveChatRoomGroups" });
    
        /**
         * Calls SetSessionActiveChatRoomGroups.
         * @function setSessionActiveChatRoomGroups
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetSessionActiveChatRoomGroups_Request} request CChatRoom_SetSessionActiveChatRoomGroups_Request message or plain object
         * @returns {Promise<CChatRoom_SetSessionActiveChatRoomGroups_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#setUserChatGroupPreferences}.
         * @memberof ChatRoom
         * @typedef SetUserChatGroupPreferencesCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SetUserChatGroupPreferences_Response} [response] CChatRoom_SetUserChatGroupPreferences_Response
         */
    
        /**
         * Calls SetUserChatGroupPreferences.
         * @function setUserChatGroupPreferences
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request} request CChatRoom_SetUserChatGroupPreferences_Request message or plain object
         * @param {ChatRoom.SetUserChatGroupPreferencesCallback} callback Node-style callback called with the error, if any, and CChatRoom_SetUserChatGroupPreferences_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.setUserChatGroupPreferences = function setUserChatGroupPreferences(request, callback) {
            return this.rpcCall(setUserChatGroupPreferences, $root.CChatRoom_SetUserChatGroupPreferences_Request, $root.CChatRoom_SetUserChatGroupPreferences_Response, request, callback);
        }, "name", { value: "SetUserChatGroupPreferences" });
    
        /**
         * Calls SetUserChatGroupPreferences.
         * @function setUserChatGroupPreferences
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SetUserChatGroupPreferences_Request} request CChatRoom_SetUserChatGroupPreferences_Request message or plain object
         * @returns {Promise<CChatRoom_SetUserChatGroupPreferences_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#deleteChatMessages}.
         * @memberof ChatRoom
         * @typedef DeleteChatMessagesCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_DeleteChatMessages_Response} [response] CChatRoom_DeleteChatMessages_Response
         */
    
        /**
         * Calls DeleteChatMessages.
         * @function deleteChatMessages
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteChatMessages_Request} request CChatRoom_DeleteChatMessages_Request message or plain object
         * @param {ChatRoom.DeleteChatMessagesCallback} callback Node-style callback called with the error, if any, and CChatRoom_DeleteChatMessages_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.deleteChatMessages = function deleteChatMessages(request, callback) {
            return this.rpcCall(deleteChatMessages, $root.CChatRoom_DeleteChatMessages_Request, $root.CChatRoom_DeleteChatMessages_Response, request, callback);
        }, "name", { value: "DeleteChatMessages" });
    
        /**
         * Calls DeleteChatMessages.
         * @function deleteChatMessages
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_DeleteChatMessages_Request} request CChatRoom_DeleteChatMessages_Request message or plain object
         * @returns {Promise<CChatRoom_DeleteChatMessages_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#updateMemberListView}.
         * @memberof ChatRoom
         * @typedef UpdateMemberListViewCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls UpdateMemberListView.
         * @function updateMemberListView
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_UpdateMemberListView_Notification} request CChatRoom_UpdateMemberListView_Notification message or plain object
         * @param {ChatRoom.UpdateMemberListViewCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.updateMemberListView = function updateMemberListView(request, callback) {
            return this.rpcCall(updateMemberListView, $root.CChatRoom_UpdateMemberListView_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "UpdateMemberListView" });
    
        /**
         * Calls UpdateMemberListView.
         * @function updateMemberListView
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_UpdateMemberListView_Notification} request CChatRoom_UpdateMemberListView_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#searchMembers}.
         * @memberof ChatRoom
         * @typedef SearchMembersCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_SearchMembers_Response} [response] CChatRoom_SearchMembers_Response
         */
    
        /**
         * Calls SearchMembers.
         * @function searchMembers
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SearchMembers_Request} request CChatRoom_SearchMembers_Request message or plain object
         * @param {ChatRoom.SearchMembersCallback} callback Node-style callback called with the error, if any, and CChatRoom_SearchMembers_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.searchMembers = function searchMembers(request, callback) {
            return this.rpcCall(searchMembers, $root.CChatRoom_SearchMembers_Request, $root.CChatRoom_SearchMembers_Response, request, callback);
        }, "name", { value: "SearchMembers" });
    
        /**
         * Calls SearchMembers.
         * @function searchMembers
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_SearchMembers_Request} request CChatRoom_SearchMembers_Request message or plain object
         * @returns {Promise<CChatRoom_SearchMembers_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#updateMessageReaction}.
         * @memberof ChatRoom
         * @typedef UpdateMessageReactionCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_UpdateMessageReaction_Response} [response] CChatRoom_UpdateMessageReaction_Response
         */
    
        /**
         * Calls UpdateMessageReaction.
         * @function updateMessageReaction
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_UpdateMessageReaction_Request} request CChatRoom_UpdateMessageReaction_Request message or plain object
         * @param {ChatRoom.UpdateMessageReactionCallback} callback Node-style callback called with the error, if any, and CChatRoom_UpdateMessageReaction_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.updateMessageReaction = function updateMessageReaction(request, callback) {
            return this.rpcCall(updateMessageReaction, $root.CChatRoom_UpdateMessageReaction_Request, $root.CChatRoom_UpdateMessageReaction_Response, request, callback);
        }, "name", { value: "UpdateMessageReaction" });
    
        /**
         * Calls UpdateMessageReaction.
         * @function updateMessageReaction
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_UpdateMessageReaction_Request} request CChatRoom_UpdateMessageReaction_Request message or plain object
         * @returns {Promise<CChatRoom_UpdateMessageReaction_Response>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoom#getMessageReactionReactors}.
         * @memberof ChatRoom
         * @typedef GetMessageReactionReactorsCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {CChatRoom_GetMessageReactionReactors_Response} [response] CChatRoom_GetMessageReactionReactors_Response
         */
    
        /**
         * Calls GetMessageReactionReactors.
         * @function getMessageReactionReactors
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMessageReactionReactors_Request} request CChatRoom_GetMessageReactionReactors_Request message or plain object
         * @param {ChatRoom.GetMessageReactionReactorsCallback} callback Node-style callback called with the error, if any, and CChatRoom_GetMessageReactionReactors_Response
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoom.prototype.getMessageReactionReactors = function getMessageReactionReactors(request, callback) {
            return this.rpcCall(getMessageReactionReactors, $root.CChatRoom_GetMessageReactionReactors_Request, $root.CChatRoom_GetMessageReactionReactors_Response, request, callback);
        }, "name", { value: "GetMessageReactionReactors" });
    
        /**
         * Calls GetMessageReactionReactors.
         * @function getMessageReactionReactors
         * @memberof ChatRoom
         * @instance
         * @param {ICChatRoom_GetMessageReactionReactors_Request} request CChatRoom_GetMessageReactionReactors_Request message or plain object
         * @returns {Promise<CChatRoom_GetMessageReactionReactors_Response>} Promise
         * @variation 2
         */
    
        return ChatRoom;
    })();
    
    $root.ChatRoomClient = (function() {
    
        /**
         * Constructs a new ChatRoomClient service.
         * @exports ChatRoomClient
         * @classdesc Represents a ChatRoomClient
         * @extends $protobuf.rpc.Service
         * @constructor
         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
         */
        function ChatRoomClient(rpcImpl, requestDelimited, responseDelimited) {
            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
        }
    
        (ChatRoomClient.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ChatRoomClient;
    
        /**
         * Creates new ChatRoomClient service using the specified rpc implementation.
         * @function create
         * @memberof ChatRoomClient
         * @static
         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
         * @returns {ChatRoomClient} RPC service. Useful where requests and/or responses are streamed.
         */
        ChatRoomClient.create = function create(rpcImpl, requestDelimited, responseDelimited) {
            return new this(rpcImpl, requestDelimited, responseDelimited);
        };
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyIncomingChatMessage}.
         * @memberof ChatRoomClient
         * @typedef NotifyIncomingChatMessageCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyIncomingChatMessage.
         * @function notifyIncomingChatMessage
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_IncomingChatMessage_Notification} request CChatRoom_IncomingChatMessage_Notification message or plain object
         * @param {ChatRoomClient.NotifyIncomingChatMessageCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyIncomingChatMessage = function notifyIncomingChatMessage(request, callback) {
            return this.rpcCall(notifyIncomingChatMessage, $root.CChatRoom_IncomingChatMessage_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyIncomingChatMessage" });
    
        /**
         * Calls NotifyIncomingChatMessage.
         * @function notifyIncomingChatMessage
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_IncomingChatMessage_Notification} request CChatRoom_IncomingChatMessage_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyChatMessageModified}.
         * @memberof ChatRoomClient
         * @typedef NotifyChatMessageModifiedCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyChatMessageModified.
         * @function notifyChatMessageModified
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatMessageModified_Notification} request CChatRoom_ChatMessageModified_Notification message or plain object
         * @param {ChatRoomClient.NotifyChatMessageModifiedCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyChatMessageModified = function notifyChatMessageModified(request, callback) {
            return this.rpcCall(notifyChatMessageModified, $root.CChatRoom_ChatMessageModified_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyChatMessageModified" });
    
        /**
         * Calls NotifyChatMessageModified.
         * @function notifyChatMessageModified
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatMessageModified_Notification} request CChatRoom_ChatMessageModified_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyMemberStateChange}.
         * @memberof ChatRoomClient
         * @typedef NotifyMemberStateChangeCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyMemberStateChange.
         * @function notifyMemberStateChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_MemberStateChange_Notification} request CChatRoom_MemberStateChange_Notification message or plain object
         * @param {ChatRoomClient.NotifyMemberStateChangeCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyMemberStateChange = function notifyMemberStateChange(request, callback) {
            return this.rpcCall(notifyMemberStateChange, $root.CChatRoom_MemberStateChange_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyMemberStateChange" });
    
        /**
         * Calls NotifyMemberStateChange.
         * @function notifyMemberStateChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_MemberStateChange_Notification} request CChatRoom_MemberStateChange_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyChatRoomHeaderStateChange}.
         * @memberof ChatRoomClient
         * @typedef NotifyChatRoomHeaderStateChangeCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyChatRoomHeaderStateChange.
         * @function notifyChatRoomHeaderStateChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatRoomHeaderState_Notification} request CChatRoom_ChatRoomHeaderState_Notification message or plain object
         * @param {ChatRoomClient.NotifyChatRoomHeaderStateChangeCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyChatRoomHeaderStateChange = function notifyChatRoomHeaderStateChange(request, callback) {
            return this.rpcCall(notifyChatRoomHeaderStateChange, $root.CChatRoom_ChatRoomHeaderState_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyChatRoomHeaderStateChange" });
    
        /**
         * Calls NotifyChatRoomHeaderStateChange.
         * @function notifyChatRoomHeaderStateChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatRoomHeaderState_Notification} request CChatRoom_ChatRoomHeaderState_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyChatRoomGroupRoomsChange}.
         * @memberof ChatRoomClient
         * @typedef NotifyChatRoomGroupRoomsChangeCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyChatRoomGroupRoomsChange.
         * @function notifyChatRoomGroupRoomsChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification} request CChatRoom_ChatRoomGroupRoomsChange_Notification message or plain object
         * @param {ChatRoomClient.NotifyChatRoomGroupRoomsChangeCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyChatRoomGroupRoomsChange = function notifyChatRoomGroupRoomsChange(request, callback) {
            return this.rpcCall(notifyChatRoomGroupRoomsChange, $root.CChatRoom_ChatRoomGroupRoomsChange_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyChatRoomGroupRoomsChange" });
    
        /**
         * Calls NotifyChatRoomGroupRoomsChange.
         * @function notifyChatRoomGroupRoomsChange
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_ChatRoomGroupRoomsChange_Notification} request CChatRoom_ChatRoomGroupRoomsChange_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyShouldRejoinChatRoomVoiceChat}.
         * @memberof ChatRoomClient
         * @typedef NotifyShouldRejoinChatRoomVoiceChatCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyShouldRejoinChatRoomVoiceChat.
         * @function notifyShouldRejoinChatRoomVoiceChat
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} request CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message or plain object
         * @param {ChatRoomClient.NotifyShouldRejoinChatRoomVoiceChatCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyShouldRejoinChatRoomVoiceChat = function notifyShouldRejoinChatRoomVoiceChat(request, callback) {
            return this.rpcCall(notifyShouldRejoinChatRoomVoiceChat, $root.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyShouldRejoinChatRoomVoiceChat" });
    
        /**
         * Calls NotifyShouldRejoinChatRoomVoiceChat.
         * @function notifyShouldRejoinChatRoomVoiceChat
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification} request CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyChatGroupUserStateChanged}.
         * @memberof ChatRoomClient
         * @typedef NotifyChatGroupUserStateChangedCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyChatGroupUserStateChanged.
         * @function notifyChatGroupUserStateChanged
         * @memberof ChatRoomClient
         * @instance
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification} request ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message or plain object
         * @param {ChatRoomClient.NotifyChatGroupUserStateChangedCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyChatGroupUserStateChanged = function notifyChatGroupUserStateChanged(request, callback) {
            return this.rpcCall(notifyChatGroupUserStateChanged, $root.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyChatGroupUserStateChanged" });
    
        /**
         * Calls NotifyChatGroupUserStateChanged.
         * @function notifyChatGroupUserStateChanged
         * @memberof ChatRoomClient
         * @instance
         * @param {IChatRoomClient_NotifyChatGroupUserStateChanged_Notification} request ChatRoomClient_NotifyChatGroupUserStateChanged_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyAckChatMessageEcho}.
         * @memberof ChatRoomClient
         * @typedef NotifyAckChatMessageEchoCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyAckChatMessageEcho.
         * @function notifyAckChatMessageEcho
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_AckChatMessage_Notification} request CChatRoom_AckChatMessage_Notification message or plain object
         * @param {ChatRoomClient.NotifyAckChatMessageEchoCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyAckChatMessageEcho = function notifyAckChatMessageEcho(request, callback) {
            return this.rpcCall(notifyAckChatMessageEcho, $root.CChatRoom_AckChatMessage_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyAckChatMessageEcho" });
    
        /**
         * Calls NotifyAckChatMessageEcho.
         * @function notifyAckChatMessageEcho
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_AckChatMessage_Notification} request CChatRoom_AckChatMessage_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyChatRoomDisconnect}.
         * @memberof ChatRoomClient
         * @typedef NotifyChatRoomDisconnectCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyChatRoomDisconnect.
         * @function notifyChatRoomDisconnect
         * @memberof ChatRoomClient
         * @instance
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification} request ChatRoomClient_NotifyChatRoomDisconnect_Notification message or plain object
         * @param {ChatRoomClient.NotifyChatRoomDisconnectCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyChatRoomDisconnect = function notifyChatRoomDisconnect(request, callback) {
            return this.rpcCall(notifyChatRoomDisconnect, $root.ChatRoomClient_NotifyChatRoomDisconnect_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyChatRoomDisconnect" });
    
        /**
         * Calls NotifyChatRoomDisconnect.
         * @function notifyChatRoomDisconnect
         * @memberof ChatRoomClient
         * @instance
         * @param {IChatRoomClient_NotifyChatRoomDisconnect_Notification} request ChatRoomClient_NotifyChatRoomDisconnect_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyMemberListViewUpdated}.
         * @memberof ChatRoomClient
         * @typedef NotifyMemberListViewUpdatedCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyMemberListViewUpdated.
         * @function notifyMemberListViewUpdated
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification} request CChatRoomClient_MemberListViewUpdated_Notification message or plain object
         * @param {ChatRoomClient.NotifyMemberListViewUpdatedCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyMemberListViewUpdated = function notifyMemberListViewUpdated(request, callback) {
            return this.rpcCall(notifyMemberListViewUpdated, $root.CChatRoomClient_MemberListViewUpdated_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyMemberListViewUpdated" });
    
        /**
         * Calls NotifyMemberListViewUpdated.
         * @function notifyMemberListViewUpdated
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoomClient_MemberListViewUpdated_Notification} request CChatRoomClient_MemberListViewUpdated_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        /**
         * Callback as used by {@link ChatRoomClient#notifyMessageReaction}.
         * @memberof ChatRoomClient
         * @typedef NotifyMessageReactionCallback
         * @type {function}
         * @param {Error|null} error Error, if any
         * @param {NoResponse} [response] NoResponse
         */
    
        /**
         * Calls NotifyMessageReaction.
         * @function notifyMessageReaction
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_MessageReaction_Notification} request CChatRoom_MessageReaction_Notification message or plain object
         * @param {ChatRoomClient.NotifyMessageReactionCallback} callback Node-style callback called with the error, if any, and NoResponse
         * @returns {undefined}
         * @variation 1
         */
        Object.defineProperty(ChatRoomClient.prototype.notifyMessageReaction = function notifyMessageReaction(request, callback) {
            return this.rpcCall(notifyMessageReaction, $root.CChatRoom_MessageReaction_Notification, $root.NoResponse, request, callback);
        }, "name", { value: "NotifyMessageReaction" });
    
        /**
         * Calls NotifyMessageReaction.
         * @function notifyMessageReaction
         * @memberof ChatRoomClient
         * @instance
         * @param {ICChatRoom_MessageReaction_Notification} request CChatRoom_MessageReaction_Notification message or plain object
         * @returns {Promise<NoResponse>} Promise
         * @variation 2
         */
    
        return ChatRoomClient;
    })();
    
    /**
     * EProtoExecutionSite enum.
     * @exports EProtoExecutionSite
     * @enum {string}
     * @property {number} k_EProtoExecutionSiteUnknown=0 k_EProtoExecutionSiteUnknown value
     * @property {number} k_EProtoExecutionSiteSteamClient=2 k_EProtoExecutionSiteSteamClient value
     */
    $root.EProtoExecutionSite = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "k_EProtoExecutionSiteUnknown"] = 0;
        values[valuesById[2] = "k_EProtoExecutionSiteSteamClient"] = 2;
        return values;
    })();
    
    $root.NoResponse = (function() {
    
        /**
         * Properties of a NoResponse.
         * @exports INoResponse
         * @interface INoResponse
         */
    
        /**
         * Constructs a new NoResponse.
         * @exports NoResponse
         * @classdesc Represents a NoResponse.
         * @implements INoResponse
         * @constructor
         * @param {INoResponse=} [properties] Properties to set
         */
        function NoResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new NoResponse instance using the specified properties.
         * @function create
         * @memberof NoResponse
         * @static
         * @param {INoResponse=} [properties] Properties to set
         * @returns {NoResponse} NoResponse instance
         */
        NoResponse.create = function create(properties) {
            return new NoResponse(properties);
        };
    
        /**
         * Encodes the specified NoResponse message. Does not implicitly {@link NoResponse.verify|verify} messages.
         * @function encode
         * @memberof NoResponse
         * @static
         * @param {INoResponse} message NoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        NoResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified NoResponse message, length delimited. Does not implicitly {@link NoResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof NoResponse
         * @static
         * @param {INoResponse} message NoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        NoResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a NoResponse message from the specified reader or buffer.
         * @function decode
         * @memberof NoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {NoResponse} NoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        NoResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NoResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a NoResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof NoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {NoResponse} NoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        NoResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a NoResponse message.
         * @function verify
         * @memberof NoResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        NoResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a NoResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof NoResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {NoResponse} NoResponse
         */
        NoResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.NoResponse)
                return object;
            return new $root.NoResponse();
        };
    
        /**
         * Creates a plain object from a NoResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof NoResponse
         * @static
         * @param {NoResponse} message NoResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        NoResponse.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this NoResponse to JSON.
         * @function toJSON
         * @memberof NoResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        NoResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return NoResponse;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [public_dependency] FileDescriptorProto public_dependency
                 * @property {Array.<number>|null} [weak_dependency] FileDescriptorProto weak_dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.public_dependency = [];
                    this.weak_dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto public_dependency.
                 * @member {Array.<number>} public_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.public_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weak_dependency.
                 * @member {Array.<number>} weak_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weak_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.public_dependency != null && message.public_dependency.length)
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.public_dependency[i]);
                    if (message.weak_dependency != null && message.weak_dependency.length)
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weak_dependency[i]);
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.public_dependency && message.public_dependency.length))
                                message.public_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.public_dependency.push(reader.int32());
                            } else
                                message.public_dependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weak_dependency && message.weak_dependency.length))
                                message.weak_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weak_dependency.push(reader.int32());
                            } else
                                message.weak_dependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.message_type && message.message_type.length))
                                message.message_type = [];
                            message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.public_dependency != null && message.hasOwnProperty("public_dependency")) {
                        if (!Array.isArray(message.public_dependency))
                            return "public_dependency: array expected";
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            if (!$util.isInteger(message.public_dependency[i]))
                                return "public_dependency: integer[] expected";
                    }
                    if (message.weak_dependency != null && message.hasOwnProperty("weak_dependency")) {
                        if (!Array.isArray(message.weak_dependency))
                            return "weak_dependency: array expected";
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            if (!$util.isInteger(message.weak_dependency[i]))
                                return "weak_dependency: integer[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.public_dependency) {
                        if (!Array.isArray(object.public_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.public_dependency: array expected");
                        message.public_dependency = [];
                        for (var i = 0; i < object.public_dependency.length; ++i)
                            message.public_dependency[i] = object.public_dependency[i] | 0;
                    }
                    if (object.weak_dependency) {
                        if (!Array.isArray(object.weak_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weak_dependency: array expected");
                        message.weak_dependency = [];
                        for (var i = 0; i < object.weak_dependency.length; ++i)
                            message.weak_dependency[i] = object.weak_dependency[i] | 0;
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                        object.public_dependency = [];
                        object.weak_dependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    if (message.public_dependency && message.public_dependency.length) {
                        object.public_dependency = [];
                        for (var j = 0; j < message.public_dependency.length; ++j)
                            object.public_dependency[j] = message.public_dependency[j];
                    }
                    if (message.weak_dependency && message.weak_dependency.length) {
                        object.weak_dependency = [];
                        for (var j = 0; j < message.weak_dependency.length; ++j)
                            object.weak_dependency[j] = message.weak_dependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneof_decl] DescriptorProto oneof_decl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reserved_range] DescriptorProto reserved_range
                 * @property {Array.<string>|null} [reserved_name] DescriptorProto reserved_name
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    this.oneof_decl = [];
                    this.reserved_range = [];
                    this.reserved_name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto oneof_decl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneof_decl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneof_decl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reserved_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reserved_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_range = $util.emptyArray;
    
                /**
                 * DescriptorProto reserved_name.
                 * @member {Array.<string>} reserved_name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_name = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneof_decl != null && message.oneof_decl.length)
                        for (var i = 0; i < message.oneof_decl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneof_decl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reserved_range != null && message.reserved_range.length)
                        for (var i = 0; i < message.reserved_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reserved_range[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reserved_name != null && message.reserved_name.length)
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reserved_name[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nested_type && message.nested_type.length))
                                message.nested_type = [];
                            message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extension_range && message.extension_range.length))
                                message.extension_range = [];
                            message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneof_decl && message.oneof_decl.length))
                                message.oneof_decl = [];
                            message.oneof_decl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reserved_range && message.reserved_range.length))
                                message.reserved_range = [];
                            message.reserved_range.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reserved_name && message.reserved_name.length))
                                message.reserved_name = [];
                            message.reserved_name.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.oneof_decl != null && message.hasOwnProperty("oneof_decl")) {
                        if (!Array.isArray(message.oneof_decl))
                            return "oneof_decl: array expected";
                        for (var i = 0; i < message.oneof_decl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneof_decl[i]);
                            if (error)
                                return "oneof_decl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reserved_range != null && message.hasOwnProperty("reserved_range")) {
                        if (!Array.isArray(message.reserved_range))
                            return "reserved_range: array expected";
                        for (var i = 0; i < message.reserved_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reserved_range[i]);
                            if (error)
                                return "reserved_range." + error;
                        }
                    }
                    if (message.reserved_name != null && message.hasOwnProperty("reserved_name")) {
                        if (!Array.isArray(message.reserved_name))
                            return "reserved_name: array expected";
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            if (!$util.isString(message.reserved_name[i]))
                                return "reserved_name: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.oneof_decl) {
                        if (!Array.isArray(object.oneof_decl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: array expected");
                        message.oneof_decl = [];
                        for (var i = 0; i < object.oneof_decl.length; ++i) {
                            if (typeof object.oneof_decl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: object expected");
                            message.oneof_decl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneof_decl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reserved_range) {
                        if (!Array.isArray(object.reserved_range))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_range: array expected");
                        message.reserved_range = [];
                        for (var i = 0; i < object.reserved_range.length; ++i) {
                            if (typeof object.reserved_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reserved_range: object expected");
                            message.reserved_range[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reserved_range[i]);
                        }
                    }
                    if (object.reserved_name) {
                        if (!Array.isArray(object.reserved_name))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_name: array expected");
                        message.reserved_name = [];
                        for (var i = 0; i < object.reserved_name.length; ++i)
                            message.reserved_name[i] = String(object.reserved_name[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                        object.oneof_decl = [];
                        object.reserved_range = [];
                        object.reserved_name = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneof_decl && message.oneof_decl.length) {
                        object.oneof_decl = [];
                        for (var j = 0; j < message.oneof_decl.length; ++j)
                            object.oneof_decl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneof_decl[j], options);
                    }
                    if (message.reserved_range && message.reserved_range.length) {
                        object.reserved_range = [];
                        for (var j = 0; j < message.reserved_range.length; ++j)
                            object.reserved_range[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reserved_range[j], options);
                    }
                    if (message.reserved_name && message.reserved_name.length) {
                        object.reserved_name = [];
                        for (var j = 0; j < message.reserved_name.length; ++j)
                            object.reserved_name[j] = message.reserved_name[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {number|null} [oneof_index] FieldDescriptorProto oneof_index
                 * @property {string|null} [json_name] FieldDescriptorProto json_name
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto oneof_index.
                 * @member {number} oneof_index
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneof_index = 0;
    
                /**
                 * FieldDescriptorProto json_name.
                 * @member {string} json_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.json_name = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && message.hasOwnProperty("label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneof_index);
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.json_name);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.type_name = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.default_value = reader.string();
                            break;
                        case 9:
                            message.oneof_index = reader.int32();
                            break;
                        case 10:
                            message.json_name = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        if (!$util.isInteger(message.oneof_index))
                            return "oneof_index: integer expected";
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        if (!$util.isString(message.json_name))
                            return "json_name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.oneof_index != null)
                        message.oneof_index = object.oneof_index | 0;
                    if (object.json_name != null)
                        message.json_name = String(object.json_name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                        object.oneof_index = 0;
                        object.json_name = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        object.oneof_index = message.oneof_index;
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        object.json_name = message.json_name;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {string}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {string}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [client_streaming] MethodDescriptorProto client_streaming
                 * @property {boolean|null} [server_streaming] MethodDescriptorProto server_streaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto client_streaming.
                 * @member {boolean} client_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.client_streaming = false;
    
                /**
                 * MethodDescriptorProto server_streaming.
                 * @member {boolean} server_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.server_streaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.client_streaming);
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_streaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.input_type = reader.string();
                            break;
                        case 3:
                            message.output_type = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.client_streaming = reader.bool();
                            break;
                        case 6:
                            message.server_streaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        if (typeof message.client_streaming !== "boolean")
                            return "client_streaming: boolean expected";
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        if (typeof message.server_streaming !== "boolean")
                            return "server_streaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.client_streaming != null)
                        message.client_streaming = Boolean(object.client_streaming);
                    if (object.server_streaming != null)
                        message.server_streaming = Boolean(object.server_streaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                        object.client_streaming = false;
                        object.server_streaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        object.client_streaming = message.client_streaming;
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        object.server_streaming = message.server_streaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {boolean|null} [java_string_check_utf8] FileOptions java_string_check_utf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {string|null} [go_package] FileOptions go_package
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [cc_enable_arenas] FileOptions cc_enable_arenas
                 * @property {string|null} [objc_class_prefix] FileOptions objc_class_prefix
                 * @property {string|null} [csharp_namespace] FileOptions csharp_namespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions java_string_check_utf8.
                 * @member {boolean} java_string_check_utf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_string_check_utf8 = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions go_package.
                 * @member {string} go_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.go_package = "";
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions cc_enable_arenas.
                 * @member {boolean} cc_enable_arenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_enable_arenas = false;
    
                /**
                 * FileOptions objc_class_prefix.
                 * @member {string} objc_class_prefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objc_class_prefix = "";
    
                /**
                 * FileOptions csharp_namespace.
                 * @member {string} csharp_namespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharp_namespace = "";
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.go_package);
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.java_string_check_utf8);
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.cc_enable_arenas);
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objc_class_prefix);
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharp_namespace);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.java_package = reader.string();
                            break;
                        case 8:
                            message.java_outer_classname = reader.string();
                            break;
                        case 10:
                            message.java_multiple_files = reader.bool();
                            break;
                        case 20:
                            message.java_generate_equals_and_hash = reader.bool();
                            break;
                        case 27:
                            message.java_string_check_utf8 = reader.bool();
                            break;
                        case 9:
                            message.optimize_for = reader.int32();
                            break;
                        case 11:
                            message.go_package = reader.string();
                            break;
                        case 16:
                            message.cc_generic_services = reader.bool();
                            break;
                        case 17:
                            message.java_generic_services = reader.bool();
                            break;
                        case 18:
                            message.py_generic_services = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.cc_enable_arenas = reader.bool();
                            break;
                        case 36:
                            message.objc_class_prefix = reader.string();
                            break;
                        case 37:
                            message.csharp_namespace = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        if (typeof message.java_string_check_utf8 !== "boolean")
                            return "java_string_check_utf8: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        if (!$util.isString(message.go_package))
                            return "go_package: string expected";
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        if (typeof message.cc_enable_arenas !== "boolean")
                            return "cc_enable_arenas: boolean expected";
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        if (!$util.isString(message.objc_class_prefix))
                            return "objc_class_prefix: string expected";
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        if (!$util.isString(message.csharp_namespace))
                            return "csharp_namespace: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    if (object.java_string_check_utf8 != null)
                        message.java_string_check_utf8 = Boolean(object.java_string_check_utf8);
                    switch (object.optimize_for) {
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.go_package != null)
                        message.go_package = String(object.go_package);
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.cc_enable_arenas != null)
                        message.cc_enable_arenas = Boolean(object.cc_enable_arenas);
                    if (object.objc_class_prefix != null)
                        message.objc_class_prefix = String(object.objc_class_prefix);
                    if (object.csharp_namespace != null)
                        message.csharp_namespace = String(object.csharp_namespace);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.go_package = "";
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                        object.deprecated = false;
                        object.java_string_check_utf8 = false;
                        object.cc_enable_arenas = false;
                        object.objc_class_prefix = "";
                        object.csharp_namespace = "";
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        object.go_package = message.go_package;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        object.java_string_check_utf8 = message.java_string_check_utf8;
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        object.cc_enable_arenas = message.cc_enable_arenas;
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        object.objc_class_prefix = message.objc_class_prefix;
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        object.csharp_namespace = message.csharp_namespace;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {string}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [map_entry] MessageOptions map_entry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions map_entry.
                 * @member {boolean} map_entry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.map_entry = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.map_entry);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.message_set_wire_format = reader.bool();
                            break;
                        case 2:
                            message.no_standard_descriptor_accessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.map_entry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        if (typeof message.map_entry !== "boolean")
                            return "map_entry: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.map_entry != null)
                        message.map_entry = Boolean(object.map_entry);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object.deprecated = false;
                        object.map_entry = false;
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        object.map_entry = message.map_entry;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {string|null} [".description"] FieldOptions .description
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .description.
                 * @member {string} .description
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".description"] = "";
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".description"] != null && message.hasOwnProperty(".description"))
                        writer.uint32(/* id 50000, wireType 2 =*/400002).string(message[".description"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".description"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".description"] != null && message.hasOwnProperty(".description"))
                        if (!$util.isString(message[".description"]))
                            return ".description: string expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".description"] != null)
                        message[".description"] = String(object[".description"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".description"] = "";
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".description"] != null && message.hasOwnProperty(".description"))
                        object[".description"] = message[".description"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {string}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {string}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] OneofOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allow_alias] EnumOptions allow_alias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 * @property {string|null} [".enum_description"] EnumOptions .enum_description
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allow_alias.
                 * @member {boolean} allow_alias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allow_alias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * EnumOptions .enum_description.
                 * @member {string} .enum_description
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".enum_description"] = "";
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allow_alias);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".enum_description"] != null && message.hasOwnProperty(".enum_description"))
                        writer.uint32(/* id 50000, wireType 2 =*/400002).string(message[".enum_description"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allow_alias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".enum_description"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        if (typeof message.allow_alias !== "boolean")
                            return "allow_alias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".enum_description"] != null && message.hasOwnProperty(".enum_description"))
                        if (!$util.isString(message[".enum_description"]))
                            return ".enum_description: string expected";
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allow_alias != null)
                        message.allow_alias = Boolean(object.allow_alias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".enum_description"] != null)
                        message[".enum_description"] = String(object[".enum_description"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.allow_alias = false;
                        object.deprecated = false;
                        object[".enum_description"] = "";
                    }
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        object.allow_alias = message.allow_alias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".enum_description"] != null && message.hasOwnProperty(".enum_description"))
                        object[".enum_description"] = message[".enum_description"];
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 * @property {string|null} [".enum_value_description"] EnumValueOptions .enum_value_description
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * EnumValueOptions .enum_value_description.
                 * @member {string} .enum_value_description
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype[".enum_value_description"] = "";
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".enum_value_description"] != null && message.hasOwnProperty(".enum_value_description"))
                        writer.uint32(/* id 50000, wireType 2 =*/400002).string(message[".enum_value_description"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".enum_value_description"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".enum_value_description"] != null && message.hasOwnProperty(".enum_value_description"))
                        if (!$util.isString(message[".enum_value_description"]))
                            return ".enum_value_description: string expected";
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".enum_value_description"] != null)
                        message[".enum_value_description"] = String(object[".enum_value_description"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".enum_value_description"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".enum_value_description"] != null && message.hasOwnProperty(".enum_value_description"))
                        object[".enum_value_description"] = message[".enum_value_description"];
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 * @property {string|null} [".service_description"] ServiceOptions .service_description
                 * @property {EProtoExecutionSite|null} [".service_execution_site"] ServiceOptions .service_execution_site
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * ServiceOptions .service_description.
                 * @member {string} .service_description
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".service_description"] = "";
    
                /**
                 * ServiceOptions .service_execution_site.
                 * @member {EProtoExecutionSite} .service_execution_site
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".service_execution_site"] = 0;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".service_description"] != null && message.hasOwnProperty(".service_description"))
                        writer.uint32(/* id 50000, wireType 2 =*/400002).string(message[".service_description"]);
                    if (message[".service_execution_site"] != null && message.hasOwnProperty(".service_execution_site"))
                        writer.uint32(/* id 50008, wireType 0 =*/400064).int32(message[".service_execution_site"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".service_description"] = reader.string();
                            break;
                        case 50008:
                            message[".service_execution_site"] = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".service_description"] != null && message.hasOwnProperty(".service_description"))
                        if (!$util.isString(message[".service_description"]))
                            return ".service_description: string expected";
                    if (message[".service_execution_site"] != null && message.hasOwnProperty(".service_execution_site"))
                        switch (message[".service_execution_site"]) {
                        default:
                            return ".service_execution_site: enum value expected";
                        case 0:
                        case 2:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".service_description"] != null)
                        message[".service_description"] = String(object[".service_description"]);
                    switch (object[".service_execution_site"]) {
                    case "k_EProtoExecutionSiteUnknown":
                    case 0:
                        message[".service_execution_site"] = 0;
                        break;
                    case "k_EProtoExecutionSiteSteamClient":
                    case 2:
                        message[".service_execution_site"] = 2;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".service_description"] = "";
                        object[".service_execution_site"] = options.enums === String ? "k_EProtoExecutionSiteUnknown" : 0;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".service_description"] != null && message.hasOwnProperty(".service_description"))
                        object[".service_description"] = message[".service_description"];
                    if (message[".service_execution_site"] != null && message.hasOwnProperty(".service_execution_site"))
                        object[".service_execution_site"] = options.enums === String ? $root.EProtoExecutionSite[message[".service_execution_site"]] : message[".service_execution_site"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 * @property {string|null} [".method_description"] MethodOptions .method_description
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MethodOptions .method_description.
                 * @member {string} .method_description
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".method_description"] = "";
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".method_description"] != null && message.hasOwnProperty(".method_description"))
                        writer.uint32(/* id 50000, wireType 2 =*/400002).string(message[".method_description"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".method_description"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".method_description"] != null && message.hasOwnProperty(".method_description"))
                        if (!$util.isString(message[".method_description"]))
                            return ".method_description: string expected";
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".method_description"] != null)
                        message[".method_description"] = String(object[".method_description"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".method_description"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".method_description"] != null && message.hasOwnProperty(".method_description"))
                        object[".method_description"] = message[".method_description"];
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {number|Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {number|Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {number|Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {number|Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifier_value = reader.string();
                            break;
                        case 4:
                            message.positive_int_value = reader.uint64();
                            break;
                        case 5:
                            message.negative_int_value = reader.int64();
                            break;
                        case 6:
                            message.double_value = reader.double();
                            break;
                        case 7:
                            message.string_value = reader.bytes();
                            break;
                        case 8:
                            message.aggregate_value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.name_part = reader.string();
                                break;
                            case 2:
                                message.is_extension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leading_comments] Location leading_comments
                     * @property {string|null} [trailing_comments] Location trailing_comments
                     * @property {Array.<string>|null} [leading_detached_comments] Location leading_detached_comments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leading_detached_comments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leading_comments.
                     * @member {string} leading_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_comments = "";
    
                    /**
                     * Location trailing_comments.
                     * @member {string} trailing_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailing_comments = "";
    
                    /**
                     * Location leading_detached_comments.
                     * @member {Array.<string>} leading_detached_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_detached_comments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leading_comments);
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailing_comments);
                        if (message.leading_detached_comments != null && message.leading_detached_comments.length)
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leading_detached_comments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leading_comments = reader.string();
                                break;
                            case 4:
                                message.trailing_comments = reader.string();
                                break;
                            case 6:
                                if (!(message.leading_detached_comments && message.leading_detached_comments.length))
                                    message.leading_detached_comments = [];
                                message.leading_detached_comments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            if (!$util.isString(message.leading_comments))
                                return "leading_comments: string expected";
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            if (!$util.isString(message.trailing_comments))
                                return "trailing_comments: string expected";
                        if (message.leading_detached_comments != null && message.hasOwnProperty("leading_detached_comments")) {
                            if (!Array.isArray(message.leading_detached_comments))
                                return "leading_detached_comments: array expected";
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                if (!$util.isString(message.leading_detached_comments[i]))
                                    return "leading_detached_comments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leading_comments != null)
                            message.leading_comments = String(object.leading_comments);
                        if (object.trailing_comments != null)
                            message.trailing_comments = String(object.trailing_comments);
                        if (object.leading_detached_comments) {
                            if (!Array.isArray(object.leading_detached_comments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leading_detached_comments: array expected");
                            message.leading_detached_comments = [];
                            for (var i = 0; i < object.leading_detached_comments.length; ++i)
                                message.leading_detached_comments[i] = String(object.leading_detached_comments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leading_detached_comments = [];
                        }
                        if (options.defaults) {
                            object.leading_comments = "";
                            object.trailing_comments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            object.leading_comments = message.leading_comments;
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            object.trailing_comments = message.trailing_comments;
                        if (message.leading_detached_comments && message.leading_detached_comments.length) {
                            object.leading_detached_comments = [];
                            for (var j = 0; j < message.leading_detached_comments.length; ++j)
                                object.leading_detached_comments[j] = message.leading_detached_comments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [source_file] Annotation source_file
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation source_file.
                     * @member {string} source_file
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.source_file = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.source_file);
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.source_file = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            if (!$util.isString(message.source_file))
                                return "source_file: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.source_file != null)
                            message.source_file = String(object.source_file);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.source_file = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            object.source_file = message.source_file;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();
    
    $root.CChatPartyBeacon = (function() {
    
        /**
         * Properties of a CChatPartyBeacon.
         * @exports ICChatPartyBeacon
         * @interface ICChatPartyBeacon
         * @property {number|null} [app_id] CChatPartyBeacon app_id
         * @property {number|Long|null} [steamid_owner] CChatPartyBeacon steamid_owner
         * @property {number|Long|null} [beacon_id] CChatPartyBeacon beacon_id
         * @property {string|null} [game_metadata] CChatPartyBeacon game_metadata
         */
    
        /**
         * Constructs a new CChatPartyBeacon.
         * @exports CChatPartyBeacon
         * @classdesc Represents a CChatPartyBeacon.
         * @implements ICChatPartyBeacon
         * @constructor
         * @param {ICChatPartyBeacon=} [properties] Properties to set
         */
        function CChatPartyBeacon(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatPartyBeacon app_id.
         * @member {number} app_id
         * @memberof CChatPartyBeacon
         * @instance
         */
        CChatPartyBeacon.prototype.app_id = 0;
    
        /**
         * CChatPartyBeacon steamid_owner.
         * @member {number|Long} steamid_owner
         * @memberof CChatPartyBeacon
         * @instance
         */
        CChatPartyBeacon.prototype.steamid_owner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatPartyBeacon beacon_id.
         * @member {number|Long} beacon_id
         * @memberof CChatPartyBeacon
         * @instance
         */
        CChatPartyBeacon.prototype.beacon_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChatPartyBeacon game_metadata.
         * @member {string} game_metadata
         * @memberof CChatPartyBeacon
         * @instance
         */
        CChatPartyBeacon.prototype.game_metadata = "";
    
        /**
         * Creates a new CChatPartyBeacon instance using the specified properties.
         * @function create
         * @memberof CChatPartyBeacon
         * @static
         * @param {ICChatPartyBeacon=} [properties] Properties to set
         * @returns {CChatPartyBeacon} CChatPartyBeacon instance
         */
        CChatPartyBeacon.create = function create(properties) {
            return new CChatPartyBeacon(properties);
        };
    
        /**
         * Encodes the specified CChatPartyBeacon message. Does not implicitly {@link CChatPartyBeacon.verify|verify} messages.
         * @function encode
         * @memberof CChatPartyBeacon
         * @static
         * @param {ICChatPartyBeacon} message CChatPartyBeacon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatPartyBeacon.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steamid_owner != null && message.hasOwnProperty("steamid_owner"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid_owner);
            if (message.beacon_id != null && message.hasOwnProperty("beacon_id"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.beacon_id);
            if (message.game_metadata != null && message.hasOwnProperty("game_metadata"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.game_metadata);
            return writer;
        };
    
        /**
         * Encodes the specified CChatPartyBeacon message, length delimited. Does not implicitly {@link CChatPartyBeacon.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatPartyBeacon
         * @static
         * @param {ICChatPartyBeacon} message CChatPartyBeacon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatPartyBeacon.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatPartyBeacon message from the specified reader or buffer.
         * @function decode
         * @memberof CChatPartyBeacon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatPartyBeacon} CChatPartyBeacon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatPartyBeacon.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatPartyBeacon();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steamid_owner = reader.fixed64();
                    break;
                case 3:
                    message.beacon_id = reader.fixed64();
                    break;
                case 4:
                    message.game_metadata = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatPartyBeacon message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatPartyBeacon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatPartyBeacon} CChatPartyBeacon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatPartyBeacon.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatPartyBeacon message.
         * @function verify
         * @memberof CChatPartyBeacon
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatPartyBeacon.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steamid_owner != null && message.hasOwnProperty("steamid_owner"))
                if (!$util.isInteger(message.steamid_owner) && !(message.steamid_owner && $util.isInteger(message.steamid_owner.low) && $util.isInteger(message.steamid_owner.high)))
                    return "steamid_owner: integer|Long expected";
            if (message.beacon_id != null && message.hasOwnProperty("beacon_id"))
                if (!$util.isInteger(message.beacon_id) && !(message.beacon_id && $util.isInteger(message.beacon_id.low) && $util.isInteger(message.beacon_id.high)))
                    return "beacon_id: integer|Long expected";
            if (message.game_metadata != null && message.hasOwnProperty("game_metadata"))
                if (!$util.isString(message.game_metadata))
                    return "game_metadata: string expected";
            return null;
        };
    
        /**
         * Creates a CChatPartyBeacon message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatPartyBeacon
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatPartyBeacon} CChatPartyBeacon
         */
        CChatPartyBeacon.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatPartyBeacon)
                return object;
            var message = new $root.CChatPartyBeacon();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steamid_owner != null)
                if ($util.Long)
                    (message.steamid_owner = $util.Long.fromValue(object.steamid_owner)).unsigned = false;
                else if (typeof object.steamid_owner === "string")
                    message.steamid_owner = parseInt(object.steamid_owner, 10);
                else if (typeof object.steamid_owner === "number")
                    message.steamid_owner = object.steamid_owner;
                else if (typeof object.steamid_owner === "object")
                    message.steamid_owner = new $util.LongBits(object.steamid_owner.low >>> 0, object.steamid_owner.high >>> 0).toNumber();
            if (object.beacon_id != null)
                if ($util.Long)
                    (message.beacon_id = $util.Long.fromValue(object.beacon_id)).unsigned = false;
                else if (typeof object.beacon_id === "string")
                    message.beacon_id = parseInt(object.beacon_id, 10);
                else if (typeof object.beacon_id === "number")
                    message.beacon_id = object.beacon_id;
                else if (typeof object.beacon_id === "object")
                    message.beacon_id = new $util.LongBits(object.beacon_id.low >>> 0, object.beacon_id.high >>> 0).toNumber();
            if (object.game_metadata != null)
                message.game_metadata = String(object.game_metadata);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatPartyBeacon message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatPartyBeacon
         * @static
         * @param {CChatPartyBeacon} message CChatPartyBeacon
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatPartyBeacon.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_owner = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_owner = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.beacon_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.beacon_id = options.longs === String ? "0" : 0;
                object.game_metadata = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steamid_owner != null && message.hasOwnProperty("steamid_owner"))
                if (typeof message.steamid_owner === "number")
                    object.steamid_owner = options.longs === String ? String(message.steamid_owner) : message.steamid_owner;
                else
                    object.steamid_owner = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_owner) : options.longs === Number ? new $util.LongBits(message.steamid_owner.low >>> 0, message.steamid_owner.high >>> 0).toNumber() : message.steamid_owner;
            if (message.beacon_id != null && message.hasOwnProperty("beacon_id"))
                if (typeof message.beacon_id === "number")
                    object.beacon_id = options.longs === String ? String(message.beacon_id) : message.beacon_id;
                else
                    object.beacon_id = options.longs === String ? $util.Long.prototype.toString.call(message.beacon_id) : options.longs === Number ? new $util.LongBits(message.beacon_id.low >>> 0, message.beacon_id.high >>> 0).toNumber() : message.beacon_id;
            if (message.game_metadata != null && message.hasOwnProperty("game_metadata"))
                object.game_metadata = message.game_metadata;
            return object;
        };
    
        /**
         * Converts this CChatPartyBeacon to JSON.
         * @function toJSON
         * @memberof CChatPartyBeacon
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatPartyBeacon.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatPartyBeacon;
    })();
    
    $root.CChatRoleActions = (function() {
    
        /**
         * Properties of a CChatRoleActions.
         * @exports ICChatRoleActions
         * @interface ICChatRoleActions
         * @property {number|Long|null} [role_id] CChatRoleActions role_id
         * @property {boolean|null} [can_create_rename_delete_channel] CChatRoleActions can_create_rename_delete_channel
         * @property {boolean|null} [can_kick] CChatRoleActions can_kick
         * @property {boolean|null} [can_ban] CChatRoleActions can_ban
         * @property {boolean|null} [can_invite] CChatRoleActions can_invite
         * @property {boolean|null} [can_change_tagline_avatar_name] CChatRoleActions can_change_tagline_avatar_name
         * @property {boolean|null} [can_chat] CChatRoleActions can_chat
         * @property {boolean|null} [can_view_history] CChatRoleActions can_view_history
         * @property {boolean|null} [can_change_group_roles] CChatRoleActions can_change_group_roles
         * @property {boolean|null} [can_change_user_roles] CChatRoleActions can_change_user_roles
         * @property {boolean|null} [can_mention_all] CChatRoleActions can_mention_all
         * @property {boolean|null} [can_set_watching_broadcast] CChatRoleActions can_set_watching_broadcast
         */
    
        /**
         * Constructs a new CChatRoleActions.
         * @exports CChatRoleActions
         * @classdesc Represents a CChatRoleActions.
         * @implements ICChatRoleActions
         * @constructor
         * @param {ICChatRoleActions=} [properties] Properties to set
         */
        function CChatRoleActions(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoleActions role_id.
         * @member {number|Long} role_id
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoleActions can_create_rename_delete_channel.
         * @member {boolean} can_create_rename_delete_channel
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_create_rename_delete_channel = false;
    
        /**
         * CChatRoleActions can_kick.
         * @member {boolean} can_kick
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_kick = false;
    
        /**
         * CChatRoleActions can_ban.
         * @member {boolean} can_ban
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_ban = false;
    
        /**
         * CChatRoleActions can_invite.
         * @member {boolean} can_invite
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_invite = false;
    
        /**
         * CChatRoleActions can_change_tagline_avatar_name.
         * @member {boolean} can_change_tagline_avatar_name
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_change_tagline_avatar_name = false;
    
        /**
         * CChatRoleActions can_chat.
         * @member {boolean} can_chat
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_chat = false;
    
        /**
         * CChatRoleActions can_view_history.
         * @member {boolean} can_view_history
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_view_history = false;
    
        /**
         * CChatRoleActions can_change_group_roles.
         * @member {boolean} can_change_group_roles
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_change_group_roles = false;
    
        /**
         * CChatRoleActions can_change_user_roles.
         * @member {boolean} can_change_user_roles
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_change_user_roles = false;
    
        /**
         * CChatRoleActions can_mention_all.
         * @member {boolean} can_mention_all
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_mention_all = false;
    
        /**
         * CChatRoleActions can_set_watching_broadcast.
         * @member {boolean} can_set_watching_broadcast
         * @memberof CChatRoleActions
         * @instance
         */
        CChatRoleActions.prototype.can_set_watching_broadcast = false;
    
        /**
         * Creates a new CChatRoleActions instance using the specified properties.
         * @function create
         * @memberof CChatRoleActions
         * @static
         * @param {ICChatRoleActions=} [properties] Properties to set
         * @returns {CChatRoleActions} CChatRoleActions instance
         */
        CChatRoleActions.create = function create(properties) {
            return new CChatRoleActions(properties);
        };
    
        /**
         * Encodes the specified CChatRoleActions message. Does not implicitly {@link CChatRoleActions.verify|verify} messages.
         * @function encode
         * @memberof CChatRoleActions
         * @static
         * @param {ICChatRoleActions} message CChatRoleActions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoleActions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.role_id);
            if (message.can_create_rename_delete_channel != null && message.hasOwnProperty("can_create_rename_delete_channel"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.can_create_rename_delete_channel);
            if (message.can_kick != null && message.hasOwnProperty("can_kick"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.can_kick);
            if (message.can_ban != null && message.hasOwnProperty("can_ban"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.can_ban);
            if (message.can_invite != null && message.hasOwnProperty("can_invite"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.can_invite);
            if (message.can_change_tagline_avatar_name != null && message.hasOwnProperty("can_change_tagline_avatar_name"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.can_change_tagline_avatar_name);
            if (message.can_chat != null && message.hasOwnProperty("can_chat"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.can_chat);
            if (message.can_view_history != null && message.hasOwnProperty("can_view_history"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.can_view_history);
            if (message.can_change_group_roles != null && message.hasOwnProperty("can_change_group_roles"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.can_change_group_roles);
            if (message.can_change_user_roles != null && message.hasOwnProperty("can_change_user_roles"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.can_change_user_roles);
            if (message.can_mention_all != null && message.hasOwnProperty("can_mention_all"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.can_mention_all);
            if (message.can_set_watching_broadcast != null && message.hasOwnProperty("can_set_watching_broadcast"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.can_set_watching_broadcast);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoleActions message, length delimited. Does not implicitly {@link CChatRoleActions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoleActions
         * @static
         * @param {ICChatRoleActions} message CChatRoleActions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoleActions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoleActions message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoleActions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoleActions} CChatRoleActions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoleActions.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoleActions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.role_id = reader.uint64();
                    break;
                case 2:
                    message.can_create_rename_delete_channel = reader.bool();
                    break;
                case 3:
                    message.can_kick = reader.bool();
                    break;
                case 4:
                    message.can_ban = reader.bool();
                    break;
                case 5:
                    message.can_invite = reader.bool();
                    break;
                case 6:
                    message.can_change_tagline_avatar_name = reader.bool();
                    break;
                case 7:
                    message.can_chat = reader.bool();
                    break;
                case 8:
                    message.can_view_history = reader.bool();
                    break;
                case 9:
                    message.can_change_group_roles = reader.bool();
                    break;
                case 10:
                    message.can_change_user_roles = reader.bool();
                    break;
                case 11:
                    message.can_mention_all = reader.bool();
                    break;
                case 12:
                    message.can_set_watching_broadcast = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoleActions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoleActions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoleActions} CChatRoleActions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoleActions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoleActions message.
         * @function verify
         * @memberof CChatRoleActions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoleActions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (!$util.isInteger(message.role_id) && !(message.role_id && $util.isInteger(message.role_id.low) && $util.isInteger(message.role_id.high)))
                    return "role_id: integer|Long expected";
            if (message.can_create_rename_delete_channel != null && message.hasOwnProperty("can_create_rename_delete_channel"))
                if (typeof message.can_create_rename_delete_channel !== "boolean")
                    return "can_create_rename_delete_channel: boolean expected";
            if (message.can_kick != null && message.hasOwnProperty("can_kick"))
                if (typeof message.can_kick !== "boolean")
                    return "can_kick: boolean expected";
            if (message.can_ban != null && message.hasOwnProperty("can_ban"))
                if (typeof message.can_ban !== "boolean")
                    return "can_ban: boolean expected";
            if (message.can_invite != null && message.hasOwnProperty("can_invite"))
                if (typeof message.can_invite !== "boolean")
                    return "can_invite: boolean expected";
            if (message.can_change_tagline_avatar_name != null && message.hasOwnProperty("can_change_tagline_avatar_name"))
                if (typeof message.can_change_tagline_avatar_name !== "boolean")
                    return "can_change_tagline_avatar_name: boolean expected";
            if (message.can_chat != null && message.hasOwnProperty("can_chat"))
                if (typeof message.can_chat !== "boolean")
                    return "can_chat: boolean expected";
            if (message.can_view_history != null && message.hasOwnProperty("can_view_history"))
                if (typeof message.can_view_history !== "boolean")
                    return "can_view_history: boolean expected";
            if (message.can_change_group_roles != null && message.hasOwnProperty("can_change_group_roles"))
                if (typeof message.can_change_group_roles !== "boolean")
                    return "can_change_group_roles: boolean expected";
            if (message.can_change_user_roles != null && message.hasOwnProperty("can_change_user_roles"))
                if (typeof message.can_change_user_roles !== "boolean")
                    return "can_change_user_roles: boolean expected";
            if (message.can_mention_all != null && message.hasOwnProperty("can_mention_all"))
                if (typeof message.can_mention_all !== "boolean")
                    return "can_mention_all: boolean expected";
            if (message.can_set_watching_broadcast != null && message.hasOwnProperty("can_set_watching_broadcast"))
                if (typeof message.can_set_watching_broadcast !== "boolean")
                    return "can_set_watching_broadcast: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoleActions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoleActions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoleActions} CChatRoleActions
         */
        CChatRoleActions.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoleActions)
                return object;
            var message = new $root.CChatRoleActions();
            if (object.role_id != null)
                if ($util.Long)
                    (message.role_id = $util.Long.fromValue(object.role_id)).unsigned = true;
                else if (typeof object.role_id === "string")
                    message.role_id = parseInt(object.role_id, 10);
                else if (typeof object.role_id === "number")
                    message.role_id = object.role_id;
                else if (typeof object.role_id === "object")
                    message.role_id = new $util.LongBits(object.role_id.low >>> 0, object.role_id.high >>> 0).toNumber(true);
            if (object.can_create_rename_delete_channel != null)
                message.can_create_rename_delete_channel = Boolean(object.can_create_rename_delete_channel);
            if (object.can_kick != null)
                message.can_kick = Boolean(object.can_kick);
            if (object.can_ban != null)
                message.can_ban = Boolean(object.can_ban);
            if (object.can_invite != null)
                message.can_invite = Boolean(object.can_invite);
            if (object.can_change_tagline_avatar_name != null)
                message.can_change_tagline_avatar_name = Boolean(object.can_change_tagline_avatar_name);
            if (object.can_chat != null)
                message.can_chat = Boolean(object.can_chat);
            if (object.can_view_history != null)
                message.can_view_history = Boolean(object.can_view_history);
            if (object.can_change_group_roles != null)
                message.can_change_group_roles = Boolean(object.can_change_group_roles);
            if (object.can_change_user_roles != null)
                message.can_change_user_roles = Boolean(object.can_change_user_roles);
            if (object.can_mention_all != null)
                message.can_mention_all = Boolean(object.can_mention_all);
            if (object.can_set_watching_broadcast != null)
                message.can_set_watching_broadcast = Boolean(object.can_set_watching_broadcast);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoleActions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoleActions
         * @static
         * @param {CChatRoleActions} message CChatRoleActions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoleActions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.role_id = options.longs === String ? "0" : 0;
                object.can_create_rename_delete_channel = false;
                object.can_kick = false;
                object.can_ban = false;
                object.can_invite = false;
                object.can_change_tagline_avatar_name = false;
                object.can_chat = false;
                object.can_view_history = false;
                object.can_change_group_roles = false;
                object.can_change_user_roles = false;
                object.can_mention_all = false;
                object.can_set_watching_broadcast = false;
            }
            if (message.role_id != null && message.hasOwnProperty("role_id"))
                if (typeof message.role_id === "number")
                    object.role_id = options.longs === String ? String(message.role_id) : message.role_id;
                else
                    object.role_id = options.longs === String ? $util.Long.prototype.toString.call(message.role_id) : options.longs === Number ? new $util.LongBits(message.role_id.low >>> 0, message.role_id.high >>> 0).toNumber(true) : message.role_id;
            if (message.can_create_rename_delete_channel != null && message.hasOwnProperty("can_create_rename_delete_channel"))
                object.can_create_rename_delete_channel = message.can_create_rename_delete_channel;
            if (message.can_kick != null && message.hasOwnProperty("can_kick"))
                object.can_kick = message.can_kick;
            if (message.can_ban != null && message.hasOwnProperty("can_ban"))
                object.can_ban = message.can_ban;
            if (message.can_invite != null && message.hasOwnProperty("can_invite"))
                object.can_invite = message.can_invite;
            if (message.can_change_tagline_avatar_name != null && message.hasOwnProperty("can_change_tagline_avatar_name"))
                object.can_change_tagline_avatar_name = message.can_change_tagline_avatar_name;
            if (message.can_chat != null && message.hasOwnProperty("can_chat"))
                object.can_chat = message.can_chat;
            if (message.can_view_history != null && message.hasOwnProperty("can_view_history"))
                object.can_view_history = message.can_view_history;
            if (message.can_change_group_roles != null && message.hasOwnProperty("can_change_group_roles"))
                object.can_change_group_roles = message.can_change_group_roles;
            if (message.can_change_user_roles != null && message.hasOwnProperty("can_change_user_roles"))
                object.can_change_user_roles = message.can_change_user_roles;
            if (message.can_mention_all != null && message.hasOwnProperty("can_mention_all"))
                object.can_mention_all = message.can_mention_all;
            if (message.can_set_watching_broadcast != null && message.hasOwnProperty("can_set_watching_broadcast"))
                object.can_set_watching_broadcast = message.can_set_watching_broadcast;
            return object;
        };
    
        /**
         * Converts this CChatRoleActions to JSON.
         * @function toJSON
         * @memberof CChatRoleActions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoleActions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoleActions;
    })();
    
    $root.CChatRoom_GetChatRoomGroupSummary_Response = (function() {
    
        /**
         * Properties of a CChatRoom_GetChatRoomGroupSummary_Response.
         * @exports ICChatRoom_GetChatRoomGroupSummary_Response
         * @interface ICChatRoom_GetChatRoomGroupSummary_Response
         * @property {number|Long|null} [chat_group_id] CChatRoom_GetChatRoomGroupSummary_Response chat_group_id
         * @property {string|null} [chat_group_name] CChatRoom_GetChatRoomGroupSummary_Response chat_group_name
         * @property {number|null} [active_member_count] CChatRoom_GetChatRoomGroupSummary_Response active_member_count
         * @property {number|null} [active_voice_member_count] CChatRoom_GetChatRoomGroupSummary_Response active_voice_member_count
         * @property {number|Long|null} [default_chat_id] CChatRoom_GetChatRoomGroupSummary_Response default_chat_id
         * @property {Array.<ICChatRoomState>|null} [chat_rooms] CChatRoom_GetChatRoomGroupSummary_Response chat_rooms
         * @property {number|null} [clanid] CChatRoom_GetChatRoomGroupSummary_Response clanid
         * @property {string|null} [chat_group_tagline] CChatRoom_GetChatRoomGroupSummary_Response chat_group_tagline
         * @property {number|null} [accountid_owner] CChatRoom_GetChatRoomGroupSummary_Response accountid_owner
         * @property {Array.<number>|null} [top_members] CChatRoom_GetChatRoomGroupSummary_Response top_members
         * @property {Uint8Array|null} [chat_group_avatar_sha] CChatRoom_GetChatRoomGroupSummary_Response chat_group_avatar_sha
         * @property {number|null} [rank] CChatRoom_GetChatRoomGroupSummary_Response rank
         * @property {number|Long|null} [default_role_id] CChatRoom_GetChatRoomGroupSummary_Response default_role_id
         * @property {Array.<number|Long>|null} [role_ids] CChatRoom_GetChatRoomGroupSummary_Response role_ids
         * @property {Array.<ICChatRoleActions>|null} [role_actions] CChatRoom_GetChatRoomGroupSummary_Response role_actions
         * @property {number|null} [watching_broadcast_accountid] CChatRoom_GetChatRoomGroupSummary_Response watching_broadcast_accountid
         * @property {number|null} [appid] CChatRoom_GetChatRoomGroupSummary_Response appid
         * @property {Array.<ICChatPartyBeacon>|null} [party_beacons] CChatRoom_GetChatRoomGroupSummary_Response party_beacons
         * @property {number|Long|null} [watching_broadcast_channel_id] CChatRoom_GetChatRoomGroupSummary_Response watching_broadcast_channel_id
         * @property {number|Long|null} [active_minigame_id] CChatRoom_GetChatRoomGroupSummary_Response active_minigame_id
         * @property {string|null} [avatar_ugc_url] CChatRoom_GetChatRoomGroupSummary_Response avatar_ugc_url
         * @property {boolean|null} [disabled] CChatRoom_GetChatRoomGroupSummary_Response disabled
         */
    
        /**
         * Constructs a new CChatRoom_GetChatRoomGroupSummary_Response.
         * @exports CChatRoom_GetChatRoomGroupSummary_Response
         * @classdesc Represents a CChatRoom_GetChatRoomGroupSummary_Response.
         * @implements ICChatRoom_GetChatRoomGroupSummary_Response
         * @constructor
         * @param {ICChatRoom_GetChatRoomGroupSummary_Response=} [properties] Properties to set
         */
        function CChatRoom_GetChatRoomGroupSummary_Response(properties) {
            this.chat_rooms = [];
            this.top_members = [];
            this.role_ids = [];
            this.role_actions = [];
            this.party_beacons = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response chat_group_name.
         * @member {string} chat_group_name
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.chat_group_name = "";
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response active_member_count.
         * @member {number} active_member_count
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.active_member_count = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response active_voice_member_count.
         * @member {number} active_voice_member_count
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.active_voice_member_count = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response default_chat_id.
         * @member {number|Long} default_chat_id
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.default_chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response chat_rooms.
         * @member {Array.<ICChatRoomState>} chat_rooms
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.chat_rooms = $util.emptyArray;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response clanid.
         * @member {number} clanid
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.clanid = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response chat_group_tagline.
         * @member {string} chat_group_tagline
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.chat_group_tagline = "";
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response accountid_owner.
         * @member {number} accountid_owner
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.accountid_owner = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response top_members.
         * @member {Array.<number>} top_members
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.top_members = $util.emptyArray;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response chat_group_avatar_sha.
         * @member {Uint8Array} chat_group_avatar_sha
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.chat_group_avatar_sha = $util.newBuffer([]);
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response rank.
         * @member {number} rank
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.rank = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response default_role_id.
         * @member {number|Long} default_role_id
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.default_role_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response role_ids.
         * @member {Array.<number|Long>} role_ids
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.role_ids = $util.emptyArray;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response role_actions.
         * @member {Array.<ICChatRoleActions>} role_actions
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.role_actions = $util.emptyArray;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response watching_broadcast_accountid.
         * @member {number} watching_broadcast_accountid
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.watching_broadcast_accountid = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response appid.
         * @member {number} appid
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.appid = 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response party_beacons.
         * @member {Array.<ICChatPartyBeacon>} party_beacons
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.party_beacons = $util.emptyArray;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response watching_broadcast_channel_id.
         * @member {number|Long} watching_broadcast_channel_id
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.watching_broadcast_channel_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response active_minigame_id.
         * @member {number|Long} active_minigame_id
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.active_minigame_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response avatar_ugc_url.
         * @member {string} avatar_ugc_url
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.avatar_ugc_url = "";
    
        /**
         * CChatRoom_GetChatRoomGroupSummary_Response disabled.
         * @member {boolean} disabled
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.disabled = false;
    
        /**
         * Creates a new CChatRoom_GetChatRoomGroupSummary_Response instance using the specified properties.
         * @function create
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupSummary_Response=} [properties] Properties to set
         * @returns {CChatRoom_GetChatRoomGroupSummary_Response} CChatRoom_GetChatRoomGroupSummary_Response instance
         */
        CChatRoom_GetChatRoomGroupSummary_Response.create = function create(properties) {
            return new CChatRoom_GetChatRoomGroupSummary_Response(properties);
        };
    
        /**
         * Encodes the specified CChatRoom_GetChatRoomGroupSummary_Response message. Does not implicitly {@link CChatRoom_GetChatRoomGroupSummary_Response.verify|verify} messages.
         * @function encode
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupSummary_Response} message CChatRoom_GetChatRoomGroupSummary_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetChatRoomGroupSummary_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_group_id);
            if (message.chat_group_name != null && message.hasOwnProperty("chat_group_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.chat_group_name);
            if (message.active_member_count != null && message.hasOwnProperty("active_member_count"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.active_member_count);
            if (message.active_voice_member_count != null && message.hasOwnProperty("active_voice_member_count"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.active_voice_member_count);
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.default_chat_id);
            if (message.chat_rooms != null && message.chat_rooms.length)
                for (var i = 0; i < message.chat_rooms.length; ++i)
                    $root.CChatRoomState.encode(message.chat_rooms[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.clanid);
            if (message.chat_group_tagline != null && message.hasOwnProperty("chat_group_tagline"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.chat_group_tagline);
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.accountid_owner);
            if (message.top_members != null && message.top_members.length)
                for (var i = 0; i < message.top_members.length; ++i)
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.top_members[i]);
            if (message.chat_group_avatar_sha != null && message.hasOwnProperty("chat_group_avatar_sha"))
                writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.chat_group_avatar_sha);
            if (message.rank != null && message.hasOwnProperty("rank"))
                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.rank);
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint64(message.default_role_id);
            if (message.role_ids != null && message.role_ids.length)
                for (var i = 0; i < message.role_ids.length; ++i)
                    writer.uint32(/* id 14, wireType 0 =*/112).uint64(message.role_ids[i]);
            if (message.role_actions != null && message.role_actions.length)
                for (var i = 0; i < message.role_actions.length; ++i)
                    $root.CChatRoleActions.encode(message.role_actions[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.watching_broadcast_accountid);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.appid);
            if (message.party_beacons != null && message.party_beacons.length)
                for (var i = 0; i < message.party_beacons.length; ++i)
                    $root.CChatPartyBeacon.encode(message.party_beacons[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint64(message.watching_broadcast_channel_id);
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint64(message.active_minigame_id);
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                writer.uint32(/* id 21, wireType 2 =*/170).string(message.avatar_ugc_url);
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                writer.uint32(/* id 22, wireType 0 =*/176).bool(message.disabled);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoom_GetChatRoomGroupSummary_Response message, length delimited. Does not implicitly {@link CChatRoom_GetChatRoomGroupSummary_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {ICChatRoom_GetChatRoomGroupSummary_Response} message CChatRoom_GetChatRoomGroupSummary_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoom_GetChatRoomGroupSummary_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoom_GetChatRoomGroupSummary_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoom_GetChatRoomGroupSummary_Response} CChatRoom_GetChatRoomGroupSummary_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetChatRoomGroupSummary_Response.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoom_GetChatRoomGroupSummary_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_group_id = reader.uint64();
                    break;
                case 2:
                    message.chat_group_name = reader.string();
                    break;
                case 3:
                    message.active_member_count = reader.uint32();
                    break;
                case 4:
                    message.active_voice_member_count = reader.uint32();
                    break;
                case 5:
                    message.default_chat_id = reader.uint64();
                    break;
                case 6:
                    if (!(message.chat_rooms && message.chat_rooms.length))
                        message.chat_rooms = [];
                    message.chat_rooms.push($root.CChatRoomState.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.clanid = reader.uint32();
                    break;
                case 8:
                    message.chat_group_tagline = reader.string();
                    break;
                case 9:
                    message.accountid_owner = reader.uint32();
                    break;
                case 10:
                    if (!(message.top_members && message.top_members.length))
                        message.top_members = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.top_members.push(reader.uint32());
                    } else
                        message.top_members.push(reader.uint32());
                    break;
                case 11:
                    message.chat_group_avatar_sha = reader.bytes();
                    break;
                case 12:
                    message.rank = reader.int32();
                    break;
                case 13:
                    message.default_role_id = reader.uint64();
                    break;
                case 14:
                    if (!(message.role_ids && message.role_ids.length))
                        message.role_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.role_ids.push(reader.uint64());
                    } else
                        message.role_ids.push(reader.uint64());
                    break;
                case 15:
                    if (!(message.role_actions && message.role_actions.length))
                        message.role_actions = [];
                    message.role_actions.push($root.CChatRoleActions.decode(reader, reader.uint32()));
                    break;
                case 16:
                    message.watching_broadcast_accountid = reader.uint32();
                    break;
                case 17:
                    message.appid = reader.uint32();
                    break;
                case 18:
                    if (!(message.party_beacons && message.party_beacons.length))
                        message.party_beacons = [];
                    message.party_beacons.push($root.CChatPartyBeacon.decode(reader, reader.uint32()));
                    break;
                case 19:
                    message.watching_broadcast_channel_id = reader.uint64();
                    break;
                case 20:
                    message.active_minigame_id = reader.uint64();
                    break;
                case 21:
                    message.avatar_ugc_url = reader.string();
                    break;
                case 22:
                    message.disabled = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoom_GetChatRoomGroupSummary_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoom_GetChatRoomGroupSummary_Response} CChatRoom_GetChatRoomGroupSummary_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoom_GetChatRoomGroupSummary_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoom_GetChatRoomGroupSummary_Response message.
         * @function verify
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoom_GetChatRoomGroupSummary_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            if (message.chat_group_name != null && message.hasOwnProperty("chat_group_name"))
                if (!$util.isString(message.chat_group_name))
                    return "chat_group_name: string expected";
            if (message.active_member_count != null && message.hasOwnProperty("active_member_count"))
                if (!$util.isInteger(message.active_member_count))
                    return "active_member_count: integer expected";
            if (message.active_voice_member_count != null && message.hasOwnProperty("active_voice_member_count"))
                if (!$util.isInteger(message.active_voice_member_count))
                    return "active_voice_member_count: integer expected";
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (!$util.isInteger(message.default_chat_id) && !(message.default_chat_id && $util.isInteger(message.default_chat_id.low) && $util.isInteger(message.default_chat_id.high)))
                    return "default_chat_id: integer|Long expected";
            if (message.chat_rooms != null && message.hasOwnProperty("chat_rooms")) {
                if (!Array.isArray(message.chat_rooms))
                    return "chat_rooms: array expected";
                for (var i = 0; i < message.chat_rooms.length; ++i) {
                    var error = $root.CChatRoomState.verify(message.chat_rooms[i]);
                    if (error)
                        return "chat_rooms." + error;
                }
            }
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid))
                    return "clanid: integer expected";
            if (message.chat_group_tagline != null && message.hasOwnProperty("chat_group_tagline"))
                if (!$util.isString(message.chat_group_tagline))
                    return "chat_group_tagline: string expected";
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                if (!$util.isInteger(message.accountid_owner))
                    return "accountid_owner: integer expected";
            if (message.top_members != null && message.hasOwnProperty("top_members")) {
                if (!Array.isArray(message.top_members))
                    return "top_members: array expected";
                for (var i = 0; i < message.top_members.length; ++i)
                    if (!$util.isInteger(message.top_members[i]))
                        return "top_members: integer[] expected";
            }
            if (message.chat_group_avatar_sha != null && message.hasOwnProperty("chat_group_avatar_sha"))
                if (!(message.chat_group_avatar_sha && typeof message.chat_group_avatar_sha.length === "number" || $util.isString(message.chat_group_avatar_sha)))
                    return "chat_group_avatar_sha: buffer expected";
            if (message.rank != null && message.hasOwnProperty("rank"))
                if (!$util.isInteger(message.rank))
                    return "rank: integer expected";
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                if (!$util.isInteger(message.default_role_id) && !(message.default_role_id && $util.isInteger(message.default_role_id.low) && $util.isInteger(message.default_role_id.high)))
                    return "default_role_id: integer|Long expected";
            if (message.role_ids != null && message.hasOwnProperty("role_ids")) {
                if (!Array.isArray(message.role_ids))
                    return "role_ids: array expected";
                for (var i = 0; i < message.role_ids.length; ++i)
                    if (!$util.isInteger(message.role_ids[i]) && !(message.role_ids[i] && $util.isInteger(message.role_ids[i].low) && $util.isInteger(message.role_ids[i].high)))
                        return "role_ids: integer|Long[] expected";
            }
            if (message.role_actions != null && message.hasOwnProperty("role_actions")) {
                if (!Array.isArray(message.role_actions))
                    return "role_actions: array expected";
                for (var i = 0; i < message.role_actions.length; ++i) {
                    var error = $root.CChatRoleActions.verify(message.role_actions[i]);
                    if (error)
                        return "role_actions." + error;
                }
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                if (!$util.isInteger(message.watching_broadcast_accountid))
                    return "watching_broadcast_accountid: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.party_beacons != null && message.hasOwnProperty("party_beacons")) {
                if (!Array.isArray(message.party_beacons))
                    return "party_beacons: array expected";
                for (var i = 0; i < message.party_beacons.length; ++i) {
                    var error = $root.CChatPartyBeacon.verify(message.party_beacons[i]);
                    if (error)
                        return "party_beacons." + error;
                }
            }
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (!$util.isInteger(message.watching_broadcast_channel_id) && !(message.watching_broadcast_channel_id && $util.isInteger(message.watching_broadcast_channel_id.low) && $util.isInteger(message.watching_broadcast_channel_id.high)))
                    return "watching_broadcast_channel_id: integer|Long expected";
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                if (!$util.isInteger(message.active_minigame_id) && !(message.active_minigame_id && $util.isInteger(message.active_minigame_id.low) && $util.isInteger(message.active_minigame_id.high)))
                    return "active_minigame_id: integer|Long expected";
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                if (!$util.isString(message.avatar_ugc_url))
                    return "avatar_ugc_url: string expected";
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                if (typeof message.disabled !== "boolean")
                    return "disabled: boolean expected";
            return null;
        };
    
        /**
         * Creates a CChatRoom_GetChatRoomGroupSummary_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoom_GetChatRoomGroupSummary_Response} CChatRoom_GetChatRoomGroupSummary_Response
         */
        CChatRoom_GetChatRoomGroupSummary_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoom_GetChatRoomGroupSummary_Response)
                return object;
            var message = new $root.CChatRoom_GetChatRoomGroupSummary_Response();
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            if (object.chat_group_name != null)
                message.chat_group_name = String(object.chat_group_name);
            if (object.active_member_count != null)
                message.active_member_count = object.active_member_count >>> 0;
            if (object.active_voice_member_count != null)
                message.active_voice_member_count = object.active_voice_member_count >>> 0;
            if (object.default_chat_id != null)
                if ($util.Long)
                    (message.default_chat_id = $util.Long.fromValue(object.default_chat_id)).unsigned = true;
                else if (typeof object.default_chat_id === "string")
                    message.default_chat_id = parseInt(object.default_chat_id, 10);
                else if (typeof object.default_chat_id === "number")
                    message.default_chat_id = object.default_chat_id;
                else if (typeof object.default_chat_id === "object")
                    message.default_chat_id = new $util.LongBits(object.default_chat_id.low >>> 0, object.default_chat_id.high >>> 0).toNumber(true);
            if (object.chat_rooms) {
                if (!Array.isArray(object.chat_rooms))
                    throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms: array expected");
                message.chat_rooms = [];
                for (var i = 0; i < object.chat_rooms.length; ++i) {
                    if (typeof object.chat_rooms[i] !== "object")
                        throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.chat_rooms: object expected");
                    message.chat_rooms[i] = $root.CChatRoomState.fromObject(object.chat_rooms[i]);
                }
            }
            if (object.clanid != null)
                message.clanid = object.clanid >>> 0;
            if (object.chat_group_tagline != null)
                message.chat_group_tagline = String(object.chat_group_tagline);
            if (object.accountid_owner != null)
                message.accountid_owner = object.accountid_owner >>> 0;
            if (object.top_members) {
                if (!Array.isArray(object.top_members))
                    throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.top_members: array expected");
                message.top_members = [];
                for (var i = 0; i < object.top_members.length; ++i)
                    message.top_members[i] = object.top_members[i] >>> 0;
            }
            if (object.chat_group_avatar_sha != null)
                if (typeof object.chat_group_avatar_sha === "string")
                    $util.base64.decode(object.chat_group_avatar_sha, message.chat_group_avatar_sha = $util.newBuffer($util.base64.length(object.chat_group_avatar_sha)), 0);
                else if (object.chat_group_avatar_sha.length)
                    message.chat_group_avatar_sha = object.chat_group_avatar_sha;
            if (object.rank != null)
                message.rank = object.rank | 0;
            if (object.default_role_id != null)
                if ($util.Long)
                    (message.default_role_id = $util.Long.fromValue(object.default_role_id)).unsigned = true;
                else if (typeof object.default_role_id === "string")
                    message.default_role_id = parseInt(object.default_role_id, 10);
                else if (typeof object.default_role_id === "number")
                    message.default_role_id = object.default_role_id;
                else if (typeof object.default_role_id === "object")
                    message.default_role_id = new $util.LongBits(object.default_role_id.low >>> 0, object.default_role_id.high >>> 0).toNumber(true);
            if (object.role_ids) {
                if (!Array.isArray(object.role_ids))
                    throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.role_ids: array expected");
                message.role_ids = [];
                for (var i = 0; i < object.role_ids.length; ++i)
                    if ($util.Long)
                        (message.role_ids[i] = $util.Long.fromValue(object.role_ids[i])).unsigned = true;
                    else if (typeof object.role_ids[i] === "string")
                        message.role_ids[i] = parseInt(object.role_ids[i], 10);
                    else if (typeof object.role_ids[i] === "number")
                        message.role_ids[i] = object.role_ids[i];
                    else if (typeof object.role_ids[i] === "object")
                        message.role_ids[i] = new $util.LongBits(object.role_ids[i].low >>> 0, object.role_ids[i].high >>> 0).toNumber(true);
            }
            if (object.role_actions) {
                if (!Array.isArray(object.role_actions))
                    throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.role_actions: array expected");
                message.role_actions = [];
                for (var i = 0; i < object.role_actions.length; ++i) {
                    if (typeof object.role_actions[i] !== "object")
                        throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.role_actions: object expected");
                    message.role_actions[i] = $root.CChatRoleActions.fromObject(object.role_actions[i]);
                }
            }
            if (object.watching_broadcast_accountid != null)
                message.watching_broadcast_accountid = object.watching_broadcast_accountid >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.party_beacons) {
                if (!Array.isArray(object.party_beacons))
                    throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.party_beacons: array expected");
                message.party_beacons = [];
                for (var i = 0; i < object.party_beacons.length; ++i) {
                    if (typeof object.party_beacons[i] !== "object")
                        throw TypeError(".CChatRoom_GetChatRoomGroupSummary_Response.party_beacons: object expected");
                    message.party_beacons[i] = $root.CChatPartyBeacon.fromObject(object.party_beacons[i]);
                }
            }
            if (object.watching_broadcast_channel_id != null)
                if ($util.Long)
                    (message.watching_broadcast_channel_id = $util.Long.fromValue(object.watching_broadcast_channel_id)).unsigned = true;
                else if (typeof object.watching_broadcast_channel_id === "string")
                    message.watching_broadcast_channel_id = parseInt(object.watching_broadcast_channel_id, 10);
                else if (typeof object.watching_broadcast_channel_id === "number")
                    message.watching_broadcast_channel_id = object.watching_broadcast_channel_id;
                else if (typeof object.watching_broadcast_channel_id === "object")
                    message.watching_broadcast_channel_id = new $util.LongBits(object.watching_broadcast_channel_id.low >>> 0, object.watching_broadcast_channel_id.high >>> 0).toNumber(true);
            if (object.active_minigame_id != null)
                if ($util.Long)
                    (message.active_minigame_id = $util.Long.fromValue(object.active_minigame_id)).unsigned = true;
                else if (typeof object.active_minigame_id === "string")
                    message.active_minigame_id = parseInt(object.active_minigame_id, 10);
                else if (typeof object.active_minigame_id === "number")
                    message.active_minigame_id = object.active_minigame_id;
                else if (typeof object.active_minigame_id === "object")
                    message.active_minigame_id = new $util.LongBits(object.active_minigame_id.low >>> 0, object.active_minigame_id.high >>> 0).toNumber(true);
            if (object.avatar_ugc_url != null)
                message.avatar_ugc_url = String(object.avatar_ugc_url);
            if (object.disabled != null)
                message.disabled = Boolean(object.disabled);
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoom_GetChatRoomGroupSummary_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @static
         * @param {CChatRoom_GetChatRoomGroupSummary_Response} message CChatRoom_GetChatRoomGroupSummary_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoom_GetChatRoomGroupSummary_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.chat_rooms = [];
                object.top_members = [];
                object.role_ids = [];
                object.role_actions = [];
                object.party_beacons = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
                object.chat_group_name = "";
                object.active_member_count = 0;
                object.active_voice_member_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.default_chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.default_chat_id = options.longs === String ? "0" : 0;
                object.clanid = 0;
                object.chat_group_tagline = "";
                object.accountid_owner = 0;
                if (options.bytes === String)
                    object.chat_group_avatar_sha = "";
                else {
                    object.chat_group_avatar_sha = [];
                    if (options.bytes !== Array)
                        object.chat_group_avatar_sha = $util.newBuffer(object.chat_group_avatar_sha);
                }
                object.rank = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.default_role_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.default_role_id = options.longs === String ? "0" : 0;
                object.watching_broadcast_accountid = 0;
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.watching_broadcast_channel_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.watching_broadcast_channel_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.active_minigame_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.active_minigame_id = options.longs === String ? "0" : 0;
                object.avatar_ugc_url = "";
                object.disabled = false;
            }
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            if (message.chat_group_name != null && message.hasOwnProperty("chat_group_name"))
                object.chat_group_name = message.chat_group_name;
            if (message.active_member_count != null && message.hasOwnProperty("active_member_count"))
                object.active_member_count = message.active_member_count;
            if (message.active_voice_member_count != null && message.hasOwnProperty("active_voice_member_count"))
                object.active_voice_member_count = message.active_voice_member_count;
            if (message.default_chat_id != null && message.hasOwnProperty("default_chat_id"))
                if (typeof message.default_chat_id === "number")
                    object.default_chat_id = options.longs === String ? String(message.default_chat_id) : message.default_chat_id;
                else
                    object.default_chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.default_chat_id) : options.longs === Number ? new $util.LongBits(message.default_chat_id.low >>> 0, message.default_chat_id.high >>> 0).toNumber(true) : message.default_chat_id;
            if (message.chat_rooms && message.chat_rooms.length) {
                object.chat_rooms = [];
                for (var j = 0; j < message.chat_rooms.length; ++j)
                    object.chat_rooms[j] = $root.CChatRoomState.toObject(message.chat_rooms[j], options);
            }
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                object.clanid = message.clanid;
            if (message.chat_group_tagline != null && message.hasOwnProperty("chat_group_tagline"))
                object.chat_group_tagline = message.chat_group_tagline;
            if (message.accountid_owner != null && message.hasOwnProperty("accountid_owner"))
                object.accountid_owner = message.accountid_owner;
            if (message.top_members && message.top_members.length) {
                object.top_members = [];
                for (var j = 0; j < message.top_members.length; ++j)
                    object.top_members[j] = message.top_members[j];
            }
            if (message.chat_group_avatar_sha != null && message.hasOwnProperty("chat_group_avatar_sha"))
                object.chat_group_avatar_sha = options.bytes === String ? $util.base64.encode(message.chat_group_avatar_sha, 0, message.chat_group_avatar_sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.chat_group_avatar_sha) : message.chat_group_avatar_sha;
            if (message.rank != null && message.hasOwnProperty("rank"))
                object.rank = message.rank;
            if (message.default_role_id != null && message.hasOwnProperty("default_role_id"))
                if (typeof message.default_role_id === "number")
                    object.default_role_id = options.longs === String ? String(message.default_role_id) : message.default_role_id;
                else
                    object.default_role_id = options.longs === String ? $util.Long.prototype.toString.call(message.default_role_id) : options.longs === Number ? new $util.LongBits(message.default_role_id.low >>> 0, message.default_role_id.high >>> 0).toNumber(true) : message.default_role_id;
            if (message.role_ids && message.role_ids.length) {
                object.role_ids = [];
                for (var j = 0; j < message.role_ids.length; ++j)
                    if (typeof message.role_ids[j] === "number")
                        object.role_ids[j] = options.longs === String ? String(message.role_ids[j]) : message.role_ids[j];
                    else
                        object.role_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.role_ids[j]) : options.longs === Number ? new $util.LongBits(message.role_ids[j].low >>> 0, message.role_ids[j].high >>> 0).toNumber(true) : message.role_ids[j];
            }
            if (message.role_actions && message.role_actions.length) {
                object.role_actions = [];
                for (var j = 0; j < message.role_actions.length; ++j)
                    object.role_actions[j] = $root.CChatRoleActions.toObject(message.role_actions[j], options);
            }
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                object.watching_broadcast_accountid = message.watching_broadcast_accountid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.party_beacons && message.party_beacons.length) {
                object.party_beacons = [];
                for (var j = 0; j < message.party_beacons.length; ++j)
                    object.party_beacons[j] = $root.CChatPartyBeacon.toObject(message.party_beacons[j], options);
            }
            if (message.watching_broadcast_channel_id != null && message.hasOwnProperty("watching_broadcast_channel_id"))
                if (typeof message.watching_broadcast_channel_id === "number")
                    object.watching_broadcast_channel_id = options.longs === String ? String(message.watching_broadcast_channel_id) : message.watching_broadcast_channel_id;
                else
                    object.watching_broadcast_channel_id = options.longs === String ? $util.Long.prototype.toString.call(message.watching_broadcast_channel_id) : options.longs === Number ? new $util.LongBits(message.watching_broadcast_channel_id.low >>> 0, message.watching_broadcast_channel_id.high >>> 0).toNumber(true) : message.watching_broadcast_channel_id;
            if (message.active_minigame_id != null && message.hasOwnProperty("active_minigame_id"))
                if (typeof message.active_minigame_id === "number")
                    object.active_minigame_id = options.longs === String ? String(message.active_minigame_id) : message.active_minigame_id;
                else
                    object.active_minigame_id = options.longs === String ? $util.Long.prototype.toString.call(message.active_minigame_id) : options.longs === Number ? new $util.LongBits(message.active_minigame_id.low >>> 0, message.active_minigame_id.high >>> 0).toNumber(true) : message.active_minigame_id;
            if (message.avatar_ugc_url != null && message.hasOwnProperty("avatar_ugc_url"))
                object.avatar_ugc_url = message.avatar_ugc_url;
            if (message.disabled != null && message.hasOwnProperty("disabled"))
                object.disabled = message.disabled;
            return object;
        };
    
        /**
         * Converts this CChatRoom_GetChatRoomGroupSummary_Response to JSON.
         * @function toJSON
         * @memberof CChatRoom_GetChatRoomGroupSummary_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoom_GetChatRoomGroupSummary_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoom_GetChatRoomGroupSummary_Response;
    })();
    
    $root.CChatRoomState = (function() {
    
        /**
         * Properties of a CChatRoomState.
         * @exports ICChatRoomState
         * @interface ICChatRoomState
         * @property {number|Long|null} [chat_id] CChatRoomState chat_id
         * @property {string|null} [chat_name] CChatRoomState chat_name
         * @property {boolean|null} [voice_allowed] CChatRoomState voice_allowed
         * @property {Array.<number>|null} [members_in_voice] CChatRoomState members_in_voice
         * @property {number|null} [time_last_message] CChatRoomState time_last_message
         * @property {number|null} [sort_order] CChatRoomState sort_order
         * @property {string|null} [last_message] CChatRoomState last_message
         * @property {number|null} [accountid_last_message] CChatRoomState accountid_last_message
         */
    
        /**
         * Constructs a new CChatRoomState.
         * @exports CChatRoomState
         * @classdesc Represents a CChatRoomState.
         * @implements ICChatRoomState
         * @constructor
         * @param {ICChatRoomState=} [properties] Properties to set
         */
        function CChatRoomState(properties) {
            this.members_in_voice = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChatRoomState chat_id.
         * @member {number|Long} chat_id
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.chat_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CChatRoomState chat_name.
         * @member {string} chat_name
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.chat_name = "";
    
        /**
         * CChatRoomState voice_allowed.
         * @member {boolean} voice_allowed
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.voice_allowed = false;
    
        /**
         * CChatRoomState members_in_voice.
         * @member {Array.<number>} members_in_voice
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.members_in_voice = $util.emptyArray;
    
        /**
         * CChatRoomState time_last_message.
         * @member {number} time_last_message
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.time_last_message = 0;
    
        /**
         * CChatRoomState sort_order.
         * @member {number} sort_order
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.sort_order = 0;
    
        /**
         * CChatRoomState last_message.
         * @member {string} last_message
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.last_message = "";
    
        /**
         * CChatRoomState accountid_last_message.
         * @member {number} accountid_last_message
         * @memberof CChatRoomState
         * @instance
         */
        CChatRoomState.prototype.accountid_last_message = 0;
    
        /**
         * Creates a new CChatRoomState instance using the specified properties.
         * @function create
         * @memberof CChatRoomState
         * @static
         * @param {ICChatRoomState=} [properties] Properties to set
         * @returns {CChatRoomState} CChatRoomState instance
         */
        CChatRoomState.create = function create(properties) {
            return new CChatRoomState(properties);
        };
    
        /**
         * Encodes the specified CChatRoomState message. Does not implicitly {@link CChatRoomState.verify|verify} messages.
         * @function encode
         * @memberof CChatRoomState
         * @static
         * @param {ICChatRoomState} message CChatRoomState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.chat_id);
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.chat_name);
            if (message.voice_allowed != null && message.hasOwnProperty("voice_allowed"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.voice_allowed);
            if (message.members_in_voice != null && message.members_in_voice.length)
                for (var i = 0; i < message.members_in_voice.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.members_in_voice[i]);
            if (message.time_last_message != null && message.hasOwnProperty("time_last_message"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time_last_message);
            if (message.sort_order != null && message.hasOwnProperty("sort_order"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.sort_order);
            if (message.last_message != null && message.hasOwnProperty("last_message"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.last_message);
            if (message.accountid_last_message != null && message.hasOwnProperty("accountid_last_message"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.accountid_last_message);
            return writer;
        };
    
        /**
         * Encodes the specified CChatRoomState message, length delimited. Does not implicitly {@link CChatRoomState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChatRoomState
         * @static
         * @param {ICChatRoomState} message CChatRoomState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChatRoomState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChatRoomState message from the specified reader or buffer.
         * @function decode
         * @memberof CChatRoomState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChatRoomState} CChatRoomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChatRoomState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.chat_id = reader.uint64();
                    break;
                case 2:
                    message.chat_name = reader.string();
                    break;
                case 3:
                    message.voice_allowed = reader.bool();
                    break;
                case 4:
                    if (!(message.members_in_voice && message.members_in_voice.length))
                        message.members_in_voice = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.members_in_voice.push(reader.uint32());
                    } else
                        message.members_in_voice.push(reader.uint32());
                    break;
                case 5:
                    message.time_last_message = reader.uint32();
                    break;
                case 6:
                    message.sort_order = reader.uint32();
                    break;
                case 7:
                    message.last_message = reader.string();
                    break;
                case 8:
                    message.accountid_last_message = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChatRoomState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChatRoomState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChatRoomState} CChatRoomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChatRoomState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChatRoomState message.
         * @function verify
         * @memberof CChatRoomState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChatRoomState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (!$util.isInteger(message.chat_id) && !(message.chat_id && $util.isInteger(message.chat_id.low) && $util.isInteger(message.chat_id.high)))
                    return "chat_id: integer|Long expected";
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                if (!$util.isString(message.chat_name))
                    return "chat_name: string expected";
            if (message.voice_allowed != null && message.hasOwnProperty("voice_allowed"))
                if (typeof message.voice_allowed !== "boolean")
                    return "voice_allowed: boolean expected";
            if (message.members_in_voice != null && message.hasOwnProperty("members_in_voice")) {
                if (!Array.isArray(message.members_in_voice))
                    return "members_in_voice: array expected";
                for (var i = 0; i < message.members_in_voice.length; ++i)
                    if (!$util.isInteger(message.members_in_voice[i]))
                        return "members_in_voice: integer[] expected";
            }
            if (message.time_last_message != null && message.hasOwnProperty("time_last_message"))
                if (!$util.isInteger(message.time_last_message))
                    return "time_last_message: integer expected";
            if (message.sort_order != null && message.hasOwnProperty("sort_order"))
                if (!$util.isInteger(message.sort_order))
                    return "sort_order: integer expected";
            if (message.last_message != null && message.hasOwnProperty("last_message"))
                if (!$util.isString(message.last_message))
                    return "last_message: string expected";
            if (message.accountid_last_message != null && message.hasOwnProperty("accountid_last_message"))
                if (!$util.isInteger(message.accountid_last_message))
                    return "accountid_last_message: integer expected";
            return null;
        };
    
        /**
         * Creates a CChatRoomState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChatRoomState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChatRoomState} CChatRoomState
         */
        CChatRoomState.fromObject = function fromObject(object) {
            if (object instanceof $root.CChatRoomState)
                return object;
            var message = new $root.CChatRoomState();
            if (object.chat_id != null)
                if ($util.Long)
                    (message.chat_id = $util.Long.fromValue(object.chat_id)).unsigned = true;
                else if (typeof object.chat_id === "string")
                    message.chat_id = parseInt(object.chat_id, 10);
                else if (typeof object.chat_id === "number")
                    message.chat_id = object.chat_id;
                else if (typeof object.chat_id === "object")
                    message.chat_id = new $util.LongBits(object.chat_id.low >>> 0, object.chat_id.high >>> 0).toNumber(true);
            if (object.chat_name != null)
                message.chat_name = String(object.chat_name);
            if (object.voice_allowed != null)
                message.voice_allowed = Boolean(object.voice_allowed);
            if (object.members_in_voice) {
                if (!Array.isArray(object.members_in_voice))
                    throw TypeError(".CChatRoomState.members_in_voice: array expected");
                message.members_in_voice = [];
                for (var i = 0; i < object.members_in_voice.length; ++i)
                    message.members_in_voice[i] = object.members_in_voice[i] >>> 0;
            }
            if (object.time_last_message != null)
                message.time_last_message = object.time_last_message >>> 0;
            if (object.sort_order != null)
                message.sort_order = object.sort_order >>> 0;
            if (object.last_message != null)
                message.last_message = String(object.last_message);
            if (object.accountid_last_message != null)
                message.accountid_last_message = object.accountid_last_message >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CChatRoomState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChatRoomState
         * @static
         * @param {CChatRoomState} message CChatRoomState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChatRoomState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.members_in_voice = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_id = options.longs === String ? "0" : 0;
                object.chat_name = "";
                object.voice_allowed = false;
                object.time_last_message = 0;
                object.sort_order = 0;
                object.last_message = "";
                object.accountid_last_message = 0;
            }
            if (message.chat_id != null && message.hasOwnProperty("chat_id"))
                if (typeof message.chat_id === "number")
                    object.chat_id = options.longs === String ? String(message.chat_id) : message.chat_id;
                else
                    object.chat_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_id) : options.longs === Number ? new $util.LongBits(message.chat_id.low >>> 0, message.chat_id.high >>> 0).toNumber(true) : message.chat_id;
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                object.chat_name = message.chat_name;
            if (message.voice_allowed != null && message.hasOwnProperty("voice_allowed"))
                object.voice_allowed = message.voice_allowed;
            if (message.members_in_voice && message.members_in_voice.length) {
                object.members_in_voice = [];
                for (var j = 0; j < message.members_in_voice.length; ++j)
                    object.members_in_voice[j] = message.members_in_voice[j];
            }
            if (message.time_last_message != null && message.hasOwnProperty("time_last_message"))
                object.time_last_message = message.time_last_message;
            if (message.sort_order != null && message.hasOwnProperty("sort_order"))
                object.sort_order = message.sort_order;
            if (message.last_message != null && message.hasOwnProperty("last_message"))
                object.last_message = message.last_message;
            if (message.accountid_last_message != null && message.hasOwnProperty("accountid_last_message"))
                object.accountid_last_message = message.accountid_last_message;
            return object;
        };
    
        /**
         * Converts this CChatRoomState to JSON.
         * @function toJSON
         * @memberof CChatRoomState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChatRoomState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CChatRoomState;
    })();
    
    $root.CMsgAuthTicket = (function() {
    
        /**
         * Properties of a CMsgAuthTicket.
         * @exports ICMsgAuthTicket
         * @interface ICMsgAuthTicket
         * @property {number|null} [estate] CMsgAuthTicket estate
         * @property {number|null} [eresult] CMsgAuthTicket eresult
         * @property {number|Long|null} [steamid] CMsgAuthTicket steamid
         * @property {number|Long|null} [gameid] CMsgAuthTicket gameid
         * @property {number|null} [h_steam_pipe] CMsgAuthTicket h_steam_pipe
         * @property {number|null} [ticket_crc] CMsgAuthTicket ticket_crc
         * @property {Uint8Array|null} [ticket] CMsgAuthTicket ticket
         */
    
        /**
         * Constructs a new CMsgAuthTicket.
         * @exports CMsgAuthTicket
         * @classdesc Represents a CMsgAuthTicket.
         * @implements ICMsgAuthTicket
         * @constructor
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         */
        function CMsgAuthTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAuthTicket estate.
         * @member {number} estate
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.estate = 0;
    
        /**
         * CMsgAuthTicket eresult.
         * @member {number} eresult
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.eresult = 2;
    
        /**
         * CMsgAuthTicket steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket gameid.
         * @member {number|Long} gameid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket h_steam_pipe.
         * @member {number} h_steam_pipe
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.h_steam_pipe = 0;
    
        /**
         * CMsgAuthTicket ticket_crc.
         * @member {number} ticket_crc
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket_crc = 0;
    
        /**
         * CMsgAuthTicket ticket.
         * @member {Uint8Array} ticket
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgAuthTicket instance using the specified properties.
         * @function create
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         * @returns {CMsgAuthTicket} CMsgAuthTicket instance
         */
        CMsgAuthTicket.create = function create(properties) {
            return new CMsgAuthTicket(properties);
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encode
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.estate != null && message.hasOwnProperty("estate"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.estate);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid);
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.gameid);
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.h_steam_pipe);
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ticket_crc);
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.ticket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message, length delimited. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAuthTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.estate = reader.uint32();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.steamid = reader.fixed64();
                    break;
                case 4:
                    message.gameid = reader.fixed64();
                    break;
                case 5:
                    message.h_steam_pipe = reader.uint32();
                    break;
                case 6:
                    message.ticket_crc = reader.uint32();
                    break;
                case 7:
                    message.ticket = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAuthTicket message.
         * @function verify
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAuthTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.estate != null && message.hasOwnProperty("estate"))
                if (!$util.isInteger(message.estate))
                    return "estate: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                if (!$util.isInteger(message.h_steam_pipe))
                    return "h_steam_pipe: integer expected";
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                if (!$util.isInteger(message.ticket_crc))
                    return "ticket_crc: integer expected";
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                if (!(message.ticket && typeof message.ticket.length === "number" || $util.isString(message.ticket)))
                    return "ticket: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAuthTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         */
        CMsgAuthTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAuthTicket)
                return object;
            var message = new $root.CMsgAuthTicket();
            if (object.estate != null)
                message.estate = object.estate >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = false;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber();
            if (object.h_steam_pipe != null)
                message.h_steam_pipe = object.h_steam_pipe >>> 0;
            if (object.ticket_crc != null)
                message.ticket_crc = object.ticket_crc >>> 0;
            if (object.ticket != null)
                if (typeof object.ticket === "string")
                    $util.base64.decode(object.ticket, message.ticket = $util.newBuffer($util.base64.length(object.ticket)), 0);
                else if (object.ticket.length)
                    message.ticket = object.ticket;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAuthTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {CMsgAuthTicket} message CMsgAuthTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAuthTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.estate = 0;
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                object.h_steam_pipe = 0;
                object.ticket_crc = 0;
                if (options.bytes === String)
                    object.ticket = "";
                else {
                    object.ticket = [];
                    if (options.bytes !== Array)
                        object.ticket = $util.newBuffer(object.ticket);
                }
            }
            if (message.estate != null && message.hasOwnProperty("estate"))
                object.estate = message.estate;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber() : message.gameid;
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                object.h_steam_pipe = message.h_steam_pipe;
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                object.ticket_crc = message.ticket_crc;
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                object.ticket = options.bytes === String ? $util.base64.encode(message.ticket, 0, message.ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.ticket) : message.ticket;
            return object;
        };
    
        /**
         * Converts this CMsgAuthTicket to JSON.
         * @function toJSON
         * @memberof CMsgAuthTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAuthTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAuthTicket;
    })();
    
    $root.CMsgClientAccountInfo = (function() {
    
        /**
         * Properties of a CMsgClientAccountInfo.
         * @exports ICMsgClientAccountInfo
         * @interface ICMsgClientAccountInfo
         * @property {string|null} [persona_name] CMsgClientAccountInfo persona_name
         * @property {string|null} [ip_country] CMsgClientAccountInfo ip_country
         * @property {number|null} [count_authed_computers] CMsgClientAccountInfo count_authed_computers
         * @property {number|null} [account_flags] CMsgClientAccountInfo account_flags
         * @property {number|Long|null} [facebook_id] CMsgClientAccountInfo facebook_id
         * @property {string|null} [facebook_name] CMsgClientAccountInfo facebook_name
         * @property {boolean|null} [steamguard_notify_newmachines] CMsgClientAccountInfo steamguard_notify_newmachines
         * @property {string|null} [steamguard_machine_name_user_chosen] CMsgClientAccountInfo steamguard_machine_name_user_chosen
         * @property {boolean|null} [is_phone_verified] CMsgClientAccountInfo is_phone_verified
         * @property {number|null} [two_factor_state] CMsgClientAccountInfo two_factor_state
         * @property {boolean|null} [is_phone_identifying] CMsgClientAccountInfo is_phone_identifying
         * @property {boolean|null} [is_phone_needing_reverify] CMsgClientAccountInfo is_phone_needing_reverify
         */
    
        /**
         * Constructs a new CMsgClientAccountInfo.
         * @exports CMsgClientAccountInfo
         * @classdesc Represents a CMsgClientAccountInfo.
         * @implements ICMsgClientAccountInfo
         * @constructor
         * @param {ICMsgClientAccountInfo=} [properties] Properties to set
         */
        function CMsgClientAccountInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAccountInfo persona_name.
         * @member {string} persona_name
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.persona_name = "";
    
        /**
         * CMsgClientAccountInfo ip_country.
         * @member {string} ip_country
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.ip_country = "";
    
        /**
         * CMsgClientAccountInfo count_authed_computers.
         * @member {number} count_authed_computers
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.count_authed_computers = 0;
    
        /**
         * CMsgClientAccountInfo account_flags.
         * @member {number} account_flags
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.account_flags = 0;
    
        /**
         * CMsgClientAccountInfo facebook_id.
         * @member {number|Long} facebook_id
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.facebook_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientAccountInfo facebook_name.
         * @member {string} facebook_name
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.facebook_name = "";
    
        /**
         * CMsgClientAccountInfo steamguard_notify_newmachines.
         * @member {boolean} steamguard_notify_newmachines
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.steamguard_notify_newmachines = false;
    
        /**
         * CMsgClientAccountInfo steamguard_machine_name_user_chosen.
         * @member {string} steamguard_machine_name_user_chosen
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.steamguard_machine_name_user_chosen = "";
    
        /**
         * CMsgClientAccountInfo is_phone_verified.
         * @member {boolean} is_phone_verified
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.is_phone_verified = false;
    
        /**
         * CMsgClientAccountInfo two_factor_state.
         * @member {number} two_factor_state
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.two_factor_state = 0;
    
        /**
         * CMsgClientAccountInfo is_phone_identifying.
         * @member {boolean} is_phone_identifying
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.is_phone_identifying = false;
    
        /**
         * CMsgClientAccountInfo is_phone_needing_reverify.
         * @member {boolean} is_phone_needing_reverify
         * @memberof CMsgClientAccountInfo
         * @instance
         */
        CMsgClientAccountInfo.prototype.is_phone_needing_reverify = false;
    
        /**
         * Creates a new CMsgClientAccountInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {ICMsgClientAccountInfo=} [properties] Properties to set
         * @returns {CMsgClientAccountInfo} CMsgClientAccountInfo instance
         */
        CMsgClientAccountInfo.create = function create(properties) {
            return new CMsgClientAccountInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAccountInfo message. Does not implicitly {@link CMsgClientAccountInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {ICMsgClientAccountInfo} message CMsgClientAccountInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAccountInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.persona_name);
            if (message.ip_country != null && message.hasOwnProperty("ip_country"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ip_country);
            if (message.count_authed_computers != null && message.hasOwnProperty("count_authed_computers"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.count_authed_computers);
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.account_flags);
            if (message.facebook_id != null && message.hasOwnProperty("facebook_id"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.facebook_id);
            if (message.facebook_name != null && message.hasOwnProperty("facebook_name"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.facebook_name);
            if (message.steamguard_notify_newmachines != null && message.hasOwnProperty("steamguard_notify_newmachines"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.steamguard_notify_newmachines);
            if (message.steamguard_machine_name_user_chosen != null && message.hasOwnProperty("steamguard_machine_name_user_chosen"))
                writer.uint32(/* id 15, wireType 2 =*/122).string(message.steamguard_machine_name_user_chosen);
            if (message.is_phone_verified != null && message.hasOwnProperty("is_phone_verified"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.is_phone_verified);
            if (message.two_factor_state != null && message.hasOwnProperty("two_factor_state"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.two_factor_state);
            if (message.is_phone_identifying != null && message.hasOwnProperty("is_phone_identifying"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.is_phone_identifying);
            if (message.is_phone_needing_reverify != null && message.hasOwnProperty("is_phone_needing_reverify"))
                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.is_phone_needing_reverify);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAccountInfo message, length delimited. Does not implicitly {@link CMsgClientAccountInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {ICMsgClientAccountInfo} message CMsgClientAccountInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAccountInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAccountInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAccountInfo} CMsgClientAccountInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAccountInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAccountInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.persona_name = reader.string();
                    break;
                case 2:
                    message.ip_country = reader.string();
                    break;
                case 5:
                    message.count_authed_computers = reader.int32();
                    break;
                case 7:
                    message.account_flags = reader.uint32();
                    break;
                case 8:
                    message.facebook_id = reader.uint64();
                    break;
                case 9:
                    message.facebook_name = reader.string();
                    break;
                case 14:
                    message.steamguard_notify_newmachines = reader.bool();
                    break;
                case 15:
                    message.steamguard_machine_name_user_chosen = reader.string();
                    break;
                case 16:
                    message.is_phone_verified = reader.bool();
                    break;
                case 17:
                    message.two_factor_state = reader.uint32();
                    break;
                case 18:
                    message.is_phone_identifying = reader.bool();
                    break;
                case 19:
                    message.is_phone_needing_reverify = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAccountInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAccountInfo} CMsgClientAccountInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAccountInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAccountInfo message.
         * @function verify
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAccountInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                if (!$util.isString(message.persona_name))
                    return "persona_name: string expected";
            if (message.ip_country != null && message.hasOwnProperty("ip_country"))
                if (!$util.isString(message.ip_country))
                    return "ip_country: string expected";
            if (message.count_authed_computers != null && message.hasOwnProperty("count_authed_computers"))
                if (!$util.isInteger(message.count_authed_computers))
                    return "count_authed_computers: integer expected";
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                if (!$util.isInteger(message.account_flags))
                    return "account_flags: integer expected";
            if (message.facebook_id != null && message.hasOwnProperty("facebook_id"))
                if (!$util.isInteger(message.facebook_id) && !(message.facebook_id && $util.isInteger(message.facebook_id.low) && $util.isInteger(message.facebook_id.high)))
                    return "facebook_id: integer|Long expected";
            if (message.facebook_name != null && message.hasOwnProperty("facebook_name"))
                if (!$util.isString(message.facebook_name))
                    return "facebook_name: string expected";
            if (message.steamguard_notify_newmachines != null && message.hasOwnProperty("steamguard_notify_newmachines"))
                if (typeof message.steamguard_notify_newmachines !== "boolean")
                    return "steamguard_notify_newmachines: boolean expected";
            if (message.steamguard_machine_name_user_chosen != null && message.hasOwnProperty("steamguard_machine_name_user_chosen"))
                if (!$util.isString(message.steamguard_machine_name_user_chosen))
                    return "steamguard_machine_name_user_chosen: string expected";
            if (message.is_phone_verified != null && message.hasOwnProperty("is_phone_verified"))
                if (typeof message.is_phone_verified !== "boolean")
                    return "is_phone_verified: boolean expected";
            if (message.two_factor_state != null && message.hasOwnProperty("two_factor_state"))
                if (!$util.isInteger(message.two_factor_state))
                    return "two_factor_state: integer expected";
            if (message.is_phone_identifying != null && message.hasOwnProperty("is_phone_identifying"))
                if (typeof message.is_phone_identifying !== "boolean")
                    return "is_phone_identifying: boolean expected";
            if (message.is_phone_needing_reverify != null && message.hasOwnProperty("is_phone_needing_reverify"))
                if (typeof message.is_phone_needing_reverify !== "boolean")
                    return "is_phone_needing_reverify: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAccountInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAccountInfo} CMsgClientAccountInfo
         */
        CMsgClientAccountInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAccountInfo)
                return object;
            var message = new $root.CMsgClientAccountInfo();
            if (object.persona_name != null)
                message.persona_name = String(object.persona_name);
            if (object.ip_country != null)
                message.ip_country = String(object.ip_country);
            if (object.count_authed_computers != null)
                message.count_authed_computers = object.count_authed_computers | 0;
            if (object.account_flags != null)
                message.account_flags = object.account_flags >>> 0;
            if (object.facebook_id != null)
                if ($util.Long)
                    (message.facebook_id = $util.Long.fromValue(object.facebook_id)).unsigned = true;
                else if (typeof object.facebook_id === "string")
                    message.facebook_id = parseInt(object.facebook_id, 10);
                else if (typeof object.facebook_id === "number")
                    message.facebook_id = object.facebook_id;
                else if (typeof object.facebook_id === "object")
                    message.facebook_id = new $util.LongBits(object.facebook_id.low >>> 0, object.facebook_id.high >>> 0).toNumber(true);
            if (object.facebook_name != null)
                message.facebook_name = String(object.facebook_name);
            if (object.steamguard_notify_newmachines != null)
                message.steamguard_notify_newmachines = Boolean(object.steamguard_notify_newmachines);
            if (object.steamguard_machine_name_user_chosen != null)
                message.steamguard_machine_name_user_chosen = String(object.steamguard_machine_name_user_chosen);
            if (object.is_phone_verified != null)
                message.is_phone_verified = Boolean(object.is_phone_verified);
            if (object.two_factor_state != null)
                message.two_factor_state = object.two_factor_state >>> 0;
            if (object.is_phone_identifying != null)
                message.is_phone_identifying = Boolean(object.is_phone_identifying);
            if (object.is_phone_needing_reverify != null)
                message.is_phone_needing_reverify = Boolean(object.is_phone_needing_reverify);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAccountInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAccountInfo
         * @static
         * @param {CMsgClientAccountInfo} message CMsgClientAccountInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAccountInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.persona_name = "";
                object.ip_country = "";
                object.count_authed_computers = 0;
                object.account_flags = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.facebook_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.facebook_id = options.longs === String ? "0" : 0;
                object.facebook_name = "";
                object.steamguard_notify_newmachines = false;
                object.steamguard_machine_name_user_chosen = "";
                object.is_phone_verified = false;
                object.two_factor_state = 0;
                object.is_phone_identifying = false;
                object.is_phone_needing_reverify = false;
            }
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                object.persona_name = message.persona_name;
            if (message.ip_country != null && message.hasOwnProperty("ip_country"))
                object.ip_country = message.ip_country;
            if (message.count_authed_computers != null && message.hasOwnProperty("count_authed_computers"))
                object.count_authed_computers = message.count_authed_computers;
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                object.account_flags = message.account_flags;
            if (message.facebook_id != null && message.hasOwnProperty("facebook_id"))
                if (typeof message.facebook_id === "number")
                    object.facebook_id = options.longs === String ? String(message.facebook_id) : message.facebook_id;
                else
                    object.facebook_id = options.longs === String ? $util.Long.prototype.toString.call(message.facebook_id) : options.longs === Number ? new $util.LongBits(message.facebook_id.low >>> 0, message.facebook_id.high >>> 0).toNumber(true) : message.facebook_id;
            if (message.facebook_name != null && message.hasOwnProperty("facebook_name"))
                object.facebook_name = message.facebook_name;
            if (message.steamguard_notify_newmachines != null && message.hasOwnProperty("steamguard_notify_newmachines"))
                object.steamguard_notify_newmachines = message.steamguard_notify_newmachines;
            if (message.steamguard_machine_name_user_chosen != null && message.hasOwnProperty("steamguard_machine_name_user_chosen"))
                object.steamguard_machine_name_user_chosen = message.steamguard_machine_name_user_chosen;
            if (message.is_phone_verified != null && message.hasOwnProperty("is_phone_verified"))
                object.is_phone_verified = message.is_phone_verified;
            if (message.two_factor_state != null && message.hasOwnProperty("two_factor_state"))
                object.two_factor_state = message.two_factor_state;
            if (message.is_phone_identifying != null && message.hasOwnProperty("is_phone_identifying"))
                object.is_phone_identifying = message.is_phone_identifying;
            if (message.is_phone_needing_reverify != null && message.hasOwnProperty("is_phone_needing_reverify"))
                object.is_phone_needing_reverify = message.is_phone_needing_reverify;
            return object;
        };
    
        /**
         * Converts this CMsgClientAccountInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientAccountInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAccountInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAccountInfo;
    })();
    
    $root.CMsgClientAddFriendToGroup = (function() {
    
        /**
         * Properties of a CMsgClientAddFriendToGroup.
         * @exports ICMsgClientAddFriendToGroup
         * @interface ICMsgClientAddFriendToGroup
         * @property {number|null} [groupid] CMsgClientAddFriendToGroup groupid
         * @property {number|Long|null} [steamiduser] CMsgClientAddFriendToGroup steamiduser
         */
    
        /**
         * Constructs a new CMsgClientAddFriendToGroup.
         * @exports CMsgClientAddFriendToGroup
         * @classdesc Represents a CMsgClientAddFriendToGroup.
         * @implements ICMsgClientAddFriendToGroup
         * @constructor
         * @param {ICMsgClientAddFriendToGroup=} [properties] Properties to set
         */
        function CMsgClientAddFriendToGroup(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAddFriendToGroup groupid.
         * @member {number} groupid
         * @memberof CMsgClientAddFriendToGroup
         * @instance
         */
        CMsgClientAddFriendToGroup.prototype.groupid = 0;
    
        /**
         * CMsgClientAddFriendToGroup steamiduser.
         * @member {number|Long} steamiduser
         * @memberof CMsgClientAddFriendToGroup
         * @instance
         */
        CMsgClientAddFriendToGroup.prototype.steamiduser = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientAddFriendToGroup instance using the specified properties.
         * @function create
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {ICMsgClientAddFriendToGroup=} [properties] Properties to set
         * @returns {CMsgClientAddFriendToGroup} CMsgClientAddFriendToGroup instance
         */
        CMsgClientAddFriendToGroup.create = function create(properties) {
            return new CMsgClientAddFriendToGroup(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAddFriendToGroup message. Does not implicitly {@link CMsgClientAddFriendToGroup.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {ICMsgClientAddFriendToGroup} message CMsgClientAddFriendToGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAddFriendToGroup.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.groupid);
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamiduser);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAddFriendToGroup message, length delimited. Does not implicitly {@link CMsgClientAddFriendToGroup.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {ICMsgClientAddFriendToGroup} message CMsgClientAddFriendToGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAddFriendToGroup.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAddFriendToGroup message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAddFriendToGroup} CMsgClientAddFriendToGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAddFriendToGroup.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAddFriendToGroup();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.groupid = reader.int32();
                    break;
                case 2:
                    message.steamiduser = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAddFriendToGroup message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAddFriendToGroup} CMsgClientAddFriendToGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAddFriendToGroup.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAddFriendToGroup message.
         * @function verify
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAddFriendToGroup.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                if (!$util.isInteger(message.groupid))
                    return "groupid: integer expected";
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                if (!$util.isInteger(message.steamiduser) && !(message.steamiduser && $util.isInteger(message.steamiduser.low) && $util.isInteger(message.steamiduser.high)))
                    return "steamiduser: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAddFriendToGroup message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAddFriendToGroup} CMsgClientAddFriendToGroup
         */
        CMsgClientAddFriendToGroup.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAddFriendToGroup)
                return object;
            var message = new $root.CMsgClientAddFriendToGroup();
            if (object.groupid != null)
                message.groupid = object.groupid | 0;
            if (object.steamiduser != null)
                if ($util.Long)
                    (message.steamiduser = $util.Long.fromValue(object.steamiduser)).unsigned = false;
                else if (typeof object.steamiduser === "string")
                    message.steamiduser = parseInt(object.steamiduser, 10);
                else if (typeof object.steamiduser === "number")
                    message.steamiduser = object.steamiduser;
                else if (typeof object.steamiduser === "object")
                    message.steamiduser = new $util.LongBits(object.steamiduser.low >>> 0, object.steamiduser.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAddFriendToGroup message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAddFriendToGroup
         * @static
         * @param {CMsgClientAddFriendToGroup} message CMsgClientAddFriendToGroup
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAddFriendToGroup.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.groupid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamiduser = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamiduser = options.longs === String ? "0" : 0;
            }
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                object.groupid = message.groupid;
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                if (typeof message.steamiduser === "number")
                    object.steamiduser = options.longs === String ? String(message.steamiduser) : message.steamiduser;
                else
                    object.steamiduser = options.longs === String ? $util.Long.prototype.toString.call(message.steamiduser) : options.longs === Number ? new $util.LongBits(message.steamiduser.low >>> 0, message.steamiduser.high >>> 0).toNumber() : message.steamiduser;
            return object;
        };
    
        /**
         * Converts this CMsgClientAddFriendToGroup to JSON.
         * @function toJSON
         * @memberof CMsgClientAddFriendToGroup
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAddFriendToGroup.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAddFriendToGroup;
    })();
    
    $root.CMsgClientAddFriendToGroupResponse = (function() {
    
        /**
         * Properties of a CMsgClientAddFriendToGroupResponse.
         * @exports ICMsgClientAddFriendToGroupResponse
         * @interface ICMsgClientAddFriendToGroupResponse
         * @property {number|null} [eresult] CMsgClientAddFriendToGroupResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientAddFriendToGroupResponse.
         * @exports CMsgClientAddFriendToGroupResponse
         * @classdesc Represents a CMsgClientAddFriendToGroupResponse.
         * @implements ICMsgClientAddFriendToGroupResponse
         * @constructor
         * @param {ICMsgClientAddFriendToGroupResponse=} [properties] Properties to set
         */
        function CMsgClientAddFriendToGroupResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAddFriendToGroupResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientAddFriendToGroupResponse
         * @instance
         */
        CMsgClientAddFriendToGroupResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientAddFriendToGroupResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {ICMsgClientAddFriendToGroupResponse=} [properties] Properties to set
         * @returns {CMsgClientAddFriendToGroupResponse} CMsgClientAddFriendToGroupResponse instance
         */
        CMsgClientAddFriendToGroupResponse.create = function create(properties) {
            return new CMsgClientAddFriendToGroupResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAddFriendToGroupResponse message. Does not implicitly {@link CMsgClientAddFriendToGroupResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {ICMsgClientAddFriendToGroupResponse} message CMsgClientAddFriendToGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAddFriendToGroupResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAddFriendToGroupResponse message, length delimited. Does not implicitly {@link CMsgClientAddFriendToGroupResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {ICMsgClientAddFriendToGroupResponse} message CMsgClientAddFriendToGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAddFriendToGroupResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAddFriendToGroupResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAddFriendToGroupResponse} CMsgClientAddFriendToGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAddFriendToGroupResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAddFriendToGroupResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAddFriendToGroupResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAddFriendToGroupResponse} CMsgClientAddFriendToGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAddFriendToGroupResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAddFriendToGroupResponse message.
         * @function verify
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAddFriendToGroupResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAddFriendToGroupResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAddFriendToGroupResponse} CMsgClientAddFriendToGroupResponse
         */
        CMsgClientAddFriendToGroupResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAddFriendToGroupResponse)
                return object;
            var message = new $root.CMsgClientAddFriendToGroupResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAddFriendToGroupResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAddFriendToGroupResponse
         * @static
         * @param {CMsgClientAddFriendToGroupResponse} message CMsgClientAddFriendToGroupResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAddFriendToGroupResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientAddFriendToGroupResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientAddFriendToGroupResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAddFriendToGroupResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAddFriendToGroupResponse;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistory = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistory.
         * @exports ICMsgClientAMGetPersonaNameHistory
         * @interface ICMsgClientAMGetPersonaNameHistory
         * @property {number|null} [id_count] CMsgClientAMGetPersonaNameHistory id_count
         * @property {Array.<ICMsgClientAMGetPersonaNameHistory_IdInstance>|null} [Ids] CMsgClientAMGetPersonaNameHistory Ids
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistory.
         * @exports CMsgClientAMGetPersonaNameHistory
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistory.
         * @implements ICMsgClientAMGetPersonaNameHistory
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistory=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistory(properties) {
            this.Ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistory id_count.
         * @member {number} id_count
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         */
        CMsgClientAMGetPersonaNameHistory.prototype.id_count = 0;
    
        /**
         * CMsgClientAMGetPersonaNameHistory Ids.
         * @member {Array.<ICMsgClientAMGetPersonaNameHistory_IdInstance>} Ids
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         */
        CMsgClientAMGetPersonaNameHistory.prototype.Ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistory instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory instance
         */
        CMsgClientAMGetPersonaNameHistory.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistory(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.id_count != null && message.hasOwnProperty("id_count"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id_count);
            if (message.Ids != null && message.Ids.length)
                for (var i = 0; i < message.Ids.length; ++i)
                    $root.CMsgClientAMGetPersonaNameHistory_IdInstance.encode(message.Ids[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.id_count = reader.int32();
                    break;
                case 2:
                    if (!(message.Ids && message.Ids.length))
                        message.Ids = [];
                    message.Ids.push($root.CMsgClientAMGetPersonaNameHistory_IdInstance.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistory message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.id_count != null && message.hasOwnProperty("id_count"))
                if (!$util.isInteger(message.id_count))
                    return "id_count: integer expected";
            if (message.Ids != null && message.hasOwnProperty("Ids")) {
                if (!Array.isArray(message.Ids))
                    return "Ids: array expected";
                for (var i = 0; i < message.Ids.length; ++i) {
                    var error = $root.CMsgClientAMGetPersonaNameHistory_IdInstance.verify(message.Ids[i]);
                    if (error)
                        return "Ids." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         */
        CMsgClientAMGetPersonaNameHistory.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistory)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistory();
            if (object.id_count != null)
                message.id_count = object.id_count | 0;
            if (object.Ids) {
                if (!Array.isArray(object.Ids))
                    throw TypeError(".CMsgClientAMGetPersonaNameHistory.Ids: array expected");
                message.Ids = [];
                for (var i = 0; i < object.Ids.length; ++i) {
                    if (typeof object.Ids[i] !== "object")
                        throw TypeError(".CMsgClientAMGetPersonaNameHistory.Ids: object expected");
                    message.Ids[i] = $root.CMsgClientAMGetPersonaNameHistory_IdInstance.fromObject(object.Ids[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {CMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.Ids = [];
            if (options.defaults)
                object.id_count = 0;
            if (message.id_count != null && message.hasOwnProperty("id_count"))
                object.id_count = message.id_count;
            if (message.Ids && message.Ids.length) {
                object.Ids = [];
                for (var j = 0; j < message.Ids.length; ++j)
                    object.Ids[j] = $root.CMsgClientAMGetPersonaNameHistory_IdInstance.toObject(message.Ids[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistory to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetPersonaNameHistory;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistory_IdInstance = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistory_IdInstance.
         * @exports ICMsgClientAMGetPersonaNameHistory_IdInstance
         * @interface ICMsgClientAMGetPersonaNameHistory_IdInstance
         * @property {number|Long|null} [steamid] CMsgClientAMGetPersonaNameHistory_IdInstance steamid
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistory_IdInstance.
         * @exports CMsgClientAMGetPersonaNameHistory_IdInstance
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistory_IdInstance.
         * @implements ICMsgClientAMGetPersonaNameHistory_IdInstance
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistory_IdInstance=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistory_IdInstance(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistory_IdInstance steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistory_IdInstance instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory_IdInstance=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistory_IdInstance} CMsgClientAMGetPersonaNameHistory_IdInstance instance
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistory_IdInstance(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory_IdInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory_IdInstance.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory_IdInstance} message CMsgClientAMGetPersonaNameHistory_IdInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory_IdInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory_IdInstance.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory_IdInstance} message CMsgClientAMGetPersonaNameHistory_IdInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory_IdInstance message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistory_IdInstance} CMsgClientAMGetPersonaNameHistory_IdInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistory_IdInstance();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory_IdInstance message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistory_IdInstance} CMsgClientAMGetPersonaNameHistory_IdInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistory_IdInstance message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistory_IdInstance message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistory_IdInstance} CMsgClientAMGetPersonaNameHistory_IdInstance
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistory_IdInstance)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistory_IdInstance();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistory_IdInstance message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @static
         * @param {CMsgClientAMGetPersonaNameHistory_IdInstance} message CMsgClientAMGetPersonaNameHistory_IdInstance
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistory_IdInstance to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistory_IdInstance
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistory_IdInstance.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetPersonaNameHistory_IdInstance;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistoryResponse = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistoryResponse.
         * @exports ICMsgClientAMGetPersonaNameHistoryResponse
         * @interface ICMsgClientAMGetPersonaNameHistoryResponse
         * @property {Array.<ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance>|null} [responses] CMsgClientAMGetPersonaNameHistoryResponse responses
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistoryResponse.
         * @exports CMsgClientAMGetPersonaNameHistoryResponse
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistoryResponse.
         * @implements ICMsgClientAMGetPersonaNameHistoryResponse
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistoryResponse(properties) {
            this.responses = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse responses.
         * @member {Array.<ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance>} responses
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse.prototype.responses = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistoryResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistoryResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.responses != null && message.responses.length)
                for (var i = 0; i < message.responses.length; ++i)
                    $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.encode(message.responses[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    if (!(message.responses && message.responses.length))
                        message.responses = [];
                    message.responses.push($root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistoryResponse message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistoryResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.responses != null && message.hasOwnProperty("responses")) {
                if (!Array.isArray(message.responses))
                    return "responses: array expected";
                for (var i = 0; i < message.responses.length; ++i) {
                    var error = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.verify(message.responses[i]);
                    if (error)
                        return "responses." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistoryResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         */
        CMsgClientAMGetPersonaNameHistoryResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse();
            if (object.responses) {
                if (!Array.isArray(object.responses))
                    throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.responses: array expected");
                message.responses = [];
                for (var i = 0; i < object.responses.length; ++i) {
                    if (typeof object.responses[i] !== "object")
                        throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.responses: object expected");
                    message.responses[i] = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.fromObject(object.responses[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistoryResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {CMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistoryResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.responses = [];
            if (message.responses && message.responses.length) {
                object.responses = [];
                for (var j = 0; j < message.responses.length; ++j)
                    object.responses[j] = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.toObject(message.responses[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistoryResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistoryResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetPersonaNameHistoryResponse;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.
         * @exports ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @interface ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @property {number|null} [eresult] CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance eresult
         * @property {number|Long|null} [steamid] CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance steamid
         * @property {Array.<ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance>|null} [names] CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance names
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.
         * @exports CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.
         * @implements ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance(properties) {
            this.names = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance eresult.
         * @member {number} eresult
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.prototype.eresult = 2;
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance names.
         * @member {Array.<ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance>} names
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.prototype.names = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.names != null && message.names.length)
                for (var i = 0; i < message.names.length; ++i)
                    $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.encode(message.names[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.steamid = reader.fixed64();
                    break;
                case 3:
                    if (!(message.names && message.names.length))
                        message.names = [];
                    message.names.push($root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.names != null && message.hasOwnProperty("names")) {
                if (!Array.isArray(message.names))
                    return "names: array expected";
                for (var i = 0; i < message.names.length; ++i) {
                    var error = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.verify(message.names[i]);
                    if (error)
                        return "names." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.names) {
                if (!Array.isArray(object.names))
                    throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.names: array expected");
                message.names = [];
                for (var i = 0; i < object.names.length; ++i) {
                    if (typeof object.names[i] !== "object")
                        throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.names: object expected");
                    message.names[i] = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.fromObject(object.names[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @static
         * @param {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.names = [];
            if (options.defaults) {
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.names && message.names.length) {
                object.names = [];
                for (var j = 0; j < message.names.length; ++j)
                    object.names[j] = $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.toObject(message.names[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.
         * @exports ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @interface ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @property {number|null} [name_since] CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance name_since
         * @property {string|null} [name] CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance name
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.
         * @exports CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.
         * @implements ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance name_since.
         * @member {number} name_since
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.prototype.name_since = 0;
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance name.
         * @member {string} name
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.prototype.name = "";
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name_since != null && message.hasOwnProperty("name_since"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.name_since);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.name_since = reader.fixed32();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name_since != null && message.hasOwnProperty("name_since"))
                if (!$util.isInteger(message.name_since))
                    return "name_since: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance();
            if (object.name_since != null)
                message.name_since = object.name_since >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @static
         * @param {CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance} message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name_since = 0;
                object.name = "";
            }
            if (message.name_since != null && message.hasOwnProperty("name_since"))
                object.name_since = message.name_since;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance;
    })();
    
    $root.CMsgClientChangeStatus = (function() {
    
        /**
         * Properties of a CMsgClientChangeStatus.
         * @exports ICMsgClientChangeStatus
         * @interface ICMsgClientChangeStatus
         * @property {number|null} [persona_state] CMsgClientChangeStatus persona_state
         * @property {string|null} [player_name] CMsgClientChangeStatus player_name
         * @property {boolean|null} [is_auto_generated_name] CMsgClientChangeStatus is_auto_generated_name
         * @property {boolean|null} [high_priority] CMsgClientChangeStatus high_priority
         * @property {boolean|null} [persona_set_by_user] CMsgClientChangeStatus persona_set_by_user
         * @property {number|null} [persona_state_flags] CMsgClientChangeStatus persona_state_flags
         * @property {boolean|null} [need_persona_response] CMsgClientChangeStatus need_persona_response
         * @property {boolean|null} [is_client_idle] CMsgClientChangeStatus is_client_idle
         */
    
        /**
         * Constructs a new CMsgClientChangeStatus.
         * @exports CMsgClientChangeStatus
         * @classdesc Represents a CMsgClientChangeStatus.
         * @implements ICMsgClientChangeStatus
         * @constructor
         * @param {ICMsgClientChangeStatus=} [properties] Properties to set
         */
        function CMsgClientChangeStatus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientChangeStatus persona_state.
         * @member {number} persona_state
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.persona_state = 0;
    
        /**
         * CMsgClientChangeStatus player_name.
         * @member {string} player_name
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.player_name = "";
    
        /**
         * CMsgClientChangeStatus is_auto_generated_name.
         * @member {boolean} is_auto_generated_name
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.is_auto_generated_name = false;
    
        /**
         * CMsgClientChangeStatus high_priority.
         * @member {boolean} high_priority
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.high_priority = false;
    
        /**
         * CMsgClientChangeStatus persona_set_by_user.
         * @member {boolean} persona_set_by_user
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.persona_set_by_user = false;
    
        /**
         * CMsgClientChangeStatus persona_state_flags.
         * @member {number} persona_state_flags
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.persona_state_flags = 0;
    
        /**
         * CMsgClientChangeStatus need_persona_response.
         * @member {boolean} need_persona_response
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.need_persona_response = false;
    
        /**
         * CMsgClientChangeStatus is_client_idle.
         * @member {boolean} is_client_idle
         * @memberof CMsgClientChangeStatus
         * @instance
         */
        CMsgClientChangeStatus.prototype.is_client_idle = false;
    
        /**
         * Creates a new CMsgClientChangeStatus instance using the specified properties.
         * @function create
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {ICMsgClientChangeStatus=} [properties] Properties to set
         * @returns {CMsgClientChangeStatus} CMsgClientChangeStatus instance
         */
        CMsgClientChangeStatus.create = function create(properties) {
            return new CMsgClientChangeStatus(properties);
        };
    
        /**
         * Encodes the specified CMsgClientChangeStatus message. Does not implicitly {@link CMsgClientChangeStatus.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {ICMsgClientChangeStatus} message CMsgClientChangeStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChangeStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.persona_state);
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.player_name);
            if (message.is_auto_generated_name != null && message.hasOwnProperty("is_auto_generated_name"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.is_auto_generated_name);
            if (message.high_priority != null && message.hasOwnProperty("high_priority"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.high_priority);
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.persona_set_by_user);
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.persona_state_flags);
            if (message.need_persona_response != null && message.hasOwnProperty("need_persona_response"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.need_persona_response);
            if (message.is_client_idle != null && message.hasOwnProperty("is_client_idle"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.is_client_idle);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientChangeStatus message, length delimited. Does not implicitly {@link CMsgClientChangeStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {ICMsgClientChangeStatus} message CMsgClientChangeStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChangeStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientChangeStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientChangeStatus} CMsgClientChangeStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChangeStatus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChangeStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.persona_state = reader.uint32();
                    break;
                case 2:
                    message.player_name = reader.string();
                    break;
                case 3:
                    message.is_auto_generated_name = reader.bool();
                    break;
                case 4:
                    message.high_priority = reader.bool();
                    break;
                case 5:
                    message.persona_set_by_user = reader.bool();
                    break;
                case 6:
                    message.persona_state_flags = reader.uint32();
                    break;
                case 7:
                    message.need_persona_response = reader.bool();
                    break;
                case 8:
                    message.is_client_idle = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientChangeStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientChangeStatus} CMsgClientChangeStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChangeStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientChangeStatus message.
         * @function verify
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientChangeStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                if (!$util.isInteger(message.persona_state))
                    return "persona_state: integer expected";
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                if (!$util.isString(message.player_name))
                    return "player_name: string expected";
            if (message.is_auto_generated_name != null && message.hasOwnProperty("is_auto_generated_name"))
                if (typeof message.is_auto_generated_name !== "boolean")
                    return "is_auto_generated_name: boolean expected";
            if (message.high_priority != null && message.hasOwnProperty("high_priority"))
                if (typeof message.high_priority !== "boolean")
                    return "high_priority: boolean expected";
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                if (typeof message.persona_set_by_user !== "boolean")
                    return "persona_set_by_user: boolean expected";
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                if (!$util.isInteger(message.persona_state_flags))
                    return "persona_state_flags: integer expected";
            if (message.need_persona_response != null && message.hasOwnProperty("need_persona_response"))
                if (typeof message.need_persona_response !== "boolean")
                    return "need_persona_response: boolean expected";
            if (message.is_client_idle != null && message.hasOwnProperty("is_client_idle"))
                if (typeof message.is_client_idle !== "boolean")
                    return "is_client_idle: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientChangeStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientChangeStatus} CMsgClientChangeStatus
         */
        CMsgClientChangeStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientChangeStatus)
                return object;
            var message = new $root.CMsgClientChangeStatus();
            if (object.persona_state != null)
                message.persona_state = object.persona_state >>> 0;
            if (object.player_name != null)
                message.player_name = String(object.player_name);
            if (object.is_auto_generated_name != null)
                message.is_auto_generated_name = Boolean(object.is_auto_generated_name);
            if (object.high_priority != null)
                message.high_priority = Boolean(object.high_priority);
            if (object.persona_set_by_user != null)
                message.persona_set_by_user = Boolean(object.persona_set_by_user);
            if (object.persona_state_flags != null)
                message.persona_state_flags = object.persona_state_flags >>> 0;
            if (object.need_persona_response != null)
                message.need_persona_response = Boolean(object.need_persona_response);
            if (object.is_client_idle != null)
                message.is_client_idle = Boolean(object.is_client_idle);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientChangeStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientChangeStatus
         * @static
         * @param {CMsgClientChangeStatus} message CMsgClientChangeStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientChangeStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.persona_state = 0;
                object.player_name = "";
                object.is_auto_generated_name = false;
                object.high_priority = false;
                object.persona_set_by_user = false;
                object.persona_state_flags = 0;
                object.need_persona_response = false;
                object.is_client_idle = false;
            }
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                object.persona_state = message.persona_state;
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                object.player_name = message.player_name;
            if (message.is_auto_generated_name != null && message.hasOwnProperty("is_auto_generated_name"))
                object.is_auto_generated_name = message.is_auto_generated_name;
            if (message.high_priority != null && message.hasOwnProperty("high_priority"))
                object.high_priority = message.high_priority;
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                object.persona_set_by_user = message.persona_set_by_user;
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                object.persona_state_flags = message.persona_state_flags;
            if (message.need_persona_response != null && message.hasOwnProperty("need_persona_response"))
                object.need_persona_response = message.need_persona_response;
            if (message.is_client_idle != null && message.hasOwnProperty("is_client_idle"))
                object.is_client_idle = message.is_client_idle;
            return object;
        };
    
        /**
         * Converts this CMsgClientChangeStatus to JSON.
         * @function toJSON
         * @memberof CMsgClientChangeStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientChangeStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientChangeStatus;
    })();
    
    $root.CMsgClientClanState = (function() {
    
        /**
         * Properties of a CMsgClientClanState.
         * @exports ICMsgClientClanState
         * @interface ICMsgClientClanState
         * @property {number|Long|null} [steamid_clan] CMsgClientClanState steamid_clan
         * @property {number|null} [clan_account_flags] CMsgClientClanState clan_account_flags
         * @property {ICMsgClientClanState_NameInfo|null} [name_info] CMsgClientClanState name_info
         * @property {ICMsgClientClanState_UserCounts|null} [user_counts] CMsgClientClanState user_counts
         * @property {Array.<ICMsgClientClanState_Event>|null} [events] CMsgClientClanState events
         * @property {Array.<ICMsgClientClanState_Event>|null} [announcements] CMsgClientClanState announcements
         * @property {boolean|null} [chat_room_private] CMsgClientClanState chat_room_private
         */
    
        /**
         * Constructs a new CMsgClientClanState.
         * @exports CMsgClientClanState
         * @classdesc Represents a CMsgClientClanState.
         * @implements ICMsgClientClanState
         * @constructor
         * @param {ICMsgClientClanState=} [properties] Properties to set
         */
        function CMsgClientClanState(properties) {
            this.events = [];
            this.announcements = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientClanState steamid_clan.
         * @member {number|Long} steamid_clan
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.steamid_clan = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientClanState clan_account_flags.
         * @member {number} clan_account_flags
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.clan_account_flags = 0;
    
        /**
         * CMsgClientClanState name_info.
         * @member {ICMsgClientClanState_NameInfo|null|undefined} name_info
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.name_info = null;
    
        /**
         * CMsgClientClanState user_counts.
         * @member {ICMsgClientClanState_UserCounts|null|undefined} user_counts
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.user_counts = null;
    
        /**
         * CMsgClientClanState events.
         * @member {Array.<ICMsgClientClanState_Event>} events
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.events = $util.emptyArray;
    
        /**
         * CMsgClientClanState announcements.
         * @member {Array.<ICMsgClientClanState_Event>} announcements
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.announcements = $util.emptyArray;
    
        /**
         * CMsgClientClanState chat_room_private.
         * @member {boolean} chat_room_private
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.chat_room_private = false;
    
        /**
         * Creates a new CMsgClientClanState instance using the specified properties.
         * @function create
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState=} [properties] Properties to set
         * @returns {CMsgClientClanState} CMsgClientClanState instance
         */
        CMsgClientClanState.create = function create(properties) {
            return new CMsgClientClanState(properties);
        };
    
        /**
         * Encodes the specified CMsgClientClanState message. Does not implicitly {@link CMsgClientClanState.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState} message CMsgClientClanState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_clan);
            if (message.clan_account_flags != null && message.hasOwnProperty("clan_account_flags"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.clan_account_flags);
            if (message.name_info != null && message.hasOwnProperty("name_info"))
                $root.CMsgClientClanState_NameInfo.encode(message.name_info, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.user_counts != null && message.hasOwnProperty("user_counts"))
                $root.CMsgClientClanState_UserCounts.encode(message.user_counts, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.events != null && message.events.length)
                for (var i = 0; i < message.events.length; ++i)
                    $root.CMsgClientClanState_Event.encode(message.events[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.announcements != null && message.announcements.length)
                for (var i = 0; i < message.announcements.length; ++i)
                    $root.CMsgClientClanState_Event.encode(message.announcements[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            if (message.chat_room_private != null && message.hasOwnProperty("chat_room_private"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.chat_room_private);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientClanState message, length delimited. Does not implicitly {@link CMsgClientClanState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState} message CMsgClientClanState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientClanState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientClanState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientClanState} CMsgClientClanState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_clan = reader.fixed64();
                    break;
                case 3:
                    message.clan_account_flags = reader.uint32();
                    break;
                case 4:
                    message.name_info = $root.CMsgClientClanState_NameInfo.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.user_counts = $root.CMsgClientClanState_UserCounts.decode(reader, reader.uint32());
                    break;
                case 6:
                    if (!(message.events && message.events.length))
                        message.events = [];
                    message.events.push($root.CMsgClientClanState_Event.decode(reader, reader.uint32()));
                    break;
                case 7:
                    if (!(message.announcements && message.announcements.length))
                        message.announcements = [];
                    message.announcements.push($root.CMsgClientClanState_Event.decode(reader, reader.uint32()));
                    break;
                case 8:
                    message.chat_room_private = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientClanState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientClanState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientClanState} CMsgClientClanState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientClanState message.
         * @function verify
         * @memberof CMsgClientClanState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientClanState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (!$util.isInteger(message.steamid_clan) && !(message.steamid_clan && $util.isInteger(message.steamid_clan.low) && $util.isInteger(message.steamid_clan.high)))
                    return "steamid_clan: integer|Long expected";
            if (message.clan_account_flags != null && message.hasOwnProperty("clan_account_flags"))
                if (!$util.isInteger(message.clan_account_flags))
                    return "clan_account_flags: integer expected";
            if (message.name_info != null && message.hasOwnProperty("name_info")) {
                var error = $root.CMsgClientClanState_NameInfo.verify(message.name_info);
                if (error)
                    return "name_info." + error;
            }
            if (message.user_counts != null && message.hasOwnProperty("user_counts")) {
                var error = $root.CMsgClientClanState_UserCounts.verify(message.user_counts);
                if (error)
                    return "user_counts." + error;
            }
            if (message.events != null && message.hasOwnProperty("events")) {
                if (!Array.isArray(message.events))
                    return "events: array expected";
                for (var i = 0; i < message.events.length; ++i) {
                    var error = $root.CMsgClientClanState_Event.verify(message.events[i]);
                    if (error)
                        return "events." + error;
                }
            }
            if (message.announcements != null && message.hasOwnProperty("announcements")) {
                if (!Array.isArray(message.announcements))
                    return "announcements: array expected";
                for (var i = 0; i < message.announcements.length; ++i) {
                    var error = $root.CMsgClientClanState_Event.verify(message.announcements[i]);
                    if (error)
                        return "announcements." + error;
                }
            }
            if (message.chat_room_private != null && message.hasOwnProperty("chat_room_private"))
                if (typeof message.chat_room_private !== "boolean")
                    return "chat_room_private: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientClanState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientClanState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientClanState} CMsgClientClanState
         */
        CMsgClientClanState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientClanState)
                return object;
            var message = new $root.CMsgClientClanState();
            if (object.steamid_clan != null)
                if ($util.Long)
                    (message.steamid_clan = $util.Long.fromValue(object.steamid_clan)).unsigned = false;
                else if (typeof object.steamid_clan === "string")
                    message.steamid_clan = parseInt(object.steamid_clan, 10);
                else if (typeof object.steamid_clan === "number")
                    message.steamid_clan = object.steamid_clan;
                else if (typeof object.steamid_clan === "object")
                    message.steamid_clan = new $util.LongBits(object.steamid_clan.low >>> 0, object.steamid_clan.high >>> 0).toNumber();
            if (object.clan_account_flags != null)
                message.clan_account_flags = object.clan_account_flags >>> 0;
            if (object.name_info != null) {
                if (typeof object.name_info !== "object")
                    throw TypeError(".CMsgClientClanState.name_info: object expected");
                message.name_info = $root.CMsgClientClanState_NameInfo.fromObject(object.name_info);
            }
            if (object.user_counts != null) {
                if (typeof object.user_counts !== "object")
                    throw TypeError(".CMsgClientClanState.user_counts: object expected");
                message.user_counts = $root.CMsgClientClanState_UserCounts.fromObject(object.user_counts);
            }
            if (object.events) {
                if (!Array.isArray(object.events))
                    throw TypeError(".CMsgClientClanState.events: array expected");
                message.events = [];
                for (var i = 0; i < object.events.length; ++i) {
                    if (typeof object.events[i] !== "object")
                        throw TypeError(".CMsgClientClanState.events: object expected");
                    message.events[i] = $root.CMsgClientClanState_Event.fromObject(object.events[i]);
                }
            }
            if (object.announcements) {
                if (!Array.isArray(object.announcements))
                    throw TypeError(".CMsgClientClanState.announcements: array expected");
                message.announcements = [];
                for (var i = 0; i < object.announcements.length; ++i) {
                    if (typeof object.announcements[i] !== "object")
                        throw TypeError(".CMsgClientClanState.announcements: object expected");
                    message.announcements[i] = $root.CMsgClientClanState_Event.fromObject(object.announcements[i]);
                }
            }
            if (object.chat_room_private != null)
                message.chat_room_private = Boolean(object.chat_room_private);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientClanState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientClanState
         * @static
         * @param {CMsgClientClanState} message CMsgClientClanState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientClanState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.events = [];
                object.announcements = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_clan = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_clan = options.longs === String ? "0" : 0;
                object.clan_account_flags = 0;
                object.name_info = null;
                object.user_counts = null;
                object.chat_room_private = false;
            }
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (typeof message.steamid_clan === "number")
                    object.steamid_clan = options.longs === String ? String(message.steamid_clan) : message.steamid_clan;
                else
                    object.steamid_clan = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clan) : options.longs === Number ? new $util.LongBits(message.steamid_clan.low >>> 0, message.steamid_clan.high >>> 0).toNumber() : message.steamid_clan;
            if (message.clan_account_flags != null && message.hasOwnProperty("clan_account_flags"))
                object.clan_account_flags = message.clan_account_flags;
            if (message.name_info != null && message.hasOwnProperty("name_info"))
                object.name_info = $root.CMsgClientClanState_NameInfo.toObject(message.name_info, options);
            if (message.user_counts != null && message.hasOwnProperty("user_counts"))
                object.user_counts = $root.CMsgClientClanState_UserCounts.toObject(message.user_counts, options);
            if (message.events && message.events.length) {
                object.events = [];
                for (var j = 0; j < message.events.length; ++j)
                    object.events[j] = $root.CMsgClientClanState_Event.toObject(message.events[j], options);
            }
            if (message.announcements && message.announcements.length) {
                object.announcements = [];
                for (var j = 0; j < message.announcements.length; ++j)
                    object.announcements[j] = $root.CMsgClientClanState_Event.toObject(message.announcements[j], options);
            }
            if (message.chat_room_private != null && message.hasOwnProperty("chat_room_private"))
                object.chat_room_private = message.chat_room_private;
            return object;
        };
    
        /**
         * Converts this CMsgClientClanState to JSON.
         * @function toJSON
         * @memberof CMsgClientClanState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientClanState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientClanState;
    })();
    
    $root.CMsgClientClanState_Event = (function() {
    
        /**
         * Properties of a CMsgClientClanState_Event.
         * @exports ICMsgClientClanState_Event
         * @interface ICMsgClientClanState_Event
         * @property {number|Long|null} [gid] CMsgClientClanState_Event gid
         * @property {number|null} [event_time] CMsgClientClanState_Event event_time
         * @property {string|null} [headline] CMsgClientClanState_Event headline
         * @property {number|Long|null} [game_id] CMsgClientClanState_Event game_id
         * @property {boolean|null} [just_posted] CMsgClientClanState_Event just_posted
         */
    
        /**
         * Constructs a new CMsgClientClanState_Event.
         * @exports CMsgClientClanState_Event
         * @classdesc Represents a CMsgClientClanState_Event.
         * @implements ICMsgClientClanState_Event
         * @constructor
         * @param {ICMsgClientClanState_Event=} [properties] Properties to set
         */
        function CMsgClientClanState_Event(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientClanState_Event gid.
         * @member {number|Long} gid
         * @memberof CMsgClientClanState_Event
         * @instance
         */
        CMsgClientClanState_Event.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientClanState_Event event_time.
         * @member {number} event_time
         * @memberof CMsgClientClanState_Event
         * @instance
         */
        CMsgClientClanState_Event.prototype.event_time = 0;
    
        /**
         * CMsgClientClanState_Event headline.
         * @member {string} headline
         * @memberof CMsgClientClanState_Event
         * @instance
         */
        CMsgClientClanState_Event.prototype.headline = "";
    
        /**
         * CMsgClientClanState_Event game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientClanState_Event
         * @instance
         */
        CMsgClientClanState_Event.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientClanState_Event just_posted.
         * @member {boolean} just_posted
         * @memberof CMsgClientClanState_Event
         * @instance
         */
        CMsgClientClanState_Event.prototype.just_posted = false;
    
        /**
         * Creates a new CMsgClientClanState_Event instance using the specified properties.
         * @function create
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {ICMsgClientClanState_Event=} [properties] Properties to set
         * @returns {CMsgClientClanState_Event} CMsgClientClanState_Event instance
         */
        CMsgClientClanState_Event.create = function create(properties) {
            return new CMsgClientClanState_Event(properties);
        };
    
        /**
         * Encodes the specified CMsgClientClanState_Event message. Does not implicitly {@link CMsgClientClanState_Event.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {ICMsgClientClanState_Event} message CMsgClientClanState_Event message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_Event.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gid != null && message.hasOwnProperty("gid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.gid);
            if (message.event_time != null && message.hasOwnProperty("event_time"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.event_time);
            if (message.headline != null && message.hasOwnProperty("headline"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.headline);
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.game_id);
            if (message.just_posted != null && message.hasOwnProperty("just_posted"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.just_posted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientClanState_Event message, length delimited. Does not implicitly {@link CMsgClientClanState_Event.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {ICMsgClientClanState_Event} message CMsgClientClanState_Event message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_Event.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientClanState_Event message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientClanState_Event} CMsgClientClanState_Event
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_Event.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState_Event();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gid = reader.fixed64();
                    break;
                case 2:
                    message.event_time = reader.uint32();
                    break;
                case 3:
                    message.headline = reader.string();
                    break;
                case 4:
                    message.game_id = reader.fixed64();
                    break;
                case 5:
                    message.just_posted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientClanState_Event message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientClanState_Event} CMsgClientClanState_Event
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_Event.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientClanState_Event message.
         * @function verify
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientClanState_Event.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.event_time != null && message.hasOwnProperty("event_time"))
                if (!$util.isInteger(message.event_time))
                    return "event_time: integer expected";
            if (message.headline != null && message.hasOwnProperty("headline"))
                if (!$util.isString(message.headline))
                    return "headline: string expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.just_posted != null && message.hasOwnProperty("just_posted"))
                if (typeof message.just_posted !== "boolean")
                    return "just_posted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientClanState_Event message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientClanState_Event} CMsgClientClanState_Event
         */
        CMsgClientClanState_Event.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientClanState_Event)
                return object;
            var message = new $root.CMsgClientClanState_Event();
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = false;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber();
            if (object.event_time != null)
                message.event_time = object.event_time >>> 0;
            if (object.headline != null)
                message.headline = String(object.headline);
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.just_posted != null)
                message.just_posted = Boolean(object.just_posted);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientClanState_Event message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientClanState_Event
         * @static
         * @param {CMsgClientClanState_Event} message CMsgClientClanState_Event
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientClanState_Event.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                object.event_time = 0;
                object.headline = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.just_posted = false;
            }
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber() : message.gid;
            if (message.event_time != null && message.hasOwnProperty("event_time"))
                object.event_time = message.event_time;
            if (message.headline != null && message.hasOwnProperty("headline"))
                object.headline = message.headline;
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.just_posted != null && message.hasOwnProperty("just_posted"))
                object.just_posted = message.just_posted;
            return object;
        };
    
        /**
         * Converts this CMsgClientClanState_Event to JSON.
         * @function toJSON
         * @memberof CMsgClientClanState_Event
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientClanState_Event.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientClanState_Event;
    })();
    
    $root.CMsgClientClanState_NameInfo = (function() {
    
        /**
         * Properties of a CMsgClientClanState_NameInfo.
         * @exports ICMsgClientClanState_NameInfo
         * @interface ICMsgClientClanState_NameInfo
         * @property {string|null} [clan_name] CMsgClientClanState_NameInfo clan_name
         * @property {Uint8Array|null} [sha_avatar] CMsgClientClanState_NameInfo sha_avatar
         */
    
        /**
         * Constructs a new CMsgClientClanState_NameInfo.
         * @exports CMsgClientClanState_NameInfo
         * @classdesc Represents a CMsgClientClanState_NameInfo.
         * @implements ICMsgClientClanState_NameInfo
         * @constructor
         * @param {ICMsgClientClanState_NameInfo=} [properties] Properties to set
         */
        function CMsgClientClanState_NameInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientClanState_NameInfo clan_name.
         * @member {string} clan_name
         * @memberof CMsgClientClanState_NameInfo
         * @instance
         */
        CMsgClientClanState_NameInfo.prototype.clan_name = "";
    
        /**
         * CMsgClientClanState_NameInfo sha_avatar.
         * @member {Uint8Array} sha_avatar
         * @memberof CMsgClientClanState_NameInfo
         * @instance
         */
        CMsgClientClanState_NameInfo.prototype.sha_avatar = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientClanState_NameInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {ICMsgClientClanState_NameInfo=} [properties] Properties to set
         * @returns {CMsgClientClanState_NameInfo} CMsgClientClanState_NameInfo instance
         */
        CMsgClientClanState_NameInfo.create = function create(properties) {
            return new CMsgClientClanState_NameInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientClanState_NameInfo message. Does not implicitly {@link CMsgClientClanState_NameInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {ICMsgClientClanState_NameInfo} message CMsgClientClanState_NameInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_NameInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clan_name != null && message.hasOwnProperty("clan_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.clan_name);
            if (message.sha_avatar != null && message.hasOwnProperty("sha_avatar"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.sha_avatar);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientClanState_NameInfo message, length delimited. Does not implicitly {@link CMsgClientClanState_NameInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {ICMsgClientClanState_NameInfo} message CMsgClientClanState_NameInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_NameInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientClanState_NameInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientClanState_NameInfo} CMsgClientClanState_NameInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_NameInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState_NameInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.clan_name = reader.string();
                    break;
                case 2:
                    message.sha_avatar = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientClanState_NameInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientClanState_NameInfo} CMsgClientClanState_NameInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_NameInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientClanState_NameInfo message.
         * @function verify
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientClanState_NameInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clan_name != null && message.hasOwnProperty("clan_name"))
                if (!$util.isString(message.clan_name))
                    return "clan_name: string expected";
            if (message.sha_avatar != null && message.hasOwnProperty("sha_avatar"))
                if (!(message.sha_avatar && typeof message.sha_avatar.length === "number" || $util.isString(message.sha_avatar)))
                    return "sha_avatar: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientClanState_NameInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientClanState_NameInfo} CMsgClientClanState_NameInfo
         */
        CMsgClientClanState_NameInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientClanState_NameInfo)
                return object;
            var message = new $root.CMsgClientClanState_NameInfo();
            if (object.clan_name != null)
                message.clan_name = String(object.clan_name);
            if (object.sha_avatar != null)
                if (typeof object.sha_avatar === "string")
                    $util.base64.decode(object.sha_avatar, message.sha_avatar = $util.newBuffer($util.base64.length(object.sha_avatar)), 0);
                else if (object.sha_avatar.length)
                    message.sha_avatar = object.sha_avatar;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientClanState_NameInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientClanState_NameInfo
         * @static
         * @param {CMsgClientClanState_NameInfo} message CMsgClientClanState_NameInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientClanState_NameInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.clan_name = "";
                if (options.bytes === String)
                    object.sha_avatar = "";
                else {
                    object.sha_avatar = [];
                    if (options.bytes !== Array)
                        object.sha_avatar = $util.newBuffer(object.sha_avatar);
                }
            }
            if (message.clan_name != null && message.hasOwnProperty("clan_name"))
                object.clan_name = message.clan_name;
            if (message.sha_avatar != null && message.hasOwnProperty("sha_avatar"))
                object.sha_avatar = options.bytes === String ? $util.base64.encode(message.sha_avatar, 0, message.sha_avatar.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_avatar) : message.sha_avatar;
            return object;
        };
    
        /**
         * Converts this CMsgClientClanState_NameInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientClanState_NameInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientClanState_NameInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientClanState_NameInfo;
    })();
    
    $root.CMsgClientClanState_UserCounts = (function() {
    
        /**
         * Properties of a CMsgClientClanState_UserCounts.
         * @exports ICMsgClientClanState_UserCounts
         * @interface ICMsgClientClanState_UserCounts
         * @property {number|null} [members] CMsgClientClanState_UserCounts members
         * @property {number|null} [online] CMsgClientClanState_UserCounts online
         * @property {number|null} [chatting] CMsgClientClanState_UserCounts chatting
         * @property {number|null} [in_game] CMsgClientClanState_UserCounts in_game
         * @property {number|null} [chat_room_members] CMsgClientClanState_UserCounts chat_room_members
         */
    
        /**
         * Constructs a new CMsgClientClanState_UserCounts.
         * @exports CMsgClientClanState_UserCounts
         * @classdesc Represents a CMsgClientClanState_UserCounts.
         * @implements ICMsgClientClanState_UserCounts
         * @constructor
         * @param {ICMsgClientClanState_UserCounts=} [properties] Properties to set
         */
        function CMsgClientClanState_UserCounts(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientClanState_UserCounts members.
         * @member {number} members
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         */
        CMsgClientClanState_UserCounts.prototype.members = 0;
    
        /**
         * CMsgClientClanState_UserCounts online.
         * @member {number} online
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         */
        CMsgClientClanState_UserCounts.prototype.online = 0;
    
        /**
         * CMsgClientClanState_UserCounts chatting.
         * @member {number} chatting
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         */
        CMsgClientClanState_UserCounts.prototype.chatting = 0;
    
        /**
         * CMsgClientClanState_UserCounts in_game.
         * @member {number} in_game
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         */
        CMsgClientClanState_UserCounts.prototype.in_game = 0;
    
        /**
         * CMsgClientClanState_UserCounts chat_room_members.
         * @member {number} chat_room_members
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         */
        CMsgClientClanState_UserCounts.prototype.chat_room_members = 0;
    
        /**
         * Creates a new CMsgClientClanState_UserCounts instance using the specified properties.
         * @function create
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {ICMsgClientClanState_UserCounts=} [properties] Properties to set
         * @returns {CMsgClientClanState_UserCounts} CMsgClientClanState_UserCounts instance
         */
        CMsgClientClanState_UserCounts.create = function create(properties) {
            return new CMsgClientClanState_UserCounts(properties);
        };
    
        /**
         * Encodes the specified CMsgClientClanState_UserCounts message. Does not implicitly {@link CMsgClientClanState_UserCounts.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {ICMsgClientClanState_UserCounts} message CMsgClientClanState_UserCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_UserCounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.members != null && message.hasOwnProperty("members"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.members);
            if (message.online != null && message.hasOwnProperty("online"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.online);
            if (message.chatting != null && message.hasOwnProperty("chatting"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.chatting);
            if (message.in_game != null && message.hasOwnProperty("in_game"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.in_game);
            if (message.chat_room_members != null && message.hasOwnProperty("chat_room_members"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.chat_room_members);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientClanState_UserCounts message, length delimited. Does not implicitly {@link CMsgClientClanState_UserCounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {ICMsgClientClanState_UserCounts} message CMsgClientClanState_UserCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState_UserCounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientClanState_UserCounts message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientClanState_UserCounts} CMsgClientClanState_UserCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_UserCounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState_UserCounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.members = reader.uint32();
                    break;
                case 2:
                    message.online = reader.uint32();
                    break;
                case 3:
                    message.chatting = reader.uint32();
                    break;
                case 4:
                    message.in_game = reader.uint32();
                    break;
                case 5:
                    message.chat_room_members = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientClanState_UserCounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientClanState_UserCounts} CMsgClientClanState_UserCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState_UserCounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientClanState_UserCounts message.
         * @function verify
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientClanState_UserCounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.members != null && message.hasOwnProperty("members"))
                if (!$util.isInteger(message.members))
                    return "members: integer expected";
            if (message.online != null && message.hasOwnProperty("online"))
                if (!$util.isInteger(message.online))
                    return "online: integer expected";
            if (message.chatting != null && message.hasOwnProperty("chatting"))
                if (!$util.isInteger(message.chatting))
                    return "chatting: integer expected";
            if (message.in_game != null && message.hasOwnProperty("in_game"))
                if (!$util.isInteger(message.in_game))
                    return "in_game: integer expected";
            if (message.chat_room_members != null && message.hasOwnProperty("chat_room_members"))
                if (!$util.isInteger(message.chat_room_members))
                    return "chat_room_members: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientClanState_UserCounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientClanState_UserCounts} CMsgClientClanState_UserCounts
         */
        CMsgClientClanState_UserCounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientClanState_UserCounts)
                return object;
            var message = new $root.CMsgClientClanState_UserCounts();
            if (object.members != null)
                message.members = object.members >>> 0;
            if (object.online != null)
                message.online = object.online >>> 0;
            if (object.chatting != null)
                message.chatting = object.chatting >>> 0;
            if (object.in_game != null)
                message.in_game = object.in_game >>> 0;
            if (object.chat_room_members != null)
                message.chat_room_members = object.chat_room_members >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientClanState_UserCounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientClanState_UserCounts
         * @static
         * @param {CMsgClientClanState_UserCounts} message CMsgClientClanState_UserCounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientClanState_UserCounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.members = 0;
                object.online = 0;
                object.chatting = 0;
                object.in_game = 0;
                object.chat_room_members = 0;
            }
            if (message.members != null && message.hasOwnProperty("members"))
                object.members = message.members;
            if (message.online != null && message.hasOwnProperty("online"))
                object.online = message.online;
            if (message.chatting != null && message.hasOwnProperty("chatting"))
                object.chatting = message.chatting;
            if (message.in_game != null && message.hasOwnProperty("in_game"))
                object.in_game = message.in_game;
            if (message.chat_room_members != null && message.hasOwnProperty("chat_room_members"))
                object.chat_room_members = message.chat_room_members;
            return object;
        };
    
        /**
         * Converts this CMsgClientClanState_UserCounts to JSON.
         * @function toJSON
         * @memberof CMsgClientClanState_UserCounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientClanState_UserCounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientClanState_UserCounts;
    })();
    
    $root.CMsgClientCreateFriendsGroup = (function() {
    
        /**
         * Properties of a CMsgClientCreateFriendsGroup.
         * @exports ICMsgClientCreateFriendsGroup
         * @interface ICMsgClientCreateFriendsGroup
         * @property {number|Long|null} [steamid] CMsgClientCreateFriendsGroup steamid
         * @property {string|null} [groupname] CMsgClientCreateFriendsGroup groupname
         * @property {Array.<number|Long>|null} [steamid_friends] CMsgClientCreateFriendsGroup steamid_friends
         */
    
        /**
         * Constructs a new CMsgClientCreateFriendsGroup.
         * @exports CMsgClientCreateFriendsGroup
         * @classdesc Represents a CMsgClientCreateFriendsGroup.
         * @implements ICMsgClientCreateFriendsGroup
         * @constructor
         * @param {ICMsgClientCreateFriendsGroup=} [properties] Properties to set
         */
        function CMsgClientCreateFriendsGroup(properties) {
            this.steamid_friends = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCreateFriendsGroup steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientCreateFriendsGroup
         * @instance
         */
        CMsgClientCreateFriendsGroup.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientCreateFriendsGroup groupname.
         * @member {string} groupname
         * @memberof CMsgClientCreateFriendsGroup
         * @instance
         */
        CMsgClientCreateFriendsGroup.prototype.groupname = "";
    
        /**
         * CMsgClientCreateFriendsGroup steamid_friends.
         * @member {Array.<number|Long>} steamid_friends
         * @memberof CMsgClientCreateFriendsGroup
         * @instance
         */
        CMsgClientCreateFriendsGroup.prototype.steamid_friends = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientCreateFriendsGroup instance using the specified properties.
         * @function create
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {ICMsgClientCreateFriendsGroup=} [properties] Properties to set
         * @returns {CMsgClientCreateFriendsGroup} CMsgClientCreateFriendsGroup instance
         */
        CMsgClientCreateFriendsGroup.create = function create(properties) {
            return new CMsgClientCreateFriendsGroup(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCreateFriendsGroup message. Does not implicitly {@link CMsgClientCreateFriendsGroup.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {ICMsgClientCreateFriendsGroup} message CMsgClientCreateFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCreateFriendsGroup.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.groupname);
            if (message.steamid_friends != null && message.steamid_friends.length)
                for (var i = 0; i < message.steamid_friends.length; ++i)
                    writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid_friends[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCreateFriendsGroup message, length delimited. Does not implicitly {@link CMsgClientCreateFriendsGroup.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {ICMsgClientCreateFriendsGroup} message CMsgClientCreateFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCreateFriendsGroup.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCreateFriendsGroup message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCreateFriendsGroup} CMsgClientCreateFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCreateFriendsGroup.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCreateFriendsGroup();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.groupname = reader.string();
                    break;
                case 3:
                    if (!(message.steamid_friends && message.steamid_friends.length))
                        message.steamid_friends = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_friends.push(reader.fixed64());
                    } else
                        message.steamid_friends.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCreateFriendsGroup message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCreateFriendsGroup} CMsgClientCreateFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCreateFriendsGroup.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCreateFriendsGroup message.
         * @function verify
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCreateFriendsGroup.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                if (!$util.isString(message.groupname))
                    return "groupname: string expected";
            if (message.steamid_friends != null && message.hasOwnProperty("steamid_friends")) {
                if (!Array.isArray(message.steamid_friends))
                    return "steamid_friends: array expected";
                for (var i = 0; i < message.steamid_friends.length; ++i)
                    if (!$util.isInteger(message.steamid_friends[i]) && !(message.steamid_friends[i] && $util.isInteger(message.steamid_friends[i].low) && $util.isInteger(message.steamid_friends[i].high)))
                        return "steamid_friends: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientCreateFriendsGroup message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCreateFriendsGroup} CMsgClientCreateFriendsGroup
         */
        CMsgClientCreateFriendsGroup.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCreateFriendsGroup)
                return object;
            var message = new $root.CMsgClientCreateFriendsGroup();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.groupname != null)
                message.groupname = String(object.groupname);
            if (object.steamid_friends) {
                if (!Array.isArray(object.steamid_friends))
                    throw TypeError(".CMsgClientCreateFriendsGroup.steamid_friends: array expected");
                message.steamid_friends = [];
                for (var i = 0; i < object.steamid_friends.length; ++i)
                    if ($util.Long)
                        (message.steamid_friends[i] = $util.Long.fromValue(object.steamid_friends[i])).unsigned = false;
                    else if (typeof object.steamid_friends[i] === "string")
                        message.steamid_friends[i] = parseInt(object.steamid_friends[i], 10);
                    else if (typeof object.steamid_friends[i] === "number")
                        message.steamid_friends[i] = object.steamid_friends[i];
                    else if (typeof object.steamid_friends[i] === "object")
                        message.steamid_friends[i] = new $util.LongBits(object.steamid_friends[i].low >>> 0, object.steamid_friends[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCreateFriendsGroup message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCreateFriendsGroup
         * @static
         * @param {CMsgClientCreateFriendsGroup} message CMsgClientCreateFriendsGroup
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCreateFriendsGroup.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_friends = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.groupname = "";
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                object.groupname = message.groupname;
            if (message.steamid_friends && message.steamid_friends.length) {
                object.steamid_friends = [];
                for (var j = 0; j < message.steamid_friends.length; ++j)
                    if (typeof message.steamid_friends[j] === "number")
                        object.steamid_friends[j] = options.longs === String ? String(message.steamid_friends[j]) : message.steamid_friends[j];
                    else
                        object.steamid_friends[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_friends[j]) : options.longs === Number ? new $util.LongBits(message.steamid_friends[j].low >>> 0, message.steamid_friends[j].high >>> 0).toNumber() : message.steamid_friends[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientCreateFriendsGroup to JSON.
         * @function toJSON
         * @memberof CMsgClientCreateFriendsGroup
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCreateFriendsGroup.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCreateFriendsGroup;
    })();
    
    $root.CMsgClientCreateFriendsGroupResponse = (function() {
    
        /**
         * Properties of a CMsgClientCreateFriendsGroupResponse.
         * @exports ICMsgClientCreateFriendsGroupResponse
         * @interface ICMsgClientCreateFriendsGroupResponse
         * @property {number|null} [eresult] CMsgClientCreateFriendsGroupResponse eresult
         * @property {number|null} [groupid] CMsgClientCreateFriendsGroupResponse groupid
         */
    
        /**
         * Constructs a new CMsgClientCreateFriendsGroupResponse.
         * @exports CMsgClientCreateFriendsGroupResponse
         * @classdesc Represents a CMsgClientCreateFriendsGroupResponse.
         * @implements ICMsgClientCreateFriendsGroupResponse
         * @constructor
         * @param {ICMsgClientCreateFriendsGroupResponse=} [properties] Properties to set
         */
        function CMsgClientCreateFriendsGroupResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCreateFriendsGroupResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @instance
         */
        CMsgClientCreateFriendsGroupResponse.prototype.eresult = 0;
    
        /**
         * CMsgClientCreateFriendsGroupResponse groupid.
         * @member {number} groupid
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @instance
         */
        CMsgClientCreateFriendsGroupResponse.prototype.groupid = 0;
    
        /**
         * Creates a new CMsgClientCreateFriendsGroupResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {ICMsgClientCreateFriendsGroupResponse=} [properties] Properties to set
         * @returns {CMsgClientCreateFriendsGroupResponse} CMsgClientCreateFriendsGroupResponse instance
         */
        CMsgClientCreateFriendsGroupResponse.create = function create(properties) {
            return new CMsgClientCreateFriendsGroupResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCreateFriendsGroupResponse message. Does not implicitly {@link CMsgClientCreateFriendsGroupResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {ICMsgClientCreateFriendsGroupResponse} message CMsgClientCreateFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCreateFriendsGroupResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.groupid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCreateFriendsGroupResponse message, length delimited. Does not implicitly {@link CMsgClientCreateFriendsGroupResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {ICMsgClientCreateFriendsGroupResponse} message CMsgClientCreateFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCreateFriendsGroupResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCreateFriendsGroupResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCreateFriendsGroupResponse} CMsgClientCreateFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCreateFriendsGroupResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCreateFriendsGroupResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    message.groupid = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCreateFriendsGroupResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCreateFriendsGroupResponse} CMsgClientCreateFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCreateFriendsGroupResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCreateFriendsGroupResponse message.
         * @function verify
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCreateFriendsGroupResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                if (!$util.isInteger(message.groupid))
                    return "groupid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCreateFriendsGroupResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCreateFriendsGroupResponse} CMsgClientCreateFriendsGroupResponse
         */
        CMsgClientCreateFriendsGroupResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCreateFriendsGroupResponse)
                return object;
            var message = new $root.CMsgClientCreateFriendsGroupResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.groupid != null)
                message.groupid = object.groupid | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCreateFriendsGroupResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @static
         * @param {CMsgClientCreateFriendsGroupResponse} message CMsgClientCreateFriendsGroupResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCreateFriendsGroupResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 0;
                object.groupid = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                object.groupid = message.groupid;
            return object;
        };
    
        /**
         * Converts this CMsgClientCreateFriendsGroupResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientCreateFriendsGroupResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCreateFriendsGroupResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCreateFriendsGroupResponse;
    })();
    
    $root.CMsgClientDeleteFriendsGroup = (function() {
    
        /**
         * Properties of a CMsgClientDeleteFriendsGroup.
         * @exports ICMsgClientDeleteFriendsGroup
         * @interface ICMsgClientDeleteFriendsGroup
         * @property {number|Long|null} [steamid] CMsgClientDeleteFriendsGroup steamid
         * @property {number|null} [groupid] CMsgClientDeleteFriendsGroup groupid
         */
    
        /**
         * Constructs a new CMsgClientDeleteFriendsGroup.
         * @exports CMsgClientDeleteFriendsGroup
         * @classdesc Represents a CMsgClientDeleteFriendsGroup.
         * @implements ICMsgClientDeleteFriendsGroup
         * @constructor
         * @param {ICMsgClientDeleteFriendsGroup=} [properties] Properties to set
         */
        function CMsgClientDeleteFriendsGroup(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDeleteFriendsGroup steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientDeleteFriendsGroup
         * @instance
         */
        CMsgClientDeleteFriendsGroup.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientDeleteFriendsGroup groupid.
         * @member {number} groupid
         * @memberof CMsgClientDeleteFriendsGroup
         * @instance
         */
        CMsgClientDeleteFriendsGroup.prototype.groupid = 0;
    
        /**
         * Creates a new CMsgClientDeleteFriendsGroup instance using the specified properties.
         * @function create
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {ICMsgClientDeleteFriendsGroup=} [properties] Properties to set
         * @returns {CMsgClientDeleteFriendsGroup} CMsgClientDeleteFriendsGroup instance
         */
        CMsgClientDeleteFriendsGroup.create = function create(properties) {
            return new CMsgClientDeleteFriendsGroup(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDeleteFriendsGroup message. Does not implicitly {@link CMsgClientDeleteFriendsGroup.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {ICMsgClientDeleteFriendsGroup} message CMsgClientDeleteFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeleteFriendsGroup.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.groupid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDeleteFriendsGroup message, length delimited. Does not implicitly {@link CMsgClientDeleteFriendsGroup.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {ICMsgClientDeleteFriendsGroup} message CMsgClientDeleteFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeleteFriendsGroup.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDeleteFriendsGroup message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDeleteFriendsGroup} CMsgClientDeleteFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeleteFriendsGroup.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDeleteFriendsGroup();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.groupid = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDeleteFriendsGroup message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDeleteFriendsGroup} CMsgClientDeleteFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeleteFriendsGroup.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDeleteFriendsGroup message.
         * @function verify
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDeleteFriendsGroup.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                if (!$util.isInteger(message.groupid))
                    return "groupid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDeleteFriendsGroup message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDeleteFriendsGroup} CMsgClientDeleteFriendsGroup
         */
        CMsgClientDeleteFriendsGroup.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDeleteFriendsGroup)
                return object;
            var message = new $root.CMsgClientDeleteFriendsGroup();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.groupid != null)
                message.groupid = object.groupid | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDeleteFriendsGroup message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDeleteFriendsGroup
         * @static
         * @param {CMsgClientDeleteFriendsGroup} message CMsgClientDeleteFriendsGroup
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDeleteFriendsGroup.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.groupid = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                object.groupid = message.groupid;
            return object;
        };
    
        /**
         * Converts this CMsgClientDeleteFriendsGroup to JSON.
         * @function toJSON
         * @memberof CMsgClientDeleteFriendsGroup
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDeleteFriendsGroup.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDeleteFriendsGroup;
    })();
    
    $root.CMsgClientDeleteFriendsGroupResponse = (function() {
    
        /**
         * Properties of a CMsgClientDeleteFriendsGroupResponse.
         * @exports ICMsgClientDeleteFriendsGroupResponse
         * @interface ICMsgClientDeleteFriendsGroupResponse
         * @property {number|null} [eresult] CMsgClientDeleteFriendsGroupResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientDeleteFriendsGroupResponse.
         * @exports CMsgClientDeleteFriendsGroupResponse
         * @classdesc Represents a CMsgClientDeleteFriendsGroupResponse.
         * @implements ICMsgClientDeleteFriendsGroupResponse
         * @constructor
         * @param {ICMsgClientDeleteFriendsGroupResponse=} [properties] Properties to set
         */
        function CMsgClientDeleteFriendsGroupResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDeleteFriendsGroupResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @instance
         */
        CMsgClientDeleteFriendsGroupResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientDeleteFriendsGroupResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {ICMsgClientDeleteFriendsGroupResponse=} [properties] Properties to set
         * @returns {CMsgClientDeleteFriendsGroupResponse} CMsgClientDeleteFriendsGroupResponse instance
         */
        CMsgClientDeleteFriendsGroupResponse.create = function create(properties) {
            return new CMsgClientDeleteFriendsGroupResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDeleteFriendsGroupResponse message. Does not implicitly {@link CMsgClientDeleteFriendsGroupResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {ICMsgClientDeleteFriendsGroupResponse} message CMsgClientDeleteFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeleteFriendsGroupResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDeleteFriendsGroupResponse message, length delimited. Does not implicitly {@link CMsgClientDeleteFriendsGroupResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {ICMsgClientDeleteFriendsGroupResponse} message CMsgClientDeleteFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeleteFriendsGroupResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDeleteFriendsGroupResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDeleteFriendsGroupResponse} CMsgClientDeleteFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeleteFriendsGroupResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDeleteFriendsGroupResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDeleteFriendsGroupResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDeleteFriendsGroupResponse} CMsgClientDeleteFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeleteFriendsGroupResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDeleteFriendsGroupResponse message.
         * @function verify
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDeleteFriendsGroupResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDeleteFriendsGroupResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDeleteFriendsGroupResponse} CMsgClientDeleteFriendsGroupResponse
         */
        CMsgClientDeleteFriendsGroupResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDeleteFriendsGroupResponse)
                return object;
            var message = new $root.CMsgClientDeleteFriendsGroupResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDeleteFriendsGroupResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @static
         * @param {CMsgClientDeleteFriendsGroupResponse} message CMsgClientDeleteFriendsGroupResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDeleteFriendsGroupResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientDeleteFriendsGroupResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientDeleteFriendsGroupResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDeleteFriendsGroupResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDeleteFriendsGroupResponse;
    })();
    
    $root.CMsgClientEmoticonList = (function() {
    
        /**
         * Properties of a CMsgClientEmoticonList.
         * @exports ICMsgClientEmoticonList
         * @interface ICMsgClientEmoticonList
         * @property {Array.<ICMsgClientEmoticonList_Emoticon>|null} [emoticons] CMsgClientEmoticonList emoticons
         * @property {Array.<ICMsgClientEmoticonList_Sticker>|null} [stickers] CMsgClientEmoticonList stickers
         * @property {Array.<ICMsgClientEmoticonList_Effect>|null} [effects] CMsgClientEmoticonList effects
         */
    
        /**
         * Constructs a new CMsgClientEmoticonList.
         * @exports CMsgClientEmoticonList
         * @classdesc Represents a CMsgClientEmoticonList.
         * @implements ICMsgClientEmoticonList
         * @constructor
         * @param {ICMsgClientEmoticonList=} [properties] Properties to set
         */
        function CMsgClientEmoticonList(properties) {
            this.emoticons = [];
            this.stickers = [];
            this.effects = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientEmoticonList emoticons.
         * @member {Array.<ICMsgClientEmoticonList_Emoticon>} emoticons
         * @memberof CMsgClientEmoticonList
         * @instance
         */
        CMsgClientEmoticonList.prototype.emoticons = $util.emptyArray;
    
        /**
         * CMsgClientEmoticonList stickers.
         * @member {Array.<ICMsgClientEmoticonList_Sticker>} stickers
         * @memberof CMsgClientEmoticonList
         * @instance
         */
        CMsgClientEmoticonList.prototype.stickers = $util.emptyArray;
    
        /**
         * CMsgClientEmoticonList effects.
         * @member {Array.<ICMsgClientEmoticonList_Effect>} effects
         * @memberof CMsgClientEmoticonList
         * @instance
         */
        CMsgClientEmoticonList.prototype.effects = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientEmoticonList instance using the specified properties.
         * @function create
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {ICMsgClientEmoticonList=} [properties] Properties to set
         * @returns {CMsgClientEmoticonList} CMsgClientEmoticonList instance
         */
        CMsgClientEmoticonList.create = function create(properties) {
            return new CMsgClientEmoticonList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList message. Does not implicitly {@link CMsgClientEmoticonList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {ICMsgClientEmoticonList} message CMsgClientEmoticonList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.emoticons != null && message.emoticons.length)
                for (var i = 0; i < message.emoticons.length; ++i)
                    $root.CMsgClientEmoticonList_Emoticon.encode(message.emoticons[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.stickers != null && message.stickers.length)
                for (var i = 0; i < message.stickers.length; ++i)
                    $root.CMsgClientEmoticonList_Sticker.encode(message.stickers[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.effects != null && message.effects.length)
                for (var i = 0; i < message.effects.length; ++i)
                    $root.CMsgClientEmoticonList_Effect.encode(message.effects[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList message, length delimited. Does not implicitly {@link CMsgClientEmoticonList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {ICMsgClientEmoticonList} message CMsgClientEmoticonList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientEmoticonList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientEmoticonList} CMsgClientEmoticonList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientEmoticonList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.emoticons && message.emoticons.length))
                        message.emoticons = [];
                    message.emoticons.push($root.CMsgClientEmoticonList_Emoticon.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.stickers && message.stickers.length))
                        message.stickers = [];
                    message.stickers.push($root.CMsgClientEmoticonList_Sticker.decode(reader, reader.uint32()));
                    break;
                case 3:
                    if (!(message.effects && message.effects.length))
                        message.effects = [];
                    message.effects.push($root.CMsgClientEmoticonList_Effect.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientEmoticonList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientEmoticonList} CMsgClientEmoticonList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientEmoticonList message.
         * @function verify
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientEmoticonList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.emoticons != null && message.hasOwnProperty("emoticons")) {
                if (!Array.isArray(message.emoticons))
                    return "emoticons: array expected";
                for (var i = 0; i < message.emoticons.length; ++i) {
                    var error = $root.CMsgClientEmoticonList_Emoticon.verify(message.emoticons[i]);
                    if (error)
                        return "emoticons." + error;
                }
            }
            if (message.stickers != null && message.hasOwnProperty("stickers")) {
                if (!Array.isArray(message.stickers))
                    return "stickers: array expected";
                for (var i = 0; i < message.stickers.length; ++i) {
                    var error = $root.CMsgClientEmoticonList_Sticker.verify(message.stickers[i]);
                    if (error)
                        return "stickers." + error;
                }
            }
            if (message.effects != null && message.hasOwnProperty("effects")) {
                if (!Array.isArray(message.effects))
                    return "effects: array expected";
                for (var i = 0; i < message.effects.length; ++i) {
                    var error = $root.CMsgClientEmoticonList_Effect.verify(message.effects[i]);
                    if (error)
                        return "effects." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientEmoticonList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientEmoticonList} CMsgClientEmoticonList
         */
        CMsgClientEmoticonList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientEmoticonList)
                return object;
            var message = new $root.CMsgClientEmoticonList();
            if (object.emoticons) {
                if (!Array.isArray(object.emoticons))
                    throw TypeError(".CMsgClientEmoticonList.emoticons: array expected");
                message.emoticons = [];
                for (var i = 0; i < object.emoticons.length; ++i) {
                    if (typeof object.emoticons[i] !== "object")
                        throw TypeError(".CMsgClientEmoticonList.emoticons: object expected");
                    message.emoticons[i] = $root.CMsgClientEmoticonList_Emoticon.fromObject(object.emoticons[i]);
                }
            }
            if (object.stickers) {
                if (!Array.isArray(object.stickers))
                    throw TypeError(".CMsgClientEmoticonList.stickers: array expected");
                message.stickers = [];
                for (var i = 0; i < object.stickers.length; ++i) {
                    if (typeof object.stickers[i] !== "object")
                        throw TypeError(".CMsgClientEmoticonList.stickers: object expected");
                    message.stickers[i] = $root.CMsgClientEmoticonList_Sticker.fromObject(object.stickers[i]);
                }
            }
            if (object.effects) {
                if (!Array.isArray(object.effects))
                    throw TypeError(".CMsgClientEmoticonList.effects: array expected");
                message.effects = [];
                for (var i = 0; i < object.effects.length; ++i) {
                    if (typeof object.effects[i] !== "object")
                        throw TypeError(".CMsgClientEmoticonList.effects: object expected");
                    message.effects[i] = $root.CMsgClientEmoticonList_Effect.fromObject(object.effects[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientEmoticonList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientEmoticonList
         * @static
         * @param {CMsgClientEmoticonList} message CMsgClientEmoticonList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientEmoticonList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.emoticons = [];
                object.stickers = [];
                object.effects = [];
            }
            if (message.emoticons && message.emoticons.length) {
                object.emoticons = [];
                for (var j = 0; j < message.emoticons.length; ++j)
                    object.emoticons[j] = $root.CMsgClientEmoticonList_Emoticon.toObject(message.emoticons[j], options);
            }
            if (message.stickers && message.stickers.length) {
                object.stickers = [];
                for (var j = 0; j < message.stickers.length; ++j)
                    object.stickers[j] = $root.CMsgClientEmoticonList_Sticker.toObject(message.stickers[j], options);
            }
            if (message.effects && message.effects.length) {
                object.effects = [];
                for (var j = 0; j < message.effects.length; ++j)
                    object.effects[j] = $root.CMsgClientEmoticonList_Effect.toObject(message.effects[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientEmoticonList to JSON.
         * @function toJSON
         * @memberof CMsgClientEmoticonList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientEmoticonList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientEmoticonList;
    })();
    
    $root.CMsgClientEmoticonList_Effect = (function() {
    
        /**
         * Properties of a CMsgClientEmoticonList_Effect.
         * @exports ICMsgClientEmoticonList_Effect
         * @interface ICMsgClientEmoticonList_Effect
         * @property {string|null} [name] CMsgClientEmoticonList_Effect name
         * @property {number|null} [count] CMsgClientEmoticonList_Effect count
         * @property {number|null} [time_received] CMsgClientEmoticonList_Effect time_received
         * @property {boolean|null} [infinite_use] CMsgClientEmoticonList_Effect infinite_use
         * @property {number|null} [appid] CMsgClientEmoticonList_Effect appid
         */
    
        /**
         * Constructs a new CMsgClientEmoticonList_Effect.
         * @exports CMsgClientEmoticonList_Effect
         * @classdesc Represents a CMsgClientEmoticonList_Effect.
         * @implements ICMsgClientEmoticonList_Effect
         * @constructor
         * @param {ICMsgClientEmoticonList_Effect=} [properties] Properties to set
         */
        function CMsgClientEmoticonList_Effect(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientEmoticonList_Effect name.
         * @member {string} name
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         */
        CMsgClientEmoticonList_Effect.prototype.name = "";
    
        /**
         * CMsgClientEmoticonList_Effect count.
         * @member {number} count
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         */
        CMsgClientEmoticonList_Effect.prototype.count = 0;
    
        /**
         * CMsgClientEmoticonList_Effect time_received.
         * @member {number} time_received
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         */
        CMsgClientEmoticonList_Effect.prototype.time_received = 0;
    
        /**
         * CMsgClientEmoticonList_Effect infinite_use.
         * @member {boolean} infinite_use
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         */
        CMsgClientEmoticonList_Effect.prototype.infinite_use = false;
    
        /**
         * CMsgClientEmoticonList_Effect appid.
         * @member {number} appid
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         */
        CMsgClientEmoticonList_Effect.prototype.appid = 0;
    
        /**
         * Creates a new CMsgClientEmoticonList_Effect instance using the specified properties.
         * @function create
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {ICMsgClientEmoticonList_Effect=} [properties] Properties to set
         * @returns {CMsgClientEmoticonList_Effect} CMsgClientEmoticonList_Effect instance
         */
        CMsgClientEmoticonList_Effect.create = function create(properties) {
            return new CMsgClientEmoticonList_Effect(properties);
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Effect message. Does not implicitly {@link CMsgClientEmoticonList_Effect.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {ICMsgClientEmoticonList_Effect} message CMsgClientEmoticonList_Effect message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Effect.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            if (message.count != null && message.hasOwnProperty("count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_received);
            if (message.infinite_use != null && message.hasOwnProperty("infinite_use"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.infinite_use);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Effect message, length delimited. Does not implicitly {@link CMsgClientEmoticonList_Effect.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {ICMsgClientEmoticonList_Effect} message CMsgClientEmoticonList_Effect message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Effect.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Effect message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientEmoticonList_Effect} CMsgClientEmoticonList_Effect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Effect.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientEmoticonList_Effect();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.count = reader.int32();
                    break;
                case 3:
                    message.time_received = reader.uint32();
                    break;
                case 4:
                    message.infinite_use = reader.bool();
                    break;
                case 5:
                    message.appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Effect message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientEmoticonList_Effect} CMsgClientEmoticonList_Effect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Effect.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientEmoticonList_Effect message.
         * @function verify
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientEmoticonList_Effect.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.count != null && message.hasOwnProperty("count"))
                if (!$util.isInteger(message.count))
                    return "count: integer expected";
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                if (!$util.isInteger(message.time_received))
                    return "time_received: integer expected";
            if (message.infinite_use != null && message.hasOwnProperty("infinite_use"))
                if (typeof message.infinite_use !== "boolean")
                    return "infinite_use: boolean expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientEmoticonList_Effect message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientEmoticonList_Effect} CMsgClientEmoticonList_Effect
         */
        CMsgClientEmoticonList_Effect.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientEmoticonList_Effect)
                return object;
            var message = new $root.CMsgClientEmoticonList_Effect();
            if (object.name != null)
                message.name = String(object.name);
            if (object.count != null)
                message.count = object.count | 0;
            if (object.time_received != null)
                message.time_received = object.time_received >>> 0;
            if (object.infinite_use != null)
                message.infinite_use = Boolean(object.infinite_use);
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientEmoticonList_Effect message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientEmoticonList_Effect
         * @static
         * @param {CMsgClientEmoticonList_Effect} message CMsgClientEmoticonList_Effect
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientEmoticonList_Effect.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name = "";
                object.count = 0;
                object.time_received = 0;
                object.infinite_use = false;
                object.appid = 0;
            }
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.count != null && message.hasOwnProperty("count"))
                object.count = message.count;
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                object.time_received = message.time_received;
            if (message.infinite_use != null && message.hasOwnProperty("infinite_use"))
                object.infinite_use = message.infinite_use;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientEmoticonList_Effect to JSON.
         * @function toJSON
         * @memberof CMsgClientEmoticonList_Effect
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientEmoticonList_Effect.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientEmoticonList_Effect;
    })();
    
    $root.CMsgClientEmoticonList_Emoticon = (function() {
    
        /**
         * Properties of a CMsgClientEmoticonList_Emoticon.
         * @exports ICMsgClientEmoticonList_Emoticon
         * @interface ICMsgClientEmoticonList_Emoticon
         * @property {string|null} [name] CMsgClientEmoticonList_Emoticon name
         * @property {number|null} [count] CMsgClientEmoticonList_Emoticon count
         * @property {number|null} [time_last_used] CMsgClientEmoticonList_Emoticon time_last_used
         * @property {number|null} [use_count] CMsgClientEmoticonList_Emoticon use_count
         * @property {number|null} [time_received] CMsgClientEmoticonList_Emoticon time_received
         * @property {number|null} [appid] CMsgClientEmoticonList_Emoticon appid
         */
    
        /**
         * Constructs a new CMsgClientEmoticonList_Emoticon.
         * @exports CMsgClientEmoticonList_Emoticon
         * @classdesc Represents a CMsgClientEmoticonList_Emoticon.
         * @implements ICMsgClientEmoticonList_Emoticon
         * @constructor
         * @param {ICMsgClientEmoticonList_Emoticon=} [properties] Properties to set
         */
        function CMsgClientEmoticonList_Emoticon(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientEmoticonList_Emoticon name.
         * @member {string} name
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.name = "";
    
        /**
         * CMsgClientEmoticonList_Emoticon count.
         * @member {number} count
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.count = 0;
    
        /**
         * CMsgClientEmoticonList_Emoticon time_last_used.
         * @member {number} time_last_used
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.time_last_used = 0;
    
        /**
         * CMsgClientEmoticonList_Emoticon use_count.
         * @member {number} use_count
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.use_count = 0;
    
        /**
         * CMsgClientEmoticonList_Emoticon time_received.
         * @member {number} time_received
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.time_received = 0;
    
        /**
         * CMsgClientEmoticonList_Emoticon appid.
         * @member {number} appid
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         */
        CMsgClientEmoticonList_Emoticon.prototype.appid = 0;
    
        /**
         * Creates a new CMsgClientEmoticonList_Emoticon instance using the specified properties.
         * @function create
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {ICMsgClientEmoticonList_Emoticon=} [properties] Properties to set
         * @returns {CMsgClientEmoticonList_Emoticon} CMsgClientEmoticonList_Emoticon instance
         */
        CMsgClientEmoticonList_Emoticon.create = function create(properties) {
            return new CMsgClientEmoticonList_Emoticon(properties);
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Emoticon message. Does not implicitly {@link CMsgClientEmoticonList_Emoticon.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {ICMsgClientEmoticonList_Emoticon} message CMsgClientEmoticonList_Emoticon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Emoticon.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            if (message.count != null && message.hasOwnProperty("count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_last_used);
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.use_count);
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time_received);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Emoticon message, length delimited. Does not implicitly {@link CMsgClientEmoticonList_Emoticon.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {ICMsgClientEmoticonList_Emoticon} message CMsgClientEmoticonList_Emoticon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Emoticon.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Emoticon message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientEmoticonList_Emoticon} CMsgClientEmoticonList_Emoticon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Emoticon.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientEmoticonList_Emoticon();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.count = reader.int32();
                    break;
                case 3:
                    message.time_last_used = reader.uint32();
                    break;
                case 4:
                    message.use_count = reader.uint32();
                    break;
                case 5:
                    message.time_received = reader.uint32();
                    break;
                case 6:
                    message.appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Emoticon message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientEmoticonList_Emoticon} CMsgClientEmoticonList_Emoticon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Emoticon.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientEmoticonList_Emoticon message.
         * @function verify
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientEmoticonList_Emoticon.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.count != null && message.hasOwnProperty("count"))
                if (!$util.isInteger(message.count))
                    return "count: integer expected";
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                if (!$util.isInteger(message.time_last_used))
                    return "time_last_used: integer expected";
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                if (!$util.isInteger(message.use_count))
                    return "use_count: integer expected";
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                if (!$util.isInteger(message.time_received))
                    return "time_received: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientEmoticonList_Emoticon message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientEmoticonList_Emoticon} CMsgClientEmoticonList_Emoticon
         */
        CMsgClientEmoticonList_Emoticon.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientEmoticonList_Emoticon)
                return object;
            var message = new $root.CMsgClientEmoticonList_Emoticon();
            if (object.name != null)
                message.name = String(object.name);
            if (object.count != null)
                message.count = object.count | 0;
            if (object.time_last_used != null)
                message.time_last_used = object.time_last_used >>> 0;
            if (object.use_count != null)
                message.use_count = object.use_count >>> 0;
            if (object.time_received != null)
                message.time_received = object.time_received >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientEmoticonList_Emoticon message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientEmoticonList_Emoticon
         * @static
         * @param {CMsgClientEmoticonList_Emoticon} message CMsgClientEmoticonList_Emoticon
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientEmoticonList_Emoticon.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name = "";
                object.count = 0;
                object.time_last_used = 0;
                object.use_count = 0;
                object.time_received = 0;
                object.appid = 0;
            }
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.count != null && message.hasOwnProperty("count"))
                object.count = message.count;
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                object.time_last_used = message.time_last_used;
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                object.use_count = message.use_count;
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                object.time_received = message.time_received;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientEmoticonList_Emoticon to JSON.
         * @function toJSON
         * @memberof CMsgClientEmoticonList_Emoticon
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientEmoticonList_Emoticon.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientEmoticonList_Emoticon;
    })();
    
    $root.CMsgClientEmoticonList_Sticker = (function() {
    
        /**
         * Properties of a CMsgClientEmoticonList_Sticker.
         * @exports ICMsgClientEmoticonList_Sticker
         * @interface ICMsgClientEmoticonList_Sticker
         * @property {string|null} [name] CMsgClientEmoticonList_Sticker name
         * @property {number|null} [count] CMsgClientEmoticonList_Sticker count
         * @property {number|null} [time_received] CMsgClientEmoticonList_Sticker time_received
         * @property {number|null} [appid] CMsgClientEmoticonList_Sticker appid
         * @property {number|null} [time_last_used] CMsgClientEmoticonList_Sticker time_last_used
         * @property {number|null} [use_count] CMsgClientEmoticonList_Sticker use_count
         */
    
        /**
         * Constructs a new CMsgClientEmoticonList_Sticker.
         * @exports CMsgClientEmoticonList_Sticker
         * @classdesc Represents a CMsgClientEmoticonList_Sticker.
         * @implements ICMsgClientEmoticonList_Sticker
         * @constructor
         * @param {ICMsgClientEmoticonList_Sticker=} [properties] Properties to set
         */
        function CMsgClientEmoticonList_Sticker(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientEmoticonList_Sticker name.
         * @member {string} name
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.name = "";
    
        /**
         * CMsgClientEmoticonList_Sticker count.
         * @member {number} count
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.count = 0;
    
        /**
         * CMsgClientEmoticonList_Sticker time_received.
         * @member {number} time_received
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.time_received = 0;
    
        /**
         * CMsgClientEmoticonList_Sticker appid.
         * @member {number} appid
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.appid = 0;
    
        /**
         * CMsgClientEmoticonList_Sticker time_last_used.
         * @member {number} time_last_used
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.time_last_used = 0;
    
        /**
         * CMsgClientEmoticonList_Sticker use_count.
         * @member {number} use_count
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         */
        CMsgClientEmoticonList_Sticker.prototype.use_count = 0;
    
        /**
         * Creates a new CMsgClientEmoticonList_Sticker instance using the specified properties.
         * @function create
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {ICMsgClientEmoticonList_Sticker=} [properties] Properties to set
         * @returns {CMsgClientEmoticonList_Sticker} CMsgClientEmoticonList_Sticker instance
         */
        CMsgClientEmoticonList_Sticker.create = function create(properties) {
            return new CMsgClientEmoticonList_Sticker(properties);
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Sticker message. Does not implicitly {@link CMsgClientEmoticonList_Sticker.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {ICMsgClientEmoticonList_Sticker} message CMsgClientEmoticonList_Sticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Sticker.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            if (message.count != null && message.hasOwnProperty("count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_received);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.appid);
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.time_last_used);
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.use_count);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientEmoticonList_Sticker message, length delimited. Does not implicitly {@link CMsgClientEmoticonList_Sticker.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {ICMsgClientEmoticonList_Sticker} message CMsgClientEmoticonList_Sticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmoticonList_Sticker.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Sticker message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientEmoticonList_Sticker} CMsgClientEmoticonList_Sticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Sticker.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientEmoticonList_Sticker();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.name = reader.string();
                    break;
                case 2:
                    message.count = reader.int32();
                    break;
                case 3:
                    message.time_received = reader.uint32();
                    break;
                case 4:
                    message.appid = reader.uint32();
                    break;
                case 5:
                    message.time_last_used = reader.uint32();
                    break;
                case 6:
                    message.use_count = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientEmoticonList_Sticker message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientEmoticonList_Sticker} CMsgClientEmoticonList_Sticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmoticonList_Sticker.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientEmoticonList_Sticker message.
         * @function verify
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientEmoticonList_Sticker.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.count != null && message.hasOwnProperty("count"))
                if (!$util.isInteger(message.count))
                    return "count: integer expected";
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                if (!$util.isInteger(message.time_received))
                    return "time_received: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                if (!$util.isInteger(message.time_last_used))
                    return "time_last_used: integer expected";
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                if (!$util.isInteger(message.use_count))
                    return "use_count: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientEmoticonList_Sticker message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientEmoticonList_Sticker} CMsgClientEmoticonList_Sticker
         */
        CMsgClientEmoticonList_Sticker.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientEmoticonList_Sticker)
                return object;
            var message = new $root.CMsgClientEmoticonList_Sticker();
            if (object.name != null)
                message.name = String(object.name);
            if (object.count != null)
                message.count = object.count | 0;
            if (object.time_received != null)
                message.time_received = object.time_received >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.time_last_used != null)
                message.time_last_used = object.time_last_used >>> 0;
            if (object.use_count != null)
                message.use_count = object.use_count >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientEmoticonList_Sticker message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientEmoticonList_Sticker
         * @static
         * @param {CMsgClientEmoticonList_Sticker} message CMsgClientEmoticonList_Sticker
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientEmoticonList_Sticker.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name = "";
                object.count = 0;
                object.time_received = 0;
                object.appid = 0;
                object.time_last_used = 0;
                object.use_count = 0;
            }
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.count != null && message.hasOwnProperty("count"))
                object.count = message.count;
            if (message.time_received != null && message.hasOwnProperty("time_received"))
                object.time_received = message.time_received;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.time_last_used != null && message.hasOwnProperty("time_last_used"))
                object.time_last_used = message.time_last_used;
            if (message.use_count != null && message.hasOwnProperty("use_count"))
                object.use_count = message.use_count;
            return object;
        };
    
        /**
         * Converts this CMsgClientEmoticonList_Sticker to JSON.
         * @function toJSON
         * @memberof CMsgClientEmoticonList_Sticker
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientEmoticonList_Sticker.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientEmoticonList_Sticker;
    })();
    
    $root.CMsgClientGetClanActivityCounts = (function() {
    
        /**
         * Properties of a CMsgClientGetClanActivityCounts.
         * @exports ICMsgClientGetClanActivityCounts
         * @interface ICMsgClientGetClanActivityCounts
         * @property {Array.<number|Long>|null} [steamid_clans] CMsgClientGetClanActivityCounts steamid_clans
         */
    
        /**
         * Constructs a new CMsgClientGetClanActivityCounts.
         * @exports CMsgClientGetClanActivityCounts
         * @classdesc Represents a CMsgClientGetClanActivityCounts.
         * @implements ICMsgClientGetClanActivityCounts
         * @constructor
         * @param {ICMsgClientGetClanActivityCounts=} [properties] Properties to set
         */
        function CMsgClientGetClanActivityCounts(properties) {
            this.steamid_clans = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClanActivityCounts steamid_clans.
         * @member {Array.<number|Long>} steamid_clans
         * @memberof CMsgClientGetClanActivityCounts
         * @instance
         */
        CMsgClientGetClanActivityCounts.prototype.steamid_clans = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGetClanActivityCounts instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts=} [properties] Properties to set
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts instance
         */
        CMsgClientGetClanActivityCounts.create = function create(properties) {
            return new CMsgClientGetClanActivityCounts(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCounts message. Does not implicitly {@link CMsgClientGetClanActivityCounts.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_clans != null && message.steamid_clans.length)
                for (var i = 0; i < message.steamid_clans.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.steamid_clans[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCounts message, length delimited. Does not implicitly {@link CMsgClientGetClanActivityCounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCounts message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClanActivityCounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.steamid_clans && message.steamid_clans.length))
                        message.steamid_clans = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_clans.push(reader.uint64());
                    } else
                        message.steamid_clans.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClanActivityCounts message.
         * @function verify
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClanActivityCounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_clans != null && message.hasOwnProperty("steamid_clans")) {
                if (!Array.isArray(message.steamid_clans))
                    return "steamid_clans: array expected";
                for (var i = 0; i < message.steamid_clans.length; ++i)
                    if (!$util.isInteger(message.steamid_clans[i]) && !(message.steamid_clans[i] && $util.isInteger(message.steamid_clans[i].low) && $util.isInteger(message.steamid_clans[i].high)))
                        return "steamid_clans: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClanActivityCounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         */
        CMsgClientGetClanActivityCounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClanActivityCounts)
                return object;
            var message = new $root.CMsgClientGetClanActivityCounts();
            if (object.steamid_clans) {
                if (!Array.isArray(object.steamid_clans))
                    throw TypeError(".CMsgClientGetClanActivityCounts.steamid_clans: array expected");
                message.steamid_clans = [];
                for (var i = 0; i < object.steamid_clans.length; ++i)
                    if ($util.Long)
                        (message.steamid_clans[i] = $util.Long.fromValue(object.steamid_clans[i])).unsigned = true;
                    else if (typeof object.steamid_clans[i] === "string")
                        message.steamid_clans[i] = parseInt(object.steamid_clans[i], 10);
                    else if (typeof object.steamid_clans[i] === "number")
                        message.steamid_clans[i] = object.steamid_clans[i];
                    else if (typeof object.steamid_clans[i] === "object")
                        message.steamid_clans[i] = new $util.LongBits(object.steamid_clans[i].low >>> 0, object.steamid_clans[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClanActivityCounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {CMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClanActivityCounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_clans = [];
            if (message.steamid_clans && message.steamid_clans.length) {
                object.steamid_clans = [];
                for (var j = 0; j < message.steamid_clans.length; ++j)
                    if (typeof message.steamid_clans[j] === "number")
                        object.steamid_clans[j] = options.longs === String ? String(message.steamid_clans[j]) : message.steamid_clans[j];
                    else
                        object.steamid_clans[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clans[j]) : options.longs === Number ? new $util.LongBits(message.steamid_clans[j].low >>> 0, message.steamid_clans[j].high >>> 0).toNumber(true) : message.steamid_clans[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClanActivityCounts to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClanActivityCounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClanActivityCounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetClanActivityCounts;
    })();
    
    $root.CMsgClientGetEmoticonList = (function() {
    
        /**
         * Properties of a CMsgClientGetEmoticonList.
         * @exports ICMsgClientGetEmoticonList
         * @interface ICMsgClientGetEmoticonList
         */
    
        /**
         * Constructs a new CMsgClientGetEmoticonList.
         * @exports CMsgClientGetEmoticonList
         * @classdesc Represents a CMsgClientGetEmoticonList.
         * @implements ICMsgClientGetEmoticonList
         * @constructor
         * @param {ICMsgClientGetEmoticonList=} [properties] Properties to set
         */
        function CMsgClientGetEmoticonList(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientGetEmoticonList instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {ICMsgClientGetEmoticonList=} [properties] Properties to set
         * @returns {CMsgClientGetEmoticonList} CMsgClientGetEmoticonList instance
         */
        CMsgClientGetEmoticonList.create = function create(properties) {
            return new CMsgClientGetEmoticonList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetEmoticonList message. Does not implicitly {@link CMsgClientGetEmoticonList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {ICMsgClientGetEmoticonList} message CMsgClientGetEmoticonList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetEmoticonList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetEmoticonList message, length delimited. Does not implicitly {@link CMsgClientGetEmoticonList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {ICMsgClientGetEmoticonList} message CMsgClientGetEmoticonList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetEmoticonList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetEmoticonList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetEmoticonList} CMsgClientGetEmoticonList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetEmoticonList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetEmoticonList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetEmoticonList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetEmoticonList} CMsgClientGetEmoticonList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetEmoticonList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetEmoticonList message.
         * @function verify
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetEmoticonList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetEmoticonList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetEmoticonList} CMsgClientGetEmoticonList
         */
        CMsgClientGetEmoticonList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetEmoticonList)
                return object;
            return new $root.CMsgClientGetEmoticonList();
        };
    
        /**
         * Creates a plain object from a CMsgClientGetEmoticonList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetEmoticonList
         * @static
         * @param {CMsgClientGetEmoticonList} message CMsgClientGetEmoticonList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetEmoticonList.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientGetEmoticonList to JSON.
         * @function toJSON
         * @memberof CMsgClientGetEmoticonList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetEmoticonList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetEmoticonList;
    })();
    
    $root.CMsgClientHeartBeat = (function() {
    
        /**
         * Properties of a CMsgClientHeartBeat.
         * @exports ICMsgClientHeartBeat
         * @interface ICMsgClientHeartBeat
         * @property {boolean|null} [send_reply] CMsgClientHeartBeat send_reply
         */
    
        /**
         * Constructs a new CMsgClientHeartBeat.
         * @exports CMsgClientHeartBeat
         * @classdesc Represents a CMsgClientHeartBeat.
         * @implements ICMsgClientHeartBeat
         * @constructor
         * @param {ICMsgClientHeartBeat=} [properties] Properties to set
         */
        function CMsgClientHeartBeat(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientHeartBeat send_reply.
         * @member {boolean} send_reply
         * @memberof CMsgClientHeartBeat
         * @instance
         */
        CMsgClientHeartBeat.prototype.send_reply = false;
    
        /**
         * Creates a new CMsgClientHeartBeat instance using the specified properties.
         * @function create
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {ICMsgClientHeartBeat=} [properties] Properties to set
         * @returns {CMsgClientHeartBeat} CMsgClientHeartBeat instance
         */
        CMsgClientHeartBeat.create = function create(properties) {
            return new CMsgClientHeartBeat(properties);
        };
    
        /**
         * Encodes the specified CMsgClientHeartBeat message. Does not implicitly {@link CMsgClientHeartBeat.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {ICMsgClientHeartBeat} message CMsgClientHeartBeat message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHeartBeat.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.send_reply != null && message.hasOwnProperty("send_reply"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.send_reply);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientHeartBeat message, length delimited. Does not implicitly {@link CMsgClientHeartBeat.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {ICMsgClientHeartBeat} message CMsgClientHeartBeat message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHeartBeat.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientHeartBeat message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientHeartBeat} CMsgClientHeartBeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHeartBeat.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientHeartBeat();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.send_reply = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientHeartBeat message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientHeartBeat} CMsgClientHeartBeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHeartBeat.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientHeartBeat message.
         * @function verify
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientHeartBeat.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.send_reply != null && message.hasOwnProperty("send_reply"))
                if (typeof message.send_reply !== "boolean")
                    return "send_reply: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientHeartBeat message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientHeartBeat} CMsgClientHeartBeat
         */
        CMsgClientHeartBeat.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientHeartBeat)
                return object;
            var message = new $root.CMsgClientHeartBeat();
            if (object.send_reply != null)
                message.send_reply = Boolean(object.send_reply);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientHeartBeat message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientHeartBeat
         * @static
         * @param {CMsgClientHeartBeat} message CMsgClientHeartBeat
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientHeartBeat.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.send_reply = false;
            if (message.send_reply != null && message.hasOwnProperty("send_reply"))
                object.send_reply = message.send_reply;
            return object;
        };
    
        /**
         * Converts this CMsgClientHeartBeat to JSON.
         * @function toJSON
         * @memberof CMsgClientHeartBeat
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientHeartBeat.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientHeartBeat;
    })();
    
    $root.CMsgClientInviteToGame = (function() {
    
        /**
         * Properties of a CMsgClientInviteToGame.
         * @exports ICMsgClientInviteToGame
         * @interface ICMsgClientInviteToGame
         * @property {number|Long|null} [steam_id_dest] CMsgClientInviteToGame steam_id_dest
         * @property {number|Long|null} [steam_id_src] CMsgClientInviteToGame steam_id_src
         * @property {string|null} [connect_string] CMsgClientInviteToGame connect_string
         * @property {string|null} [remote_play] CMsgClientInviteToGame remote_play
         */
    
        /**
         * Constructs a new CMsgClientInviteToGame.
         * @exports CMsgClientInviteToGame
         * @classdesc Represents a CMsgClientInviteToGame.
         * @implements ICMsgClientInviteToGame
         * @constructor
         * @param {ICMsgClientInviteToGame=} [properties] Properties to set
         */
        function CMsgClientInviteToGame(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientInviteToGame steam_id_dest.
         * @member {number|Long} steam_id_dest
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.steam_id_dest = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientInviteToGame steam_id_src.
         * @member {number|Long} steam_id_src
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.steam_id_src = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientInviteToGame connect_string.
         * @member {string} connect_string
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.connect_string = "";
    
        /**
         * CMsgClientInviteToGame remote_play.
         * @member {string} remote_play
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.remote_play = "";
    
        /**
         * Creates a new CMsgClientInviteToGame instance using the specified properties.
         * @function create
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame=} [properties] Properties to set
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame instance
         */
        CMsgClientInviteToGame.create = function create(properties) {
            return new CMsgClientInviteToGame(properties);
        };
    
        /**
         * Encodes the specified CMsgClientInviteToGame message. Does not implicitly {@link CMsgClientInviteToGame.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame} message CMsgClientInviteToGame message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInviteToGame.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_dest);
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_src);
            if (message.connect_string != null && message.hasOwnProperty("connect_string"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.connect_string);
            if (message.remote_play != null && message.hasOwnProperty("remote_play"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.remote_play);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientInviteToGame message, length delimited. Does not implicitly {@link CMsgClientInviteToGame.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame} message CMsgClientInviteToGame message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInviteToGame.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientInviteToGame message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInviteToGame.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientInviteToGame();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id_dest = reader.fixed64();
                    break;
                case 2:
                    message.steam_id_src = reader.fixed64();
                    break;
                case 3:
                    message.connect_string = reader.string();
                    break;
                case 4:
                    message.remote_play = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientInviteToGame message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInviteToGame.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientInviteToGame message.
         * @function verify
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientInviteToGame.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (!$util.isInteger(message.steam_id_dest) && !(message.steam_id_dest && $util.isInteger(message.steam_id_dest.low) && $util.isInteger(message.steam_id_dest.high)))
                    return "steam_id_dest: integer|Long expected";
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (!$util.isInteger(message.steam_id_src) && !(message.steam_id_src && $util.isInteger(message.steam_id_src.low) && $util.isInteger(message.steam_id_src.high)))
                    return "steam_id_src: integer|Long expected";
            if (message.connect_string != null && message.hasOwnProperty("connect_string"))
                if (!$util.isString(message.connect_string))
                    return "connect_string: string expected";
            if (message.remote_play != null && message.hasOwnProperty("remote_play"))
                if (!$util.isString(message.remote_play))
                    return "remote_play: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientInviteToGame message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         */
        CMsgClientInviteToGame.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientInviteToGame)
                return object;
            var message = new $root.CMsgClientInviteToGame();
            if (object.steam_id_dest != null)
                if ($util.Long)
                    (message.steam_id_dest = $util.Long.fromValue(object.steam_id_dest)).unsigned = false;
                else if (typeof object.steam_id_dest === "string")
                    message.steam_id_dest = parseInt(object.steam_id_dest, 10);
                else if (typeof object.steam_id_dest === "number")
                    message.steam_id_dest = object.steam_id_dest;
                else if (typeof object.steam_id_dest === "object")
                    message.steam_id_dest = new $util.LongBits(object.steam_id_dest.low >>> 0, object.steam_id_dest.high >>> 0).toNumber();
            if (object.steam_id_src != null)
                if ($util.Long)
                    (message.steam_id_src = $util.Long.fromValue(object.steam_id_src)).unsigned = false;
                else if (typeof object.steam_id_src === "string")
                    message.steam_id_src = parseInt(object.steam_id_src, 10);
                else if (typeof object.steam_id_src === "number")
                    message.steam_id_src = object.steam_id_src;
                else if (typeof object.steam_id_src === "object")
                    message.steam_id_src = new $util.LongBits(object.steam_id_src.low >>> 0, object.steam_id_src.high >>> 0).toNumber();
            if (object.connect_string != null)
                message.connect_string = String(object.connect_string);
            if (object.remote_play != null)
                message.remote_play = String(object.remote_play);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientInviteToGame message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {CMsgClientInviteToGame} message CMsgClientInviteToGame
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientInviteToGame.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_dest = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_dest = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_src = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_src = options.longs === String ? "0" : 0;
                object.connect_string = "";
                object.remote_play = "";
            }
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (typeof message.steam_id_dest === "number")
                    object.steam_id_dest = options.longs === String ? String(message.steam_id_dest) : message.steam_id_dest;
                else
                    object.steam_id_dest = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_dest) : options.longs === Number ? new $util.LongBits(message.steam_id_dest.low >>> 0, message.steam_id_dest.high >>> 0).toNumber() : message.steam_id_dest;
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (typeof message.steam_id_src === "number")
                    object.steam_id_src = options.longs === String ? String(message.steam_id_src) : message.steam_id_src;
                else
                    object.steam_id_src = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_src) : options.longs === Number ? new $util.LongBits(message.steam_id_src.low >>> 0, message.steam_id_src.high >>> 0).toNumber() : message.steam_id_src;
            if (message.connect_string != null && message.hasOwnProperty("connect_string"))
                object.connect_string = message.connect_string;
            if (message.remote_play != null && message.hasOwnProperty("remote_play"))
                object.remote_play = message.remote_play;
            return object;
        };
    
        /**
         * Converts this CMsgClientInviteToGame to JSON.
         * @function toJSON
         * @memberof CMsgClientInviteToGame
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientInviteToGame.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientInviteToGame;
    })();
    
    $root.CMsgClientLoggedOff = (function() {
    
        /**
         * Properties of a CMsgClientLoggedOff.
         * @exports ICMsgClientLoggedOff
         * @interface ICMsgClientLoggedOff
         * @property {number|null} [eresult] CMsgClientLoggedOff eresult
         */
    
        /**
         * Constructs a new CMsgClientLoggedOff.
         * @exports CMsgClientLoggedOff
         * @classdesc Represents a CMsgClientLoggedOff.
         * @implements ICMsgClientLoggedOff
         * @constructor
         * @param {ICMsgClientLoggedOff=} [properties] Properties to set
         */
        function CMsgClientLoggedOff(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLoggedOff eresult.
         * @member {number} eresult
         * @memberof CMsgClientLoggedOff
         * @instance
         */
        CMsgClientLoggedOff.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientLoggedOff instance using the specified properties.
         * @function create
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {ICMsgClientLoggedOff=} [properties] Properties to set
         * @returns {CMsgClientLoggedOff} CMsgClientLoggedOff instance
         */
        CMsgClientLoggedOff.create = function create(properties) {
            return new CMsgClientLoggedOff(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLoggedOff message. Does not implicitly {@link CMsgClientLoggedOff.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {ICMsgClientLoggedOff} message CMsgClientLoggedOff message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLoggedOff.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLoggedOff message, length delimited. Does not implicitly {@link CMsgClientLoggedOff.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {ICMsgClientLoggedOff} message CMsgClientLoggedOff message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLoggedOff.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLoggedOff message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLoggedOff} CMsgClientLoggedOff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLoggedOff.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLoggedOff();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLoggedOff message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLoggedOff} CMsgClientLoggedOff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLoggedOff.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLoggedOff message.
         * @function verify
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLoggedOff.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLoggedOff message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLoggedOff} CMsgClientLoggedOff
         */
        CMsgClientLoggedOff.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLoggedOff)
                return object;
            var message = new $root.CMsgClientLoggedOff();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLoggedOff message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLoggedOff
         * @static
         * @param {CMsgClientLoggedOff} message CMsgClientLoggedOff
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLoggedOff.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientLoggedOff to JSON.
         * @function toJSON
         * @memberof CMsgClientLoggedOff
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLoggedOff.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLoggedOff;
    })();
    
    $root.CMsgClientLogon = (function() {
    
        /**
         * Properties of a CMsgClientLogon.
         * @exports ICMsgClientLogon
         * @interface ICMsgClientLogon
         * @property {number|null} [protocol_version] CMsgClientLogon protocol_version
         * @property {number|null} [deprecated_obfustucated_private_ip] CMsgClientLogon deprecated_obfustucated_private_ip
         * @property {number|null} [cell_id] CMsgClientLogon cell_id
         * @property {number|null} [last_session_id] CMsgClientLogon last_session_id
         * @property {number|null} [client_package_version] CMsgClientLogon client_package_version
         * @property {string|null} [client_language] CMsgClientLogon client_language
         * @property {number|null} [client_os_type] CMsgClientLogon client_os_type
         * @property {boolean|null} [should_remember_password] CMsgClientLogon should_remember_password
         * @property {string|null} [wine_version] CMsgClientLogon wine_version
         * @property {number|null} [deprecated_10] CMsgClientLogon deprecated_10
         * @property {ICMsgIPAddress|null} [obfuscated_private_ip] CMsgClientLogon obfuscated_private_ip
         * @property {number|null} [deprecated_public_ip] CMsgClientLogon deprecated_public_ip
         * @property {number|null} [qos_level] CMsgClientLogon qos_level
         * @property {number|Long|null} [client_supplied_steam_id] CMsgClientLogon client_supplied_steam_id
         * @property {ICMsgIPAddress|null} [public_ip] CMsgClientLogon public_ip
         * @property {Uint8Array|null} [machine_id] CMsgClientLogon machine_id
         * @property {number|null} [launcher_type] CMsgClientLogon launcher_type
         * @property {number|null} [ui_mode] CMsgClientLogon ui_mode
         * @property {number|null} [chat_mode] CMsgClientLogon chat_mode
         * @property {Uint8Array|null} [steam2_auth_ticket] CMsgClientLogon steam2_auth_ticket
         * @property {string|null} [email_address] CMsgClientLogon email_address
         * @property {number|null} [rtime32_account_creation] CMsgClientLogon rtime32_account_creation
         * @property {string|null} [account_name] CMsgClientLogon account_name
         * @property {string|null} [password] CMsgClientLogon password
         * @property {string|null} [game_server_token] CMsgClientLogon game_server_token
         * @property {string|null} [login_key] CMsgClientLogon login_key
         * @property {boolean|null} [was_converted_deprecated_msg] CMsgClientLogon was_converted_deprecated_msg
         * @property {string|null} [anon_user_target_account_name] CMsgClientLogon anon_user_target_account_name
         * @property {number|Long|null} [resolved_user_steam_id] CMsgClientLogon resolved_user_steam_id
         * @property {number|null} [eresult_sentryfile] CMsgClientLogon eresult_sentryfile
         * @property {Uint8Array|null} [sha_sentryfile] CMsgClientLogon sha_sentryfile
         * @property {string|null} [auth_code] CMsgClientLogon auth_code
         * @property {number|null} [otp_type] CMsgClientLogon otp_type
         * @property {number|null} [otp_value] CMsgClientLogon otp_value
         * @property {string|null} [otp_identifier] CMsgClientLogon otp_identifier
         * @property {boolean|null} [steam2_ticket_request] CMsgClientLogon steam2_ticket_request
         * @property {Uint8Array|null} [sony_psn_ticket] CMsgClientLogon sony_psn_ticket
         * @property {string|null} [sony_psn_service_id] CMsgClientLogon sony_psn_service_id
         * @property {boolean|null} [create_new_psn_linked_account_if_needed] CMsgClientLogon create_new_psn_linked_account_if_needed
         * @property {string|null} [sony_psn_name] CMsgClientLogon sony_psn_name
         * @property {number|null} [game_server_app_id] CMsgClientLogon game_server_app_id
         * @property {boolean|null} [steamguard_dont_remember_computer] CMsgClientLogon steamguard_dont_remember_computer
         * @property {string|null} [machine_name] CMsgClientLogon machine_name
         * @property {string|null} [machine_name_userchosen] CMsgClientLogon machine_name_userchosen
         * @property {string|null} [country_override] CMsgClientLogon country_override
         * @property {boolean|null} [is_steam_box] CMsgClientLogon is_steam_box
         * @property {number|Long|null} [client_instance_id] CMsgClientLogon client_instance_id
         * @property {string|null} [two_factor_code] CMsgClientLogon two_factor_code
         * @property {boolean|null} [supports_rate_limit_response] CMsgClientLogon supports_rate_limit_response
         * @property {string|null} [web_logon_nonce] CMsgClientLogon web_logon_nonce
         * @property {number|null} [priority_reason] CMsgClientLogon priority_reason
         * @property {ICMsgClientSecret|null} [embedded_client_secret] CMsgClientLogon embedded_client_secret
         * @property {boolean|null} [disable_partner_autogrants] CMsgClientLogon disable_partner_autogrants
         */
    
        /**
         * Constructs a new CMsgClientLogon.
         * @exports CMsgClientLogon
         * @classdesc Represents a CMsgClientLogon.
         * @implements ICMsgClientLogon
         * @constructor
         * @param {ICMsgClientLogon=} [properties] Properties to set
         */
        function CMsgClientLogon(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLogon protocol_version.
         * @member {number} protocol_version
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.protocol_version = 0;
    
        /**
         * CMsgClientLogon deprecated_obfustucated_private_ip.
         * @member {number} deprecated_obfustucated_private_ip
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.deprecated_obfustucated_private_ip = 0;
    
        /**
         * CMsgClientLogon cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.cell_id = 0;
    
        /**
         * CMsgClientLogon last_session_id.
         * @member {number} last_session_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.last_session_id = 0;
    
        /**
         * CMsgClientLogon client_package_version.
         * @member {number} client_package_version
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.client_package_version = 0;
    
        /**
         * CMsgClientLogon client_language.
         * @member {string} client_language
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.client_language = "";
    
        /**
         * CMsgClientLogon client_os_type.
         * @member {number} client_os_type
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.client_os_type = 0;
    
        /**
         * CMsgClientLogon should_remember_password.
         * @member {boolean} should_remember_password
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.should_remember_password = false;
    
        /**
         * CMsgClientLogon wine_version.
         * @member {string} wine_version
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.wine_version = "";
    
        /**
         * CMsgClientLogon deprecated_10.
         * @member {number} deprecated_10
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.deprecated_10 = 0;
    
        /**
         * CMsgClientLogon obfuscated_private_ip.
         * @member {ICMsgIPAddress|null|undefined} obfuscated_private_ip
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.obfuscated_private_ip = null;
    
        /**
         * CMsgClientLogon deprecated_public_ip.
         * @member {number} deprecated_public_ip
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.deprecated_public_ip = 0;
    
        /**
         * CMsgClientLogon qos_level.
         * @member {number} qos_level
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.qos_level = 0;
    
        /**
         * CMsgClientLogon client_supplied_steam_id.
         * @member {number|Long} client_supplied_steam_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.client_supplied_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientLogon public_ip.
         * @member {ICMsgIPAddress|null|undefined} public_ip
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.public_ip = null;
    
        /**
         * CMsgClientLogon machine_id.
         * @member {Uint8Array} machine_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.machine_id = $util.newBuffer([]);
    
        /**
         * CMsgClientLogon launcher_type.
         * @member {number} launcher_type
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.launcher_type = 0;
    
        /**
         * CMsgClientLogon ui_mode.
         * @member {number} ui_mode
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.ui_mode = 0;
    
        /**
         * CMsgClientLogon chat_mode.
         * @member {number} chat_mode
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.chat_mode = 0;
    
        /**
         * CMsgClientLogon steam2_auth_ticket.
         * @member {Uint8Array} steam2_auth_ticket
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.steam2_auth_ticket = $util.newBuffer([]);
    
        /**
         * CMsgClientLogon email_address.
         * @member {string} email_address
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.email_address = "";
    
        /**
         * CMsgClientLogon rtime32_account_creation.
         * @member {number} rtime32_account_creation
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.rtime32_account_creation = 0;
    
        /**
         * CMsgClientLogon account_name.
         * @member {string} account_name
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.account_name = "";
    
        /**
         * CMsgClientLogon password.
         * @member {string} password
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.password = "";
    
        /**
         * CMsgClientLogon game_server_token.
         * @member {string} game_server_token
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.game_server_token = "";
    
        /**
         * CMsgClientLogon login_key.
         * @member {string} login_key
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.login_key = "";
    
        /**
         * CMsgClientLogon was_converted_deprecated_msg.
         * @member {boolean} was_converted_deprecated_msg
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.was_converted_deprecated_msg = false;
    
        /**
         * CMsgClientLogon anon_user_target_account_name.
         * @member {string} anon_user_target_account_name
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.anon_user_target_account_name = "";
    
        /**
         * CMsgClientLogon resolved_user_steam_id.
         * @member {number|Long} resolved_user_steam_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.resolved_user_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientLogon eresult_sentryfile.
         * @member {number} eresult_sentryfile
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.eresult_sentryfile = 0;
    
        /**
         * CMsgClientLogon sha_sentryfile.
         * @member {Uint8Array} sha_sentryfile
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.sha_sentryfile = $util.newBuffer([]);
    
        /**
         * CMsgClientLogon auth_code.
         * @member {string} auth_code
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.auth_code = "";
    
        /**
         * CMsgClientLogon otp_type.
         * @member {number} otp_type
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.otp_type = 0;
    
        /**
         * CMsgClientLogon otp_value.
         * @member {number} otp_value
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.otp_value = 0;
    
        /**
         * CMsgClientLogon otp_identifier.
         * @member {string} otp_identifier
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.otp_identifier = "";
    
        /**
         * CMsgClientLogon steam2_ticket_request.
         * @member {boolean} steam2_ticket_request
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.steam2_ticket_request = false;
    
        /**
         * CMsgClientLogon sony_psn_ticket.
         * @member {Uint8Array} sony_psn_ticket
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.sony_psn_ticket = $util.newBuffer([]);
    
        /**
         * CMsgClientLogon sony_psn_service_id.
         * @member {string} sony_psn_service_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.sony_psn_service_id = "";
    
        /**
         * CMsgClientLogon create_new_psn_linked_account_if_needed.
         * @member {boolean} create_new_psn_linked_account_if_needed
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.create_new_psn_linked_account_if_needed = false;
    
        /**
         * CMsgClientLogon sony_psn_name.
         * @member {string} sony_psn_name
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.sony_psn_name = "";
    
        /**
         * CMsgClientLogon game_server_app_id.
         * @member {number} game_server_app_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.game_server_app_id = 0;
    
        /**
         * CMsgClientLogon steamguard_dont_remember_computer.
         * @member {boolean} steamguard_dont_remember_computer
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.steamguard_dont_remember_computer = false;
    
        /**
         * CMsgClientLogon machine_name.
         * @member {string} machine_name
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.machine_name = "";
    
        /**
         * CMsgClientLogon machine_name_userchosen.
         * @member {string} machine_name_userchosen
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.machine_name_userchosen = "";
    
        /**
         * CMsgClientLogon country_override.
         * @member {string} country_override
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.country_override = "";
    
        /**
         * CMsgClientLogon is_steam_box.
         * @member {boolean} is_steam_box
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.is_steam_box = false;
    
        /**
         * CMsgClientLogon client_instance_id.
         * @member {number|Long} client_instance_id
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.client_instance_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientLogon two_factor_code.
         * @member {string} two_factor_code
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.two_factor_code = "";
    
        /**
         * CMsgClientLogon supports_rate_limit_response.
         * @member {boolean} supports_rate_limit_response
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.supports_rate_limit_response = false;
    
        /**
         * CMsgClientLogon web_logon_nonce.
         * @member {string} web_logon_nonce
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.web_logon_nonce = "";
    
        /**
         * CMsgClientLogon priority_reason.
         * @member {number} priority_reason
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.priority_reason = 0;
    
        /**
         * CMsgClientLogon embedded_client_secret.
         * @member {ICMsgClientSecret|null|undefined} embedded_client_secret
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.embedded_client_secret = null;
    
        /**
         * CMsgClientLogon disable_partner_autogrants.
         * @member {boolean} disable_partner_autogrants
         * @memberof CMsgClientLogon
         * @instance
         */
        CMsgClientLogon.prototype.disable_partner_autogrants = false;
    
        /**
         * Creates a new CMsgClientLogon instance using the specified properties.
         * @function create
         * @memberof CMsgClientLogon
         * @static
         * @param {ICMsgClientLogon=} [properties] Properties to set
         * @returns {CMsgClientLogon} CMsgClientLogon instance
         */
        CMsgClientLogon.create = function create(properties) {
            return new CMsgClientLogon(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLogon message. Does not implicitly {@link CMsgClientLogon.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLogon
         * @static
         * @param {ICMsgClientLogon} message CMsgClientLogon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLogon.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocol_version);
            if (message.deprecated_obfustucated_private_ip != null && message.hasOwnProperty("deprecated_obfustucated_private_ip"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.deprecated_obfustucated_private_ip);
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cell_id);
            if (message.last_session_id != null && message.hasOwnProperty("last_session_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.last_session_id);
            if (message.client_package_version != null && message.hasOwnProperty("client_package_version"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.client_package_version);
            if (message.client_language != null && message.hasOwnProperty("client_language"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.client_language);
            if (message.client_os_type != null && message.hasOwnProperty("client_os_type"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.client_os_type);
            if (message.should_remember_password != null && message.hasOwnProperty("should_remember_password"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.should_remember_password);
            if (message.wine_version != null && message.hasOwnProperty("wine_version"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.wine_version);
            if (message.deprecated_10 != null && message.hasOwnProperty("deprecated_10"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.deprecated_10);
            if (message.obfuscated_private_ip != null && message.hasOwnProperty("obfuscated_private_ip"))
                $root.CMsgIPAddress.encode(message.obfuscated_private_ip, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.deprecated_public_ip);
            if (message.qos_level != null && message.hasOwnProperty("qos_level"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.qos_level);
            if (message.client_supplied_steam_id != null && message.hasOwnProperty("client_supplied_steam_id"))
                writer.uint32(/* id 22, wireType 1 =*/177).fixed64(message.client_supplied_steam_id);
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
            if (message.machine_id != null && message.hasOwnProperty("machine_id"))
                writer.uint32(/* id 30, wireType 2 =*/242).bytes(message.machine_id);
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.launcher_type);
            if (message.ui_mode != null && message.hasOwnProperty("ui_mode"))
                writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.ui_mode);
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                writer.uint32(/* id 33, wireType 0 =*/264).uint32(message.chat_mode);
            if (message.steam2_auth_ticket != null && message.hasOwnProperty("steam2_auth_ticket"))
                writer.uint32(/* id 41, wireType 2 =*/330).bytes(message.steam2_auth_ticket);
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                writer.uint32(/* id 42, wireType 2 =*/338).string(message.email_address);
            if (message.rtime32_account_creation != null && message.hasOwnProperty("rtime32_account_creation"))
                writer.uint32(/* id 43, wireType 5 =*/349).fixed32(message.rtime32_account_creation);
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                writer.uint32(/* id 50, wireType 2 =*/402).string(message.account_name);
            if (message.password != null && message.hasOwnProperty("password"))
                writer.uint32(/* id 51, wireType 2 =*/410).string(message.password);
            if (message.game_server_token != null && message.hasOwnProperty("game_server_token"))
                writer.uint32(/* id 52, wireType 2 =*/418).string(message.game_server_token);
            if (message.login_key != null && message.hasOwnProperty("login_key"))
                writer.uint32(/* id 60, wireType 2 =*/482).string(message.login_key);
            if (message.was_converted_deprecated_msg != null && message.hasOwnProperty("was_converted_deprecated_msg"))
                writer.uint32(/* id 70, wireType 0 =*/560).bool(message.was_converted_deprecated_msg);
            if (message.anon_user_target_account_name != null && message.hasOwnProperty("anon_user_target_account_name"))
                writer.uint32(/* id 80, wireType 2 =*/642).string(message.anon_user_target_account_name);
            if (message.resolved_user_steam_id != null && message.hasOwnProperty("resolved_user_steam_id"))
                writer.uint32(/* id 81, wireType 1 =*/649).fixed64(message.resolved_user_steam_id);
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                writer.uint32(/* id 82, wireType 0 =*/656).int32(message.eresult_sentryfile);
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                writer.uint32(/* id 83, wireType 2 =*/666).bytes(message.sha_sentryfile);
            if (message.auth_code != null && message.hasOwnProperty("auth_code"))
                writer.uint32(/* id 84, wireType 2 =*/674).string(message.auth_code);
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                writer.uint32(/* id 85, wireType 0 =*/680).int32(message.otp_type);
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                writer.uint32(/* id 86, wireType 0 =*/688).uint32(message.otp_value);
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                writer.uint32(/* id 87, wireType 2 =*/698).string(message.otp_identifier);
            if (message.steam2_ticket_request != null && message.hasOwnProperty("steam2_ticket_request"))
                writer.uint32(/* id 88, wireType 0 =*/704).bool(message.steam2_ticket_request);
            if (message.sony_psn_ticket != null && message.hasOwnProperty("sony_psn_ticket"))
                writer.uint32(/* id 90, wireType 2 =*/722).bytes(message.sony_psn_ticket);
            if (message.sony_psn_service_id != null && message.hasOwnProperty("sony_psn_service_id"))
                writer.uint32(/* id 91, wireType 2 =*/730).string(message.sony_psn_service_id);
            if (message.create_new_psn_linked_account_if_needed != null && message.hasOwnProperty("create_new_psn_linked_account_if_needed"))
                writer.uint32(/* id 92, wireType 0 =*/736).bool(message.create_new_psn_linked_account_if_needed);
            if (message.sony_psn_name != null && message.hasOwnProperty("sony_psn_name"))
                writer.uint32(/* id 93, wireType 2 =*/746).string(message.sony_psn_name);
            if (message.game_server_app_id != null && message.hasOwnProperty("game_server_app_id"))
                writer.uint32(/* id 94, wireType 0 =*/752).int32(message.game_server_app_id);
            if (message.steamguard_dont_remember_computer != null && message.hasOwnProperty("steamguard_dont_remember_computer"))
                writer.uint32(/* id 95, wireType 0 =*/760).bool(message.steamguard_dont_remember_computer);
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                writer.uint32(/* id 96, wireType 2 =*/770).string(message.machine_name);
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                writer.uint32(/* id 97, wireType 2 =*/778).string(message.machine_name_userchosen);
            if (message.country_override != null && message.hasOwnProperty("country_override"))
                writer.uint32(/* id 98, wireType 2 =*/786).string(message.country_override);
            if (message.is_steam_box != null && message.hasOwnProperty("is_steam_box"))
                writer.uint32(/* id 99, wireType 0 =*/792).bool(message.is_steam_box);
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                writer.uint32(/* id 100, wireType 0 =*/800).uint64(message.client_instance_id);
            if (message.two_factor_code != null && message.hasOwnProperty("two_factor_code"))
                writer.uint32(/* id 101, wireType 2 =*/810).string(message.two_factor_code);
            if (message.supports_rate_limit_response != null && message.hasOwnProperty("supports_rate_limit_response"))
                writer.uint32(/* id 102, wireType 0 =*/816).bool(message.supports_rate_limit_response);
            if (message.web_logon_nonce != null && message.hasOwnProperty("web_logon_nonce"))
                writer.uint32(/* id 103, wireType 2 =*/826).string(message.web_logon_nonce);
            if (message.priority_reason != null && message.hasOwnProperty("priority_reason"))
                writer.uint32(/* id 104, wireType 0 =*/832).int32(message.priority_reason);
            if (message.embedded_client_secret != null && message.hasOwnProperty("embedded_client_secret"))
                $root.CMsgClientSecret.encode(message.embedded_client_secret, writer.uint32(/* id 105, wireType 2 =*/842).fork()).ldelim();
            if (message.disable_partner_autogrants != null && message.hasOwnProperty("disable_partner_autogrants"))
                writer.uint32(/* id 106, wireType 0 =*/848).bool(message.disable_partner_autogrants);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLogon message, length delimited. Does not implicitly {@link CMsgClientLogon.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLogon
         * @static
         * @param {ICMsgClientLogon} message CMsgClientLogon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLogon.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLogon message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLogon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLogon} CMsgClientLogon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLogon.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLogon();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.protocol_version = reader.uint32();
                    break;
                case 2:
                    message.deprecated_obfustucated_private_ip = reader.uint32();
                    break;
                case 3:
                    message.cell_id = reader.uint32();
                    break;
                case 4:
                    message.last_session_id = reader.uint32();
                    break;
                case 5:
                    message.client_package_version = reader.uint32();
                    break;
                case 6:
                    message.client_language = reader.string();
                    break;
                case 7:
                    message.client_os_type = reader.uint32();
                    break;
                case 8:
                    message.should_remember_password = reader.bool();
                    break;
                case 9:
                    message.wine_version = reader.string();
                    break;
                case 10:
                    message.deprecated_10 = reader.uint32();
                    break;
                case 11:
                    message.obfuscated_private_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                case 20:
                    message.deprecated_public_ip = reader.uint32();
                    break;
                case 21:
                    message.qos_level = reader.uint32();
                    break;
                case 22:
                    message.client_supplied_steam_id = reader.fixed64();
                    break;
                case 23:
                    message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                case 30:
                    message.machine_id = reader.bytes();
                    break;
                case 31:
                    message.launcher_type = reader.uint32();
                    break;
                case 32:
                    message.ui_mode = reader.uint32();
                    break;
                case 33:
                    message.chat_mode = reader.uint32();
                    break;
                case 41:
                    message.steam2_auth_ticket = reader.bytes();
                    break;
                case 42:
                    message.email_address = reader.string();
                    break;
                case 43:
                    message.rtime32_account_creation = reader.fixed32();
                    break;
                case 50:
                    message.account_name = reader.string();
                    break;
                case 51:
                    message.password = reader.string();
                    break;
                case 52:
                    message.game_server_token = reader.string();
                    break;
                case 60:
                    message.login_key = reader.string();
                    break;
                case 70:
                    message.was_converted_deprecated_msg = reader.bool();
                    break;
                case 80:
                    message.anon_user_target_account_name = reader.string();
                    break;
                case 81:
                    message.resolved_user_steam_id = reader.fixed64();
                    break;
                case 82:
                    message.eresult_sentryfile = reader.int32();
                    break;
                case 83:
                    message.sha_sentryfile = reader.bytes();
                    break;
                case 84:
                    message.auth_code = reader.string();
                    break;
                case 85:
                    message.otp_type = reader.int32();
                    break;
                case 86:
                    message.otp_value = reader.uint32();
                    break;
                case 87:
                    message.otp_identifier = reader.string();
                    break;
                case 88:
                    message.steam2_ticket_request = reader.bool();
                    break;
                case 90:
                    message.sony_psn_ticket = reader.bytes();
                    break;
                case 91:
                    message.sony_psn_service_id = reader.string();
                    break;
                case 92:
                    message.create_new_psn_linked_account_if_needed = reader.bool();
                    break;
                case 93:
                    message.sony_psn_name = reader.string();
                    break;
                case 94:
                    message.game_server_app_id = reader.int32();
                    break;
                case 95:
                    message.steamguard_dont_remember_computer = reader.bool();
                    break;
                case 96:
                    message.machine_name = reader.string();
                    break;
                case 97:
                    message.machine_name_userchosen = reader.string();
                    break;
                case 98:
                    message.country_override = reader.string();
                    break;
                case 99:
                    message.is_steam_box = reader.bool();
                    break;
                case 100:
                    message.client_instance_id = reader.uint64();
                    break;
                case 101:
                    message.two_factor_code = reader.string();
                    break;
                case 102:
                    message.supports_rate_limit_response = reader.bool();
                    break;
                case 103:
                    message.web_logon_nonce = reader.string();
                    break;
                case 104:
                    message.priority_reason = reader.int32();
                    break;
                case 105:
                    message.embedded_client_secret = $root.CMsgClientSecret.decode(reader, reader.uint32());
                    break;
                case 106:
                    message.disable_partner_autogrants = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLogon message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLogon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLogon} CMsgClientLogon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLogon.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLogon message.
         * @function verify
         * @memberof CMsgClientLogon
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLogon.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                if (!$util.isInteger(message.protocol_version))
                    return "protocol_version: integer expected";
            if (message.deprecated_obfustucated_private_ip != null && message.hasOwnProperty("deprecated_obfustucated_private_ip"))
                if (!$util.isInteger(message.deprecated_obfustucated_private_ip))
                    return "deprecated_obfustucated_private_ip: integer expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.last_session_id != null && message.hasOwnProperty("last_session_id"))
                if (!$util.isInteger(message.last_session_id))
                    return "last_session_id: integer expected";
            if (message.client_package_version != null && message.hasOwnProperty("client_package_version"))
                if (!$util.isInteger(message.client_package_version))
                    return "client_package_version: integer expected";
            if (message.client_language != null && message.hasOwnProperty("client_language"))
                if (!$util.isString(message.client_language))
                    return "client_language: string expected";
            if (message.client_os_type != null && message.hasOwnProperty("client_os_type"))
                if (!$util.isInteger(message.client_os_type))
                    return "client_os_type: integer expected";
            if (message.should_remember_password != null && message.hasOwnProperty("should_remember_password"))
                if (typeof message.should_remember_password !== "boolean")
                    return "should_remember_password: boolean expected";
            if (message.wine_version != null && message.hasOwnProperty("wine_version"))
                if (!$util.isString(message.wine_version))
                    return "wine_version: string expected";
            if (message.deprecated_10 != null && message.hasOwnProperty("deprecated_10"))
                if (!$util.isInteger(message.deprecated_10))
                    return "deprecated_10: integer expected";
            if (message.obfuscated_private_ip != null && message.hasOwnProperty("obfuscated_private_ip")) {
                var error = $root.CMsgIPAddress.verify(message.obfuscated_private_ip);
                if (error)
                    return "obfuscated_private_ip." + error;
            }
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                if (!$util.isInteger(message.deprecated_public_ip))
                    return "deprecated_public_ip: integer expected";
            if (message.qos_level != null && message.hasOwnProperty("qos_level"))
                if (!$util.isInteger(message.qos_level))
                    return "qos_level: integer expected";
            if (message.client_supplied_steam_id != null && message.hasOwnProperty("client_supplied_steam_id"))
                if (!$util.isInteger(message.client_supplied_steam_id) && !(message.client_supplied_steam_id && $util.isInteger(message.client_supplied_steam_id.low) && $util.isInteger(message.client_supplied_steam_id.high)))
                    return "client_supplied_steam_id: integer|Long expected";
            if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                var error = $root.CMsgIPAddress.verify(message.public_ip);
                if (error)
                    return "public_ip." + error;
            }
            if (message.machine_id != null && message.hasOwnProperty("machine_id"))
                if (!(message.machine_id && typeof message.machine_id.length === "number" || $util.isString(message.machine_id)))
                    return "machine_id: buffer expected";
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                if (!$util.isInteger(message.launcher_type))
                    return "launcher_type: integer expected";
            if (message.ui_mode != null && message.hasOwnProperty("ui_mode"))
                if (!$util.isInteger(message.ui_mode))
                    return "ui_mode: integer expected";
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                if (!$util.isInteger(message.chat_mode))
                    return "chat_mode: integer expected";
            if (message.steam2_auth_ticket != null && message.hasOwnProperty("steam2_auth_ticket"))
                if (!(message.steam2_auth_ticket && typeof message.steam2_auth_ticket.length === "number" || $util.isString(message.steam2_auth_ticket)))
                    return "steam2_auth_ticket: buffer expected";
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                if (!$util.isString(message.email_address))
                    return "email_address: string expected";
            if (message.rtime32_account_creation != null && message.hasOwnProperty("rtime32_account_creation"))
                if (!$util.isInteger(message.rtime32_account_creation))
                    return "rtime32_account_creation: integer expected";
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                if (!$util.isString(message.account_name))
                    return "account_name: string expected";
            if (message.password != null && message.hasOwnProperty("password"))
                if (!$util.isString(message.password))
                    return "password: string expected";
            if (message.game_server_token != null && message.hasOwnProperty("game_server_token"))
                if (!$util.isString(message.game_server_token))
                    return "game_server_token: string expected";
            if (message.login_key != null && message.hasOwnProperty("login_key"))
                if (!$util.isString(message.login_key))
                    return "login_key: string expected";
            if (message.was_converted_deprecated_msg != null && message.hasOwnProperty("was_converted_deprecated_msg"))
                if (typeof message.was_converted_deprecated_msg !== "boolean")
                    return "was_converted_deprecated_msg: boolean expected";
            if (message.anon_user_target_account_name != null && message.hasOwnProperty("anon_user_target_account_name"))
                if (!$util.isString(message.anon_user_target_account_name))
                    return "anon_user_target_account_name: string expected";
            if (message.resolved_user_steam_id != null && message.hasOwnProperty("resolved_user_steam_id"))
                if (!$util.isInteger(message.resolved_user_steam_id) && !(message.resolved_user_steam_id && $util.isInteger(message.resolved_user_steam_id.low) && $util.isInteger(message.resolved_user_steam_id.high)))
                    return "resolved_user_steam_id: integer|Long expected";
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                if (!$util.isInteger(message.eresult_sentryfile))
                    return "eresult_sentryfile: integer expected";
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                if (!(message.sha_sentryfile && typeof message.sha_sentryfile.length === "number" || $util.isString(message.sha_sentryfile)))
                    return "sha_sentryfile: buffer expected";
            if (message.auth_code != null && message.hasOwnProperty("auth_code"))
                if (!$util.isString(message.auth_code))
                    return "auth_code: string expected";
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                if (!$util.isInteger(message.otp_type))
                    return "otp_type: integer expected";
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                if (!$util.isInteger(message.otp_value))
                    return "otp_value: integer expected";
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                if (!$util.isString(message.otp_identifier))
                    return "otp_identifier: string expected";
            if (message.steam2_ticket_request != null && message.hasOwnProperty("steam2_ticket_request"))
                if (typeof message.steam2_ticket_request !== "boolean")
                    return "steam2_ticket_request: boolean expected";
            if (message.sony_psn_ticket != null && message.hasOwnProperty("sony_psn_ticket"))
                if (!(message.sony_psn_ticket && typeof message.sony_psn_ticket.length === "number" || $util.isString(message.sony_psn_ticket)))
                    return "sony_psn_ticket: buffer expected";
            if (message.sony_psn_service_id != null && message.hasOwnProperty("sony_psn_service_id"))
                if (!$util.isString(message.sony_psn_service_id))
                    return "sony_psn_service_id: string expected";
            if (message.create_new_psn_linked_account_if_needed != null && message.hasOwnProperty("create_new_psn_linked_account_if_needed"))
                if (typeof message.create_new_psn_linked_account_if_needed !== "boolean")
                    return "create_new_psn_linked_account_if_needed: boolean expected";
            if (message.sony_psn_name != null && message.hasOwnProperty("sony_psn_name"))
                if (!$util.isString(message.sony_psn_name))
                    return "sony_psn_name: string expected";
            if (message.game_server_app_id != null && message.hasOwnProperty("game_server_app_id"))
                if (!$util.isInteger(message.game_server_app_id))
                    return "game_server_app_id: integer expected";
            if (message.steamguard_dont_remember_computer != null && message.hasOwnProperty("steamguard_dont_remember_computer"))
                if (typeof message.steamguard_dont_remember_computer !== "boolean")
                    return "steamguard_dont_remember_computer: boolean expected";
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                if (!$util.isString(message.machine_name))
                    return "machine_name: string expected";
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                if (!$util.isString(message.machine_name_userchosen))
                    return "machine_name_userchosen: string expected";
            if (message.country_override != null && message.hasOwnProperty("country_override"))
                if (!$util.isString(message.country_override))
                    return "country_override: string expected";
            if (message.is_steam_box != null && message.hasOwnProperty("is_steam_box"))
                if (typeof message.is_steam_box !== "boolean")
                    return "is_steam_box: boolean expected";
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (!$util.isInteger(message.client_instance_id) && !(message.client_instance_id && $util.isInteger(message.client_instance_id.low) && $util.isInteger(message.client_instance_id.high)))
                    return "client_instance_id: integer|Long expected";
            if (message.two_factor_code != null && message.hasOwnProperty("two_factor_code"))
                if (!$util.isString(message.two_factor_code))
                    return "two_factor_code: string expected";
            if (message.supports_rate_limit_response != null && message.hasOwnProperty("supports_rate_limit_response"))
                if (typeof message.supports_rate_limit_response !== "boolean")
                    return "supports_rate_limit_response: boolean expected";
            if (message.web_logon_nonce != null && message.hasOwnProperty("web_logon_nonce"))
                if (!$util.isString(message.web_logon_nonce))
                    return "web_logon_nonce: string expected";
            if (message.priority_reason != null && message.hasOwnProperty("priority_reason"))
                if (!$util.isInteger(message.priority_reason))
                    return "priority_reason: integer expected";
            if (message.embedded_client_secret != null && message.hasOwnProperty("embedded_client_secret")) {
                var error = $root.CMsgClientSecret.verify(message.embedded_client_secret);
                if (error)
                    return "embedded_client_secret." + error;
            }
            if (message.disable_partner_autogrants != null && message.hasOwnProperty("disable_partner_autogrants"))
                if (typeof message.disable_partner_autogrants !== "boolean")
                    return "disable_partner_autogrants: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLogon message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLogon
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLogon} CMsgClientLogon
         */
        CMsgClientLogon.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLogon)
                return object;
            var message = new $root.CMsgClientLogon();
            if (object.protocol_version != null)
                message.protocol_version = object.protocol_version >>> 0;
            if (object.deprecated_obfustucated_private_ip != null)
                message.deprecated_obfustucated_private_ip = object.deprecated_obfustucated_private_ip >>> 0;
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.last_session_id != null)
                message.last_session_id = object.last_session_id >>> 0;
            if (object.client_package_version != null)
                message.client_package_version = object.client_package_version >>> 0;
            if (object.client_language != null)
                message.client_language = String(object.client_language);
            if (object.client_os_type != null)
                message.client_os_type = object.client_os_type >>> 0;
            if (object.should_remember_password != null)
                message.should_remember_password = Boolean(object.should_remember_password);
            if (object.wine_version != null)
                message.wine_version = String(object.wine_version);
            if (object.deprecated_10 != null)
                message.deprecated_10 = object.deprecated_10 >>> 0;
            if (object.obfuscated_private_ip != null) {
                if (typeof object.obfuscated_private_ip !== "object")
                    throw TypeError(".CMsgClientLogon.obfuscated_private_ip: object expected");
                message.obfuscated_private_ip = $root.CMsgIPAddress.fromObject(object.obfuscated_private_ip);
            }
            if (object.deprecated_public_ip != null)
                message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
            if (object.qos_level != null)
                message.qos_level = object.qos_level >>> 0;
            if (object.client_supplied_steam_id != null)
                if ($util.Long)
                    (message.client_supplied_steam_id = $util.Long.fromValue(object.client_supplied_steam_id)).unsigned = false;
                else if (typeof object.client_supplied_steam_id === "string")
                    message.client_supplied_steam_id = parseInt(object.client_supplied_steam_id, 10);
                else if (typeof object.client_supplied_steam_id === "number")
                    message.client_supplied_steam_id = object.client_supplied_steam_id;
                else if (typeof object.client_supplied_steam_id === "object")
                    message.client_supplied_steam_id = new $util.LongBits(object.client_supplied_steam_id.low >>> 0, object.client_supplied_steam_id.high >>> 0).toNumber();
            if (object.public_ip != null) {
                if (typeof object.public_ip !== "object")
                    throw TypeError(".CMsgClientLogon.public_ip: object expected");
                message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
            }
            if (object.machine_id != null)
                if (typeof object.machine_id === "string")
                    $util.base64.decode(object.machine_id, message.machine_id = $util.newBuffer($util.base64.length(object.machine_id)), 0);
                else if (object.machine_id.length)
                    message.machine_id = object.machine_id;
            if (object.launcher_type != null)
                message.launcher_type = object.launcher_type >>> 0;
            if (object.ui_mode != null)
                message.ui_mode = object.ui_mode >>> 0;
            if (object.chat_mode != null)
                message.chat_mode = object.chat_mode >>> 0;
            if (object.steam2_auth_ticket != null)
                if (typeof object.steam2_auth_ticket === "string")
                    $util.base64.decode(object.steam2_auth_ticket, message.steam2_auth_ticket = $util.newBuffer($util.base64.length(object.steam2_auth_ticket)), 0);
                else if (object.steam2_auth_ticket.length)
                    message.steam2_auth_ticket = object.steam2_auth_ticket;
            if (object.email_address != null)
                message.email_address = String(object.email_address);
            if (object.rtime32_account_creation != null)
                message.rtime32_account_creation = object.rtime32_account_creation >>> 0;
            if (object.account_name != null)
                message.account_name = String(object.account_name);
            if (object.password != null)
                message.password = String(object.password);
            if (object.game_server_token != null)
                message.game_server_token = String(object.game_server_token);
            if (object.login_key != null)
                message.login_key = String(object.login_key);
            if (object.was_converted_deprecated_msg != null)
                message.was_converted_deprecated_msg = Boolean(object.was_converted_deprecated_msg);
            if (object.anon_user_target_account_name != null)
                message.anon_user_target_account_name = String(object.anon_user_target_account_name);
            if (object.resolved_user_steam_id != null)
                if ($util.Long)
                    (message.resolved_user_steam_id = $util.Long.fromValue(object.resolved_user_steam_id)).unsigned = false;
                else if (typeof object.resolved_user_steam_id === "string")
                    message.resolved_user_steam_id = parseInt(object.resolved_user_steam_id, 10);
                else if (typeof object.resolved_user_steam_id === "number")
                    message.resolved_user_steam_id = object.resolved_user_steam_id;
                else if (typeof object.resolved_user_steam_id === "object")
                    message.resolved_user_steam_id = new $util.LongBits(object.resolved_user_steam_id.low >>> 0, object.resolved_user_steam_id.high >>> 0).toNumber();
            if (object.eresult_sentryfile != null)
                message.eresult_sentryfile = object.eresult_sentryfile | 0;
            if (object.sha_sentryfile != null)
                if (typeof object.sha_sentryfile === "string")
                    $util.base64.decode(object.sha_sentryfile, message.sha_sentryfile = $util.newBuffer($util.base64.length(object.sha_sentryfile)), 0);
                else if (object.sha_sentryfile.length)
                    message.sha_sentryfile = object.sha_sentryfile;
            if (object.auth_code != null)
                message.auth_code = String(object.auth_code);
            if (object.otp_type != null)
                message.otp_type = object.otp_type | 0;
            if (object.otp_value != null)
                message.otp_value = object.otp_value >>> 0;
            if (object.otp_identifier != null)
                message.otp_identifier = String(object.otp_identifier);
            if (object.steam2_ticket_request != null)
                message.steam2_ticket_request = Boolean(object.steam2_ticket_request);
            if (object.sony_psn_ticket != null)
                if (typeof object.sony_psn_ticket === "string")
                    $util.base64.decode(object.sony_psn_ticket, message.sony_psn_ticket = $util.newBuffer($util.base64.length(object.sony_psn_ticket)), 0);
                else if (object.sony_psn_ticket.length)
                    message.sony_psn_ticket = object.sony_psn_ticket;
            if (object.sony_psn_service_id != null)
                message.sony_psn_service_id = String(object.sony_psn_service_id);
            if (object.create_new_psn_linked_account_if_needed != null)
                message.create_new_psn_linked_account_if_needed = Boolean(object.create_new_psn_linked_account_if_needed);
            if (object.sony_psn_name != null)
                message.sony_psn_name = String(object.sony_psn_name);
            if (object.game_server_app_id != null)
                message.game_server_app_id = object.game_server_app_id | 0;
            if (object.steamguard_dont_remember_computer != null)
                message.steamguard_dont_remember_computer = Boolean(object.steamguard_dont_remember_computer);
            if (object.machine_name != null)
                message.machine_name = String(object.machine_name);
            if (object.machine_name_userchosen != null)
                message.machine_name_userchosen = String(object.machine_name_userchosen);
            if (object.country_override != null)
                message.country_override = String(object.country_override);
            if (object.is_steam_box != null)
                message.is_steam_box = Boolean(object.is_steam_box);
            if (object.client_instance_id != null)
                if ($util.Long)
                    (message.client_instance_id = $util.Long.fromValue(object.client_instance_id)).unsigned = true;
                else if (typeof object.client_instance_id === "string")
                    message.client_instance_id = parseInt(object.client_instance_id, 10);
                else if (typeof object.client_instance_id === "number")
                    message.client_instance_id = object.client_instance_id;
                else if (typeof object.client_instance_id === "object")
                    message.client_instance_id = new $util.LongBits(object.client_instance_id.low >>> 0, object.client_instance_id.high >>> 0).toNumber(true);
            if (object.two_factor_code != null)
                message.two_factor_code = String(object.two_factor_code);
            if (object.supports_rate_limit_response != null)
                message.supports_rate_limit_response = Boolean(object.supports_rate_limit_response);
            if (object.web_logon_nonce != null)
                message.web_logon_nonce = String(object.web_logon_nonce);
            if (object.priority_reason != null)
                message.priority_reason = object.priority_reason | 0;
            if (object.embedded_client_secret != null) {
                if (typeof object.embedded_client_secret !== "object")
                    throw TypeError(".CMsgClientLogon.embedded_client_secret: object expected");
                message.embedded_client_secret = $root.CMsgClientSecret.fromObject(object.embedded_client_secret);
            }
            if (object.disable_partner_autogrants != null)
                message.disable_partner_autogrants = Boolean(object.disable_partner_autogrants);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLogon message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLogon
         * @static
         * @param {CMsgClientLogon} message CMsgClientLogon
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLogon.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.protocol_version = 0;
                object.deprecated_obfustucated_private_ip = 0;
                object.cell_id = 0;
                object.last_session_id = 0;
                object.client_package_version = 0;
                object.client_language = "";
                object.client_os_type = 0;
                object.should_remember_password = false;
                object.wine_version = "";
                object.deprecated_10 = 0;
                object.obfuscated_private_ip = null;
                object.deprecated_public_ip = 0;
                object.qos_level = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.client_supplied_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_supplied_steam_id = options.longs === String ? "0" : 0;
                object.public_ip = null;
                if (options.bytes === String)
                    object.machine_id = "";
                else {
                    object.machine_id = [];
                    if (options.bytes !== Array)
                        object.machine_id = $util.newBuffer(object.machine_id);
                }
                object.launcher_type = 0;
                object.ui_mode = 0;
                object.chat_mode = 0;
                if (options.bytes === String)
                    object.steam2_auth_ticket = "";
                else {
                    object.steam2_auth_ticket = [];
                    if (options.bytes !== Array)
                        object.steam2_auth_ticket = $util.newBuffer(object.steam2_auth_ticket);
                }
                object.email_address = "";
                object.rtime32_account_creation = 0;
                object.account_name = "";
                object.password = "";
                object.game_server_token = "";
                object.login_key = "";
                object.was_converted_deprecated_msg = false;
                object.anon_user_target_account_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.resolved_user_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.resolved_user_steam_id = options.longs === String ? "0" : 0;
                object.eresult_sentryfile = 0;
                if (options.bytes === String)
                    object.sha_sentryfile = "";
                else {
                    object.sha_sentryfile = [];
                    if (options.bytes !== Array)
                        object.sha_sentryfile = $util.newBuffer(object.sha_sentryfile);
                }
                object.auth_code = "";
                object.otp_type = 0;
                object.otp_value = 0;
                object.otp_identifier = "";
                object.steam2_ticket_request = false;
                if (options.bytes === String)
                    object.sony_psn_ticket = "";
                else {
                    object.sony_psn_ticket = [];
                    if (options.bytes !== Array)
                        object.sony_psn_ticket = $util.newBuffer(object.sony_psn_ticket);
                }
                object.sony_psn_service_id = "";
                object.create_new_psn_linked_account_if_needed = false;
                object.sony_psn_name = "";
                object.game_server_app_id = 0;
                object.steamguard_dont_remember_computer = false;
                object.machine_name = "";
                object.machine_name_userchosen = "";
                object.country_override = "";
                object.is_steam_box = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.client_instance_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_instance_id = options.longs === String ? "0" : 0;
                object.two_factor_code = "";
                object.supports_rate_limit_response = false;
                object.web_logon_nonce = "";
                object.priority_reason = 0;
                object.embedded_client_secret = null;
                object.disable_partner_autogrants = false;
            }
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                object.protocol_version = message.protocol_version;
            if (message.deprecated_obfustucated_private_ip != null && message.hasOwnProperty("deprecated_obfustucated_private_ip"))
                object.deprecated_obfustucated_private_ip = message.deprecated_obfustucated_private_ip;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.last_session_id != null && message.hasOwnProperty("last_session_id"))
                object.last_session_id = message.last_session_id;
            if (message.client_package_version != null && message.hasOwnProperty("client_package_version"))
                object.client_package_version = message.client_package_version;
            if (message.client_language != null && message.hasOwnProperty("client_language"))
                object.client_language = message.client_language;
            if (message.client_os_type != null && message.hasOwnProperty("client_os_type"))
                object.client_os_type = message.client_os_type;
            if (message.should_remember_password != null && message.hasOwnProperty("should_remember_password"))
                object.should_remember_password = message.should_remember_password;
            if (message.wine_version != null && message.hasOwnProperty("wine_version"))
                object.wine_version = message.wine_version;
            if (message.deprecated_10 != null && message.hasOwnProperty("deprecated_10"))
                object.deprecated_10 = message.deprecated_10;
            if (message.obfuscated_private_ip != null && message.hasOwnProperty("obfuscated_private_ip"))
                object.obfuscated_private_ip = $root.CMsgIPAddress.toObject(message.obfuscated_private_ip, options);
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                object.deprecated_public_ip = message.deprecated_public_ip;
            if (message.qos_level != null && message.hasOwnProperty("qos_level"))
                object.qos_level = message.qos_level;
            if (message.client_supplied_steam_id != null && message.hasOwnProperty("client_supplied_steam_id"))
                if (typeof message.client_supplied_steam_id === "number")
                    object.client_supplied_steam_id = options.longs === String ? String(message.client_supplied_steam_id) : message.client_supplied_steam_id;
                else
                    object.client_supplied_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_supplied_steam_id) : options.longs === Number ? new $util.LongBits(message.client_supplied_steam_id.low >>> 0, message.client_supplied_steam_id.high >>> 0).toNumber() : message.client_supplied_steam_id;
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
            if (message.machine_id != null && message.hasOwnProperty("machine_id"))
                object.machine_id = options.bytes === String ? $util.base64.encode(message.machine_id, 0, message.machine_id.length) : options.bytes === Array ? Array.prototype.slice.call(message.machine_id) : message.machine_id;
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                object.launcher_type = message.launcher_type;
            if (message.ui_mode != null && message.hasOwnProperty("ui_mode"))
                object.ui_mode = message.ui_mode;
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                object.chat_mode = message.chat_mode;
            if (message.steam2_auth_ticket != null && message.hasOwnProperty("steam2_auth_ticket"))
                object.steam2_auth_ticket = options.bytes === String ? $util.base64.encode(message.steam2_auth_ticket, 0, message.steam2_auth_ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.steam2_auth_ticket) : message.steam2_auth_ticket;
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                object.email_address = message.email_address;
            if (message.rtime32_account_creation != null && message.hasOwnProperty("rtime32_account_creation"))
                object.rtime32_account_creation = message.rtime32_account_creation;
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                object.account_name = message.account_name;
            if (message.password != null && message.hasOwnProperty("password"))
                object.password = message.password;
            if (message.game_server_token != null && message.hasOwnProperty("game_server_token"))
                object.game_server_token = message.game_server_token;
            if (message.login_key != null && message.hasOwnProperty("login_key"))
                object.login_key = message.login_key;
            if (message.was_converted_deprecated_msg != null && message.hasOwnProperty("was_converted_deprecated_msg"))
                object.was_converted_deprecated_msg = message.was_converted_deprecated_msg;
            if (message.anon_user_target_account_name != null && message.hasOwnProperty("anon_user_target_account_name"))
                object.anon_user_target_account_name = message.anon_user_target_account_name;
            if (message.resolved_user_steam_id != null && message.hasOwnProperty("resolved_user_steam_id"))
                if (typeof message.resolved_user_steam_id === "number")
                    object.resolved_user_steam_id = options.longs === String ? String(message.resolved_user_steam_id) : message.resolved_user_steam_id;
                else
                    object.resolved_user_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.resolved_user_steam_id) : options.longs === Number ? new $util.LongBits(message.resolved_user_steam_id.low >>> 0, message.resolved_user_steam_id.high >>> 0).toNumber() : message.resolved_user_steam_id;
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                object.eresult_sentryfile = message.eresult_sentryfile;
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                object.sha_sentryfile = options.bytes === String ? $util.base64.encode(message.sha_sentryfile, 0, message.sha_sentryfile.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_sentryfile) : message.sha_sentryfile;
            if (message.auth_code != null && message.hasOwnProperty("auth_code"))
                object.auth_code = message.auth_code;
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                object.otp_type = message.otp_type;
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                object.otp_value = message.otp_value;
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                object.otp_identifier = message.otp_identifier;
            if (message.steam2_ticket_request != null && message.hasOwnProperty("steam2_ticket_request"))
                object.steam2_ticket_request = message.steam2_ticket_request;
            if (message.sony_psn_ticket != null && message.hasOwnProperty("sony_psn_ticket"))
                object.sony_psn_ticket = options.bytes === String ? $util.base64.encode(message.sony_psn_ticket, 0, message.sony_psn_ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.sony_psn_ticket) : message.sony_psn_ticket;
            if (message.sony_psn_service_id != null && message.hasOwnProperty("sony_psn_service_id"))
                object.sony_psn_service_id = message.sony_psn_service_id;
            if (message.create_new_psn_linked_account_if_needed != null && message.hasOwnProperty("create_new_psn_linked_account_if_needed"))
                object.create_new_psn_linked_account_if_needed = message.create_new_psn_linked_account_if_needed;
            if (message.sony_psn_name != null && message.hasOwnProperty("sony_psn_name"))
                object.sony_psn_name = message.sony_psn_name;
            if (message.game_server_app_id != null && message.hasOwnProperty("game_server_app_id"))
                object.game_server_app_id = message.game_server_app_id;
            if (message.steamguard_dont_remember_computer != null && message.hasOwnProperty("steamguard_dont_remember_computer"))
                object.steamguard_dont_remember_computer = message.steamguard_dont_remember_computer;
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                object.machine_name = message.machine_name;
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                object.machine_name_userchosen = message.machine_name_userchosen;
            if (message.country_override != null && message.hasOwnProperty("country_override"))
                object.country_override = message.country_override;
            if (message.is_steam_box != null && message.hasOwnProperty("is_steam_box"))
                object.is_steam_box = message.is_steam_box;
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (typeof message.client_instance_id === "number")
                    object.client_instance_id = options.longs === String ? String(message.client_instance_id) : message.client_instance_id;
                else
                    object.client_instance_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_instance_id) : options.longs === Number ? new $util.LongBits(message.client_instance_id.low >>> 0, message.client_instance_id.high >>> 0).toNumber(true) : message.client_instance_id;
            if (message.two_factor_code != null && message.hasOwnProperty("two_factor_code"))
                object.two_factor_code = message.two_factor_code;
            if (message.supports_rate_limit_response != null && message.hasOwnProperty("supports_rate_limit_response"))
                object.supports_rate_limit_response = message.supports_rate_limit_response;
            if (message.web_logon_nonce != null && message.hasOwnProperty("web_logon_nonce"))
                object.web_logon_nonce = message.web_logon_nonce;
            if (message.priority_reason != null && message.hasOwnProperty("priority_reason"))
                object.priority_reason = message.priority_reason;
            if (message.embedded_client_secret != null && message.hasOwnProperty("embedded_client_secret"))
                object.embedded_client_secret = $root.CMsgClientSecret.toObject(message.embedded_client_secret, options);
            if (message.disable_partner_autogrants != null && message.hasOwnProperty("disable_partner_autogrants"))
                object.disable_partner_autogrants = message.disable_partner_autogrants;
            return object;
        };
    
        /**
         * Converts this CMsgClientLogon to JSON.
         * @function toJSON
         * @memberof CMsgClientLogon
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLogon.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLogon;
    })();
    
    $root.CMsgClientLogonResponse = (function() {
    
        /**
         * Properties of a CMsgClientLogonResponse.
         * @exports ICMsgClientLogonResponse
         * @interface ICMsgClientLogonResponse
         * @property {number|null} [eresult] CMsgClientLogonResponse eresult
         * @property {number|null} [out_of_game_heartbeat_seconds] CMsgClientLogonResponse out_of_game_heartbeat_seconds
         * @property {number|null} [in_game_heartbeat_seconds] CMsgClientLogonResponse in_game_heartbeat_seconds
         * @property {number|null} [deprecated_public_ip] CMsgClientLogonResponse deprecated_public_ip
         * @property {number|null} [rtime32_server_time] CMsgClientLogonResponse rtime32_server_time
         * @property {number|null} [account_flags] CMsgClientLogonResponse account_flags
         * @property {number|null} [cell_id] CMsgClientLogonResponse cell_id
         * @property {string|null} [email_domain] CMsgClientLogonResponse email_domain
         * @property {Uint8Array|null} [steam2_ticket] CMsgClientLogonResponse steam2_ticket
         * @property {number|null} [eresult_extended] CMsgClientLogonResponse eresult_extended
         * @property {string|null} [webapi_authenticate_user_nonce] CMsgClientLogonResponse webapi_authenticate_user_nonce
         * @property {number|null} [cell_id_ping_threshold] CMsgClientLogonResponse cell_id_ping_threshold
         * @property {boolean|null} [deprecated_use_pics] CMsgClientLogonResponse deprecated_use_pics
         * @property {string|null} [vanity_url] CMsgClientLogonResponse vanity_url
         * @property {ICMsgIPAddress|null} [public_ip] CMsgClientLogonResponse public_ip
         * @property {number|Long|null} [client_supplied_steamid] CMsgClientLogonResponse client_supplied_steamid
         * @property {string|null} [ip_country_code] CMsgClientLogonResponse ip_country_code
         * @property {Uint8Array|null} [parental_settings] CMsgClientLogonResponse parental_settings
         * @property {Uint8Array|null} [parental_setting_signature] CMsgClientLogonResponse parental_setting_signature
         * @property {number|null} [count_loginfailures_to_migrate] CMsgClientLogonResponse count_loginfailures_to_migrate
         * @property {number|null} [count_disconnects_to_migrate] CMsgClientLogonResponse count_disconnects_to_migrate
         * @property {number|null} [ogs_data_report_time_window] CMsgClientLogonResponse ogs_data_report_time_window
         * @property {number|Long|null} [client_instance_id] CMsgClientLogonResponse client_instance_id
         * @property {boolean|null} [force_client_update_check] CMsgClientLogonResponse force_client_update_check
         * @property {string|null} [agreement_session_url] CMsgClientLogonResponse agreement_session_url
         */
    
        /**
         * Constructs a new CMsgClientLogonResponse.
         * @exports CMsgClientLogonResponse
         * @classdesc Represents a CMsgClientLogonResponse.
         * @implements ICMsgClientLogonResponse
         * @constructor
         * @param {ICMsgClientLogonResponse=} [properties] Properties to set
         */
        function CMsgClientLogonResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLogonResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientLogonResponse out_of_game_heartbeat_seconds.
         * @member {number} out_of_game_heartbeat_seconds
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.out_of_game_heartbeat_seconds = 0;
    
        /**
         * CMsgClientLogonResponse in_game_heartbeat_seconds.
         * @member {number} in_game_heartbeat_seconds
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.in_game_heartbeat_seconds = 0;
    
        /**
         * CMsgClientLogonResponse deprecated_public_ip.
         * @member {number} deprecated_public_ip
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.deprecated_public_ip = 0;
    
        /**
         * CMsgClientLogonResponse rtime32_server_time.
         * @member {number} rtime32_server_time
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.rtime32_server_time = 0;
    
        /**
         * CMsgClientLogonResponse account_flags.
         * @member {number} account_flags
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.account_flags = 0;
    
        /**
         * CMsgClientLogonResponse cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.cell_id = 0;
    
        /**
         * CMsgClientLogonResponse email_domain.
         * @member {string} email_domain
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.email_domain = "";
    
        /**
         * CMsgClientLogonResponse steam2_ticket.
         * @member {Uint8Array} steam2_ticket
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.steam2_ticket = $util.newBuffer([]);
    
        /**
         * CMsgClientLogonResponse eresult_extended.
         * @member {number} eresult_extended
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.eresult_extended = 0;
    
        /**
         * CMsgClientLogonResponse webapi_authenticate_user_nonce.
         * @member {string} webapi_authenticate_user_nonce
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.webapi_authenticate_user_nonce = "";
    
        /**
         * CMsgClientLogonResponse cell_id_ping_threshold.
         * @member {number} cell_id_ping_threshold
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.cell_id_ping_threshold = 0;
    
        /**
         * CMsgClientLogonResponse deprecated_use_pics.
         * @member {boolean} deprecated_use_pics
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.deprecated_use_pics = false;
    
        /**
         * CMsgClientLogonResponse vanity_url.
         * @member {string} vanity_url
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.vanity_url = "";
    
        /**
         * CMsgClientLogonResponse public_ip.
         * @member {ICMsgIPAddress|null|undefined} public_ip
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.public_ip = null;
    
        /**
         * CMsgClientLogonResponse client_supplied_steamid.
         * @member {number|Long} client_supplied_steamid
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.client_supplied_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientLogonResponse ip_country_code.
         * @member {string} ip_country_code
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.ip_country_code = "";
    
        /**
         * CMsgClientLogonResponse parental_settings.
         * @member {Uint8Array} parental_settings
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.parental_settings = $util.newBuffer([]);
    
        /**
         * CMsgClientLogonResponse parental_setting_signature.
         * @member {Uint8Array} parental_setting_signature
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.parental_setting_signature = $util.newBuffer([]);
    
        /**
         * CMsgClientLogonResponse count_loginfailures_to_migrate.
         * @member {number} count_loginfailures_to_migrate
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.count_loginfailures_to_migrate = 0;
    
        /**
         * CMsgClientLogonResponse count_disconnects_to_migrate.
         * @member {number} count_disconnects_to_migrate
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.count_disconnects_to_migrate = 0;
    
        /**
         * CMsgClientLogonResponse ogs_data_report_time_window.
         * @member {number} ogs_data_report_time_window
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.ogs_data_report_time_window = 0;
    
        /**
         * CMsgClientLogonResponse client_instance_id.
         * @member {number|Long} client_instance_id
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.client_instance_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientLogonResponse force_client_update_check.
         * @member {boolean} force_client_update_check
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.force_client_update_check = false;
    
        /**
         * CMsgClientLogonResponse agreement_session_url.
         * @member {string} agreement_session_url
         * @memberof CMsgClientLogonResponse
         * @instance
         */
        CMsgClientLogonResponse.prototype.agreement_session_url = "";
    
        /**
         * Creates a new CMsgClientLogonResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {ICMsgClientLogonResponse=} [properties] Properties to set
         * @returns {CMsgClientLogonResponse} CMsgClientLogonResponse instance
         */
        CMsgClientLogonResponse.create = function create(properties) {
            return new CMsgClientLogonResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLogonResponse message. Does not implicitly {@link CMsgClientLogonResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {ICMsgClientLogonResponse} message CMsgClientLogonResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLogonResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.out_of_game_heartbeat_seconds != null && message.hasOwnProperty("out_of_game_heartbeat_seconds"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.out_of_game_heartbeat_seconds);
            if (message.in_game_heartbeat_seconds != null && message.hasOwnProperty("in_game_heartbeat_seconds"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.in_game_heartbeat_seconds);
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.deprecated_public_ip);
            if (message.rtime32_server_time != null && message.hasOwnProperty("rtime32_server_time"))
                writer.uint32(/* id 5, wireType 5 =*/45).fixed32(message.rtime32_server_time);
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.account_flags);
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.cell_id);
            if (message.email_domain != null && message.hasOwnProperty("email_domain"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.email_domain);
            if (message.steam2_ticket != null && message.hasOwnProperty("steam2_ticket"))
                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.steam2_ticket);
            if (message.eresult_extended != null && message.hasOwnProperty("eresult_extended"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.eresult_extended);
            if (message.webapi_authenticate_user_nonce != null && message.hasOwnProperty("webapi_authenticate_user_nonce"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.webapi_authenticate_user_nonce);
            if (message.cell_id_ping_threshold != null && message.hasOwnProperty("cell_id_ping_threshold"))
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.cell_id_ping_threshold);
            if (message.deprecated_use_pics != null && message.hasOwnProperty("deprecated_use_pics"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.deprecated_use_pics);
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.vanity_url);
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
            if (message.client_supplied_steamid != null && message.hasOwnProperty("client_supplied_steamid"))
                writer.uint32(/* id 20, wireType 1 =*/161).fixed64(message.client_supplied_steamid);
            if (message.ip_country_code != null && message.hasOwnProperty("ip_country_code"))
                writer.uint32(/* id 21, wireType 2 =*/170).string(message.ip_country_code);
            if (message.parental_settings != null && message.hasOwnProperty("parental_settings"))
                writer.uint32(/* id 22, wireType 2 =*/178).bytes(message.parental_settings);
            if (message.parental_setting_signature != null && message.hasOwnProperty("parental_setting_signature"))
                writer.uint32(/* id 23, wireType 2 =*/186).bytes(message.parental_setting_signature);
            if (message.count_loginfailures_to_migrate != null && message.hasOwnProperty("count_loginfailures_to_migrate"))
                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.count_loginfailures_to_migrate);
            if (message.count_disconnects_to_migrate != null && message.hasOwnProperty("count_disconnects_to_migrate"))
                writer.uint32(/* id 25, wireType 0 =*/200).int32(message.count_disconnects_to_migrate);
            if (message.ogs_data_report_time_window != null && message.hasOwnProperty("ogs_data_report_time_window"))
                writer.uint32(/* id 26, wireType 0 =*/208).int32(message.ogs_data_report_time_window);
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                writer.uint32(/* id 27, wireType 0 =*/216).uint64(message.client_instance_id);
            if (message.force_client_update_check != null && message.hasOwnProperty("force_client_update_check"))
                writer.uint32(/* id 28, wireType 0 =*/224).bool(message.force_client_update_check);
            if (message.agreement_session_url != null && message.hasOwnProperty("agreement_session_url"))
                writer.uint32(/* id 29, wireType 2 =*/234).string(message.agreement_session_url);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLogonResponse message, length delimited. Does not implicitly {@link CMsgClientLogonResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {ICMsgClientLogonResponse} message CMsgClientLogonResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLogonResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLogonResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLogonResponse} CMsgClientLogonResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLogonResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLogonResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.out_of_game_heartbeat_seconds = reader.int32();
                    break;
                case 3:
                    message.in_game_heartbeat_seconds = reader.int32();
                    break;
                case 4:
                    message.deprecated_public_ip = reader.uint32();
                    break;
                case 5:
                    message.rtime32_server_time = reader.fixed32();
                    break;
                case 6:
                    message.account_flags = reader.uint32();
                    break;
                case 7:
                    message.cell_id = reader.uint32();
                    break;
                case 8:
                    message.email_domain = reader.string();
                    break;
                case 9:
                    message.steam2_ticket = reader.bytes();
                    break;
                case 10:
                    message.eresult_extended = reader.int32();
                    break;
                case 11:
                    message.webapi_authenticate_user_nonce = reader.string();
                    break;
                case 12:
                    message.cell_id_ping_threshold = reader.uint32();
                    break;
                case 13:
                    message.deprecated_use_pics = reader.bool();
                    break;
                case 14:
                    message.vanity_url = reader.string();
                    break;
                case 15:
                    message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                case 20:
                    message.client_supplied_steamid = reader.fixed64();
                    break;
                case 21:
                    message.ip_country_code = reader.string();
                    break;
                case 22:
                    message.parental_settings = reader.bytes();
                    break;
                case 23:
                    message.parental_setting_signature = reader.bytes();
                    break;
                case 24:
                    message.count_loginfailures_to_migrate = reader.int32();
                    break;
                case 25:
                    message.count_disconnects_to_migrate = reader.int32();
                    break;
                case 26:
                    message.ogs_data_report_time_window = reader.int32();
                    break;
                case 27:
                    message.client_instance_id = reader.uint64();
                    break;
                case 28:
                    message.force_client_update_check = reader.bool();
                    break;
                case 29:
                    message.agreement_session_url = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLogonResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLogonResponse} CMsgClientLogonResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLogonResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLogonResponse message.
         * @function verify
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLogonResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.out_of_game_heartbeat_seconds != null && message.hasOwnProperty("out_of_game_heartbeat_seconds"))
                if (!$util.isInteger(message.out_of_game_heartbeat_seconds))
                    return "out_of_game_heartbeat_seconds: integer expected";
            if (message.in_game_heartbeat_seconds != null && message.hasOwnProperty("in_game_heartbeat_seconds"))
                if (!$util.isInteger(message.in_game_heartbeat_seconds))
                    return "in_game_heartbeat_seconds: integer expected";
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                if (!$util.isInteger(message.deprecated_public_ip))
                    return "deprecated_public_ip: integer expected";
            if (message.rtime32_server_time != null && message.hasOwnProperty("rtime32_server_time"))
                if (!$util.isInteger(message.rtime32_server_time))
                    return "rtime32_server_time: integer expected";
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                if (!$util.isInteger(message.account_flags))
                    return "account_flags: integer expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.email_domain != null && message.hasOwnProperty("email_domain"))
                if (!$util.isString(message.email_domain))
                    return "email_domain: string expected";
            if (message.steam2_ticket != null && message.hasOwnProperty("steam2_ticket"))
                if (!(message.steam2_ticket && typeof message.steam2_ticket.length === "number" || $util.isString(message.steam2_ticket)))
                    return "steam2_ticket: buffer expected";
            if (message.eresult_extended != null && message.hasOwnProperty("eresult_extended"))
                if (!$util.isInteger(message.eresult_extended))
                    return "eresult_extended: integer expected";
            if (message.webapi_authenticate_user_nonce != null && message.hasOwnProperty("webapi_authenticate_user_nonce"))
                if (!$util.isString(message.webapi_authenticate_user_nonce))
                    return "webapi_authenticate_user_nonce: string expected";
            if (message.cell_id_ping_threshold != null && message.hasOwnProperty("cell_id_ping_threshold"))
                if (!$util.isInteger(message.cell_id_ping_threshold))
                    return "cell_id_ping_threshold: integer expected";
            if (message.deprecated_use_pics != null && message.hasOwnProperty("deprecated_use_pics"))
                if (typeof message.deprecated_use_pics !== "boolean")
                    return "deprecated_use_pics: boolean expected";
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                if (!$util.isString(message.vanity_url))
                    return "vanity_url: string expected";
            if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                var error = $root.CMsgIPAddress.verify(message.public_ip);
                if (error)
                    return "public_ip." + error;
            }
            if (message.client_supplied_steamid != null && message.hasOwnProperty("client_supplied_steamid"))
                if (!$util.isInteger(message.client_supplied_steamid) && !(message.client_supplied_steamid && $util.isInteger(message.client_supplied_steamid.low) && $util.isInteger(message.client_supplied_steamid.high)))
                    return "client_supplied_steamid: integer|Long expected";
            if (message.ip_country_code != null && message.hasOwnProperty("ip_country_code"))
                if (!$util.isString(message.ip_country_code))
                    return "ip_country_code: string expected";
            if (message.parental_settings != null && message.hasOwnProperty("parental_settings"))
                if (!(message.parental_settings && typeof message.parental_settings.length === "number" || $util.isString(message.parental_settings)))
                    return "parental_settings: buffer expected";
            if (message.parental_setting_signature != null && message.hasOwnProperty("parental_setting_signature"))
                if (!(message.parental_setting_signature && typeof message.parental_setting_signature.length === "number" || $util.isString(message.parental_setting_signature)))
                    return "parental_setting_signature: buffer expected";
            if (message.count_loginfailures_to_migrate != null && message.hasOwnProperty("count_loginfailures_to_migrate"))
                if (!$util.isInteger(message.count_loginfailures_to_migrate))
                    return "count_loginfailures_to_migrate: integer expected";
            if (message.count_disconnects_to_migrate != null && message.hasOwnProperty("count_disconnects_to_migrate"))
                if (!$util.isInteger(message.count_disconnects_to_migrate))
                    return "count_disconnects_to_migrate: integer expected";
            if (message.ogs_data_report_time_window != null && message.hasOwnProperty("ogs_data_report_time_window"))
                if (!$util.isInteger(message.ogs_data_report_time_window))
                    return "ogs_data_report_time_window: integer expected";
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (!$util.isInteger(message.client_instance_id) && !(message.client_instance_id && $util.isInteger(message.client_instance_id.low) && $util.isInteger(message.client_instance_id.high)))
                    return "client_instance_id: integer|Long expected";
            if (message.force_client_update_check != null && message.hasOwnProperty("force_client_update_check"))
                if (typeof message.force_client_update_check !== "boolean")
                    return "force_client_update_check: boolean expected";
            if (message.agreement_session_url != null && message.hasOwnProperty("agreement_session_url"))
                if (!$util.isString(message.agreement_session_url))
                    return "agreement_session_url: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLogonResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLogonResponse} CMsgClientLogonResponse
         */
        CMsgClientLogonResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLogonResponse)
                return object;
            var message = new $root.CMsgClientLogonResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.out_of_game_heartbeat_seconds != null)
                message.out_of_game_heartbeat_seconds = object.out_of_game_heartbeat_seconds | 0;
            if (object.in_game_heartbeat_seconds != null)
                message.in_game_heartbeat_seconds = object.in_game_heartbeat_seconds | 0;
            if (object.deprecated_public_ip != null)
                message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
            if (object.rtime32_server_time != null)
                message.rtime32_server_time = object.rtime32_server_time >>> 0;
            if (object.account_flags != null)
                message.account_flags = object.account_flags >>> 0;
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.email_domain != null)
                message.email_domain = String(object.email_domain);
            if (object.steam2_ticket != null)
                if (typeof object.steam2_ticket === "string")
                    $util.base64.decode(object.steam2_ticket, message.steam2_ticket = $util.newBuffer($util.base64.length(object.steam2_ticket)), 0);
                else if (object.steam2_ticket.length)
                    message.steam2_ticket = object.steam2_ticket;
            if (object.eresult_extended != null)
                message.eresult_extended = object.eresult_extended | 0;
            if (object.webapi_authenticate_user_nonce != null)
                message.webapi_authenticate_user_nonce = String(object.webapi_authenticate_user_nonce);
            if (object.cell_id_ping_threshold != null)
                message.cell_id_ping_threshold = object.cell_id_ping_threshold >>> 0;
            if (object.deprecated_use_pics != null)
                message.deprecated_use_pics = Boolean(object.deprecated_use_pics);
            if (object.vanity_url != null)
                message.vanity_url = String(object.vanity_url);
            if (object.public_ip != null) {
                if (typeof object.public_ip !== "object")
                    throw TypeError(".CMsgClientLogonResponse.public_ip: object expected");
                message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
            }
            if (object.client_supplied_steamid != null)
                if ($util.Long)
                    (message.client_supplied_steamid = $util.Long.fromValue(object.client_supplied_steamid)).unsigned = false;
                else if (typeof object.client_supplied_steamid === "string")
                    message.client_supplied_steamid = parseInt(object.client_supplied_steamid, 10);
                else if (typeof object.client_supplied_steamid === "number")
                    message.client_supplied_steamid = object.client_supplied_steamid;
                else if (typeof object.client_supplied_steamid === "object")
                    message.client_supplied_steamid = new $util.LongBits(object.client_supplied_steamid.low >>> 0, object.client_supplied_steamid.high >>> 0).toNumber();
            if (object.ip_country_code != null)
                message.ip_country_code = String(object.ip_country_code);
            if (object.parental_settings != null)
                if (typeof object.parental_settings === "string")
                    $util.base64.decode(object.parental_settings, message.parental_settings = $util.newBuffer($util.base64.length(object.parental_settings)), 0);
                else if (object.parental_settings.length)
                    message.parental_settings = object.parental_settings;
            if (object.parental_setting_signature != null)
                if (typeof object.parental_setting_signature === "string")
                    $util.base64.decode(object.parental_setting_signature, message.parental_setting_signature = $util.newBuffer($util.base64.length(object.parental_setting_signature)), 0);
                else if (object.parental_setting_signature.length)
                    message.parental_setting_signature = object.parental_setting_signature;
            if (object.count_loginfailures_to_migrate != null)
                message.count_loginfailures_to_migrate = object.count_loginfailures_to_migrate | 0;
            if (object.count_disconnects_to_migrate != null)
                message.count_disconnects_to_migrate = object.count_disconnects_to_migrate | 0;
            if (object.ogs_data_report_time_window != null)
                message.ogs_data_report_time_window = object.ogs_data_report_time_window | 0;
            if (object.client_instance_id != null)
                if ($util.Long)
                    (message.client_instance_id = $util.Long.fromValue(object.client_instance_id)).unsigned = true;
                else if (typeof object.client_instance_id === "string")
                    message.client_instance_id = parseInt(object.client_instance_id, 10);
                else if (typeof object.client_instance_id === "number")
                    message.client_instance_id = object.client_instance_id;
                else if (typeof object.client_instance_id === "object")
                    message.client_instance_id = new $util.LongBits(object.client_instance_id.low >>> 0, object.client_instance_id.high >>> 0).toNumber(true);
            if (object.force_client_update_check != null)
                message.force_client_update_check = Boolean(object.force_client_update_check);
            if (object.agreement_session_url != null)
                message.agreement_session_url = String(object.agreement_session_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLogonResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLogonResponse
         * @static
         * @param {CMsgClientLogonResponse} message CMsgClientLogonResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLogonResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.out_of_game_heartbeat_seconds = 0;
                object.in_game_heartbeat_seconds = 0;
                object.deprecated_public_ip = 0;
                object.rtime32_server_time = 0;
                object.account_flags = 0;
                object.cell_id = 0;
                object.email_domain = "";
                if (options.bytes === String)
                    object.steam2_ticket = "";
                else {
                    object.steam2_ticket = [];
                    if (options.bytes !== Array)
                        object.steam2_ticket = $util.newBuffer(object.steam2_ticket);
                }
                object.eresult_extended = 0;
                object.webapi_authenticate_user_nonce = "";
                object.cell_id_ping_threshold = 0;
                object.deprecated_use_pics = false;
                object.vanity_url = "";
                object.public_ip = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.client_supplied_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_supplied_steamid = options.longs === String ? "0" : 0;
                object.ip_country_code = "";
                if (options.bytes === String)
                    object.parental_settings = "";
                else {
                    object.parental_settings = [];
                    if (options.bytes !== Array)
                        object.parental_settings = $util.newBuffer(object.parental_settings);
                }
                if (options.bytes === String)
                    object.parental_setting_signature = "";
                else {
                    object.parental_setting_signature = [];
                    if (options.bytes !== Array)
                        object.parental_setting_signature = $util.newBuffer(object.parental_setting_signature);
                }
                object.count_loginfailures_to_migrate = 0;
                object.count_disconnects_to_migrate = 0;
                object.ogs_data_report_time_window = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.client_instance_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_instance_id = options.longs === String ? "0" : 0;
                object.force_client_update_check = false;
                object.agreement_session_url = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.out_of_game_heartbeat_seconds != null && message.hasOwnProperty("out_of_game_heartbeat_seconds"))
                object.out_of_game_heartbeat_seconds = message.out_of_game_heartbeat_seconds;
            if (message.in_game_heartbeat_seconds != null && message.hasOwnProperty("in_game_heartbeat_seconds"))
                object.in_game_heartbeat_seconds = message.in_game_heartbeat_seconds;
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                object.deprecated_public_ip = message.deprecated_public_ip;
            if (message.rtime32_server_time != null && message.hasOwnProperty("rtime32_server_time"))
                object.rtime32_server_time = message.rtime32_server_time;
            if (message.account_flags != null && message.hasOwnProperty("account_flags"))
                object.account_flags = message.account_flags;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.email_domain != null && message.hasOwnProperty("email_domain"))
                object.email_domain = message.email_domain;
            if (message.steam2_ticket != null && message.hasOwnProperty("steam2_ticket"))
                object.steam2_ticket = options.bytes === String ? $util.base64.encode(message.steam2_ticket, 0, message.steam2_ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.steam2_ticket) : message.steam2_ticket;
            if (message.eresult_extended != null && message.hasOwnProperty("eresult_extended"))
                object.eresult_extended = message.eresult_extended;
            if (message.webapi_authenticate_user_nonce != null && message.hasOwnProperty("webapi_authenticate_user_nonce"))
                object.webapi_authenticate_user_nonce = message.webapi_authenticate_user_nonce;
            if (message.cell_id_ping_threshold != null && message.hasOwnProperty("cell_id_ping_threshold"))
                object.cell_id_ping_threshold = message.cell_id_ping_threshold;
            if (message.deprecated_use_pics != null && message.hasOwnProperty("deprecated_use_pics"))
                object.deprecated_use_pics = message.deprecated_use_pics;
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                object.vanity_url = message.vanity_url;
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
            if (message.client_supplied_steamid != null && message.hasOwnProperty("client_supplied_steamid"))
                if (typeof message.client_supplied_steamid === "number")
                    object.client_supplied_steamid = options.longs === String ? String(message.client_supplied_steamid) : message.client_supplied_steamid;
                else
                    object.client_supplied_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.client_supplied_steamid) : options.longs === Number ? new $util.LongBits(message.client_supplied_steamid.low >>> 0, message.client_supplied_steamid.high >>> 0).toNumber() : message.client_supplied_steamid;
            if (message.ip_country_code != null && message.hasOwnProperty("ip_country_code"))
                object.ip_country_code = message.ip_country_code;
            if (message.parental_settings != null && message.hasOwnProperty("parental_settings"))
                object.parental_settings = options.bytes === String ? $util.base64.encode(message.parental_settings, 0, message.parental_settings.length) : options.bytes === Array ? Array.prototype.slice.call(message.parental_settings) : message.parental_settings;
            if (message.parental_setting_signature != null && message.hasOwnProperty("parental_setting_signature"))
                object.parental_setting_signature = options.bytes === String ? $util.base64.encode(message.parental_setting_signature, 0, message.parental_setting_signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.parental_setting_signature) : message.parental_setting_signature;
            if (message.count_loginfailures_to_migrate != null && message.hasOwnProperty("count_loginfailures_to_migrate"))
                object.count_loginfailures_to_migrate = message.count_loginfailures_to_migrate;
            if (message.count_disconnects_to_migrate != null && message.hasOwnProperty("count_disconnects_to_migrate"))
                object.count_disconnects_to_migrate = message.count_disconnects_to_migrate;
            if (message.ogs_data_report_time_window != null && message.hasOwnProperty("ogs_data_report_time_window"))
                object.ogs_data_report_time_window = message.ogs_data_report_time_window;
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (typeof message.client_instance_id === "number")
                    object.client_instance_id = options.longs === String ? String(message.client_instance_id) : message.client_instance_id;
                else
                    object.client_instance_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_instance_id) : options.longs === Number ? new $util.LongBits(message.client_instance_id.low >>> 0, message.client_instance_id.high >>> 0).toNumber(true) : message.client_instance_id;
            if (message.force_client_update_check != null && message.hasOwnProperty("force_client_update_check"))
                object.force_client_update_check = message.force_client_update_check;
            if (message.agreement_session_url != null && message.hasOwnProperty("agreement_session_url"))
                object.agreement_session_url = message.agreement_session_url;
            return object;
        };
    
        /**
         * Converts this CMsgClientLogonResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientLogonResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLogonResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLogonResponse;
    })();
    
    $root.CMsgClientManageFriendsGroup = (function() {
    
        /**
         * Properties of a CMsgClientManageFriendsGroup.
         * @exports ICMsgClientManageFriendsGroup
         * @interface ICMsgClientManageFriendsGroup
         * @property {number|null} [groupid] CMsgClientManageFriendsGroup groupid
         * @property {string|null} [groupname] CMsgClientManageFriendsGroup groupname
         * @property {Array.<number|Long>|null} [steamid_friends_added] CMsgClientManageFriendsGroup steamid_friends_added
         * @property {Array.<number|Long>|null} [steamid_friends_removed] CMsgClientManageFriendsGroup steamid_friends_removed
         */
    
        /**
         * Constructs a new CMsgClientManageFriendsGroup.
         * @exports CMsgClientManageFriendsGroup
         * @classdesc Represents a CMsgClientManageFriendsGroup.
         * @implements ICMsgClientManageFriendsGroup
         * @constructor
         * @param {ICMsgClientManageFriendsGroup=} [properties] Properties to set
         */
        function CMsgClientManageFriendsGroup(properties) {
            this.steamid_friends_added = [];
            this.steamid_friends_removed = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientManageFriendsGroup groupid.
         * @member {number} groupid
         * @memberof CMsgClientManageFriendsGroup
         * @instance
         */
        CMsgClientManageFriendsGroup.prototype.groupid = 0;
    
        /**
         * CMsgClientManageFriendsGroup groupname.
         * @member {string} groupname
         * @memberof CMsgClientManageFriendsGroup
         * @instance
         */
        CMsgClientManageFriendsGroup.prototype.groupname = "";
    
        /**
         * CMsgClientManageFriendsGroup steamid_friends_added.
         * @member {Array.<number|Long>} steamid_friends_added
         * @memberof CMsgClientManageFriendsGroup
         * @instance
         */
        CMsgClientManageFriendsGroup.prototype.steamid_friends_added = $util.emptyArray;
    
        /**
         * CMsgClientManageFriendsGroup steamid_friends_removed.
         * @member {Array.<number|Long>} steamid_friends_removed
         * @memberof CMsgClientManageFriendsGroup
         * @instance
         */
        CMsgClientManageFriendsGroup.prototype.steamid_friends_removed = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientManageFriendsGroup instance using the specified properties.
         * @function create
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {ICMsgClientManageFriendsGroup=} [properties] Properties to set
         * @returns {CMsgClientManageFriendsGroup} CMsgClientManageFriendsGroup instance
         */
        CMsgClientManageFriendsGroup.create = function create(properties) {
            return new CMsgClientManageFriendsGroup(properties);
        };
    
        /**
         * Encodes the specified CMsgClientManageFriendsGroup message. Does not implicitly {@link CMsgClientManageFriendsGroup.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {ICMsgClientManageFriendsGroup} message CMsgClientManageFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientManageFriendsGroup.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.groupid);
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.groupname);
            if (message.steamid_friends_added != null && message.steamid_friends_added.length)
                for (var i = 0; i < message.steamid_friends_added.length; ++i)
                    writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid_friends_added[i]);
            if (message.steamid_friends_removed != null && message.steamid_friends_removed.length)
                for (var i = 0; i < message.steamid_friends_removed.length; ++i)
                    writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steamid_friends_removed[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientManageFriendsGroup message, length delimited. Does not implicitly {@link CMsgClientManageFriendsGroup.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {ICMsgClientManageFriendsGroup} message CMsgClientManageFriendsGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientManageFriendsGroup.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientManageFriendsGroup message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientManageFriendsGroup} CMsgClientManageFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientManageFriendsGroup.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientManageFriendsGroup();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.groupid = reader.int32();
                    break;
                case 2:
                    message.groupname = reader.string();
                    break;
                case 3:
                    if (!(message.steamid_friends_added && message.steamid_friends_added.length))
                        message.steamid_friends_added = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_friends_added.push(reader.fixed64());
                    } else
                        message.steamid_friends_added.push(reader.fixed64());
                    break;
                case 4:
                    if (!(message.steamid_friends_removed && message.steamid_friends_removed.length))
                        message.steamid_friends_removed = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_friends_removed.push(reader.fixed64());
                    } else
                        message.steamid_friends_removed.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientManageFriendsGroup message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientManageFriendsGroup} CMsgClientManageFriendsGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientManageFriendsGroup.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientManageFriendsGroup message.
         * @function verify
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientManageFriendsGroup.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                if (!$util.isInteger(message.groupid))
                    return "groupid: integer expected";
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                if (!$util.isString(message.groupname))
                    return "groupname: string expected";
            if (message.steamid_friends_added != null && message.hasOwnProperty("steamid_friends_added")) {
                if (!Array.isArray(message.steamid_friends_added))
                    return "steamid_friends_added: array expected";
                for (var i = 0; i < message.steamid_friends_added.length; ++i)
                    if (!$util.isInteger(message.steamid_friends_added[i]) && !(message.steamid_friends_added[i] && $util.isInteger(message.steamid_friends_added[i].low) && $util.isInteger(message.steamid_friends_added[i].high)))
                        return "steamid_friends_added: integer|Long[] expected";
            }
            if (message.steamid_friends_removed != null && message.hasOwnProperty("steamid_friends_removed")) {
                if (!Array.isArray(message.steamid_friends_removed))
                    return "steamid_friends_removed: array expected";
                for (var i = 0; i < message.steamid_friends_removed.length; ++i)
                    if (!$util.isInteger(message.steamid_friends_removed[i]) && !(message.steamid_friends_removed[i] && $util.isInteger(message.steamid_friends_removed[i].low) && $util.isInteger(message.steamid_friends_removed[i].high)))
                        return "steamid_friends_removed: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientManageFriendsGroup message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientManageFriendsGroup} CMsgClientManageFriendsGroup
         */
        CMsgClientManageFriendsGroup.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientManageFriendsGroup)
                return object;
            var message = new $root.CMsgClientManageFriendsGroup();
            if (object.groupid != null)
                message.groupid = object.groupid | 0;
            if (object.groupname != null)
                message.groupname = String(object.groupname);
            if (object.steamid_friends_added) {
                if (!Array.isArray(object.steamid_friends_added))
                    throw TypeError(".CMsgClientManageFriendsGroup.steamid_friends_added: array expected");
                message.steamid_friends_added = [];
                for (var i = 0; i < object.steamid_friends_added.length; ++i)
                    if ($util.Long)
                        (message.steamid_friends_added[i] = $util.Long.fromValue(object.steamid_friends_added[i])).unsigned = false;
                    else if (typeof object.steamid_friends_added[i] === "string")
                        message.steamid_friends_added[i] = parseInt(object.steamid_friends_added[i], 10);
                    else if (typeof object.steamid_friends_added[i] === "number")
                        message.steamid_friends_added[i] = object.steamid_friends_added[i];
                    else if (typeof object.steamid_friends_added[i] === "object")
                        message.steamid_friends_added[i] = new $util.LongBits(object.steamid_friends_added[i].low >>> 0, object.steamid_friends_added[i].high >>> 0).toNumber();
            }
            if (object.steamid_friends_removed) {
                if (!Array.isArray(object.steamid_friends_removed))
                    throw TypeError(".CMsgClientManageFriendsGroup.steamid_friends_removed: array expected");
                message.steamid_friends_removed = [];
                for (var i = 0; i < object.steamid_friends_removed.length; ++i)
                    if ($util.Long)
                        (message.steamid_friends_removed[i] = $util.Long.fromValue(object.steamid_friends_removed[i])).unsigned = false;
                    else if (typeof object.steamid_friends_removed[i] === "string")
                        message.steamid_friends_removed[i] = parseInt(object.steamid_friends_removed[i], 10);
                    else if (typeof object.steamid_friends_removed[i] === "number")
                        message.steamid_friends_removed[i] = object.steamid_friends_removed[i];
                    else if (typeof object.steamid_friends_removed[i] === "object")
                        message.steamid_friends_removed[i] = new $util.LongBits(object.steamid_friends_removed[i].low >>> 0, object.steamid_friends_removed[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientManageFriendsGroup message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientManageFriendsGroup
         * @static
         * @param {CMsgClientManageFriendsGroup} message CMsgClientManageFriendsGroup
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientManageFriendsGroup.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.steamid_friends_added = [];
                object.steamid_friends_removed = [];
            }
            if (options.defaults) {
                object.groupid = 0;
                object.groupname = "";
            }
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                object.groupid = message.groupid;
            if (message.groupname != null && message.hasOwnProperty("groupname"))
                object.groupname = message.groupname;
            if (message.steamid_friends_added && message.steamid_friends_added.length) {
                object.steamid_friends_added = [];
                for (var j = 0; j < message.steamid_friends_added.length; ++j)
                    if (typeof message.steamid_friends_added[j] === "number")
                        object.steamid_friends_added[j] = options.longs === String ? String(message.steamid_friends_added[j]) : message.steamid_friends_added[j];
                    else
                        object.steamid_friends_added[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_friends_added[j]) : options.longs === Number ? new $util.LongBits(message.steamid_friends_added[j].low >>> 0, message.steamid_friends_added[j].high >>> 0).toNumber() : message.steamid_friends_added[j];
            }
            if (message.steamid_friends_removed && message.steamid_friends_removed.length) {
                object.steamid_friends_removed = [];
                for (var j = 0; j < message.steamid_friends_removed.length; ++j)
                    if (typeof message.steamid_friends_removed[j] === "number")
                        object.steamid_friends_removed[j] = options.longs === String ? String(message.steamid_friends_removed[j]) : message.steamid_friends_removed[j];
                    else
                        object.steamid_friends_removed[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_friends_removed[j]) : options.longs === Number ? new $util.LongBits(message.steamid_friends_removed[j].low >>> 0, message.steamid_friends_removed[j].high >>> 0).toNumber() : message.steamid_friends_removed[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientManageFriendsGroup to JSON.
         * @function toJSON
         * @memberof CMsgClientManageFriendsGroup
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientManageFriendsGroup.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientManageFriendsGroup;
    })();
    
    $root.CMsgClientManageFriendsGroupResponse = (function() {
    
        /**
         * Properties of a CMsgClientManageFriendsGroupResponse.
         * @exports ICMsgClientManageFriendsGroupResponse
         * @interface ICMsgClientManageFriendsGroupResponse
         * @property {number|null} [eresult] CMsgClientManageFriendsGroupResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientManageFriendsGroupResponse.
         * @exports CMsgClientManageFriendsGroupResponse
         * @classdesc Represents a CMsgClientManageFriendsGroupResponse.
         * @implements ICMsgClientManageFriendsGroupResponse
         * @constructor
         * @param {ICMsgClientManageFriendsGroupResponse=} [properties] Properties to set
         */
        function CMsgClientManageFriendsGroupResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientManageFriendsGroupResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientManageFriendsGroupResponse
         * @instance
         */
        CMsgClientManageFriendsGroupResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientManageFriendsGroupResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {ICMsgClientManageFriendsGroupResponse=} [properties] Properties to set
         * @returns {CMsgClientManageFriendsGroupResponse} CMsgClientManageFriendsGroupResponse instance
         */
        CMsgClientManageFriendsGroupResponse.create = function create(properties) {
            return new CMsgClientManageFriendsGroupResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientManageFriendsGroupResponse message. Does not implicitly {@link CMsgClientManageFriendsGroupResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {ICMsgClientManageFriendsGroupResponse} message CMsgClientManageFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientManageFriendsGroupResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientManageFriendsGroupResponse message, length delimited. Does not implicitly {@link CMsgClientManageFriendsGroupResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {ICMsgClientManageFriendsGroupResponse} message CMsgClientManageFriendsGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientManageFriendsGroupResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientManageFriendsGroupResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientManageFriendsGroupResponse} CMsgClientManageFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientManageFriendsGroupResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientManageFriendsGroupResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientManageFriendsGroupResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientManageFriendsGroupResponse} CMsgClientManageFriendsGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientManageFriendsGroupResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientManageFriendsGroupResponse message.
         * @function verify
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientManageFriendsGroupResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientManageFriendsGroupResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientManageFriendsGroupResponse} CMsgClientManageFriendsGroupResponse
         */
        CMsgClientManageFriendsGroupResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientManageFriendsGroupResponse)
                return object;
            var message = new $root.CMsgClientManageFriendsGroupResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientManageFriendsGroupResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientManageFriendsGroupResponse
         * @static
         * @param {CMsgClientManageFriendsGroupResponse} message CMsgClientManageFriendsGroupResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientManageFriendsGroupResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientManageFriendsGroupResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientManageFriendsGroupResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientManageFriendsGroupResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientManageFriendsGroupResponse;
    })();
    
    $root.CMsgClientMMSInviteToLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSInviteToLobby.
         * @exports ICMsgClientMMSInviteToLobby
         * @interface ICMsgClientMMSInviteToLobby
         * @property {number|null} [app_id] CMsgClientMMSInviteToLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSInviteToLobby steam_id_lobby
         * @property {number|Long|null} [steam_id_user_invited] CMsgClientMMSInviteToLobby steam_id_user_invited
         */
    
        /**
         * Constructs a new CMsgClientMMSInviteToLobby.
         * @exports CMsgClientMMSInviteToLobby
         * @classdesc Represents a CMsgClientMMSInviteToLobby.
         * @implements ICMsgClientMMSInviteToLobby
         * @constructor
         * @param {ICMsgClientMMSInviteToLobby=} [properties] Properties to set
         */
        function CMsgClientMMSInviteToLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSInviteToLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSInviteToLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSInviteToLobby steam_id_user_invited.
         * @member {number|Long} steam_id_user_invited
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.steam_id_user_invited = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSInviteToLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby instance
         */
        CMsgClientMMSInviteToLobby.create = function create(properties) {
            return new CMsgClientMMSInviteToLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSInviteToLobby message. Does not implicitly {@link CMsgClientMMSInviteToLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSInviteToLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_user_invited != null && message.hasOwnProperty("steam_id_user_invited"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_user_invited);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSInviteToLobby message, length delimited. Does not implicitly {@link CMsgClientMMSInviteToLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSInviteToLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSInviteToLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSInviteToLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSInviteToLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_user_invited = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSInviteToLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSInviteToLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSInviteToLobby message.
         * @function verify
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSInviteToLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_user_invited != null && message.hasOwnProperty("steam_id_user_invited"))
                if (!$util.isInteger(message.steam_id_user_invited) && !(message.steam_id_user_invited && $util.isInteger(message.steam_id_user_invited.low) && $util.isInteger(message.steam_id_user_invited.high)))
                    return "steam_id_user_invited: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSInviteToLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         */
        CMsgClientMMSInviteToLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSInviteToLobby)
                return object;
            var message = new $root.CMsgClientMMSInviteToLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_user_invited != null)
                if ($util.Long)
                    (message.steam_id_user_invited = $util.Long.fromValue(object.steam_id_user_invited)).unsigned = false;
                else if (typeof object.steam_id_user_invited === "string")
                    message.steam_id_user_invited = parseInt(object.steam_id_user_invited, 10);
                else if (typeof object.steam_id_user_invited === "number")
                    message.steam_id_user_invited = object.steam_id_user_invited;
                else if (typeof object.steam_id_user_invited === "object")
                    message.steam_id_user_invited = new $util.LongBits(object.steam_id_user_invited.low >>> 0, object.steam_id_user_invited.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSInviteToLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {CMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSInviteToLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_user_invited = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_user_invited = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_user_invited != null && message.hasOwnProperty("steam_id_user_invited"))
                if (typeof message.steam_id_user_invited === "number")
                    object.steam_id_user_invited = options.longs === String ? String(message.steam_id_user_invited) : message.steam_id_user_invited;
                else
                    object.steam_id_user_invited = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_user_invited) : options.longs === Number ? new $util.LongBits(message.steam_id_user_invited.low >>> 0, message.steam_id_user_invited.high >>> 0).toNumber() : message.steam_id_user_invited;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSInviteToLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSInviteToLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSInviteToLobby;
    })();
    
    $root.CMsgClientPersonaState = (function() {
    
        /**
         * Properties of a CMsgClientPersonaState.
         * @exports ICMsgClientPersonaState
         * @interface ICMsgClientPersonaState
         * @property {number|null} [status_flags] CMsgClientPersonaState status_flags
         * @property {Array.<ICMsgClientPersonaState_Friend>|null} [friends] CMsgClientPersonaState friends
         */
    
        /**
         * Constructs a new CMsgClientPersonaState.
         * @exports CMsgClientPersonaState
         * @classdesc Represents a CMsgClientPersonaState.
         * @implements ICMsgClientPersonaState
         * @constructor
         * @param {ICMsgClientPersonaState=} [properties] Properties to set
         */
        function CMsgClientPersonaState(properties) {
            this.friends = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPersonaState status_flags.
         * @member {number} status_flags
         * @memberof CMsgClientPersonaState
         * @instance
         */
        CMsgClientPersonaState.prototype.status_flags = 0;
    
        /**
         * CMsgClientPersonaState friends.
         * @member {Array.<ICMsgClientPersonaState_Friend>} friends
         * @memberof CMsgClientPersonaState
         * @instance
         */
        CMsgClientPersonaState.prototype.friends = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientPersonaState instance using the specified properties.
         * @function create
         * @memberof CMsgClientPersonaState
         * @static
         * @param {ICMsgClientPersonaState=} [properties] Properties to set
         * @returns {CMsgClientPersonaState} CMsgClientPersonaState instance
         */
        CMsgClientPersonaState.create = function create(properties) {
            return new CMsgClientPersonaState(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState message. Does not implicitly {@link CMsgClientPersonaState.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPersonaState
         * @static
         * @param {ICMsgClientPersonaState} message CMsgClientPersonaState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status_flags);
            if (message.friends != null && message.friends.length)
                for (var i = 0; i < message.friends.length; ++i)
                    $root.CMsgClientPersonaState_Friend.encode(message.friends[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState message, length delimited. Does not implicitly {@link CMsgClientPersonaState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPersonaState
         * @static
         * @param {ICMsgClientPersonaState} message CMsgClientPersonaState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPersonaState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPersonaState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPersonaState} CMsgClientPersonaState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPersonaState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.status_flags = reader.uint32();
                    break;
                case 2:
                    if (!(message.friends && message.friends.length))
                        message.friends = [];
                    message.friends.push($root.CMsgClientPersonaState_Friend.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPersonaState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPersonaState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPersonaState} CMsgClientPersonaState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPersonaState message.
         * @function verify
         * @memberof CMsgClientPersonaState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPersonaState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                if (!$util.isInteger(message.status_flags))
                    return "status_flags: integer expected";
            if (message.friends != null && message.hasOwnProperty("friends")) {
                if (!Array.isArray(message.friends))
                    return "friends: array expected";
                for (var i = 0; i < message.friends.length; ++i) {
                    var error = $root.CMsgClientPersonaState_Friend.verify(message.friends[i]);
                    if (error)
                        return "friends." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientPersonaState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPersonaState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPersonaState} CMsgClientPersonaState
         */
        CMsgClientPersonaState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPersonaState)
                return object;
            var message = new $root.CMsgClientPersonaState();
            if (object.status_flags != null)
                message.status_flags = object.status_flags >>> 0;
            if (object.friends) {
                if (!Array.isArray(object.friends))
                    throw TypeError(".CMsgClientPersonaState.friends: array expected");
                message.friends = [];
                for (var i = 0; i < object.friends.length; ++i) {
                    if (typeof object.friends[i] !== "object")
                        throw TypeError(".CMsgClientPersonaState.friends: object expected");
                    message.friends[i] = $root.CMsgClientPersonaState_Friend.fromObject(object.friends[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPersonaState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPersonaState
         * @static
         * @param {CMsgClientPersonaState} message CMsgClientPersonaState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPersonaState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.friends = [];
            if (options.defaults)
                object.status_flags = 0;
            if (message.status_flags != null && message.hasOwnProperty("status_flags"))
                object.status_flags = message.status_flags;
            if (message.friends && message.friends.length) {
                object.friends = [];
                for (var j = 0; j < message.friends.length; ++j)
                    object.friends[j] = $root.CMsgClientPersonaState_Friend.toObject(message.friends[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientPersonaState to JSON.
         * @function toJSON
         * @memberof CMsgClientPersonaState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPersonaState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPersonaState;
    })();
    
    $root.CMsgClientPersonaState_Friend = (function() {
    
        /**
         * Properties of a CMsgClientPersonaState_Friend.
         * @exports ICMsgClientPersonaState_Friend
         * @interface ICMsgClientPersonaState_Friend
         * @property {number|Long|null} [friendid] CMsgClientPersonaState_Friend friendid
         * @property {number|null} [persona_state] CMsgClientPersonaState_Friend persona_state
         * @property {number|null} [game_played_app_id] CMsgClientPersonaState_Friend game_played_app_id
         * @property {number|null} [game_server_ip] CMsgClientPersonaState_Friend game_server_ip
         * @property {number|null} [game_server_port] CMsgClientPersonaState_Friend game_server_port
         * @property {number|null} [persona_state_flags] CMsgClientPersonaState_Friend persona_state_flags
         * @property {number|null} [online_session_instances] CMsgClientPersonaState_Friend online_session_instances
         * @property {boolean|null} [persona_set_by_user] CMsgClientPersonaState_Friend persona_set_by_user
         * @property {string|null} [player_name] CMsgClientPersonaState_Friend player_name
         * @property {number|null} [query_port] CMsgClientPersonaState_Friend query_port
         * @property {number|Long|null} [steamid_source] CMsgClientPersonaState_Friend steamid_source
         * @property {Uint8Array|null} [avatar_hash] CMsgClientPersonaState_Friend avatar_hash
         * @property {number|null} [last_logoff] CMsgClientPersonaState_Friend last_logoff
         * @property {number|null} [last_logon] CMsgClientPersonaState_Friend last_logon
         * @property {number|null} [last_seen_online] CMsgClientPersonaState_Friend last_seen_online
         * @property {number|null} [clan_rank] CMsgClientPersonaState_Friend clan_rank
         * @property {string|null} [game_name] CMsgClientPersonaState_Friend game_name
         * @property {number|Long|null} [gameid] CMsgClientPersonaState_Friend gameid
         * @property {Uint8Array|null} [game_data_blob] CMsgClientPersonaState_Friend game_data_blob
         * @property {ICMsgClientPersonaState_Friend_ClanData|null} [clan_data] CMsgClientPersonaState_Friend clan_data
         * @property {string|null} [clan_tag] CMsgClientPersonaState_Friend clan_tag
         * @property {Array.<ICMsgClientPersonaState_Friend_KV>|null} [rich_presence] CMsgClientPersonaState_Friend rich_presence
         * @property {number|Long|null} [broadcast_id] CMsgClientPersonaState_Friend broadcast_id
         * @property {number|Long|null} [game_lobby_id] CMsgClientPersonaState_Friend game_lobby_id
         * @property {number|null} [watching_broadcast_accountid] CMsgClientPersonaState_Friend watching_broadcast_accountid
         * @property {number|null} [watching_broadcast_appid] CMsgClientPersonaState_Friend watching_broadcast_appid
         * @property {number|null} [watching_broadcast_viewers] CMsgClientPersonaState_Friend watching_broadcast_viewers
         * @property {string|null} [watching_broadcast_title] CMsgClientPersonaState_Friend watching_broadcast_title
         * @property {boolean|null} [is_community_banned] CMsgClientPersonaState_Friend is_community_banned
         * @property {boolean|null} [player_name_pending_review] CMsgClientPersonaState_Friend player_name_pending_review
         * @property {boolean|null} [avatar_pending_review] CMsgClientPersonaState_Friend avatar_pending_review
         */
    
        /**
         * Constructs a new CMsgClientPersonaState_Friend.
         * @exports CMsgClientPersonaState_Friend
         * @classdesc Represents a CMsgClientPersonaState_Friend.
         * @implements ICMsgClientPersonaState_Friend
         * @constructor
         * @param {ICMsgClientPersonaState_Friend=} [properties] Properties to set
         */
        function CMsgClientPersonaState_Friend(properties) {
            this.rich_presence = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPersonaState_Friend friendid.
         * @member {number|Long} friendid
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.friendid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientPersonaState_Friend persona_state.
         * @member {number} persona_state
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.persona_state = 0;
    
        /**
         * CMsgClientPersonaState_Friend game_played_app_id.
         * @member {number} game_played_app_id
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_played_app_id = 0;
    
        /**
         * CMsgClientPersonaState_Friend game_server_ip.
         * @member {number} game_server_ip
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_server_ip = 0;
    
        /**
         * CMsgClientPersonaState_Friend game_server_port.
         * @member {number} game_server_port
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_server_port = 0;
    
        /**
         * CMsgClientPersonaState_Friend persona_state_flags.
         * @member {number} persona_state_flags
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.persona_state_flags = 0;
    
        /**
         * CMsgClientPersonaState_Friend online_session_instances.
         * @member {number} online_session_instances
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.online_session_instances = 0;
    
        /**
         * CMsgClientPersonaState_Friend persona_set_by_user.
         * @member {boolean} persona_set_by_user
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.persona_set_by_user = false;
    
        /**
         * CMsgClientPersonaState_Friend player_name.
         * @member {string} player_name
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.player_name = "";
    
        /**
         * CMsgClientPersonaState_Friend query_port.
         * @member {number} query_port
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.query_port = 0;
    
        /**
         * CMsgClientPersonaState_Friend steamid_source.
         * @member {number|Long} steamid_source
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.steamid_source = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientPersonaState_Friend avatar_hash.
         * @member {Uint8Array} avatar_hash
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.avatar_hash = $util.newBuffer([]);
    
        /**
         * CMsgClientPersonaState_Friend last_logoff.
         * @member {number} last_logoff
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.last_logoff = 0;
    
        /**
         * CMsgClientPersonaState_Friend last_logon.
         * @member {number} last_logon
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.last_logon = 0;
    
        /**
         * CMsgClientPersonaState_Friend last_seen_online.
         * @member {number} last_seen_online
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.last_seen_online = 0;
    
        /**
         * CMsgClientPersonaState_Friend clan_rank.
         * @member {number} clan_rank
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.clan_rank = 0;
    
        /**
         * CMsgClientPersonaState_Friend game_name.
         * @member {string} game_name
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_name = "";
    
        /**
         * CMsgClientPersonaState_Friend gameid.
         * @member {number|Long} gameid
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientPersonaState_Friend game_data_blob.
         * @member {Uint8Array} game_data_blob
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_data_blob = $util.newBuffer([]);
    
        /**
         * CMsgClientPersonaState_Friend clan_data.
         * @member {ICMsgClientPersonaState_Friend_ClanData|null|undefined} clan_data
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.clan_data = null;
    
        /**
         * CMsgClientPersonaState_Friend clan_tag.
         * @member {string} clan_tag
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.clan_tag = "";
    
        /**
         * CMsgClientPersonaState_Friend rich_presence.
         * @member {Array.<ICMsgClientPersonaState_Friend_KV>} rich_presence
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.rich_presence = $util.emptyArray;
    
        /**
         * CMsgClientPersonaState_Friend broadcast_id.
         * @member {number|Long} broadcast_id
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.broadcast_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientPersonaState_Friend game_lobby_id.
         * @member {number|Long} game_lobby_id
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.game_lobby_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientPersonaState_Friend watching_broadcast_accountid.
         * @member {number} watching_broadcast_accountid
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.watching_broadcast_accountid = 0;
    
        /**
         * CMsgClientPersonaState_Friend watching_broadcast_appid.
         * @member {number} watching_broadcast_appid
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.watching_broadcast_appid = 0;
    
        /**
         * CMsgClientPersonaState_Friend watching_broadcast_viewers.
         * @member {number} watching_broadcast_viewers
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.watching_broadcast_viewers = 0;
    
        /**
         * CMsgClientPersonaState_Friend watching_broadcast_title.
         * @member {string} watching_broadcast_title
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.watching_broadcast_title = "";
    
        /**
         * CMsgClientPersonaState_Friend is_community_banned.
         * @member {boolean} is_community_banned
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.is_community_banned = false;
    
        /**
         * CMsgClientPersonaState_Friend player_name_pending_review.
         * @member {boolean} player_name_pending_review
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.player_name_pending_review = false;
    
        /**
         * CMsgClientPersonaState_Friend avatar_pending_review.
         * @member {boolean} avatar_pending_review
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         */
        CMsgClientPersonaState_Friend.prototype.avatar_pending_review = false;
    
        /**
         * Creates a new CMsgClientPersonaState_Friend instance using the specified properties.
         * @function create
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {ICMsgClientPersonaState_Friend=} [properties] Properties to set
         * @returns {CMsgClientPersonaState_Friend} CMsgClientPersonaState_Friend instance
         */
        CMsgClientPersonaState_Friend.create = function create(properties) {
            return new CMsgClientPersonaState_Friend(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend message. Does not implicitly {@link CMsgClientPersonaState_Friend.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {ICMsgClientPersonaState_Friend} message CMsgClientPersonaState_Friend message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.friendid != null && message.hasOwnProperty("friendid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.friendid);
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.persona_state);
            if (message.game_played_app_id != null && message.hasOwnProperty("game_played_app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.game_played_app_id);
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_server_ip);
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.game_server_port);
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.persona_state_flags);
            if (message.online_session_instances != null && message.hasOwnProperty("online_session_instances"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.online_session_instances);
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.persona_set_by_user);
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                writer.uint32(/* id 15, wireType 2 =*/122).string(message.player_name);
            if (message.query_port != null && message.hasOwnProperty("query_port"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.query_port);
            if (message.steamid_source != null && message.hasOwnProperty("steamid_source"))
                writer.uint32(/* id 25, wireType 1 =*/201).fixed64(message.steamid_source);
            if (message.avatar_hash != null && message.hasOwnProperty("avatar_hash"))
                writer.uint32(/* id 31, wireType 2 =*/250).bytes(message.avatar_hash);
            if (message.last_logoff != null && message.hasOwnProperty("last_logoff"))
                writer.uint32(/* id 45, wireType 0 =*/360).uint32(message.last_logoff);
            if (message.last_logon != null && message.hasOwnProperty("last_logon"))
                writer.uint32(/* id 46, wireType 0 =*/368).uint32(message.last_logon);
            if (message.last_seen_online != null && message.hasOwnProperty("last_seen_online"))
                writer.uint32(/* id 47, wireType 0 =*/376).uint32(message.last_seen_online);
            if (message.clan_rank != null && message.hasOwnProperty("clan_rank"))
                writer.uint32(/* id 50, wireType 0 =*/400).uint32(message.clan_rank);
            if (message.game_name != null && message.hasOwnProperty("game_name"))
                writer.uint32(/* id 55, wireType 2 =*/442).string(message.game_name);
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                writer.uint32(/* id 56, wireType 1 =*/449).fixed64(message.gameid);
            if (message.game_data_blob != null && message.hasOwnProperty("game_data_blob"))
                writer.uint32(/* id 60, wireType 2 =*/482).bytes(message.game_data_blob);
            if (message.clan_data != null && message.hasOwnProperty("clan_data"))
                $root.CMsgClientPersonaState_Friend_ClanData.encode(message.clan_data, writer.uint32(/* id 64, wireType 2 =*/514).fork()).ldelim();
            if (message.clan_tag != null && message.hasOwnProperty("clan_tag"))
                writer.uint32(/* id 65, wireType 2 =*/522).string(message.clan_tag);
            if (message.rich_presence != null && message.rich_presence.length)
                for (var i = 0; i < message.rich_presence.length; ++i)
                    $root.CMsgClientPersonaState_Friend_KV.encode(message.rich_presence[i], writer.uint32(/* id 71, wireType 2 =*/570).fork()).ldelim();
            if (message.broadcast_id != null && message.hasOwnProperty("broadcast_id"))
                writer.uint32(/* id 72, wireType 1 =*/577).fixed64(message.broadcast_id);
            if (message.game_lobby_id != null && message.hasOwnProperty("game_lobby_id"))
                writer.uint32(/* id 73, wireType 1 =*/585).fixed64(message.game_lobby_id);
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                writer.uint32(/* id 74, wireType 0 =*/592).uint32(message.watching_broadcast_accountid);
            if (message.watching_broadcast_appid != null && message.hasOwnProperty("watching_broadcast_appid"))
                writer.uint32(/* id 75, wireType 0 =*/600).uint32(message.watching_broadcast_appid);
            if (message.watching_broadcast_viewers != null && message.hasOwnProperty("watching_broadcast_viewers"))
                writer.uint32(/* id 76, wireType 0 =*/608).uint32(message.watching_broadcast_viewers);
            if (message.watching_broadcast_title != null && message.hasOwnProperty("watching_broadcast_title"))
                writer.uint32(/* id 77, wireType 2 =*/618).string(message.watching_broadcast_title);
            if (message.is_community_banned != null && message.hasOwnProperty("is_community_banned"))
                writer.uint32(/* id 78, wireType 0 =*/624).bool(message.is_community_banned);
            if (message.player_name_pending_review != null && message.hasOwnProperty("player_name_pending_review"))
                writer.uint32(/* id 79, wireType 0 =*/632).bool(message.player_name_pending_review);
            if (message.avatar_pending_review != null && message.hasOwnProperty("avatar_pending_review"))
                writer.uint32(/* id 80, wireType 0 =*/640).bool(message.avatar_pending_review);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend message, length delimited. Does not implicitly {@link CMsgClientPersonaState_Friend.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {ICMsgClientPersonaState_Friend} message CMsgClientPersonaState_Friend message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPersonaState_Friend} CMsgClientPersonaState_Friend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPersonaState_Friend();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.friendid = reader.fixed64();
                    break;
                case 2:
                    message.persona_state = reader.uint32();
                    break;
                case 3:
                    message.game_played_app_id = reader.uint32();
                    break;
                case 4:
                    message.game_server_ip = reader.uint32();
                    break;
                case 5:
                    message.game_server_port = reader.uint32();
                    break;
                case 6:
                    message.persona_state_flags = reader.uint32();
                    break;
                case 7:
                    message.online_session_instances = reader.uint32();
                    break;
                case 10:
                    message.persona_set_by_user = reader.bool();
                    break;
                case 15:
                    message.player_name = reader.string();
                    break;
                case 20:
                    message.query_port = reader.uint32();
                    break;
                case 25:
                    message.steamid_source = reader.fixed64();
                    break;
                case 31:
                    message.avatar_hash = reader.bytes();
                    break;
                case 45:
                    message.last_logoff = reader.uint32();
                    break;
                case 46:
                    message.last_logon = reader.uint32();
                    break;
                case 47:
                    message.last_seen_online = reader.uint32();
                    break;
                case 50:
                    message.clan_rank = reader.uint32();
                    break;
                case 55:
                    message.game_name = reader.string();
                    break;
                case 56:
                    message.gameid = reader.fixed64();
                    break;
                case 60:
                    message.game_data_blob = reader.bytes();
                    break;
                case 64:
                    message.clan_data = $root.CMsgClientPersonaState_Friend_ClanData.decode(reader, reader.uint32());
                    break;
                case 65:
                    message.clan_tag = reader.string();
                    break;
                case 71:
                    if (!(message.rich_presence && message.rich_presence.length))
                        message.rich_presence = [];
                    message.rich_presence.push($root.CMsgClientPersonaState_Friend_KV.decode(reader, reader.uint32()));
                    break;
                case 72:
                    message.broadcast_id = reader.fixed64();
                    break;
                case 73:
                    message.game_lobby_id = reader.fixed64();
                    break;
                case 74:
                    message.watching_broadcast_accountid = reader.uint32();
                    break;
                case 75:
                    message.watching_broadcast_appid = reader.uint32();
                    break;
                case 76:
                    message.watching_broadcast_viewers = reader.uint32();
                    break;
                case 77:
                    message.watching_broadcast_title = reader.string();
                    break;
                case 78:
                    message.is_community_banned = reader.bool();
                    break;
                case 79:
                    message.player_name_pending_review = reader.bool();
                    break;
                case 80:
                    message.avatar_pending_review = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPersonaState_Friend} CMsgClientPersonaState_Friend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPersonaState_Friend message.
         * @function verify
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPersonaState_Friend.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.friendid != null && message.hasOwnProperty("friendid"))
                if (!$util.isInteger(message.friendid) && !(message.friendid && $util.isInteger(message.friendid.low) && $util.isInteger(message.friendid.high)))
                    return "friendid: integer|Long expected";
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                if (!$util.isInteger(message.persona_state))
                    return "persona_state: integer expected";
            if (message.game_played_app_id != null && message.hasOwnProperty("game_played_app_id"))
                if (!$util.isInteger(message.game_played_app_id))
                    return "game_played_app_id: integer expected";
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip"))
                if (!$util.isInteger(message.game_server_ip))
                    return "game_server_ip: integer expected";
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                if (!$util.isInteger(message.game_server_port))
                    return "game_server_port: integer expected";
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                if (!$util.isInteger(message.persona_state_flags))
                    return "persona_state_flags: integer expected";
            if (message.online_session_instances != null && message.hasOwnProperty("online_session_instances"))
                if (!$util.isInteger(message.online_session_instances))
                    return "online_session_instances: integer expected";
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                if (typeof message.persona_set_by_user !== "boolean")
                    return "persona_set_by_user: boolean expected";
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                if (!$util.isString(message.player_name))
                    return "player_name: string expected";
            if (message.query_port != null && message.hasOwnProperty("query_port"))
                if (!$util.isInteger(message.query_port))
                    return "query_port: integer expected";
            if (message.steamid_source != null && message.hasOwnProperty("steamid_source"))
                if (!$util.isInteger(message.steamid_source) && !(message.steamid_source && $util.isInteger(message.steamid_source.low) && $util.isInteger(message.steamid_source.high)))
                    return "steamid_source: integer|Long expected";
            if (message.avatar_hash != null && message.hasOwnProperty("avatar_hash"))
                if (!(message.avatar_hash && typeof message.avatar_hash.length === "number" || $util.isString(message.avatar_hash)))
                    return "avatar_hash: buffer expected";
            if (message.last_logoff != null && message.hasOwnProperty("last_logoff"))
                if (!$util.isInteger(message.last_logoff))
                    return "last_logoff: integer expected";
            if (message.last_logon != null && message.hasOwnProperty("last_logon"))
                if (!$util.isInteger(message.last_logon))
                    return "last_logon: integer expected";
            if (message.last_seen_online != null && message.hasOwnProperty("last_seen_online"))
                if (!$util.isInteger(message.last_seen_online))
                    return "last_seen_online: integer expected";
            if (message.clan_rank != null && message.hasOwnProperty("clan_rank"))
                if (!$util.isInteger(message.clan_rank))
                    return "clan_rank: integer expected";
            if (message.game_name != null && message.hasOwnProperty("game_name"))
                if (!$util.isString(message.game_name))
                    return "game_name: string expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.game_data_blob != null && message.hasOwnProperty("game_data_blob"))
                if (!(message.game_data_blob && typeof message.game_data_blob.length === "number" || $util.isString(message.game_data_blob)))
                    return "game_data_blob: buffer expected";
            if (message.clan_data != null && message.hasOwnProperty("clan_data")) {
                var error = $root.CMsgClientPersonaState_Friend_ClanData.verify(message.clan_data);
                if (error)
                    return "clan_data." + error;
            }
            if (message.clan_tag != null && message.hasOwnProperty("clan_tag"))
                if (!$util.isString(message.clan_tag))
                    return "clan_tag: string expected";
            if (message.rich_presence != null && message.hasOwnProperty("rich_presence")) {
                if (!Array.isArray(message.rich_presence))
                    return "rich_presence: array expected";
                for (var i = 0; i < message.rich_presence.length; ++i) {
                    var error = $root.CMsgClientPersonaState_Friend_KV.verify(message.rich_presence[i]);
                    if (error)
                        return "rich_presence." + error;
                }
            }
            if (message.broadcast_id != null && message.hasOwnProperty("broadcast_id"))
                if (!$util.isInteger(message.broadcast_id) && !(message.broadcast_id && $util.isInteger(message.broadcast_id.low) && $util.isInteger(message.broadcast_id.high)))
                    return "broadcast_id: integer|Long expected";
            if (message.game_lobby_id != null && message.hasOwnProperty("game_lobby_id"))
                if (!$util.isInteger(message.game_lobby_id) && !(message.game_lobby_id && $util.isInteger(message.game_lobby_id.low) && $util.isInteger(message.game_lobby_id.high)))
                    return "game_lobby_id: integer|Long expected";
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                if (!$util.isInteger(message.watching_broadcast_accountid))
                    return "watching_broadcast_accountid: integer expected";
            if (message.watching_broadcast_appid != null && message.hasOwnProperty("watching_broadcast_appid"))
                if (!$util.isInteger(message.watching_broadcast_appid))
                    return "watching_broadcast_appid: integer expected";
            if (message.watching_broadcast_viewers != null && message.hasOwnProperty("watching_broadcast_viewers"))
                if (!$util.isInteger(message.watching_broadcast_viewers))
                    return "watching_broadcast_viewers: integer expected";
            if (message.watching_broadcast_title != null && message.hasOwnProperty("watching_broadcast_title"))
                if (!$util.isString(message.watching_broadcast_title))
                    return "watching_broadcast_title: string expected";
            if (message.is_community_banned != null && message.hasOwnProperty("is_community_banned"))
                if (typeof message.is_community_banned !== "boolean")
                    return "is_community_banned: boolean expected";
            if (message.player_name_pending_review != null && message.hasOwnProperty("player_name_pending_review"))
                if (typeof message.player_name_pending_review !== "boolean")
                    return "player_name_pending_review: boolean expected";
            if (message.avatar_pending_review != null && message.hasOwnProperty("avatar_pending_review"))
                if (typeof message.avatar_pending_review !== "boolean")
                    return "avatar_pending_review: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPersonaState_Friend message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPersonaState_Friend} CMsgClientPersonaState_Friend
         */
        CMsgClientPersonaState_Friend.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPersonaState_Friend)
                return object;
            var message = new $root.CMsgClientPersonaState_Friend();
            if (object.friendid != null)
                if ($util.Long)
                    (message.friendid = $util.Long.fromValue(object.friendid)).unsigned = false;
                else if (typeof object.friendid === "string")
                    message.friendid = parseInt(object.friendid, 10);
                else if (typeof object.friendid === "number")
                    message.friendid = object.friendid;
                else if (typeof object.friendid === "object")
                    message.friendid = new $util.LongBits(object.friendid.low >>> 0, object.friendid.high >>> 0).toNumber();
            if (object.persona_state != null)
                message.persona_state = object.persona_state >>> 0;
            if (object.game_played_app_id != null)
                message.game_played_app_id = object.game_played_app_id >>> 0;
            if (object.game_server_ip != null)
                message.game_server_ip = object.game_server_ip >>> 0;
            if (object.game_server_port != null)
                message.game_server_port = object.game_server_port >>> 0;
            if (object.persona_state_flags != null)
                message.persona_state_flags = object.persona_state_flags >>> 0;
            if (object.online_session_instances != null)
                message.online_session_instances = object.online_session_instances >>> 0;
            if (object.persona_set_by_user != null)
                message.persona_set_by_user = Boolean(object.persona_set_by_user);
            if (object.player_name != null)
                message.player_name = String(object.player_name);
            if (object.query_port != null)
                message.query_port = object.query_port >>> 0;
            if (object.steamid_source != null)
                if ($util.Long)
                    (message.steamid_source = $util.Long.fromValue(object.steamid_source)).unsigned = false;
                else if (typeof object.steamid_source === "string")
                    message.steamid_source = parseInt(object.steamid_source, 10);
                else if (typeof object.steamid_source === "number")
                    message.steamid_source = object.steamid_source;
                else if (typeof object.steamid_source === "object")
                    message.steamid_source = new $util.LongBits(object.steamid_source.low >>> 0, object.steamid_source.high >>> 0).toNumber();
            if (object.avatar_hash != null)
                if (typeof object.avatar_hash === "string")
                    $util.base64.decode(object.avatar_hash, message.avatar_hash = $util.newBuffer($util.base64.length(object.avatar_hash)), 0);
                else if (object.avatar_hash.length)
                    message.avatar_hash = object.avatar_hash;
            if (object.last_logoff != null)
                message.last_logoff = object.last_logoff >>> 0;
            if (object.last_logon != null)
                message.last_logon = object.last_logon >>> 0;
            if (object.last_seen_online != null)
                message.last_seen_online = object.last_seen_online >>> 0;
            if (object.clan_rank != null)
                message.clan_rank = object.clan_rank >>> 0;
            if (object.game_name != null)
                message.game_name = String(object.game_name);
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = false;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber();
            if (object.game_data_blob != null)
                if (typeof object.game_data_blob === "string")
                    $util.base64.decode(object.game_data_blob, message.game_data_blob = $util.newBuffer($util.base64.length(object.game_data_blob)), 0);
                else if (object.game_data_blob.length)
                    message.game_data_blob = object.game_data_blob;
            if (object.clan_data != null) {
                if (typeof object.clan_data !== "object")
                    throw TypeError(".CMsgClientPersonaState_Friend.clan_data: object expected");
                message.clan_data = $root.CMsgClientPersonaState_Friend_ClanData.fromObject(object.clan_data);
            }
            if (object.clan_tag != null)
                message.clan_tag = String(object.clan_tag);
            if (object.rich_presence) {
                if (!Array.isArray(object.rich_presence))
                    throw TypeError(".CMsgClientPersonaState_Friend.rich_presence: array expected");
                message.rich_presence = [];
                for (var i = 0; i < object.rich_presence.length; ++i) {
                    if (typeof object.rich_presence[i] !== "object")
                        throw TypeError(".CMsgClientPersonaState_Friend.rich_presence: object expected");
                    message.rich_presence[i] = $root.CMsgClientPersonaState_Friend_KV.fromObject(object.rich_presence[i]);
                }
            }
            if (object.broadcast_id != null)
                if ($util.Long)
                    (message.broadcast_id = $util.Long.fromValue(object.broadcast_id)).unsigned = false;
                else if (typeof object.broadcast_id === "string")
                    message.broadcast_id = parseInt(object.broadcast_id, 10);
                else if (typeof object.broadcast_id === "number")
                    message.broadcast_id = object.broadcast_id;
                else if (typeof object.broadcast_id === "object")
                    message.broadcast_id = new $util.LongBits(object.broadcast_id.low >>> 0, object.broadcast_id.high >>> 0).toNumber();
            if (object.game_lobby_id != null)
                if ($util.Long)
                    (message.game_lobby_id = $util.Long.fromValue(object.game_lobby_id)).unsigned = false;
                else if (typeof object.game_lobby_id === "string")
                    message.game_lobby_id = parseInt(object.game_lobby_id, 10);
                else if (typeof object.game_lobby_id === "number")
                    message.game_lobby_id = object.game_lobby_id;
                else if (typeof object.game_lobby_id === "object")
                    message.game_lobby_id = new $util.LongBits(object.game_lobby_id.low >>> 0, object.game_lobby_id.high >>> 0).toNumber();
            if (object.watching_broadcast_accountid != null)
                message.watching_broadcast_accountid = object.watching_broadcast_accountid >>> 0;
            if (object.watching_broadcast_appid != null)
                message.watching_broadcast_appid = object.watching_broadcast_appid >>> 0;
            if (object.watching_broadcast_viewers != null)
                message.watching_broadcast_viewers = object.watching_broadcast_viewers >>> 0;
            if (object.watching_broadcast_title != null)
                message.watching_broadcast_title = String(object.watching_broadcast_title);
            if (object.is_community_banned != null)
                message.is_community_banned = Boolean(object.is_community_banned);
            if (object.player_name_pending_review != null)
                message.player_name_pending_review = Boolean(object.player_name_pending_review);
            if (object.avatar_pending_review != null)
                message.avatar_pending_review = Boolean(object.avatar_pending_review);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPersonaState_Friend message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPersonaState_Friend
         * @static
         * @param {CMsgClientPersonaState_Friend} message CMsgClientPersonaState_Friend
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPersonaState_Friend.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.rich_presence = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.friendid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.friendid = options.longs === String ? "0" : 0;
                object.persona_state = 0;
                object.game_played_app_id = 0;
                object.game_server_ip = 0;
                object.game_server_port = 0;
                object.persona_state_flags = 0;
                object.online_session_instances = 0;
                object.persona_set_by_user = false;
                object.player_name = "";
                object.query_port = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_source = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.avatar_hash = "";
                else {
                    object.avatar_hash = [];
                    if (options.bytes !== Array)
                        object.avatar_hash = $util.newBuffer(object.avatar_hash);
                }
                object.last_logoff = 0;
                object.last_logon = 0;
                object.last_seen_online = 0;
                object.clan_rank = 0;
                object.game_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.game_data_blob = "";
                else {
                    object.game_data_blob = [];
                    if (options.bytes !== Array)
                        object.game_data_blob = $util.newBuffer(object.game_data_blob);
                }
                object.clan_data = null;
                object.clan_tag = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.broadcast_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.broadcast_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_lobby_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_lobby_id = options.longs === String ? "0" : 0;
                object.watching_broadcast_accountid = 0;
                object.watching_broadcast_appid = 0;
                object.watching_broadcast_viewers = 0;
                object.watching_broadcast_title = "";
                object.is_community_banned = false;
                object.player_name_pending_review = false;
                object.avatar_pending_review = false;
            }
            if (message.friendid != null && message.hasOwnProperty("friendid"))
                if (typeof message.friendid === "number")
                    object.friendid = options.longs === String ? String(message.friendid) : message.friendid;
                else
                    object.friendid = options.longs === String ? $util.Long.prototype.toString.call(message.friendid) : options.longs === Number ? new $util.LongBits(message.friendid.low >>> 0, message.friendid.high >>> 0).toNumber() : message.friendid;
            if (message.persona_state != null && message.hasOwnProperty("persona_state"))
                object.persona_state = message.persona_state;
            if (message.game_played_app_id != null && message.hasOwnProperty("game_played_app_id"))
                object.game_played_app_id = message.game_played_app_id;
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip"))
                object.game_server_ip = message.game_server_ip;
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                object.game_server_port = message.game_server_port;
            if (message.persona_state_flags != null && message.hasOwnProperty("persona_state_flags"))
                object.persona_state_flags = message.persona_state_flags;
            if (message.online_session_instances != null && message.hasOwnProperty("online_session_instances"))
                object.online_session_instances = message.online_session_instances;
            if (message.persona_set_by_user != null && message.hasOwnProperty("persona_set_by_user"))
                object.persona_set_by_user = message.persona_set_by_user;
            if (message.player_name != null && message.hasOwnProperty("player_name"))
                object.player_name = message.player_name;
            if (message.query_port != null && message.hasOwnProperty("query_port"))
                object.query_port = message.query_port;
            if (message.steamid_source != null && message.hasOwnProperty("steamid_source"))
                if (typeof message.steamid_source === "number")
                    object.steamid_source = options.longs === String ? String(message.steamid_source) : message.steamid_source;
                else
                    object.steamid_source = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_source) : options.longs === Number ? new $util.LongBits(message.steamid_source.low >>> 0, message.steamid_source.high >>> 0).toNumber() : message.steamid_source;
            if (message.avatar_hash != null && message.hasOwnProperty("avatar_hash"))
                object.avatar_hash = options.bytes === String ? $util.base64.encode(message.avatar_hash, 0, message.avatar_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.avatar_hash) : message.avatar_hash;
            if (message.last_logoff != null && message.hasOwnProperty("last_logoff"))
                object.last_logoff = message.last_logoff;
            if (message.last_logon != null && message.hasOwnProperty("last_logon"))
                object.last_logon = message.last_logon;
            if (message.last_seen_online != null && message.hasOwnProperty("last_seen_online"))
                object.last_seen_online = message.last_seen_online;
            if (message.clan_rank != null && message.hasOwnProperty("clan_rank"))
                object.clan_rank = message.clan_rank;
            if (message.game_name != null && message.hasOwnProperty("game_name"))
                object.game_name = message.game_name;
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber() : message.gameid;
            if (message.game_data_blob != null && message.hasOwnProperty("game_data_blob"))
                object.game_data_blob = options.bytes === String ? $util.base64.encode(message.game_data_blob, 0, message.game_data_blob.length) : options.bytes === Array ? Array.prototype.slice.call(message.game_data_blob) : message.game_data_blob;
            if (message.clan_data != null && message.hasOwnProperty("clan_data"))
                object.clan_data = $root.CMsgClientPersonaState_Friend_ClanData.toObject(message.clan_data, options);
            if (message.clan_tag != null && message.hasOwnProperty("clan_tag"))
                object.clan_tag = message.clan_tag;
            if (message.rich_presence && message.rich_presence.length) {
                object.rich_presence = [];
                for (var j = 0; j < message.rich_presence.length; ++j)
                    object.rich_presence[j] = $root.CMsgClientPersonaState_Friend_KV.toObject(message.rich_presence[j], options);
            }
            if (message.broadcast_id != null && message.hasOwnProperty("broadcast_id"))
                if (typeof message.broadcast_id === "number")
                    object.broadcast_id = options.longs === String ? String(message.broadcast_id) : message.broadcast_id;
                else
                    object.broadcast_id = options.longs === String ? $util.Long.prototype.toString.call(message.broadcast_id) : options.longs === Number ? new $util.LongBits(message.broadcast_id.low >>> 0, message.broadcast_id.high >>> 0).toNumber() : message.broadcast_id;
            if (message.game_lobby_id != null && message.hasOwnProperty("game_lobby_id"))
                if (typeof message.game_lobby_id === "number")
                    object.game_lobby_id = options.longs === String ? String(message.game_lobby_id) : message.game_lobby_id;
                else
                    object.game_lobby_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_lobby_id) : options.longs === Number ? new $util.LongBits(message.game_lobby_id.low >>> 0, message.game_lobby_id.high >>> 0).toNumber() : message.game_lobby_id;
            if (message.watching_broadcast_accountid != null && message.hasOwnProperty("watching_broadcast_accountid"))
                object.watching_broadcast_accountid = message.watching_broadcast_accountid;
            if (message.watching_broadcast_appid != null && message.hasOwnProperty("watching_broadcast_appid"))
                object.watching_broadcast_appid = message.watching_broadcast_appid;
            if (message.watching_broadcast_viewers != null && message.hasOwnProperty("watching_broadcast_viewers"))
                object.watching_broadcast_viewers = message.watching_broadcast_viewers;
            if (message.watching_broadcast_title != null && message.hasOwnProperty("watching_broadcast_title"))
                object.watching_broadcast_title = message.watching_broadcast_title;
            if (message.is_community_banned != null && message.hasOwnProperty("is_community_banned"))
                object.is_community_banned = message.is_community_banned;
            if (message.player_name_pending_review != null && message.hasOwnProperty("player_name_pending_review"))
                object.player_name_pending_review = message.player_name_pending_review;
            if (message.avatar_pending_review != null && message.hasOwnProperty("avatar_pending_review"))
                object.avatar_pending_review = message.avatar_pending_review;
            return object;
        };
    
        /**
         * Converts this CMsgClientPersonaState_Friend to JSON.
         * @function toJSON
         * @memberof CMsgClientPersonaState_Friend
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPersonaState_Friend.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPersonaState_Friend;
    })();
    
    $root.CMsgClientPersonaState_Friend_ClanData = (function() {
    
        /**
         * Properties of a CMsgClientPersonaState_Friend_ClanData.
         * @exports ICMsgClientPersonaState_Friend_ClanData
         * @interface ICMsgClientPersonaState_Friend_ClanData
         * @property {number|null} [ogg_app_id] CMsgClientPersonaState_Friend_ClanData ogg_app_id
         * @property {number|Long|null} [chat_group_id] CMsgClientPersonaState_Friend_ClanData chat_group_id
         */
    
        /**
         * Constructs a new CMsgClientPersonaState_Friend_ClanData.
         * @exports CMsgClientPersonaState_Friend_ClanData
         * @classdesc Represents a CMsgClientPersonaState_Friend_ClanData.
         * @implements ICMsgClientPersonaState_Friend_ClanData
         * @constructor
         * @param {ICMsgClientPersonaState_Friend_ClanData=} [properties] Properties to set
         */
        function CMsgClientPersonaState_Friend_ClanData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPersonaState_Friend_ClanData ogg_app_id.
         * @member {number} ogg_app_id
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @instance
         */
        CMsgClientPersonaState_Friend_ClanData.prototype.ogg_app_id = 0;
    
        /**
         * CMsgClientPersonaState_Friend_ClanData chat_group_id.
         * @member {number|Long} chat_group_id
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @instance
         */
        CMsgClientPersonaState_Friend_ClanData.prototype.chat_group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientPersonaState_Friend_ClanData instance using the specified properties.
         * @function create
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {ICMsgClientPersonaState_Friend_ClanData=} [properties] Properties to set
         * @returns {CMsgClientPersonaState_Friend_ClanData} CMsgClientPersonaState_Friend_ClanData instance
         */
        CMsgClientPersonaState_Friend_ClanData.create = function create(properties) {
            return new CMsgClientPersonaState_Friend_ClanData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend_ClanData message. Does not implicitly {@link CMsgClientPersonaState_Friend_ClanData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {ICMsgClientPersonaState_Friend_ClanData} message CMsgClientPersonaState_Friend_ClanData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend_ClanData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ogg_app_id != null && message.hasOwnProperty("ogg_app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ogg_app_id);
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.chat_group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend_ClanData message, length delimited. Does not implicitly {@link CMsgClientPersonaState_Friend_ClanData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {ICMsgClientPersonaState_Friend_ClanData} message CMsgClientPersonaState_Friend_ClanData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend_ClanData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend_ClanData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPersonaState_Friend_ClanData} CMsgClientPersonaState_Friend_ClanData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend_ClanData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPersonaState_Friend_ClanData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.ogg_app_id = reader.uint32();
                    break;
                case 2:
                    message.chat_group_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend_ClanData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPersonaState_Friend_ClanData} CMsgClientPersonaState_Friend_ClanData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend_ClanData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPersonaState_Friend_ClanData message.
         * @function verify
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPersonaState_Friend_ClanData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ogg_app_id != null && message.hasOwnProperty("ogg_app_id"))
                if (!$util.isInteger(message.ogg_app_id))
                    return "ogg_app_id: integer expected";
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (!$util.isInteger(message.chat_group_id) && !(message.chat_group_id && $util.isInteger(message.chat_group_id.low) && $util.isInteger(message.chat_group_id.high)))
                    return "chat_group_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPersonaState_Friend_ClanData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPersonaState_Friend_ClanData} CMsgClientPersonaState_Friend_ClanData
         */
        CMsgClientPersonaState_Friend_ClanData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPersonaState_Friend_ClanData)
                return object;
            var message = new $root.CMsgClientPersonaState_Friend_ClanData();
            if (object.ogg_app_id != null)
                message.ogg_app_id = object.ogg_app_id >>> 0;
            if (object.chat_group_id != null)
                if ($util.Long)
                    (message.chat_group_id = $util.Long.fromValue(object.chat_group_id)).unsigned = true;
                else if (typeof object.chat_group_id === "string")
                    message.chat_group_id = parseInt(object.chat_group_id, 10);
                else if (typeof object.chat_group_id === "number")
                    message.chat_group_id = object.chat_group_id;
                else if (typeof object.chat_group_id === "object")
                    message.chat_group_id = new $util.LongBits(object.chat_group_id.low >>> 0, object.chat_group_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPersonaState_Friend_ClanData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @static
         * @param {CMsgClientPersonaState_Friend_ClanData} message CMsgClientPersonaState_Friend_ClanData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPersonaState_Friend_ClanData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ogg_app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.chat_group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.chat_group_id = options.longs === String ? "0" : 0;
            }
            if (message.ogg_app_id != null && message.hasOwnProperty("ogg_app_id"))
                object.ogg_app_id = message.ogg_app_id;
            if (message.chat_group_id != null && message.hasOwnProperty("chat_group_id"))
                if (typeof message.chat_group_id === "number")
                    object.chat_group_id = options.longs === String ? String(message.chat_group_id) : message.chat_group_id;
                else
                    object.chat_group_id = options.longs === String ? $util.Long.prototype.toString.call(message.chat_group_id) : options.longs === Number ? new $util.LongBits(message.chat_group_id.low >>> 0, message.chat_group_id.high >>> 0).toNumber(true) : message.chat_group_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientPersonaState_Friend_ClanData to JSON.
         * @function toJSON
         * @memberof CMsgClientPersonaState_Friend_ClanData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPersonaState_Friend_ClanData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPersonaState_Friend_ClanData;
    })();
    
    $root.CMsgClientPersonaState_Friend_KV = (function() {
    
        /**
         * Properties of a CMsgClientPersonaState_Friend_KV.
         * @exports ICMsgClientPersonaState_Friend_KV
         * @interface ICMsgClientPersonaState_Friend_KV
         * @property {string|null} [key] CMsgClientPersonaState_Friend_KV key
         * @property {string|null} [value] CMsgClientPersonaState_Friend_KV value
         */
    
        /**
         * Constructs a new CMsgClientPersonaState_Friend_KV.
         * @exports CMsgClientPersonaState_Friend_KV
         * @classdesc Represents a CMsgClientPersonaState_Friend_KV.
         * @implements ICMsgClientPersonaState_Friend_KV
         * @constructor
         * @param {ICMsgClientPersonaState_Friend_KV=} [properties] Properties to set
         */
        function CMsgClientPersonaState_Friend_KV(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPersonaState_Friend_KV key.
         * @member {string} key
         * @memberof CMsgClientPersonaState_Friend_KV
         * @instance
         */
        CMsgClientPersonaState_Friend_KV.prototype.key = "";
    
        /**
         * CMsgClientPersonaState_Friend_KV value.
         * @member {string} value
         * @memberof CMsgClientPersonaState_Friend_KV
         * @instance
         */
        CMsgClientPersonaState_Friend_KV.prototype.value = "";
    
        /**
         * Creates a new CMsgClientPersonaState_Friend_KV instance using the specified properties.
         * @function create
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {ICMsgClientPersonaState_Friend_KV=} [properties] Properties to set
         * @returns {CMsgClientPersonaState_Friend_KV} CMsgClientPersonaState_Friend_KV instance
         */
        CMsgClientPersonaState_Friend_KV.create = function create(properties) {
            return new CMsgClientPersonaState_Friend_KV(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend_KV message. Does not implicitly {@link CMsgClientPersonaState_Friend_KV.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {ICMsgClientPersonaState_Friend_KV} message CMsgClientPersonaState_Friend_KV message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend_KV.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.key != null && message.hasOwnProperty("key"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
            if (message.value != null && message.hasOwnProperty("value"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPersonaState_Friend_KV message, length delimited. Does not implicitly {@link CMsgClientPersonaState_Friend_KV.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {ICMsgClientPersonaState_Friend_KV} message CMsgClientPersonaState_Friend_KV message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPersonaState_Friend_KV.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend_KV message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPersonaState_Friend_KV} CMsgClientPersonaState_Friend_KV
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend_KV.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPersonaState_Friend_KV();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                case 2:
                    message.value = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPersonaState_Friend_KV message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPersonaState_Friend_KV} CMsgClientPersonaState_Friend_KV
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPersonaState_Friend_KV.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPersonaState_Friend_KV message.
         * @function verify
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPersonaState_Friend_KV.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.key != null && message.hasOwnProperty("key"))
                if (!$util.isString(message.key))
                    return "key: string expected";
            if (message.value != null && message.hasOwnProperty("value"))
                if (!$util.isString(message.value))
                    return "value: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPersonaState_Friend_KV message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPersonaState_Friend_KV} CMsgClientPersonaState_Friend_KV
         */
        CMsgClientPersonaState_Friend_KV.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPersonaState_Friend_KV)
                return object;
            var message = new $root.CMsgClientPersonaState_Friend_KV();
            if (object.key != null)
                message.key = String(object.key);
            if (object.value != null)
                message.value = String(object.value);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPersonaState_Friend_KV message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPersonaState_Friend_KV
         * @static
         * @param {CMsgClientPersonaState_Friend_KV} message CMsgClientPersonaState_Friend_KV
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPersonaState_Friend_KV.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.key = "";
                object.value = "";
            }
            if (message.key != null && message.hasOwnProperty("key"))
                object.key = message.key;
            if (message.value != null && message.hasOwnProperty("value"))
                object.value = message.value;
            return object;
        };
    
        /**
         * Converts this CMsgClientPersonaState_Friend_KV to JSON.
         * @function toJSON
         * @memberof CMsgClientPersonaState_Friend_KV
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPersonaState_Friend_KV.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPersonaState_Friend_KV;
    })();
    
    $root.CMsgClientRemoveFriendFromGroup = (function() {
    
        /**
         * Properties of a CMsgClientRemoveFriendFromGroup.
         * @exports ICMsgClientRemoveFriendFromGroup
         * @interface ICMsgClientRemoveFriendFromGroup
         * @property {number|null} [groupid] CMsgClientRemoveFriendFromGroup groupid
         * @property {number|Long|null} [steamiduser] CMsgClientRemoveFriendFromGroup steamiduser
         */
    
        /**
         * Constructs a new CMsgClientRemoveFriendFromGroup.
         * @exports CMsgClientRemoveFriendFromGroup
         * @classdesc Represents a CMsgClientRemoveFriendFromGroup.
         * @implements ICMsgClientRemoveFriendFromGroup
         * @constructor
         * @param {ICMsgClientRemoveFriendFromGroup=} [properties] Properties to set
         */
        function CMsgClientRemoveFriendFromGroup(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRemoveFriendFromGroup groupid.
         * @member {number} groupid
         * @memberof CMsgClientRemoveFriendFromGroup
         * @instance
         */
        CMsgClientRemoveFriendFromGroup.prototype.groupid = 0;
    
        /**
         * CMsgClientRemoveFriendFromGroup steamiduser.
         * @member {number|Long} steamiduser
         * @memberof CMsgClientRemoveFriendFromGroup
         * @instance
         */
        CMsgClientRemoveFriendFromGroup.prototype.steamiduser = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientRemoveFriendFromGroup instance using the specified properties.
         * @function create
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {ICMsgClientRemoveFriendFromGroup=} [properties] Properties to set
         * @returns {CMsgClientRemoveFriendFromGroup} CMsgClientRemoveFriendFromGroup instance
         */
        CMsgClientRemoveFriendFromGroup.create = function create(properties) {
            return new CMsgClientRemoveFriendFromGroup(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRemoveFriendFromGroup message. Does not implicitly {@link CMsgClientRemoveFriendFromGroup.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {ICMsgClientRemoveFriendFromGroup} message CMsgClientRemoveFriendFromGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRemoveFriendFromGroup.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.groupid);
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamiduser);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRemoveFriendFromGroup message, length delimited. Does not implicitly {@link CMsgClientRemoveFriendFromGroup.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {ICMsgClientRemoveFriendFromGroup} message CMsgClientRemoveFriendFromGroup message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRemoveFriendFromGroup.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRemoveFriendFromGroup message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRemoveFriendFromGroup} CMsgClientRemoveFriendFromGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRemoveFriendFromGroup.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRemoveFriendFromGroup();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.groupid = reader.int32();
                    break;
                case 2:
                    message.steamiduser = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRemoveFriendFromGroup message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRemoveFriendFromGroup} CMsgClientRemoveFriendFromGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRemoveFriendFromGroup.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRemoveFriendFromGroup message.
         * @function verify
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRemoveFriendFromGroup.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                if (!$util.isInteger(message.groupid))
                    return "groupid: integer expected";
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                if (!$util.isInteger(message.steamiduser) && !(message.steamiduser && $util.isInteger(message.steamiduser.low) && $util.isInteger(message.steamiduser.high)))
                    return "steamiduser: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRemoveFriendFromGroup message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRemoveFriendFromGroup} CMsgClientRemoveFriendFromGroup
         */
        CMsgClientRemoveFriendFromGroup.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRemoveFriendFromGroup)
                return object;
            var message = new $root.CMsgClientRemoveFriendFromGroup();
            if (object.groupid != null)
                message.groupid = object.groupid | 0;
            if (object.steamiduser != null)
                if ($util.Long)
                    (message.steamiduser = $util.Long.fromValue(object.steamiduser)).unsigned = false;
                else if (typeof object.steamiduser === "string")
                    message.steamiduser = parseInt(object.steamiduser, 10);
                else if (typeof object.steamiduser === "number")
                    message.steamiduser = object.steamiduser;
                else if (typeof object.steamiduser === "object")
                    message.steamiduser = new $util.LongBits(object.steamiduser.low >>> 0, object.steamiduser.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRemoveFriendFromGroup message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRemoveFriendFromGroup
         * @static
         * @param {CMsgClientRemoveFriendFromGroup} message CMsgClientRemoveFriendFromGroup
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRemoveFriendFromGroup.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.groupid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamiduser = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamiduser = options.longs === String ? "0" : 0;
            }
            if (message.groupid != null && message.hasOwnProperty("groupid"))
                object.groupid = message.groupid;
            if (message.steamiduser != null && message.hasOwnProperty("steamiduser"))
                if (typeof message.steamiduser === "number")
                    object.steamiduser = options.longs === String ? String(message.steamiduser) : message.steamiduser;
                else
                    object.steamiduser = options.longs === String ? $util.Long.prototype.toString.call(message.steamiduser) : options.longs === Number ? new $util.LongBits(message.steamiduser.low >>> 0, message.steamiduser.high >>> 0).toNumber() : message.steamiduser;
            return object;
        };
    
        /**
         * Converts this CMsgClientRemoveFriendFromGroup to JSON.
         * @function toJSON
         * @memberof CMsgClientRemoveFriendFromGroup
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRemoveFriendFromGroup.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRemoveFriendFromGroup;
    })();
    
    $root.CMsgClientRemoveFriendFromGroupResponse = (function() {
    
        /**
         * Properties of a CMsgClientRemoveFriendFromGroupResponse.
         * @exports ICMsgClientRemoveFriendFromGroupResponse
         * @interface ICMsgClientRemoveFriendFromGroupResponse
         * @property {number|null} [eresult] CMsgClientRemoveFriendFromGroupResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientRemoveFriendFromGroupResponse.
         * @exports CMsgClientRemoveFriendFromGroupResponse
         * @classdesc Represents a CMsgClientRemoveFriendFromGroupResponse.
         * @implements ICMsgClientRemoveFriendFromGroupResponse
         * @constructor
         * @param {ICMsgClientRemoveFriendFromGroupResponse=} [properties] Properties to set
         */
        function CMsgClientRemoveFriendFromGroupResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRemoveFriendFromGroupResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @instance
         */
        CMsgClientRemoveFriendFromGroupResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientRemoveFriendFromGroupResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {ICMsgClientRemoveFriendFromGroupResponse=} [properties] Properties to set
         * @returns {CMsgClientRemoveFriendFromGroupResponse} CMsgClientRemoveFriendFromGroupResponse instance
         */
        CMsgClientRemoveFriendFromGroupResponse.create = function create(properties) {
            return new CMsgClientRemoveFriendFromGroupResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRemoveFriendFromGroupResponse message. Does not implicitly {@link CMsgClientRemoveFriendFromGroupResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {ICMsgClientRemoveFriendFromGroupResponse} message CMsgClientRemoveFriendFromGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRemoveFriendFromGroupResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRemoveFriendFromGroupResponse message, length delimited. Does not implicitly {@link CMsgClientRemoveFriendFromGroupResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {ICMsgClientRemoveFriendFromGroupResponse} message CMsgClientRemoveFriendFromGroupResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRemoveFriendFromGroupResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRemoveFriendFromGroupResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRemoveFriendFromGroupResponse} CMsgClientRemoveFriendFromGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRemoveFriendFromGroupResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRemoveFriendFromGroupResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRemoveFriendFromGroupResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRemoveFriendFromGroupResponse} CMsgClientRemoveFriendFromGroupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRemoveFriendFromGroupResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRemoveFriendFromGroupResponse message.
         * @function verify
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRemoveFriendFromGroupResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRemoveFriendFromGroupResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRemoveFriendFromGroupResponse} CMsgClientRemoveFriendFromGroupResponse
         */
        CMsgClientRemoveFriendFromGroupResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRemoveFriendFromGroupResponse)
                return object;
            var message = new $root.CMsgClientRemoveFriendFromGroupResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRemoveFriendFromGroupResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @static
         * @param {CMsgClientRemoveFriendFromGroupResponse} message CMsgClientRemoveFriendFromGroupResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRemoveFriendFromGroupResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientRemoveFriendFromGroupResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRemoveFriendFromGroupResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRemoveFriendFromGroupResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRemoveFriendFromGroupResponse;
    })();
    
    $root.CMsgClientRequestFriendData = (function() {
    
        /**
         * Properties of a CMsgClientRequestFriendData.
         * @exports ICMsgClientRequestFriendData
         * @interface ICMsgClientRequestFriendData
         * @property {number|null} [persona_state_requested] CMsgClientRequestFriendData persona_state_requested
         * @property {Array.<number|Long>|null} [friends] CMsgClientRequestFriendData friends
         */
    
        /**
         * Constructs a new CMsgClientRequestFriendData.
         * @exports CMsgClientRequestFriendData
         * @classdesc Represents a CMsgClientRequestFriendData.
         * @implements ICMsgClientRequestFriendData
         * @constructor
         * @param {ICMsgClientRequestFriendData=} [properties] Properties to set
         */
        function CMsgClientRequestFriendData(properties) {
            this.friends = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestFriendData persona_state_requested.
         * @member {number} persona_state_requested
         * @memberof CMsgClientRequestFriendData
         * @instance
         */
        CMsgClientRequestFriendData.prototype.persona_state_requested = 0;
    
        /**
         * CMsgClientRequestFriendData friends.
         * @member {Array.<number|Long>} friends
         * @memberof CMsgClientRequestFriendData
         * @instance
         */
        CMsgClientRequestFriendData.prototype.friends = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRequestFriendData instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {ICMsgClientRequestFriendData=} [properties] Properties to set
         * @returns {CMsgClientRequestFriendData} CMsgClientRequestFriendData instance
         */
        CMsgClientRequestFriendData.create = function create(properties) {
            return new CMsgClientRequestFriendData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestFriendData message. Does not implicitly {@link CMsgClientRequestFriendData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {ICMsgClientRequestFriendData} message CMsgClientRequestFriendData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFriendData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.persona_state_requested != null && message.hasOwnProperty("persona_state_requested"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.persona_state_requested);
            if (message.friends != null && message.friends.length)
                for (var i = 0; i < message.friends.length; ++i)
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.friends[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestFriendData message, length delimited. Does not implicitly {@link CMsgClientRequestFriendData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {ICMsgClientRequestFriendData} message CMsgClientRequestFriendData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFriendData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestFriendData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestFriendData} CMsgClientRequestFriendData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFriendData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestFriendData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.persona_state_requested = reader.uint32();
                    break;
                case 2:
                    if (!(message.friends && message.friends.length))
                        message.friends = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.friends.push(reader.fixed64());
                    } else
                        message.friends.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestFriendData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestFriendData} CMsgClientRequestFriendData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFriendData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestFriendData message.
         * @function verify
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestFriendData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.persona_state_requested != null && message.hasOwnProperty("persona_state_requested"))
                if (!$util.isInteger(message.persona_state_requested))
                    return "persona_state_requested: integer expected";
            if (message.friends != null && message.hasOwnProperty("friends")) {
                if (!Array.isArray(message.friends))
                    return "friends: array expected";
                for (var i = 0; i < message.friends.length; ++i)
                    if (!$util.isInteger(message.friends[i]) && !(message.friends[i] && $util.isInteger(message.friends[i].low) && $util.isInteger(message.friends[i].high)))
                        return "friends: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestFriendData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestFriendData} CMsgClientRequestFriendData
         */
        CMsgClientRequestFriendData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestFriendData)
                return object;
            var message = new $root.CMsgClientRequestFriendData();
            if (object.persona_state_requested != null)
                message.persona_state_requested = object.persona_state_requested >>> 0;
            if (object.friends) {
                if (!Array.isArray(object.friends))
                    throw TypeError(".CMsgClientRequestFriendData.friends: array expected");
                message.friends = [];
                for (var i = 0; i < object.friends.length; ++i)
                    if ($util.Long)
                        (message.friends[i] = $util.Long.fromValue(object.friends[i])).unsigned = false;
                    else if (typeof object.friends[i] === "string")
                        message.friends[i] = parseInt(object.friends[i], 10);
                    else if (typeof object.friends[i] === "number")
                        message.friends[i] = object.friends[i];
                    else if (typeof object.friends[i] === "object")
                        message.friends[i] = new $util.LongBits(object.friends[i].low >>> 0, object.friends[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestFriendData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestFriendData
         * @static
         * @param {CMsgClientRequestFriendData} message CMsgClientRequestFriendData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestFriendData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.friends = [];
            if (options.defaults)
                object.persona_state_requested = 0;
            if (message.persona_state_requested != null && message.hasOwnProperty("persona_state_requested"))
                object.persona_state_requested = message.persona_state_requested;
            if (message.friends && message.friends.length) {
                object.friends = [];
                for (var j = 0; j < message.friends.length; ++j)
                    if (typeof message.friends[j] === "number")
                        object.friends[j] = options.longs === String ? String(message.friends[j]) : message.friends[j];
                    else
                        object.friends[j] = options.longs === String ? $util.Long.prototype.toString.call(message.friends[j]) : options.longs === Number ? new $util.LongBits(message.friends[j].low >>> 0, message.friends[j].high >>> 0).toNumber() : message.friends[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestFriendData to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestFriendData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestFriendData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestFriendData;
    })();
    
    $root.CMsgClientSecret = (function() {
    
        /**
         * Properties of a CMsgClientSecret.
         * @exports ICMsgClientSecret
         * @interface ICMsgClientSecret
         * @property {number|null} [version] CMsgClientSecret version
         * @property {number|null} [appid] CMsgClientSecret appid
         * @property {number|null} [deviceid] CMsgClientSecret deviceid
         * @property {number|Long|null} [nonce] CMsgClientSecret nonce
         * @property {Uint8Array|null} [hmac] CMsgClientSecret hmac
         */
    
        /**
         * Constructs a new CMsgClientSecret.
         * @exports CMsgClientSecret
         * @classdesc Represents a CMsgClientSecret.
         * @implements ICMsgClientSecret
         * @constructor
         * @param {ICMsgClientSecret=} [properties] Properties to set
         */
        function CMsgClientSecret(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSecret version.
         * @member {number} version
         * @memberof CMsgClientSecret
         * @instance
         */
        CMsgClientSecret.prototype.version = 0;
    
        /**
         * CMsgClientSecret appid.
         * @member {number} appid
         * @memberof CMsgClientSecret
         * @instance
         */
        CMsgClientSecret.prototype.appid = 0;
    
        /**
         * CMsgClientSecret deviceid.
         * @member {number} deviceid
         * @memberof CMsgClientSecret
         * @instance
         */
        CMsgClientSecret.prototype.deviceid = 0;
    
        /**
         * CMsgClientSecret nonce.
         * @member {number|Long} nonce
         * @memberof CMsgClientSecret
         * @instance
         */
        CMsgClientSecret.prototype.nonce = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientSecret hmac.
         * @member {Uint8Array} hmac
         * @memberof CMsgClientSecret
         * @instance
         */
        CMsgClientSecret.prototype.hmac = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientSecret instance using the specified properties.
         * @function create
         * @memberof CMsgClientSecret
         * @static
         * @param {ICMsgClientSecret=} [properties] Properties to set
         * @returns {CMsgClientSecret} CMsgClientSecret instance
         */
        CMsgClientSecret.create = function create(properties) {
            return new CMsgClientSecret(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSecret message. Does not implicitly {@link CMsgClientSecret.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSecret
         * @static
         * @param {ICMsgClientSecret} message CMsgClientSecret message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSecret.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && message.hasOwnProperty("version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            if (message.deviceid != null && message.hasOwnProperty("deviceid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.deviceid);
            if (message.nonce != null && message.hasOwnProperty("nonce"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.nonce);
            if (message.hmac != null && message.hasOwnProperty("hmac"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.hmac);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSecret message, length delimited. Does not implicitly {@link CMsgClientSecret.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSecret
         * @static
         * @param {ICMsgClientSecret} message CMsgClientSecret message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSecret.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSecret message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSecret
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSecret} CMsgClientSecret
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSecret.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSecret();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.version = reader.uint32();
                    break;
                case 2:
                    message.appid = reader.uint32();
                    break;
                case 3:
                    message.deviceid = reader.uint32();
                    break;
                case 4:
                    message.nonce = reader.fixed64();
                    break;
                case 5:
                    message.hmac = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSecret message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSecret
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSecret} CMsgClientSecret
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSecret.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSecret message.
         * @function verify
         * @memberof CMsgClientSecret
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSecret.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.deviceid != null && message.hasOwnProperty("deviceid"))
                if (!$util.isInteger(message.deviceid))
                    return "deviceid: integer expected";
            if (message.nonce != null && message.hasOwnProperty("nonce"))
                if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high)))
                    return "nonce: integer|Long expected";
            if (message.hmac != null && message.hasOwnProperty("hmac"))
                if (!(message.hmac && typeof message.hmac.length === "number" || $util.isString(message.hmac)))
                    return "hmac: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSecret message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSecret
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSecret} CMsgClientSecret
         */
        CMsgClientSecret.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSecret)
                return object;
            var message = new $root.CMsgClientSecret();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.deviceid != null)
                message.deviceid = object.deviceid >>> 0;
            if (object.nonce != null)
                if ($util.Long)
                    (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = false;
                else if (typeof object.nonce === "string")
                    message.nonce = parseInt(object.nonce, 10);
                else if (typeof object.nonce === "number")
                    message.nonce = object.nonce;
                else if (typeof object.nonce === "object")
                    message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber();
            if (object.hmac != null)
                if (typeof object.hmac === "string")
                    $util.base64.decode(object.hmac, message.hmac = $util.newBuffer($util.base64.length(object.hmac)), 0);
                else if (object.hmac.length)
                    message.hmac = object.hmac;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSecret message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSecret
         * @static
         * @param {CMsgClientSecret} message CMsgClientSecret
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSecret.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.version = 0;
                object.appid = 0;
                object.deviceid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.nonce = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.hmac = "";
                else {
                    object.hmac = [];
                    if (options.bytes !== Array)
                        object.hmac = $util.newBuffer(object.hmac);
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.deviceid != null && message.hasOwnProperty("deviceid"))
                object.deviceid = message.deviceid;
            if (message.nonce != null && message.hasOwnProperty("nonce"))
                if (typeof message.nonce === "number")
                    object.nonce = options.longs === String ? String(message.nonce) : message.nonce;
                else
                    object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber() : message.nonce;
            if (message.hmac != null && message.hasOwnProperty("hmac"))
                object.hmac = options.bytes === String ? $util.base64.encode(message.hmac, 0, message.hmac.length) : options.bytes === Array ? Array.prototype.slice.call(message.hmac) : message.hmac;
            return object;
        };
    
        /**
         * Converts this CMsgClientSecret to JSON.
         * @function toJSON
         * @memberof CMsgClientSecret
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSecret.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientSecret;
    })();
    
    $root.CMsgClientServersAvailable = (function() {
    
        /**
         * Properties of a CMsgClientServersAvailable.
         * @exports ICMsgClientServersAvailable
         * @interface ICMsgClientServersAvailable
         * @property {Array.<ICMsgClientServersAvailable_Server_Types_Available>|null} [server_types_available] CMsgClientServersAvailable server_types_available
         * @property {number|null} [server_type_for_auth_services] CMsgClientServersAvailable server_type_for_auth_services
         */
    
        /**
         * Constructs a new CMsgClientServersAvailable.
         * @exports CMsgClientServersAvailable
         * @classdesc Represents a CMsgClientServersAvailable.
         * @implements ICMsgClientServersAvailable
         * @constructor
         * @param {ICMsgClientServersAvailable=} [properties] Properties to set
         */
        function CMsgClientServersAvailable(properties) {
            this.server_types_available = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServersAvailable server_types_available.
         * @member {Array.<ICMsgClientServersAvailable_Server_Types_Available>} server_types_available
         * @memberof CMsgClientServersAvailable
         * @instance
         */
        CMsgClientServersAvailable.prototype.server_types_available = $util.emptyArray;
    
        /**
         * CMsgClientServersAvailable server_type_for_auth_services.
         * @member {number} server_type_for_auth_services
         * @memberof CMsgClientServersAvailable
         * @instance
         */
        CMsgClientServersAvailable.prototype.server_type_for_auth_services = 0;
    
        /**
         * Creates a new CMsgClientServersAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable=} [properties] Properties to set
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable instance
         */
        CMsgClientServersAvailable.create = function create(properties) {
            return new CMsgClientServersAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable message. Does not implicitly {@link CMsgClientServersAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable} message CMsgClientServersAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_types_available != null && message.server_types_available.length)
                for (var i = 0; i < message.server_types_available.length; ++i)
                    $root.CMsgClientServersAvailable_Server_Types_Available.encode(message.server_types_available[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.server_type_for_auth_services != null && message.hasOwnProperty("server_type_for_auth_services"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_type_for_auth_services);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable message, length delimited. Does not implicitly {@link CMsgClientServersAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable} message CMsgClientServersAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServersAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServersAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.server_types_available && message.server_types_available.length))
                        message.server_types_available = [];
                    message.server_types_available.push($root.CMsgClientServersAvailable_Server_Types_Available.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.server_type_for_auth_services = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServersAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServersAvailable message.
         * @function verify
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServersAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_types_available != null && message.hasOwnProperty("server_types_available")) {
                if (!Array.isArray(message.server_types_available))
                    return "server_types_available: array expected";
                for (var i = 0; i < message.server_types_available.length; ++i) {
                    var error = $root.CMsgClientServersAvailable_Server_Types_Available.verify(message.server_types_available[i]);
                    if (error)
                        return "server_types_available." + error;
                }
            }
            if (message.server_type_for_auth_services != null && message.hasOwnProperty("server_type_for_auth_services"))
                if (!$util.isInteger(message.server_type_for_auth_services))
                    return "server_type_for_auth_services: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServersAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         */
        CMsgClientServersAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServersAvailable)
                return object;
            var message = new $root.CMsgClientServersAvailable();
            if (object.server_types_available) {
                if (!Array.isArray(object.server_types_available))
                    throw TypeError(".CMsgClientServersAvailable.server_types_available: array expected");
                message.server_types_available = [];
                for (var i = 0; i < object.server_types_available.length; ++i) {
                    if (typeof object.server_types_available[i] !== "object")
                        throw TypeError(".CMsgClientServersAvailable.server_types_available: object expected");
                    message.server_types_available[i] = $root.CMsgClientServersAvailable_Server_Types_Available.fromObject(object.server_types_available[i]);
                }
            }
            if (object.server_type_for_auth_services != null)
                message.server_type_for_auth_services = object.server_type_for_auth_services >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServersAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {CMsgClientServersAvailable} message CMsgClientServersAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServersAvailable.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.server_types_available = [];
            if (options.defaults)
                object.server_type_for_auth_services = 0;
            if (message.server_types_available && message.server_types_available.length) {
                object.server_types_available = [];
                for (var j = 0; j < message.server_types_available.length; ++j)
                    object.server_types_available[j] = $root.CMsgClientServersAvailable_Server_Types_Available.toObject(message.server_types_available[j], options);
            }
            if (message.server_type_for_auth_services != null && message.hasOwnProperty("server_type_for_auth_services"))
                object.server_type_for_auth_services = message.server_type_for_auth_services;
            return object;
        };
    
        /**
         * Converts this CMsgClientServersAvailable to JSON.
         * @function toJSON
         * @memberof CMsgClientServersAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServersAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServersAvailable;
    })();
    
    $root.CMsgClientServersAvailable_Server_Types_Available = (function() {
    
        /**
         * Properties of a CMsgClientServersAvailable_Server_Types_Available.
         * @exports ICMsgClientServersAvailable_Server_Types_Available
         * @interface ICMsgClientServersAvailable_Server_Types_Available
         * @property {number|null} [server] CMsgClientServersAvailable_Server_Types_Available server
         * @property {boolean|null} [changed] CMsgClientServersAvailable_Server_Types_Available changed
         */
    
        /**
         * Constructs a new CMsgClientServersAvailable_Server_Types_Available.
         * @exports CMsgClientServersAvailable_Server_Types_Available
         * @classdesc Represents a CMsgClientServersAvailable_Server_Types_Available.
         * @implements ICMsgClientServersAvailable_Server_Types_Available
         * @constructor
         * @param {ICMsgClientServersAvailable_Server_Types_Available=} [properties] Properties to set
         */
        function CMsgClientServersAvailable_Server_Types_Available(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServersAvailable_Server_Types_Available server.
         * @member {number} server
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @instance
         */
        CMsgClientServersAvailable_Server_Types_Available.prototype.server = 0;
    
        /**
         * CMsgClientServersAvailable_Server_Types_Available changed.
         * @member {boolean} changed
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @instance
         */
        CMsgClientServersAvailable_Server_Types_Available.prototype.changed = false;
    
        /**
         * Creates a new CMsgClientServersAvailable_Server_Types_Available instance using the specified properties.
         * @function create
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {ICMsgClientServersAvailable_Server_Types_Available=} [properties] Properties to set
         * @returns {CMsgClientServersAvailable_Server_Types_Available} CMsgClientServersAvailable_Server_Types_Available instance
         */
        CMsgClientServersAvailable_Server_Types_Available.create = function create(properties) {
            return new CMsgClientServersAvailable_Server_Types_Available(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable_Server_Types_Available message. Does not implicitly {@link CMsgClientServersAvailable_Server_Types_Available.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {ICMsgClientServersAvailable_Server_Types_Available} message CMsgClientServersAvailable_Server_Types_Available message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable_Server_Types_Available.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server != null && message.hasOwnProperty("server"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.server);
            if (message.changed != null && message.hasOwnProperty("changed"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.changed);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable_Server_Types_Available message, length delimited. Does not implicitly {@link CMsgClientServersAvailable_Server_Types_Available.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {ICMsgClientServersAvailable_Server_Types_Available} message CMsgClientServersAvailable_Server_Types_Available message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable_Server_Types_Available.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServersAvailable_Server_Types_Available message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServersAvailable_Server_Types_Available} CMsgClientServersAvailable_Server_Types_Available
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable_Server_Types_Available.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServersAvailable_Server_Types_Available();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.server = reader.uint32();
                    break;
                case 2:
                    message.changed = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServersAvailable_Server_Types_Available message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServersAvailable_Server_Types_Available} CMsgClientServersAvailable_Server_Types_Available
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable_Server_Types_Available.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServersAvailable_Server_Types_Available message.
         * @function verify
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServersAvailable_Server_Types_Available.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server != null && message.hasOwnProperty("server"))
                if (!$util.isInteger(message.server))
                    return "server: integer expected";
            if (message.changed != null && message.hasOwnProperty("changed"))
                if (typeof message.changed !== "boolean")
                    return "changed: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServersAvailable_Server_Types_Available message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServersAvailable_Server_Types_Available} CMsgClientServersAvailable_Server_Types_Available
         */
        CMsgClientServersAvailable_Server_Types_Available.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServersAvailable_Server_Types_Available)
                return object;
            var message = new $root.CMsgClientServersAvailable_Server_Types_Available();
            if (object.server != null)
                message.server = object.server >>> 0;
            if (object.changed != null)
                message.changed = Boolean(object.changed);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServersAvailable_Server_Types_Available message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @static
         * @param {CMsgClientServersAvailable_Server_Types_Available} message CMsgClientServersAvailable_Server_Types_Available
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServersAvailable_Server_Types_Available.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.server = 0;
                object.changed = false;
            }
            if (message.server != null && message.hasOwnProperty("server"))
                object.server = message.server;
            if (message.changed != null && message.hasOwnProperty("changed"))
                object.changed = message.changed;
            return object;
        };
    
        /**
         * Converts this CMsgClientServersAvailable_Server_Types_Available to JSON.
         * @function toJSON
         * @memberof CMsgClientServersAvailable_Server_Types_Available
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServersAvailable_Server_Types_Available.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServersAvailable_Server_Types_Available;
    })();
    
    $root.CMsgClientServerTimestampRequest = (function() {
    
        /**
         * Properties of a CMsgClientServerTimestampRequest.
         * @exports ICMsgClientServerTimestampRequest
         * @interface ICMsgClientServerTimestampRequest
         * @property {number|Long|null} [client_request_timestamp] CMsgClientServerTimestampRequest client_request_timestamp
         */
    
        /**
         * Constructs a new CMsgClientServerTimestampRequest.
         * @exports CMsgClientServerTimestampRequest
         * @classdesc Represents a CMsgClientServerTimestampRequest.
         * @implements ICMsgClientServerTimestampRequest
         * @constructor
         * @param {ICMsgClientServerTimestampRequest=} [properties] Properties to set
         */
        function CMsgClientServerTimestampRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServerTimestampRequest client_request_timestamp.
         * @member {number|Long} client_request_timestamp
         * @memberof CMsgClientServerTimestampRequest
         * @instance
         */
        CMsgClientServerTimestampRequest.prototype.client_request_timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientServerTimestampRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {ICMsgClientServerTimestampRequest=} [properties] Properties to set
         * @returns {CMsgClientServerTimestampRequest} CMsgClientServerTimestampRequest instance
         */
        CMsgClientServerTimestampRequest.create = function create(properties) {
            return new CMsgClientServerTimestampRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServerTimestampRequest message. Does not implicitly {@link CMsgClientServerTimestampRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {ICMsgClientServerTimestampRequest} message CMsgClientServerTimestampRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServerTimestampRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.client_request_timestamp);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServerTimestampRequest message, length delimited. Does not implicitly {@link CMsgClientServerTimestampRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {ICMsgClientServerTimestampRequest} message CMsgClientServerTimestampRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServerTimestampRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServerTimestampRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServerTimestampRequest} CMsgClientServerTimestampRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServerTimestampRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServerTimestampRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.client_request_timestamp = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServerTimestampRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServerTimestampRequest} CMsgClientServerTimestampRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServerTimestampRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServerTimestampRequest message.
         * @function verify
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServerTimestampRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                if (!$util.isInteger(message.client_request_timestamp) && !(message.client_request_timestamp && $util.isInteger(message.client_request_timestamp.low) && $util.isInteger(message.client_request_timestamp.high)))
                    return "client_request_timestamp: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServerTimestampRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServerTimestampRequest} CMsgClientServerTimestampRequest
         */
        CMsgClientServerTimestampRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServerTimestampRequest)
                return object;
            var message = new $root.CMsgClientServerTimestampRequest();
            if (object.client_request_timestamp != null)
                if ($util.Long)
                    (message.client_request_timestamp = $util.Long.fromValue(object.client_request_timestamp)).unsigned = true;
                else if (typeof object.client_request_timestamp === "string")
                    message.client_request_timestamp = parseInt(object.client_request_timestamp, 10);
                else if (typeof object.client_request_timestamp === "number")
                    message.client_request_timestamp = object.client_request_timestamp;
                else if (typeof object.client_request_timestamp === "object")
                    message.client_request_timestamp = new $util.LongBits(object.client_request_timestamp.low >>> 0, object.client_request_timestamp.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServerTimestampRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServerTimestampRequest
         * @static
         * @param {CMsgClientServerTimestampRequest} message CMsgClientServerTimestampRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServerTimestampRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.client_request_timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_request_timestamp = options.longs === String ? "0" : 0;
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                if (typeof message.client_request_timestamp === "number")
                    object.client_request_timestamp = options.longs === String ? String(message.client_request_timestamp) : message.client_request_timestamp;
                else
                    object.client_request_timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.client_request_timestamp) : options.longs === Number ? new $util.LongBits(message.client_request_timestamp.low >>> 0, message.client_request_timestamp.high >>> 0).toNumber(true) : message.client_request_timestamp;
            return object;
        };
    
        /**
         * Converts this CMsgClientServerTimestampRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientServerTimestampRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServerTimestampRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServerTimestampRequest;
    })();
    
    $root.CMsgClientServerTimestampResponse = (function() {
    
        /**
         * Properties of a CMsgClientServerTimestampResponse.
         * @exports ICMsgClientServerTimestampResponse
         * @interface ICMsgClientServerTimestampResponse
         * @property {number|Long|null} [client_request_timestamp] CMsgClientServerTimestampResponse client_request_timestamp
         * @property {number|Long|null} [server_timestamp_ms] CMsgClientServerTimestampResponse server_timestamp_ms
         */
    
        /**
         * Constructs a new CMsgClientServerTimestampResponse.
         * @exports CMsgClientServerTimestampResponse
         * @classdesc Represents a CMsgClientServerTimestampResponse.
         * @implements ICMsgClientServerTimestampResponse
         * @constructor
         * @param {ICMsgClientServerTimestampResponse=} [properties] Properties to set
         */
        function CMsgClientServerTimestampResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServerTimestampResponse client_request_timestamp.
         * @member {number|Long} client_request_timestamp
         * @memberof CMsgClientServerTimestampResponse
         * @instance
         */
        CMsgClientServerTimestampResponse.prototype.client_request_timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientServerTimestampResponse server_timestamp_ms.
         * @member {number|Long} server_timestamp_ms
         * @memberof CMsgClientServerTimestampResponse
         * @instance
         */
        CMsgClientServerTimestampResponse.prototype.server_timestamp_ms = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientServerTimestampResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {ICMsgClientServerTimestampResponse=} [properties] Properties to set
         * @returns {CMsgClientServerTimestampResponse} CMsgClientServerTimestampResponse instance
         */
        CMsgClientServerTimestampResponse.create = function create(properties) {
            return new CMsgClientServerTimestampResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServerTimestampResponse message. Does not implicitly {@link CMsgClientServerTimestampResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {ICMsgClientServerTimestampResponse} message CMsgClientServerTimestampResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServerTimestampResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.client_request_timestamp);
            if (message.server_timestamp_ms != null && message.hasOwnProperty("server_timestamp_ms"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.server_timestamp_ms);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServerTimestampResponse message, length delimited. Does not implicitly {@link CMsgClientServerTimestampResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {ICMsgClientServerTimestampResponse} message CMsgClientServerTimestampResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServerTimestampResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServerTimestampResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServerTimestampResponse} CMsgClientServerTimestampResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServerTimestampResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServerTimestampResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.client_request_timestamp = reader.uint64();
                    break;
                case 2:
                    message.server_timestamp_ms = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServerTimestampResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServerTimestampResponse} CMsgClientServerTimestampResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServerTimestampResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServerTimestampResponse message.
         * @function verify
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServerTimestampResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                if (!$util.isInteger(message.client_request_timestamp) && !(message.client_request_timestamp && $util.isInteger(message.client_request_timestamp.low) && $util.isInteger(message.client_request_timestamp.high)))
                    return "client_request_timestamp: integer|Long expected";
            if (message.server_timestamp_ms != null && message.hasOwnProperty("server_timestamp_ms"))
                if (!$util.isInteger(message.server_timestamp_ms) && !(message.server_timestamp_ms && $util.isInteger(message.server_timestamp_ms.low) && $util.isInteger(message.server_timestamp_ms.high)))
                    return "server_timestamp_ms: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServerTimestampResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServerTimestampResponse} CMsgClientServerTimestampResponse
         */
        CMsgClientServerTimestampResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServerTimestampResponse)
                return object;
            var message = new $root.CMsgClientServerTimestampResponse();
            if (object.client_request_timestamp != null)
                if ($util.Long)
                    (message.client_request_timestamp = $util.Long.fromValue(object.client_request_timestamp)).unsigned = true;
                else if (typeof object.client_request_timestamp === "string")
                    message.client_request_timestamp = parseInt(object.client_request_timestamp, 10);
                else if (typeof object.client_request_timestamp === "number")
                    message.client_request_timestamp = object.client_request_timestamp;
                else if (typeof object.client_request_timestamp === "object")
                    message.client_request_timestamp = new $util.LongBits(object.client_request_timestamp.low >>> 0, object.client_request_timestamp.high >>> 0).toNumber(true);
            if (object.server_timestamp_ms != null)
                if ($util.Long)
                    (message.server_timestamp_ms = $util.Long.fromValue(object.server_timestamp_ms)).unsigned = true;
                else if (typeof object.server_timestamp_ms === "string")
                    message.server_timestamp_ms = parseInt(object.server_timestamp_ms, 10);
                else if (typeof object.server_timestamp_ms === "number")
                    message.server_timestamp_ms = object.server_timestamp_ms;
                else if (typeof object.server_timestamp_ms === "object")
                    message.server_timestamp_ms = new $util.LongBits(object.server_timestamp_ms.low >>> 0, object.server_timestamp_ms.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServerTimestampResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServerTimestampResponse
         * @static
         * @param {CMsgClientServerTimestampResponse} message CMsgClientServerTimestampResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServerTimestampResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.client_request_timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_request_timestamp = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.server_timestamp_ms = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.server_timestamp_ms = options.longs === String ? "0" : 0;
            }
            if (message.client_request_timestamp != null && message.hasOwnProperty("client_request_timestamp"))
                if (typeof message.client_request_timestamp === "number")
                    object.client_request_timestamp = options.longs === String ? String(message.client_request_timestamp) : message.client_request_timestamp;
                else
                    object.client_request_timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.client_request_timestamp) : options.longs === Number ? new $util.LongBits(message.client_request_timestamp.low >>> 0, message.client_request_timestamp.high >>> 0).toNumber(true) : message.client_request_timestamp;
            if (message.server_timestamp_ms != null && message.hasOwnProperty("server_timestamp_ms"))
                if (typeof message.server_timestamp_ms === "number")
                    object.server_timestamp_ms = options.longs === String ? String(message.server_timestamp_ms) : message.server_timestamp_ms;
                else
                    object.server_timestamp_ms = options.longs === String ? $util.Long.prototype.toString.call(message.server_timestamp_ms) : options.longs === Number ? new $util.LongBits(message.server_timestamp_ms.low >>> 0, message.server_timestamp_ms.high >>> 0).toNumber(true) : message.server_timestamp_ms;
            return object;
        };
    
        /**
         * Converts this CMsgClientServerTimestampResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientServerTimestampResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServerTimestampResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServerTimestampResponse;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetails = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetails.
         * @exports ICMsgCREGetUserPublishedItemVoteDetails
         * @interface ICMsgCREGetUserPublishedItemVoteDetails
         * @property {Array.<ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>|null} [published_file_ids] CMsgCREGetUserPublishedItemVoteDetails published_file_ids
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetails.
         * @exports CMsgCREGetUserPublishedItemVoteDetails
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetails.
         * @implements ICMsgCREGetUserPublishedItemVoteDetails
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetails=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetails(properties) {
            this.published_file_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetails published_file_ids.
         * @member {Array.<ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>} published_file_ids
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetails.prototype.published_file_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetails instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails instance
         */
        CMsgCREGetUserPublishedItemVoteDetails.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_ids != null && message.published_file_ids.length)
                for (var i = 0; i < message.published_file_ids.length; ++i)
                    $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.encode(message.published_file_ids[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.published_file_ids && message.published_file_ids.length))
                        message.published_file_ids = [];
                    message.published_file_ids.push($root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetails message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_ids != null && message.hasOwnProperty("published_file_ids")) {
                if (!Array.isArray(message.published_file_ids))
                    return "published_file_ids: array expected";
                for (var i = 0; i < message.published_file_ids.length; ++i) {
                    var error = $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.verify(message.published_file_ids[i]);
                    if (error)
                        return "published_file_ids." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         */
        CMsgCREGetUserPublishedItemVoteDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetails)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetails();
            if (object.published_file_ids) {
                if (!Array.isArray(object.published_file_ids))
                    throw TypeError(".CMsgCREGetUserPublishedItemVoteDetails.published_file_ids: array expected");
                message.published_file_ids = [];
                for (var i = 0; i < object.published_file_ids.length; ++i) {
                    if (typeof object.published_file_ids[i] !== "object")
                        throw TypeError(".CMsgCREGetUserPublishedItemVoteDetails.published_file_ids: object expected");
                    message.published_file_ids[i] = $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.fromObject(object.published_file_ids[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.published_file_ids = [];
            if (message.published_file_ids && message.published_file_ids.length) {
                object.published_file_ids = [];
                for (var j = 0; j < message.published_file_ids.length; ++j)
                    object.published_file_ids[j] = $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.toObject(message.published_file_ids[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetails to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREGetUserPublishedItemVoteDetails;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.
         * @exports ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @interface ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @property {number|Long|null} [published_file_id] CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId published_file_id
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.
         * @exports CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.
         * @implements ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId published_file_id.
         * @member {number|Long} published_file_id
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId instance
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} message CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} message CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.published_file_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                    return "published_file_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
            if (object.published_file_id != null)
                if ($util.Long)
                    (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                else if (typeof object.published_file_id === "string")
                    message.published_file_id = parseInt(object.published_file_id, 10);
                else if (typeof object.published_file_id === "number")
                    message.published_file_id = object.published_file_id;
                else if (typeof object.published_file_id === "object")
                    message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId} message CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.published_file_id = options.longs === String ? "0" : 0;
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (typeof message.published_file_id === "number")
                    object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                else
                    object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetailsResponse = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @exports ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @interface ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @property {number|null} [eresult] CMsgCREGetUserPublishedItemVoteDetailsResponse eresult
         * @property {Array.<ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>|null} [user_item_vote_details] CMsgCREGetUserPublishedItemVoteDetailsResponse user_item_vote_details
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @exports CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @implements ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetailsResponse(properties) {
            this.user_item_vote_details = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.eresult = 2;
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse user_item_vote_details.
         * @member {Array.<ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>} user_item_vote_details
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.user_item_vote_details = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetailsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetailsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.user_item_vote_details != null && message.user_item_vote_details.length)
                for (var i = 0; i < message.user_item_vote_details.length; ++i)
                    $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.encode(message.user_item_vote_details[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    if (!(message.user_item_vote_details && message.user_item_vote_details.length))
                        message.user_item_vote_details = [];
                    message.user_item_vote_details.push($root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetailsResponse message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.user_item_vote_details != null && message.hasOwnProperty("user_item_vote_details")) {
                if (!Array.isArray(message.user_item_vote_details))
                    return "user_item_vote_details: array expected";
                for (var i = 0; i < message.user_item_vote_details.length; ++i) {
                    var error = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.verify(message.user_item_vote_details[i]);
                    if (error)
                        return "user_item_vote_details." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetailsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetailsResponse)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.user_item_vote_details) {
                if (!Array.isArray(object.user_item_vote_details))
                    throw TypeError(".CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details: array expected");
                message.user_item_vote_details = [];
                for (var i = 0; i < object.user_item_vote_details.length; ++i) {
                    if (typeof object.user_item_vote_details[i] !== "object")
                        throw TypeError(".CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details: object expected");
                    message.user_item_vote_details[i] = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.fromObject(object.user_item_vote_details[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetailsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.user_item_vote_details = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.user_item_vote_details && message.user_item_vote_details.length) {
                object.user_item_vote_details = [];
                for (var j = 0; j < message.user_item_vote_details.length; ++j)
                    object.user_item_vote_details[j] = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.toObject(message.user_item_vote_details[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetailsResponse to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREGetUserPublishedItemVoteDetailsResponse;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.
         * @exports ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @interface ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @property {number|Long|null} [published_file_id] CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail published_file_id
         * @property {number|null} [vote] CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail vote
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.
         * @exports CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.
         * @implements ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail published_file_id.
         * @member {number|Long} published_file_id
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail vote.
         * @member {number} vote
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.prototype.vote = 0;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} message CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
            if (message.vote != null && message.hasOwnProperty("vote"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.vote);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} message CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.published_file_id = reader.fixed64();
                    break;
                case 2:
                    message.vote = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                    return "published_file_id: integer|Long expected";
            if (message.vote != null && message.hasOwnProperty("vote"))
                if (!$util.isInteger(message.vote))
                    return "vote: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
            if (object.published_file_id != null)
                if ($util.Long)
                    (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                else if (typeof object.published_file_id === "string")
                    message.published_file_id = parseInt(object.published_file_id, 10);
                else if (typeof object.published_file_id === "number")
                    message.published_file_id = object.published_file_id;
                else if (typeof object.published_file_id === "object")
                    message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
            if (object.vote != null)
                message.vote = object.vote | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail} message CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.published_file_id = options.longs === String ? "0" : 0;
                object.vote = 0;
            }
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (typeof message.published_file_id === "number")
                    object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                else
                    object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
            if (message.vote != null && message.hasOwnProperty("vote"))
                object.vote = message.vote;
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail;
    })();
    
    $root.CMsgCREUpdateUserPublishedItemVote = (function() {
    
        /**
         * Properties of a CMsgCREUpdateUserPublishedItemVote.
         * @exports ICMsgCREUpdateUserPublishedItemVote
         * @interface ICMsgCREUpdateUserPublishedItemVote
         * @property {number|Long|null} [published_file_id] CMsgCREUpdateUserPublishedItemVote published_file_id
         * @property {boolean|null} [vote_up] CMsgCREUpdateUserPublishedItemVote vote_up
         */
    
        /**
         * Constructs a new CMsgCREUpdateUserPublishedItemVote.
         * @exports CMsgCREUpdateUserPublishedItemVote
         * @classdesc Represents a CMsgCREUpdateUserPublishedItemVote.
         * @implements ICMsgCREUpdateUserPublishedItemVote
         * @constructor
         * @param {ICMsgCREUpdateUserPublishedItemVote=} [properties] Properties to set
         */
        function CMsgCREUpdateUserPublishedItemVote(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREUpdateUserPublishedItemVote published_file_id.
         * @member {number|Long} published_file_id
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgCREUpdateUserPublishedItemVote vote_up.
         * @member {boolean} vote_up
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.vote_up = false;
    
        /**
         * Creates a new CMsgCREUpdateUserPublishedItemVote instance using the specified properties.
         * @function create
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote=} [properties] Properties to set
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote instance
         */
        CMsgCREUpdateUserPublishedItemVote.create = function create(properties) {
            return new CMsgCREUpdateUserPublishedItemVote(properties);
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVote message. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVote.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVote.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.vote_up);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVote message, length delimited. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVote.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVote.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVote message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVote.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREUpdateUserPublishedItemVote();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.published_file_id = reader.fixed64();
                    break;
                case 2:
                    message.vote_up = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVote message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVote.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREUpdateUserPublishedItemVote message.
         * @function verify
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREUpdateUserPublishedItemVote.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                    return "published_file_id: integer|Long expected";
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                if (typeof message.vote_up !== "boolean")
                    return "vote_up: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREUpdateUserPublishedItemVote message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         */
        CMsgCREUpdateUserPublishedItemVote.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREUpdateUserPublishedItemVote)
                return object;
            var message = new $root.CMsgCREUpdateUserPublishedItemVote();
            if (object.published_file_id != null)
                if ($util.Long)
                    (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                else if (typeof object.published_file_id === "string")
                    message.published_file_id = parseInt(object.published_file_id, 10);
                else if (typeof object.published_file_id === "number")
                    message.published_file_id = object.published_file_id;
                else if (typeof object.published_file_id === "object")
                    message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
            if (object.vote_up != null)
                message.vote_up = Boolean(object.vote_up);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREUpdateUserPublishedItemVote message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {CMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREUpdateUserPublishedItemVote.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.published_file_id = options.longs === String ? "0" : 0;
                object.vote_up = false;
            }
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (typeof message.published_file_id === "number")
                    object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                else
                    object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                object.vote_up = message.vote_up;
            return object;
        };
    
        /**
         * Converts this CMsgCREUpdateUserPublishedItemVote to JSON.
         * @function toJSON
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREUpdateUserPublishedItemVote;
    })();
    
    $root.CMsgCREUpdateUserPublishedItemVoteResponse = (function() {
    
        /**
         * Properties of a CMsgCREUpdateUserPublishedItemVoteResponse.
         * @exports ICMsgCREUpdateUserPublishedItemVoteResponse
         * @interface ICMsgCREUpdateUserPublishedItemVoteResponse
         * @property {number|null} [eresult] CMsgCREUpdateUserPublishedItemVoteResponse eresult
         */
    
        /**
         * Constructs a new CMsgCREUpdateUserPublishedItemVoteResponse.
         * @exports CMsgCREUpdateUserPublishedItemVoteResponse
         * @classdesc Represents a CMsgCREUpdateUserPublishedItemVoteResponse.
         * @implements ICMsgCREUpdateUserPublishedItemVoteResponse
         * @constructor
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse=} [properties] Properties to set
         */
        function CMsgCREUpdateUserPublishedItemVoteResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREUpdateUserPublishedItemVoteResponse eresult.
         * @member {number} eresult
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgCREUpdateUserPublishedItemVoteResponse instance using the specified properties.
         * @function create
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse=} [properties] Properties to set
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse instance
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.create = function create(properties) {
            return new CMsgCREUpdateUserPublishedItemVoteResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVoteResponse message. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVoteResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVoteResponse message, length delimited. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVoteResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVoteResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREUpdateUserPublishedItemVoteResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVoteResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREUpdateUserPublishedItemVoteResponse message.
         * @function verify
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREUpdateUserPublishedItemVoteResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREUpdateUserPublishedItemVoteResponse)
                return object;
            var message = new $root.CMsgCREUpdateUserPublishedItemVoteResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREUpdateUserPublishedItemVoteResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {CMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgCREUpdateUserPublishedItemVoteResponse to JSON.
         * @function toJSON
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREUpdateUserPublishedItemVoteResponse;
    })();
    
    $root.CMsgIPAddress = (function() {
    
        /**
         * Properties of a CMsgIPAddress.
         * @exports ICMsgIPAddress
         * @interface ICMsgIPAddress
         * @property {number|null} [v4] CMsgIPAddress v4
         * @property {Uint8Array|null} [v6] CMsgIPAddress v6
         */
    
        /**
         * Constructs a new CMsgIPAddress.
         * @exports CMsgIPAddress
         * @classdesc Represents a CMsgIPAddress.
         * @implements ICMsgIPAddress
         * @constructor
         * @param {ICMsgIPAddress=} [properties] Properties to set
         */
        function CMsgIPAddress(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIPAddress v4.
         * @member {number} v4
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v4 = 0;
    
        /**
         * CMsgIPAddress v6.
         * @member {Uint8Array} v6
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v6 = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgIPAddress instance using the specified properties.
         * @function create
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress=} [properties] Properties to set
         * @returns {CMsgIPAddress} CMsgIPAddress instance
         */
        CMsgIPAddress.create = function create(properties) {
            return new CMsgIPAddress(properties);
        };
    
        /**
         * Encodes the specified CMsgIPAddress message. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encode
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.v4 != null && message.hasOwnProperty("v4"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.v4);
            if (message.v6 != null && message.hasOwnProperty("v6"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.v6);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIPAddress message, length delimited. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIPAddress();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.v4 = reader.fixed32();
                    break;
                case 2:
                    message.v6 = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIPAddress message.
         * @function verify
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIPAddress.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.v4 != null && message.hasOwnProperty("v4"))
                if (!$util.isInteger(message.v4))
                    return "v4: integer expected";
            if (message.v6 != null && message.hasOwnProperty("v6"))
                if (!(message.v6 && typeof message.v6.length === "number" || $util.isString(message.v6)))
                    return "v6: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgIPAddress message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIPAddress} CMsgIPAddress
         */
        CMsgIPAddress.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIPAddress)
                return object;
            var message = new $root.CMsgIPAddress();
            if (object.v4 != null)
                message.v4 = object.v4 >>> 0;
            if (object.v6 != null)
                if (typeof object.v6 === "string")
                    $util.base64.decode(object.v6, message.v6 = $util.newBuffer($util.base64.length(object.v6)), 0);
                else if (object.v6.length)
                    message.v6 = object.v6;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIPAddress message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIPAddress
         * @static
         * @param {CMsgIPAddress} message CMsgIPAddress
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIPAddress.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.v4 = 0;
                if (options.bytes === String)
                    object.v6 = "";
                else {
                    object.v6 = [];
                    if (options.bytes !== Array)
                        object.v6 = $util.newBuffer(object.v6);
                }
            }
            if (message.v4 != null && message.hasOwnProperty("v4"))
                object.v4 = message.v4;
            if (message.v6 != null && message.hasOwnProperty("v6"))
                object.v6 = options.bytes === String ? $util.base64.encode(message.v6, 0, message.v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.v6) : message.v6;
            return object;
        };
    
        /**
         * Converts this CMsgIPAddress to JSON.
         * @function toJSON
         * @memberof CMsgIPAddress
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIPAddress.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgIPAddress;
    })();
    
    $root.CMsgMulti = (function() {
    
        /**
         * Properties of a CMsgMulti.
         * @exports ICMsgMulti
         * @interface ICMsgMulti
         * @property {number|null} [size_unzipped] CMsgMulti size_unzipped
         * @property {Uint8Array|null} [message_body] CMsgMulti message_body
         */
    
        /**
         * Constructs a new CMsgMulti.
         * @exports CMsgMulti
         * @classdesc Represents a CMsgMulti.
         * @implements ICMsgMulti
         * @constructor
         * @param {ICMsgMulti=} [properties] Properties to set
         */
        function CMsgMulti(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgMulti size_unzipped.
         * @member {number} size_unzipped
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.size_unzipped = 0;
    
        /**
         * CMsgMulti message_body.
         * @member {Uint8Array} message_body
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.message_body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgMulti instance using the specified properties.
         * @function create
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti=} [properties] Properties to set
         * @returns {CMsgMulti} CMsgMulti instance
         */
        CMsgMulti.create = function create(properties) {
            return new CMsgMulti(properties);
        };
    
        /**
         * Encodes the specified CMsgMulti message. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encode
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.size_unzipped);
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.message_body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgMulti message, length delimited. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgMulti();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.size_unzipped = reader.uint32();
                    break;
                case 2:
                    message.message_body = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgMulti message.
         * @function verify
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgMulti.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                if (!$util.isInteger(message.size_unzipped))
                    return "size_unzipped: integer expected";
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                if (!(message.message_body && typeof message.message_body.length === "number" || $util.isString(message.message_body)))
                    return "message_body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgMulti message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgMulti} CMsgMulti
         */
        CMsgMulti.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgMulti)
                return object;
            var message = new $root.CMsgMulti();
            if (object.size_unzipped != null)
                message.size_unzipped = object.size_unzipped >>> 0;
            if (object.message_body != null)
                if (typeof object.message_body === "string")
                    $util.base64.decode(object.message_body, message.message_body = $util.newBuffer($util.base64.length(object.message_body)), 0);
                else if (object.message_body.length)
                    message.message_body = object.message_body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgMulti message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgMulti
         * @static
         * @param {CMsgMulti} message CMsgMulti
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgMulti.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.size_unzipped = 0;
                if (options.bytes === String)
                    object.message_body = "";
                else {
                    object.message_body = [];
                    if (options.bytes !== Array)
                        object.message_body = $util.newBuffer(object.message_body);
                }
            }
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                object.size_unzipped = message.size_unzipped;
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                object.message_body = options.bytes === String ? $util.base64.encode(message.message_body, 0, message.message_body.length) : options.bytes === Array ? Array.prototype.slice.call(message.message_body) : message.message_body;
            return object;
        };
    
        /**
         * Converts this CMsgMulti to JSON.
         * @function toJSON
         * @memberof CMsgMulti
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgMulti.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgMulti;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [steamid] CMsgProtoBufHeader steamid
         * @property {number|null} [client_sessionid] CMsgProtoBufHeader client_sessionid
         * @property {number|null} [routing_appid] CMsgProtoBufHeader routing_appid
         * @property {number|Long|null} [jobid_source] CMsgProtoBufHeader jobid_source
         * @property {number|Long|null} [jobid_target] CMsgProtoBufHeader jobid_target
         * @property {string|null} [target_job_name] CMsgProtoBufHeader target_job_name
         * @property {number|null} [seq_num] CMsgProtoBufHeader seq_num
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [error_message] CMsgProtoBufHeader error_message
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {Uint8Array|null} [ip_v6] CMsgProtoBufHeader ip_v6
         * @property {number|null} [auth_account_flags] CMsgProtoBufHeader auth_account_flags
         * @property {number|null} [token_source] CMsgProtoBufHeader token_source
         * @property {boolean|null} [admin_spoofing_user] CMsgProtoBufHeader admin_spoofing_user
         * @property {number|null} [transport_error] CMsgProtoBufHeader transport_error
         * @property {number|Long|null} [messageid] CMsgProtoBufHeader messageid
         * @property {number|null} [publisher_group_id] CMsgProtoBufHeader publisher_group_id
         * @property {number|null} [sysid] CMsgProtoBufHeader sysid
         * @property {number|Long|null} [trace_tag] CMsgProtoBufHeader trace_tag
         * @property {number|null} [webapi_key_id] CMsgProtoBufHeader webapi_key_id
         * @property {boolean|null} [is_from_external_source] CMsgProtoBufHeader is_from_external_source
         * @property {Array.<number>|null} [forward_to_sysid] CMsgProtoBufHeader forward_to_sysid
         * @property {number|null} [cm_sysid] CMsgProtoBufHeader cm_sysid
         * @property {string|null} [wg_token] CMsgProtoBufHeader wg_token
         * @property {number|null} [launcher_type] CMsgProtoBufHeader launcher_type
         * @property {number|null} [realm] CMsgProtoBufHeader realm
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            this.forward_to_sysid = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader steamid.
         * @member {number|Long} steamid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader client_sessionid.
         * @member {number} client_sessionid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_sessionid = 0;
    
        /**
         * CMsgProtoBufHeader routing_appid.
         * @member {number} routing_appid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.routing_appid = 0;
    
        /**
         * CMsgProtoBufHeader jobid_source.
         * @member {number|Long} jobid_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_source = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader jobid_target.
         * @member {number|Long} jobid_target
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_target = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader target_job_name.
         * @member {string} target_job_name
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.target_job_name = "";
    
        /**
         * CMsgProtoBufHeader seq_num.
         * @member {number} seq_num
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.seq_num = 0;
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader error_message.
         * @member {string} error_message
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.error_message = "";
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader ip_v6.
         * @member {Uint8Array} ip_v6
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip_v6 = $util.newBuffer([]);
    
        /**
         * CMsgProtoBufHeader auth_account_flags.
         * @member {number} auth_account_flags
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.auth_account_flags = 0;
    
        /**
         * CMsgProtoBufHeader token_source.
         * @member {number} token_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.token_source = 0;
    
        /**
         * CMsgProtoBufHeader admin_spoofing_user.
         * @member {boolean} admin_spoofing_user
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.admin_spoofing_user = false;
    
        /**
         * CMsgProtoBufHeader transport_error.
         * @member {number} transport_error
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.transport_error = 1;
    
        /**
         * CMsgProtoBufHeader messageid.
         * @member {number|Long} messageid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.messageid = $util.Long ? $util.Long.fromBits(-1,-1,true) : 18446744073709552000;
    
        /**
         * CMsgProtoBufHeader publisher_group_id.
         * @member {number} publisher_group_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.publisher_group_id = 0;
    
        /**
         * CMsgProtoBufHeader sysid.
         * @member {number} sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.sysid = 0;
    
        /**
         * CMsgProtoBufHeader trace_tag.
         * @member {number|Long} trace_tag
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.trace_tag = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgProtoBufHeader webapi_key_id.
         * @member {number} webapi_key_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.webapi_key_id = 0;
    
        /**
         * CMsgProtoBufHeader is_from_external_source.
         * @member {boolean} is_from_external_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.is_from_external_source = false;
    
        /**
         * CMsgProtoBufHeader forward_to_sysid.
         * @member {Array.<number>} forward_to_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.forward_to_sysid = $util.emptyArray;
    
        /**
         * CMsgProtoBufHeader cm_sysid.
         * @member {number} cm_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.cm_sysid = 0;
    
        /**
         * CMsgProtoBufHeader wg_token.
         * @member {string} wg_token
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.wg_token = "";
    
        /**
         * CMsgProtoBufHeader launcher_type.
         * @member {number} launcher_type
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.launcher_type = 0;
    
        /**
         * CMsgProtoBufHeader realm.
         * @member {number} realm
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.realm = 0;
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.client_sessionid);
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.routing_appid);
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.jobid_source);
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.jobid_target);
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.target_job_name);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.error_message);
            if (message.ip != null && message.hasOwnProperty("ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.auth_account_flags);
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.transport_error);
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                writer.uint32(/* id 18, wireType 0 =*/144).uint64(message.messageid);
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.publisher_group_id);
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.sysid);
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint64(message.trace_tag);
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.token_source);
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.admin_spoofing_user);
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.seq_num);
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.webapi_key_id);
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                writer.uint32(/* id 26, wireType 0 =*/208).bool(message.is_from_external_source);
            if (message.forward_to_sysid != null && message.forward_to_sysid.length)
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.forward_to_sysid[i]);
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.cm_sysid);
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6"))
                writer.uint32(/* id 29, wireType 2 =*/234).bytes(message.ip_v6);
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                writer.uint32(/* id 30, wireType 2 =*/242).string(message.wg_token);
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.launcher_type);
            if (message.realm != null && message.hasOwnProperty("realm"))
                writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.realm);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.client_sessionid = reader.int32();
                    break;
                case 3:
                    message.routing_appid = reader.uint32();
                    break;
                case 10:
                    message.jobid_source = reader.fixed64();
                    break;
                case 11:
                    message.jobid_target = reader.fixed64();
                    break;
                case 12:
                    message.target_job_name = reader.string();
                    break;
                case 24:
                    message.seq_num = reader.int32();
                    break;
                case 13:
                    message.eresult = reader.int32();
                    break;
                case 14:
                    message.error_message = reader.string();
                    break;
                case 15:
                    message.ip = reader.uint32();
                    break;
                case 29:
                    message.ip_v6 = reader.bytes();
                    break;
                case 16:
                    message.auth_account_flags = reader.uint32();
                    break;
                case 22:
                    message.token_source = reader.uint32();
                    break;
                case 23:
                    message.admin_spoofing_user = reader.bool();
                    break;
                case 17:
                    message.transport_error = reader.int32();
                    break;
                case 18:
                    message.messageid = reader.uint64();
                    break;
                case 19:
                    message.publisher_group_id = reader.uint32();
                    break;
                case 20:
                    message.sysid = reader.uint32();
                    break;
                case 21:
                    message.trace_tag = reader.uint64();
                    break;
                case 25:
                    message.webapi_key_id = reader.uint32();
                    break;
                case 26:
                    message.is_from_external_source = reader.bool();
                    break;
                case 27:
                    if (!(message.forward_to_sysid && message.forward_to_sysid.length))
                        message.forward_to_sysid = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.forward_to_sysid.push(reader.uint32());
                    } else
                        message.forward_to_sysid.push(reader.uint32());
                    break;
                case 28:
                    message.cm_sysid = reader.uint32();
                    break;
                case 30:
                    message.wg_token = reader.string();
                    break;
                case 31:
                    message.launcher_type = reader.uint32();
                    break;
                case 32:
                    message.realm = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                if (!$util.isInteger(message.client_sessionid))
                    return "client_sessionid: integer expected";
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                if (!$util.isInteger(message.routing_appid))
                    return "routing_appid: integer expected";
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (!$util.isInteger(message.jobid_source) && !(message.jobid_source && $util.isInteger(message.jobid_source.low) && $util.isInteger(message.jobid_source.high)))
                    return "jobid_source: integer|Long expected";
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (!$util.isInteger(message.jobid_target) && !(message.jobid_target && $util.isInteger(message.jobid_target.low) && $util.isInteger(message.jobid_target.high)))
                    return "jobid_target: integer|Long expected";
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                if (!$util.isString(message.target_job_name))
                    return "target_job_name: string expected";
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                if (!$util.isInteger(message.seq_num))
                    return "seq_num: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6"))
                if (!(message.ip_v6 && typeof message.ip_v6.length === "number" || $util.isString(message.ip_v6)))
                    return "ip_v6: buffer expected";
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                if (!$util.isInteger(message.auth_account_flags))
                    return "auth_account_flags: integer expected";
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                if (!$util.isInteger(message.token_source))
                    return "token_source: integer expected";
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                if (typeof message.admin_spoofing_user !== "boolean")
                    return "admin_spoofing_user: boolean expected";
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                if (!$util.isInteger(message.transport_error))
                    return "transport_error: integer expected";
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (!$util.isInteger(message.messageid) && !(message.messageid && $util.isInteger(message.messageid.low) && $util.isInteger(message.messageid.high)))
                    return "messageid: integer|Long expected";
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                if (!$util.isInteger(message.publisher_group_id))
                    return "publisher_group_id: integer expected";
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                if (!$util.isInteger(message.sysid))
                    return "sysid: integer expected";
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (!$util.isInteger(message.trace_tag) && !(message.trace_tag && $util.isInteger(message.trace_tag.low) && $util.isInteger(message.trace_tag.high)))
                    return "trace_tag: integer|Long expected";
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                if (!$util.isInteger(message.webapi_key_id))
                    return "webapi_key_id: integer expected";
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                if (typeof message.is_from_external_source !== "boolean")
                    return "is_from_external_source: boolean expected";
            if (message.forward_to_sysid != null && message.hasOwnProperty("forward_to_sysid")) {
                if (!Array.isArray(message.forward_to_sysid))
                    return "forward_to_sysid: array expected";
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    if (!$util.isInteger(message.forward_to_sysid[i]))
                        return "forward_to_sysid: integer[] expected";
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                if (!$util.isInteger(message.cm_sysid))
                    return "cm_sysid: integer expected";
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                if (!$util.isString(message.wg_token))
                    return "wg_token: string expected";
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                if (!$util.isInteger(message.launcher_type))
                    return "launcher_type: integer expected";
            if (message.realm != null && message.hasOwnProperty("realm"))
                if (!$util.isInteger(message.realm))
                    return "realm: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.client_sessionid != null)
                message.client_sessionid = object.client_sessionid | 0;
            if (object.routing_appid != null)
                message.routing_appid = object.routing_appid >>> 0;
            if (object.jobid_source != null)
                if ($util.Long)
                    (message.jobid_source = $util.Long.fromValue(object.jobid_source)).unsigned = false;
                else if (typeof object.jobid_source === "string")
                    message.jobid_source = parseInt(object.jobid_source, 10);
                else if (typeof object.jobid_source === "number")
                    message.jobid_source = object.jobid_source;
                else if (typeof object.jobid_source === "object")
                    message.jobid_source = new $util.LongBits(object.jobid_source.low >>> 0, object.jobid_source.high >>> 0).toNumber();
            if (object.jobid_target != null)
                if ($util.Long)
                    (message.jobid_target = $util.Long.fromValue(object.jobid_target)).unsigned = false;
                else if (typeof object.jobid_target === "string")
                    message.jobid_target = parseInt(object.jobid_target, 10);
                else if (typeof object.jobid_target === "number")
                    message.jobid_target = object.jobid_target;
                else if (typeof object.jobid_target === "object")
                    message.jobid_target = new $util.LongBits(object.jobid_target.low >>> 0, object.jobid_target.high >>> 0).toNumber();
            if (object.target_job_name != null)
                message.target_job_name = String(object.target_job_name);
            if (object.seq_num != null)
                message.seq_num = object.seq_num | 0;
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            if (object.ip_v6 != null)
                if (typeof object.ip_v6 === "string")
                    $util.base64.decode(object.ip_v6, message.ip_v6 = $util.newBuffer($util.base64.length(object.ip_v6)), 0);
                else if (object.ip_v6.length)
                    message.ip_v6 = object.ip_v6;
            if (object.auth_account_flags != null)
                message.auth_account_flags = object.auth_account_flags >>> 0;
            if (object.token_source != null)
                message.token_source = object.token_source >>> 0;
            if (object.admin_spoofing_user != null)
                message.admin_spoofing_user = Boolean(object.admin_spoofing_user);
            if (object.transport_error != null)
                message.transport_error = object.transport_error | 0;
            if (object.messageid != null)
                if ($util.Long)
                    (message.messageid = $util.Long.fromValue(object.messageid)).unsigned = true;
                else if (typeof object.messageid === "string")
                    message.messageid = parseInt(object.messageid, 10);
                else if (typeof object.messageid === "number")
                    message.messageid = object.messageid;
                else if (typeof object.messageid === "object")
                    message.messageid = new $util.LongBits(object.messageid.low >>> 0, object.messageid.high >>> 0).toNumber(true);
            if (object.publisher_group_id != null)
                message.publisher_group_id = object.publisher_group_id >>> 0;
            if (object.sysid != null)
                message.sysid = object.sysid >>> 0;
            if (object.trace_tag != null)
                if ($util.Long)
                    (message.trace_tag = $util.Long.fromValue(object.trace_tag)).unsigned = true;
                else if (typeof object.trace_tag === "string")
                    message.trace_tag = parseInt(object.trace_tag, 10);
                else if (typeof object.trace_tag === "number")
                    message.trace_tag = object.trace_tag;
                else if (typeof object.trace_tag === "object")
                    message.trace_tag = new $util.LongBits(object.trace_tag.low >>> 0, object.trace_tag.high >>> 0).toNumber(true);
            if (object.webapi_key_id != null)
                message.webapi_key_id = object.webapi_key_id >>> 0;
            if (object.is_from_external_source != null)
                message.is_from_external_source = Boolean(object.is_from_external_source);
            if (object.forward_to_sysid) {
                if (!Array.isArray(object.forward_to_sysid))
                    throw TypeError(".CMsgProtoBufHeader.forward_to_sysid: array expected");
                message.forward_to_sysid = [];
                for (var i = 0; i < object.forward_to_sysid.length; ++i)
                    message.forward_to_sysid[i] = object.forward_to_sysid[i] >>> 0;
            }
            if (object.cm_sysid != null)
                message.cm_sysid = object.cm_sysid >>> 0;
            if (object.wg_token != null)
                message.wg_token = String(object.wg_token);
            if (object.launcher_type != null)
                message.launcher_type = object.launcher_type >>> 0;
            if (object.realm != null)
                message.realm = object.realm >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.forward_to_sysid = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.client_sessionid = 0;
                object.routing_appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_source = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_target = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.target_job_name = "";
                object.eresult = 2;
                object.error_message = "";
                object.ip = 0;
                object.auth_account_flags = 0;
                object.transport_error = 1;
                if ($util.Long) {
                    var long = new $util.Long(-1, -1, true);
                    object.messageid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.messageid = options.longs === String ? "18446744073709551615" : 18446744073709552000;
                object.publisher_group_id = 0;
                object.sysid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.trace_tag = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.trace_tag = options.longs === String ? "0" : 0;
                object.token_source = 0;
                object.admin_spoofing_user = false;
                object.seq_num = 0;
                object.webapi_key_id = 0;
                object.is_from_external_source = false;
                object.cm_sysid = 0;
                if (options.bytes === String)
                    object.ip_v6 = "";
                else {
                    object.ip_v6 = [];
                    if (options.bytes !== Array)
                        object.ip_v6 = $util.newBuffer(object.ip_v6);
                }
                object.wg_token = "";
                object.launcher_type = 0;
                object.realm = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                object.client_sessionid = message.client_sessionid;
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                object.routing_appid = message.routing_appid;
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (typeof message.jobid_source === "number")
                    object.jobid_source = options.longs === String ? String(message.jobid_source) : message.jobid_source;
                else
                    object.jobid_source = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_source) : options.longs === Number ? new $util.LongBits(message.jobid_source.low >>> 0, message.jobid_source.high >>> 0).toNumber() : message.jobid_source;
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (typeof message.jobid_target === "number")
                    object.jobid_target = options.longs === String ? String(message.jobid_target) : message.jobid_target;
                else
                    object.jobid_target = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_target) : options.longs === Number ? new $util.LongBits(message.jobid_target.low >>> 0, message.jobid_target.high >>> 0).toNumber() : message.jobid_target;
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                object.target_job_name = message.target_job_name;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                object.auth_account_flags = message.auth_account_flags;
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                object.transport_error = message.transport_error;
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (typeof message.messageid === "number")
                    object.messageid = options.longs === String ? String(message.messageid) : message.messageid;
                else
                    object.messageid = options.longs === String ? $util.Long.prototype.toString.call(message.messageid) : options.longs === Number ? new $util.LongBits(message.messageid.low >>> 0, message.messageid.high >>> 0).toNumber(true) : message.messageid;
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                object.publisher_group_id = message.publisher_group_id;
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                object.sysid = message.sysid;
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (typeof message.trace_tag === "number")
                    object.trace_tag = options.longs === String ? String(message.trace_tag) : message.trace_tag;
                else
                    object.trace_tag = options.longs === String ? $util.Long.prototype.toString.call(message.trace_tag) : options.longs === Number ? new $util.LongBits(message.trace_tag.low >>> 0, message.trace_tag.high >>> 0).toNumber(true) : message.trace_tag;
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                object.token_source = message.token_source;
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                object.admin_spoofing_user = message.admin_spoofing_user;
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                object.seq_num = message.seq_num;
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                object.webapi_key_id = message.webapi_key_id;
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                object.is_from_external_source = message.is_from_external_source;
            if (message.forward_to_sysid && message.forward_to_sysid.length) {
                object.forward_to_sysid = [];
                for (var j = 0; j < message.forward_to_sysid.length; ++j)
                    object.forward_to_sysid[j] = message.forward_to_sysid[j];
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                object.cm_sysid = message.cm_sysid;
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6"))
                object.ip_v6 = options.bytes === String ? $util.base64.encode(message.ip_v6, 0, message.ip_v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.ip_v6) : message.ip_v6;
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                object.wg_token = message.wg_token;
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                object.launcher_type = message.launcher_type;
            if (message.realm != null && message.hasOwnProperty("realm"))
                object.realm = message.realm;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CProductImpressionsFromClient_Notification = (function() {
    
        /**
         * Properties of a CProductImpressionsFromClient_Notification.
         * @exports ICProductImpressionsFromClient_Notification
         * @interface ICProductImpressionsFromClient_Notification
         * @property {Array.<ICProductImpressionsFromClient_Notification_Impression>|null} [impressions] CProductImpressionsFromClient_Notification impressions
         */
    
        /**
         * Constructs a new CProductImpressionsFromClient_Notification.
         * @exports CProductImpressionsFromClient_Notification
         * @classdesc Represents a CProductImpressionsFromClient_Notification.
         * @implements ICProductImpressionsFromClient_Notification
         * @constructor
         * @param {ICProductImpressionsFromClient_Notification=} [properties] Properties to set
         */
        function CProductImpressionsFromClient_Notification(properties) {
            this.impressions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CProductImpressionsFromClient_Notification impressions.
         * @member {Array.<ICProductImpressionsFromClient_Notification_Impression>} impressions
         * @memberof CProductImpressionsFromClient_Notification
         * @instance
         */
        CProductImpressionsFromClient_Notification.prototype.impressions = $util.emptyArray;
    
        /**
         * Creates a new CProductImpressionsFromClient_Notification instance using the specified properties.
         * @function create
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {ICProductImpressionsFromClient_Notification=} [properties] Properties to set
         * @returns {CProductImpressionsFromClient_Notification} CProductImpressionsFromClient_Notification instance
         */
        CProductImpressionsFromClient_Notification.create = function create(properties) {
            return new CProductImpressionsFromClient_Notification(properties);
        };
    
        /**
         * Encodes the specified CProductImpressionsFromClient_Notification message. Does not implicitly {@link CProductImpressionsFromClient_Notification.verify|verify} messages.
         * @function encode
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {ICProductImpressionsFromClient_Notification} message CProductImpressionsFromClient_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductImpressionsFromClient_Notification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.impressions != null && message.impressions.length)
                for (var i = 0; i < message.impressions.length; ++i)
                    $root.CProductImpressionsFromClient_Notification_Impression.encode(message.impressions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CProductImpressionsFromClient_Notification message, length delimited. Does not implicitly {@link CProductImpressionsFromClient_Notification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {ICProductImpressionsFromClient_Notification} message CProductImpressionsFromClient_Notification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductImpressionsFromClient_Notification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductImpressionsFromClient_Notification message from the specified reader or buffer.
         * @function decode
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductImpressionsFromClient_Notification} CProductImpressionsFromClient_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductImpressionsFromClient_Notification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductImpressionsFromClient_Notification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.impressions && message.impressions.length))
                        message.impressions = [];
                    message.impressions.push($root.CProductImpressionsFromClient_Notification_Impression.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductImpressionsFromClient_Notification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductImpressionsFromClient_Notification} CProductImpressionsFromClient_Notification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductImpressionsFromClient_Notification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductImpressionsFromClient_Notification message.
         * @function verify
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductImpressionsFromClient_Notification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.impressions != null && message.hasOwnProperty("impressions")) {
                if (!Array.isArray(message.impressions))
                    return "impressions: array expected";
                for (var i = 0; i < message.impressions.length; ++i) {
                    var error = $root.CProductImpressionsFromClient_Notification_Impression.verify(message.impressions[i]);
                    if (error)
                        return "impressions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CProductImpressionsFromClient_Notification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductImpressionsFromClient_Notification} CProductImpressionsFromClient_Notification
         */
        CProductImpressionsFromClient_Notification.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductImpressionsFromClient_Notification)
                return object;
            var message = new $root.CProductImpressionsFromClient_Notification();
            if (object.impressions) {
                if (!Array.isArray(object.impressions))
                    throw TypeError(".CProductImpressionsFromClient_Notification.impressions: array expected");
                message.impressions = [];
                for (var i = 0; i < object.impressions.length; ++i) {
                    if (typeof object.impressions[i] !== "object")
                        throw TypeError(".CProductImpressionsFromClient_Notification.impressions: object expected");
                    message.impressions[i] = $root.CProductImpressionsFromClient_Notification_Impression.fromObject(object.impressions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CProductImpressionsFromClient_Notification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductImpressionsFromClient_Notification
         * @static
         * @param {CProductImpressionsFromClient_Notification} message CProductImpressionsFromClient_Notification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductImpressionsFromClient_Notification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.impressions = [];
            if (message.impressions && message.impressions.length) {
                object.impressions = [];
                for (var j = 0; j < message.impressions.length; ++j)
                    object.impressions[j] = $root.CProductImpressionsFromClient_Notification_Impression.toObject(message.impressions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CProductImpressionsFromClient_Notification to JSON.
         * @function toJSON
         * @memberof CProductImpressionsFromClient_Notification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductImpressionsFromClient_Notification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CProductImpressionsFromClient_Notification;
    })();
    
    $root.CProductImpressionsFromClient_Notification_Impression = (function() {
    
        /**
         * Properties of a CProductImpressionsFromClient_Notification_Impression.
         * @exports ICProductImpressionsFromClient_Notification_Impression
         * @interface ICProductImpressionsFromClient_Notification_Impression
         * @property {number|null} [type] CProductImpressionsFromClient_Notification_Impression type
         * @property {number|null} [appid] CProductImpressionsFromClient_Notification_Impression appid
         * @property {number|null} [num_impressions] CProductImpressionsFromClient_Notification_Impression num_impressions
         */
    
        /**
         * Constructs a new CProductImpressionsFromClient_Notification_Impression.
         * @exports CProductImpressionsFromClient_Notification_Impression
         * @classdesc Represents a CProductImpressionsFromClient_Notification_Impression.
         * @implements ICProductImpressionsFromClient_Notification_Impression
         * @constructor
         * @param {ICProductImpressionsFromClient_Notification_Impression=} [properties] Properties to set
         */
        function CProductImpressionsFromClient_Notification_Impression(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CProductImpressionsFromClient_Notification_Impression type.
         * @member {number} type
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @instance
         */
        CProductImpressionsFromClient_Notification_Impression.prototype.type = 0;
    
        /**
         * CProductImpressionsFromClient_Notification_Impression appid.
         * @member {number} appid
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @instance
         */
        CProductImpressionsFromClient_Notification_Impression.prototype.appid = 0;
    
        /**
         * CProductImpressionsFromClient_Notification_Impression num_impressions.
         * @member {number} num_impressions
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @instance
         */
        CProductImpressionsFromClient_Notification_Impression.prototype.num_impressions = 0;
    
        /**
         * Creates a new CProductImpressionsFromClient_Notification_Impression instance using the specified properties.
         * @function create
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {ICProductImpressionsFromClient_Notification_Impression=} [properties] Properties to set
         * @returns {CProductImpressionsFromClient_Notification_Impression} CProductImpressionsFromClient_Notification_Impression instance
         */
        CProductImpressionsFromClient_Notification_Impression.create = function create(properties) {
            return new CProductImpressionsFromClient_Notification_Impression(properties);
        };
    
        /**
         * Encodes the specified CProductImpressionsFromClient_Notification_Impression message. Does not implicitly {@link CProductImpressionsFromClient_Notification_Impression.verify|verify} messages.
         * @function encode
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {ICProductImpressionsFromClient_Notification_Impression} message CProductImpressionsFromClient_Notification_Impression message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductImpressionsFromClient_Notification_Impression.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            if (message.num_impressions != null && message.hasOwnProperty("num_impressions"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.num_impressions);
            return writer;
        };
    
        /**
         * Encodes the specified CProductImpressionsFromClient_Notification_Impression message, length delimited. Does not implicitly {@link CProductImpressionsFromClient_Notification_Impression.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {ICProductImpressionsFromClient_Notification_Impression} message CProductImpressionsFromClient_Notification_Impression message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductImpressionsFromClient_Notification_Impression.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductImpressionsFromClient_Notification_Impression message from the specified reader or buffer.
         * @function decode
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductImpressionsFromClient_Notification_Impression} CProductImpressionsFromClient_Notification_Impression
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductImpressionsFromClient_Notification_Impression.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductImpressionsFromClient_Notification_Impression();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.type = reader.int32();
                    break;
                case 2:
                    message.appid = reader.uint32();
                    break;
                case 3:
                    message.num_impressions = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductImpressionsFromClient_Notification_Impression message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductImpressionsFromClient_Notification_Impression} CProductImpressionsFromClient_Notification_Impression
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductImpressionsFromClient_Notification_Impression.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductImpressionsFromClient_Notification_Impression message.
         * @function verify
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductImpressionsFromClient_Notification_Impression.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.num_impressions != null && message.hasOwnProperty("num_impressions"))
                if (!$util.isInteger(message.num_impressions))
                    return "num_impressions: integer expected";
            return null;
        };
    
        /**
         * Creates a CProductImpressionsFromClient_Notification_Impression message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductImpressionsFromClient_Notification_Impression} CProductImpressionsFromClient_Notification_Impression
         */
        CProductImpressionsFromClient_Notification_Impression.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductImpressionsFromClient_Notification_Impression)
                return object;
            var message = new $root.CProductImpressionsFromClient_Notification_Impression();
            if (object.type != null)
                message.type = object.type | 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.num_impressions != null)
                message.num_impressions = object.num_impressions >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CProductImpressionsFromClient_Notification_Impression message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @static
         * @param {CProductImpressionsFromClient_Notification_Impression} message CProductImpressionsFromClient_Notification_Impression
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductImpressionsFromClient_Notification_Impression.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.type = 0;
                object.appid = 0;
                object.num_impressions = 0;
            }
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.num_impressions != null && message.hasOwnProperty("num_impressions"))
                object.num_impressions = message.num_impressions;
            return object;
        };
    
        /**
         * Converts this CProductImpressionsFromClient_Notification_Impression to JSON.
         * @function toJSON
         * @memberof CProductImpressionsFromClient_Notification_Impression
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductImpressionsFromClient_Notification_Impression.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CProductImpressionsFromClient_Notification_Impression;
    })();
    
    $root.CStoreQueryFilters = (function() {
    
        /**
         * Properties of a CStoreQueryFilters.
         * @exports ICStoreQueryFilters
         * @interface ICStoreQueryFilters
         * @property {boolean|null} [released_only] CStoreQueryFilters released_only
         * @property {boolean|null} [coming_soon_only] CStoreQueryFilters coming_soon_only
         * @property {ICStoreQueryFilters_TypeFilters|null} [type_filters] CStoreQueryFilters type_filters
         * @property {Array.<ICStoreQueryFilters_TagFilter>|null} [tagids_must_match] CStoreQueryFilters tagids_must_match
         * @property {Array.<number>|null} [tagids_exclude] CStoreQueryFilters tagids_exclude
         * @property {Array.<number>|null} [content_descriptors_must_match] CStoreQueryFilters content_descriptors_must_match
         * @property {Array.<number>|null} [content_descriptors_excluded] CStoreQueryFilters content_descriptors_excluded
         * @property {number|null} [regional_top_n_sellers] CStoreQueryFilters regional_top_n_sellers
         * @property {number|null} [global_top_n_sellers] CStoreQueryFilters global_top_n_sellers
         * @property {number|null} [regional_long_term_top_n_sellers] CStoreQueryFilters regional_long_term_top_n_sellers
         * @property {number|null} [global_long_term_top_n_sellers] CStoreQueryFilters global_long_term_top_n_sellers
         */
    
        /**
         * Constructs a new CStoreQueryFilters.
         * @exports CStoreQueryFilters
         * @classdesc Represents a CStoreQueryFilters.
         * @implements ICStoreQueryFilters
         * @constructor
         * @param {ICStoreQueryFilters=} [properties] Properties to set
         */
        function CStoreQueryFilters(properties) {
            this.tagids_must_match = [];
            this.tagids_exclude = [];
            this.content_descriptors_must_match = [];
            this.content_descriptors_excluded = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CStoreQueryFilters released_only.
         * @member {boolean} released_only
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.released_only = false;
    
        /**
         * CStoreQueryFilters coming_soon_only.
         * @member {boolean} coming_soon_only
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.coming_soon_only = false;
    
        /**
         * CStoreQueryFilters type_filters.
         * @member {ICStoreQueryFilters_TypeFilters|null|undefined} type_filters
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.type_filters = null;
    
        /**
         * CStoreQueryFilters tagids_must_match.
         * @member {Array.<ICStoreQueryFilters_TagFilter>} tagids_must_match
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.tagids_must_match = $util.emptyArray;
    
        /**
         * CStoreQueryFilters tagids_exclude.
         * @member {Array.<number>} tagids_exclude
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.tagids_exclude = $util.emptyArray;
    
        /**
         * CStoreQueryFilters content_descriptors_must_match.
         * @member {Array.<number>} content_descriptors_must_match
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.content_descriptors_must_match = $util.emptyArray;
    
        /**
         * CStoreQueryFilters content_descriptors_excluded.
         * @member {Array.<number>} content_descriptors_excluded
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.content_descriptors_excluded = $util.emptyArray;
    
        /**
         * CStoreQueryFilters regional_top_n_sellers.
         * @member {number} regional_top_n_sellers
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.regional_top_n_sellers = 0;
    
        /**
         * CStoreQueryFilters global_top_n_sellers.
         * @member {number} global_top_n_sellers
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.global_top_n_sellers = 0;
    
        /**
         * CStoreQueryFilters regional_long_term_top_n_sellers.
         * @member {number} regional_long_term_top_n_sellers
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.regional_long_term_top_n_sellers = 0;
    
        /**
         * CStoreQueryFilters global_long_term_top_n_sellers.
         * @member {number} global_long_term_top_n_sellers
         * @memberof CStoreQueryFilters
         * @instance
         */
        CStoreQueryFilters.prototype.global_long_term_top_n_sellers = 0;
    
        /**
         * Creates a new CStoreQueryFilters instance using the specified properties.
         * @function create
         * @memberof CStoreQueryFilters
         * @static
         * @param {ICStoreQueryFilters=} [properties] Properties to set
         * @returns {CStoreQueryFilters} CStoreQueryFilters instance
         */
        CStoreQueryFilters.create = function create(properties) {
            return new CStoreQueryFilters(properties);
        };
    
        /**
         * Encodes the specified CStoreQueryFilters message. Does not implicitly {@link CStoreQueryFilters.verify|verify} messages.
         * @function encode
         * @memberof CStoreQueryFilters
         * @static
         * @param {ICStoreQueryFilters} message CStoreQueryFilters message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.released_only != null && message.hasOwnProperty("released_only"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.released_only);
            if (message.coming_soon_only != null && message.hasOwnProperty("coming_soon_only"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.coming_soon_only);
            if (message.type_filters != null && message.hasOwnProperty("type_filters"))
                $root.CStoreQueryFilters_TypeFilters.encode(message.type_filters, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.tagids_must_match != null && message.tagids_must_match.length)
                for (var i = 0; i < message.tagids_must_match.length; ++i)
                    $root.CStoreQueryFilters_TagFilter.encode(message.tagids_must_match[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
            if (message.tagids_exclude != null && message.tagids_exclude.length)
                for (var i = 0; i < message.tagids_exclude.length; ++i)
                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.tagids_exclude[i]);
            if (message.content_descriptors_must_match != null && message.content_descriptors_must_match.length)
                for (var i = 0; i < message.content_descriptors_must_match.length; ++i)
                    writer.uint32(/* id 15, wireType 0 =*/120).int32(message.content_descriptors_must_match[i]);
            if (message.content_descriptors_excluded != null && message.content_descriptors_excluded.length)
                for (var i = 0; i < message.content_descriptors_excluded.length; ++i)
                    writer.uint32(/* id 16, wireType 0 =*/128).int32(message.content_descriptors_excluded[i]);
            if (message.regional_top_n_sellers != null && message.hasOwnProperty("regional_top_n_sellers"))
                writer.uint32(/* id 40, wireType 0 =*/320).int32(message.regional_top_n_sellers);
            if (message.global_top_n_sellers != null && message.hasOwnProperty("global_top_n_sellers"))
                writer.uint32(/* id 41, wireType 0 =*/328).int32(message.global_top_n_sellers);
            if (message.regional_long_term_top_n_sellers != null && message.hasOwnProperty("regional_long_term_top_n_sellers"))
                writer.uint32(/* id 42, wireType 0 =*/336).int32(message.regional_long_term_top_n_sellers);
            if (message.global_long_term_top_n_sellers != null && message.hasOwnProperty("global_long_term_top_n_sellers"))
                writer.uint32(/* id 43, wireType 0 =*/344).int32(message.global_long_term_top_n_sellers);
            return writer;
        };
    
        /**
         * Encodes the specified CStoreQueryFilters message, length delimited. Does not implicitly {@link CStoreQueryFilters.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CStoreQueryFilters
         * @static
         * @param {ICStoreQueryFilters} message CStoreQueryFilters message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CStoreQueryFilters message from the specified reader or buffer.
         * @function decode
         * @memberof CStoreQueryFilters
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CStoreQueryFilters} CStoreQueryFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CStoreQueryFilters();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.released_only = reader.bool();
                    break;
                case 2:
                    message.coming_soon_only = reader.bool();
                    break;
                case 3:
                    message.type_filters = $root.CStoreQueryFilters_TypeFilters.decode(reader, reader.uint32());
                    break;
                case 10:
                    if (!(message.tagids_must_match && message.tagids_must_match.length))
                        message.tagids_must_match = [];
                    message.tagids_must_match.push($root.CStoreQueryFilters_TagFilter.decode(reader, reader.uint32()));
                    break;
                case 11:
                    if (!(message.tagids_exclude && message.tagids_exclude.length))
                        message.tagids_exclude = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids_exclude.push(reader.int32());
                    } else
                        message.tagids_exclude.push(reader.int32());
                    break;
                case 15:
                    if (!(message.content_descriptors_must_match && message.content_descriptors_must_match.length))
                        message.content_descriptors_must_match = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.content_descriptors_must_match.push(reader.int32());
                    } else
                        message.content_descriptors_must_match.push(reader.int32());
                    break;
                case 16:
                    if (!(message.content_descriptors_excluded && message.content_descriptors_excluded.length))
                        message.content_descriptors_excluded = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.content_descriptors_excluded.push(reader.int32());
                    } else
                        message.content_descriptors_excluded.push(reader.int32());
                    break;
                case 40:
                    message.regional_top_n_sellers = reader.int32();
                    break;
                case 41:
                    message.global_top_n_sellers = reader.int32();
                    break;
                case 42:
                    message.regional_long_term_top_n_sellers = reader.int32();
                    break;
                case 43:
                    message.global_long_term_top_n_sellers = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CStoreQueryFilters message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CStoreQueryFilters
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CStoreQueryFilters} CStoreQueryFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CStoreQueryFilters message.
         * @function verify
         * @memberof CStoreQueryFilters
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CStoreQueryFilters.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.released_only != null && message.hasOwnProperty("released_only"))
                if (typeof message.released_only !== "boolean")
                    return "released_only: boolean expected";
            if (message.coming_soon_only != null && message.hasOwnProperty("coming_soon_only"))
                if (typeof message.coming_soon_only !== "boolean")
                    return "coming_soon_only: boolean expected";
            if (message.type_filters != null && message.hasOwnProperty("type_filters")) {
                var error = $root.CStoreQueryFilters_TypeFilters.verify(message.type_filters);
                if (error)
                    return "type_filters." + error;
            }
            if (message.tagids_must_match != null && message.hasOwnProperty("tagids_must_match")) {
                if (!Array.isArray(message.tagids_must_match))
                    return "tagids_must_match: array expected";
                for (var i = 0; i < message.tagids_must_match.length; ++i) {
                    var error = $root.CStoreQueryFilters_TagFilter.verify(message.tagids_must_match[i]);
                    if (error)
                        return "tagids_must_match." + error;
                }
            }
            if (message.tagids_exclude != null && message.hasOwnProperty("tagids_exclude")) {
                if (!Array.isArray(message.tagids_exclude))
                    return "tagids_exclude: array expected";
                for (var i = 0; i < message.tagids_exclude.length; ++i)
                    if (!$util.isInteger(message.tagids_exclude[i]))
                        return "tagids_exclude: integer[] expected";
            }
            if (message.content_descriptors_must_match != null && message.hasOwnProperty("content_descriptors_must_match")) {
                if (!Array.isArray(message.content_descriptors_must_match))
                    return "content_descriptors_must_match: array expected";
                for (var i = 0; i < message.content_descriptors_must_match.length; ++i)
                    if (!$util.isInteger(message.content_descriptors_must_match[i]))
                        return "content_descriptors_must_match: integer[] expected";
            }
            if (message.content_descriptors_excluded != null && message.hasOwnProperty("content_descriptors_excluded")) {
                if (!Array.isArray(message.content_descriptors_excluded))
                    return "content_descriptors_excluded: array expected";
                for (var i = 0; i < message.content_descriptors_excluded.length; ++i)
                    if (!$util.isInteger(message.content_descriptors_excluded[i]))
                        return "content_descriptors_excluded: integer[] expected";
            }
            if (message.regional_top_n_sellers != null && message.hasOwnProperty("regional_top_n_sellers"))
                if (!$util.isInteger(message.regional_top_n_sellers))
                    return "regional_top_n_sellers: integer expected";
            if (message.global_top_n_sellers != null && message.hasOwnProperty("global_top_n_sellers"))
                if (!$util.isInteger(message.global_top_n_sellers))
                    return "global_top_n_sellers: integer expected";
            if (message.regional_long_term_top_n_sellers != null && message.hasOwnProperty("regional_long_term_top_n_sellers"))
                if (!$util.isInteger(message.regional_long_term_top_n_sellers))
                    return "regional_long_term_top_n_sellers: integer expected";
            if (message.global_long_term_top_n_sellers != null && message.hasOwnProperty("global_long_term_top_n_sellers"))
                if (!$util.isInteger(message.global_long_term_top_n_sellers))
                    return "global_long_term_top_n_sellers: integer expected";
            return null;
        };
    
        /**
         * Creates a CStoreQueryFilters message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CStoreQueryFilters
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CStoreQueryFilters} CStoreQueryFilters
         */
        CStoreQueryFilters.fromObject = function fromObject(object) {
            if (object instanceof $root.CStoreQueryFilters)
                return object;
            var message = new $root.CStoreQueryFilters();
            if (object.released_only != null)
                message.released_only = Boolean(object.released_only);
            if (object.coming_soon_only != null)
                message.coming_soon_only = Boolean(object.coming_soon_only);
            if (object.type_filters != null) {
                if (typeof object.type_filters !== "object")
                    throw TypeError(".CStoreQueryFilters.type_filters: object expected");
                message.type_filters = $root.CStoreQueryFilters_TypeFilters.fromObject(object.type_filters);
            }
            if (object.tagids_must_match) {
                if (!Array.isArray(object.tagids_must_match))
                    throw TypeError(".CStoreQueryFilters.tagids_must_match: array expected");
                message.tagids_must_match = [];
                for (var i = 0; i < object.tagids_must_match.length; ++i) {
                    if (typeof object.tagids_must_match[i] !== "object")
                        throw TypeError(".CStoreQueryFilters.tagids_must_match: object expected");
                    message.tagids_must_match[i] = $root.CStoreQueryFilters_TagFilter.fromObject(object.tagids_must_match[i]);
                }
            }
            if (object.tagids_exclude) {
                if (!Array.isArray(object.tagids_exclude))
                    throw TypeError(".CStoreQueryFilters.tagids_exclude: array expected");
                message.tagids_exclude = [];
                for (var i = 0; i < object.tagids_exclude.length; ++i)
                    message.tagids_exclude[i] = object.tagids_exclude[i] | 0;
            }
            if (object.content_descriptors_must_match) {
                if (!Array.isArray(object.content_descriptors_must_match))
                    throw TypeError(".CStoreQueryFilters.content_descriptors_must_match: array expected");
                message.content_descriptors_must_match = [];
                for (var i = 0; i < object.content_descriptors_must_match.length; ++i)
                    message.content_descriptors_must_match[i] = object.content_descriptors_must_match[i] | 0;
            }
            if (object.content_descriptors_excluded) {
                if (!Array.isArray(object.content_descriptors_excluded))
                    throw TypeError(".CStoreQueryFilters.content_descriptors_excluded: array expected");
                message.content_descriptors_excluded = [];
                for (var i = 0; i < object.content_descriptors_excluded.length; ++i)
                    message.content_descriptors_excluded[i] = object.content_descriptors_excluded[i] | 0;
            }
            if (object.regional_top_n_sellers != null)
                message.regional_top_n_sellers = object.regional_top_n_sellers | 0;
            if (object.global_top_n_sellers != null)
                message.global_top_n_sellers = object.global_top_n_sellers | 0;
            if (object.regional_long_term_top_n_sellers != null)
                message.regional_long_term_top_n_sellers = object.regional_long_term_top_n_sellers | 0;
            if (object.global_long_term_top_n_sellers != null)
                message.global_long_term_top_n_sellers = object.global_long_term_top_n_sellers | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CStoreQueryFilters message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CStoreQueryFilters
         * @static
         * @param {CStoreQueryFilters} message CStoreQueryFilters
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CStoreQueryFilters.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.tagids_must_match = [];
                object.tagids_exclude = [];
                object.content_descriptors_must_match = [];
                object.content_descriptors_excluded = [];
            }
            if (options.defaults) {
                object.released_only = false;
                object.coming_soon_only = false;
                object.type_filters = null;
                object.regional_top_n_sellers = 0;
                object.global_top_n_sellers = 0;
                object.regional_long_term_top_n_sellers = 0;
                object.global_long_term_top_n_sellers = 0;
            }
            if (message.released_only != null && message.hasOwnProperty("released_only"))
                object.released_only = message.released_only;
            if (message.coming_soon_only != null && message.hasOwnProperty("coming_soon_only"))
                object.coming_soon_only = message.coming_soon_only;
            if (message.type_filters != null && message.hasOwnProperty("type_filters"))
                object.type_filters = $root.CStoreQueryFilters_TypeFilters.toObject(message.type_filters, options);
            if (message.tagids_must_match && message.tagids_must_match.length) {
                object.tagids_must_match = [];
                for (var j = 0; j < message.tagids_must_match.length; ++j)
                    object.tagids_must_match[j] = $root.CStoreQueryFilters_TagFilter.toObject(message.tagids_must_match[j], options);
            }
            if (message.tagids_exclude && message.tagids_exclude.length) {
                object.tagids_exclude = [];
                for (var j = 0; j < message.tagids_exclude.length; ++j)
                    object.tagids_exclude[j] = message.tagids_exclude[j];
            }
            if (message.content_descriptors_must_match && message.content_descriptors_must_match.length) {
                object.content_descriptors_must_match = [];
                for (var j = 0; j < message.content_descriptors_must_match.length; ++j)
                    object.content_descriptors_must_match[j] = message.content_descriptors_must_match[j];
            }
            if (message.content_descriptors_excluded && message.content_descriptors_excluded.length) {
                object.content_descriptors_excluded = [];
                for (var j = 0; j < message.content_descriptors_excluded.length; ++j)
                    object.content_descriptors_excluded[j] = message.content_descriptors_excluded[j];
            }
            if (message.regional_top_n_sellers != null && message.hasOwnProperty("regional_top_n_sellers"))
                object.regional_top_n_sellers = message.regional_top_n_sellers;
            if (message.global_top_n_sellers != null && message.hasOwnProperty("global_top_n_sellers"))
                object.global_top_n_sellers = message.global_top_n_sellers;
            if (message.regional_long_term_top_n_sellers != null && message.hasOwnProperty("regional_long_term_top_n_sellers"))
                object.regional_long_term_top_n_sellers = message.regional_long_term_top_n_sellers;
            if (message.global_long_term_top_n_sellers != null && message.hasOwnProperty("global_long_term_top_n_sellers"))
                object.global_long_term_top_n_sellers = message.global_long_term_top_n_sellers;
            return object;
        };
    
        /**
         * Converts this CStoreQueryFilters to JSON.
         * @function toJSON
         * @memberof CStoreQueryFilters
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CStoreQueryFilters.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CStoreQueryFilters;
    })();
    
    $root.CStoreQueryFilters_TagFilter = (function() {
    
        /**
         * Properties of a CStoreQueryFilters_TagFilter.
         * @exports ICStoreQueryFilters_TagFilter
         * @interface ICStoreQueryFilters_TagFilter
         * @property {Array.<number>|null} [tagids] CStoreQueryFilters_TagFilter tagids
         */
    
        /**
         * Constructs a new CStoreQueryFilters_TagFilter.
         * @exports CStoreQueryFilters_TagFilter
         * @classdesc Represents a CStoreQueryFilters_TagFilter.
         * @implements ICStoreQueryFilters_TagFilter
         * @constructor
         * @param {ICStoreQueryFilters_TagFilter=} [properties] Properties to set
         */
        function CStoreQueryFilters_TagFilter(properties) {
            this.tagids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CStoreQueryFilters_TagFilter tagids.
         * @member {Array.<number>} tagids
         * @memberof CStoreQueryFilters_TagFilter
         * @instance
         */
        CStoreQueryFilters_TagFilter.prototype.tagids = $util.emptyArray;
    
        /**
         * Creates a new CStoreQueryFilters_TagFilter instance using the specified properties.
         * @function create
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {ICStoreQueryFilters_TagFilter=} [properties] Properties to set
         * @returns {CStoreQueryFilters_TagFilter} CStoreQueryFilters_TagFilter instance
         */
        CStoreQueryFilters_TagFilter.create = function create(properties) {
            return new CStoreQueryFilters_TagFilter(properties);
        };
    
        /**
         * Encodes the specified CStoreQueryFilters_TagFilter message. Does not implicitly {@link CStoreQueryFilters_TagFilter.verify|verify} messages.
         * @function encode
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {ICStoreQueryFilters_TagFilter} message CStoreQueryFilters_TagFilter message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters_TagFilter.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tagids != null && message.tagids.length)
                for (var i = 0; i < message.tagids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tagids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CStoreQueryFilters_TagFilter message, length delimited. Does not implicitly {@link CStoreQueryFilters_TagFilter.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {ICStoreQueryFilters_TagFilter} message CStoreQueryFilters_TagFilter message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters_TagFilter.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CStoreQueryFilters_TagFilter message from the specified reader or buffer.
         * @function decode
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CStoreQueryFilters_TagFilter} CStoreQueryFilters_TagFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters_TagFilter.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CStoreQueryFilters_TagFilter();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.tagids && message.tagids.length))
                        message.tagids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids.push(reader.int32());
                    } else
                        message.tagids.push(reader.int32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CStoreQueryFilters_TagFilter message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CStoreQueryFilters_TagFilter} CStoreQueryFilters_TagFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters_TagFilter.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CStoreQueryFilters_TagFilter message.
         * @function verify
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CStoreQueryFilters_TagFilter.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tagids != null && message.hasOwnProperty("tagids")) {
                if (!Array.isArray(message.tagids))
                    return "tagids: array expected";
                for (var i = 0; i < message.tagids.length; ++i)
                    if (!$util.isInteger(message.tagids[i]))
                        return "tagids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CStoreQueryFilters_TagFilter message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CStoreQueryFilters_TagFilter} CStoreQueryFilters_TagFilter
         */
        CStoreQueryFilters_TagFilter.fromObject = function fromObject(object) {
            if (object instanceof $root.CStoreQueryFilters_TagFilter)
                return object;
            var message = new $root.CStoreQueryFilters_TagFilter();
            if (object.tagids) {
                if (!Array.isArray(object.tagids))
                    throw TypeError(".CStoreQueryFilters_TagFilter.tagids: array expected");
                message.tagids = [];
                for (var i = 0; i < object.tagids.length; ++i)
                    message.tagids[i] = object.tagids[i] | 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CStoreQueryFilters_TagFilter message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CStoreQueryFilters_TagFilter
         * @static
         * @param {CStoreQueryFilters_TagFilter} message CStoreQueryFilters_TagFilter
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CStoreQueryFilters_TagFilter.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.tagids = [];
            if (message.tagids && message.tagids.length) {
                object.tagids = [];
                for (var j = 0; j < message.tagids.length; ++j)
                    object.tagids[j] = message.tagids[j];
            }
            return object;
        };
    
        /**
         * Converts this CStoreQueryFilters_TagFilter to JSON.
         * @function toJSON
         * @memberof CStoreQueryFilters_TagFilter
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CStoreQueryFilters_TagFilter.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CStoreQueryFilters_TagFilter;
    })();
    
    $root.CStoreQueryFilters_TypeFilters = (function() {
    
        /**
         * Properties of a CStoreQueryFilters_TypeFilters.
         * @exports ICStoreQueryFilters_TypeFilters
         * @interface ICStoreQueryFilters_TypeFilters
         * @property {boolean|null} [include_apps] CStoreQueryFilters_TypeFilters include_apps
         * @property {boolean|null} [include_packages] CStoreQueryFilters_TypeFilters include_packages
         * @property {boolean|null} [include_bundles] CStoreQueryFilters_TypeFilters include_bundles
         * @property {boolean|null} [include_games] CStoreQueryFilters_TypeFilters include_games
         * @property {boolean|null} [include_demos] CStoreQueryFilters_TypeFilters include_demos
         * @property {boolean|null} [include_mods] CStoreQueryFilters_TypeFilters include_mods
         * @property {boolean|null} [include_dlc] CStoreQueryFilters_TypeFilters include_dlc
         * @property {boolean|null} [include_software] CStoreQueryFilters_TypeFilters include_software
         * @property {boolean|null} [include_video] CStoreQueryFilters_TypeFilters include_video
         * @property {boolean|null} [include_hardware] CStoreQueryFilters_TypeFilters include_hardware
         * @property {boolean|null} [include_series] CStoreQueryFilters_TypeFilters include_series
         * @property {boolean|null} [include_music] CStoreQueryFilters_TypeFilters include_music
         */
    
        /**
         * Constructs a new CStoreQueryFilters_TypeFilters.
         * @exports CStoreQueryFilters_TypeFilters
         * @classdesc Represents a CStoreQueryFilters_TypeFilters.
         * @implements ICStoreQueryFilters_TypeFilters
         * @constructor
         * @param {ICStoreQueryFilters_TypeFilters=} [properties] Properties to set
         */
        function CStoreQueryFilters_TypeFilters(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CStoreQueryFilters_TypeFilters include_apps.
         * @member {boolean} include_apps
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_apps = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_packages.
         * @member {boolean} include_packages
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_packages = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_bundles.
         * @member {boolean} include_bundles
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_bundles = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_games.
         * @member {boolean} include_games
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_games = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_demos.
         * @member {boolean} include_demos
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_demos = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_mods.
         * @member {boolean} include_mods
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_mods = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_dlc.
         * @member {boolean} include_dlc
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_dlc = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_software.
         * @member {boolean} include_software
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_software = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_video.
         * @member {boolean} include_video
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_video = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_hardware.
         * @member {boolean} include_hardware
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_hardware = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_series.
         * @member {boolean} include_series
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_series = false;
    
        /**
         * CStoreQueryFilters_TypeFilters include_music.
         * @member {boolean} include_music
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         */
        CStoreQueryFilters_TypeFilters.prototype.include_music = false;
    
        /**
         * Creates a new CStoreQueryFilters_TypeFilters instance using the specified properties.
         * @function create
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {ICStoreQueryFilters_TypeFilters=} [properties] Properties to set
         * @returns {CStoreQueryFilters_TypeFilters} CStoreQueryFilters_TypeFilters instance
         */
        CStoreQueryFilters_TypeFilters.create = function create(properties) {
            return new CStoreQueryFilters_TypeFilters(properties);
        };
    
        /**
         * Encodes the specified CStoreQueryFilters_TypeFilters message. Does not implicitly {@link CStoreQueryFilters_TypeFilters.verify|verify} messages.
         * @function encode
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {ICStoreQueryFilters_TypeFilters} message CStoreQueryFilters_TypeFilters message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters_TypeFilters.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.include_apps != null && message.hasOwnProperty("include_apps"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.include_apps);
            if (message.include_packages != null && message.hasOwnProperty("include_packages"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.include_packages);
            if (message.include_bundles != null && message.hasOwnProperty("include_bundles"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.include_bundles);
            if (message.include_games != null && message.hasOwnProperty("include_games"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.include_games);
            if (message.include_demos != null && message.hasOwnProperty("include_demos"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.include_demos);
            if (message.include_mods != null && message.hasOwnProperty("include_mods"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.include_mods);
            if (message.include_dlc != null && message.hasOwnProperty("include_dlc"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.include_dlc);
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.include_software);
            if (message.include_video != null && message.hasOwnProperty("include_video"))
                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.include_video);
            if (message.include_hardware != null && message.hasOwnProperty("include_hardware"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.include_hardware);
            if (message.include_series != null && message.hasOwnProperty("include_series"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.include_series);
            if (message.include_music != null && message.hasOwnProperty("include_music"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.include_music);
            return writer;
        };
    
        /**
         * Encodes the specified CStoreQueryFilters_TypeFilters message, length delimited. Does not implicitly {@link CStoreQueryFilters_TypeFilters.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {ICStoreQueryFilters_TypeFilters} message CStoreQueryFilters_TypeFilters message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CStoreQueryFilters_TypeFilters.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CStoreQueryFilters_TypeFilters message from the specified reader or buffer.
         * @function decode
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CStoreQueryFilters_TypeFilters} CStoreQueryFilters_TypeFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters_TypeFilters.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CStoreQueryFilters_TypeFilters();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.include_apps = reader.bool();
                    break;
                case 2:
                    message.include_packages = reader.bool();
                    break;
                case 3:
                    message.include_bundles = reader.bool();
                    break;
                case 10:
                    message.include_games = reader.bool();
                    break;
                case 11:
                    message.include_demos = reader.bool();
                    break;
                case 12:
                    message.include_mods = reader.bool();
                    break;
                case 13:
                    message.include_dlc = reader.bool();
                    break;
                case 14:
                    message.include_software = reader.bool();
                    break;
                case 15:
                    message.include_video = reader.bool();
                    break;
                case 16:
                    message.include_hardware = reader.bool();
                    break;
                case 17:
                    message.include_series = reader.bool();
                    break;
                case 18:
                    message.include_music = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CStoreQueryFilters_TypeFilters message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CStoreQueryFilters_TypeFilters} CStoreQueryFilters_TypeFilters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CStoreQueryFilters_TypeFilters.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CStoreQueryFilters_TypeFilters message.
         * @function verify
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CStoreQueryFilters_TypeFilters.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.include_apps != null && message.hasOwnProperty("include_apps"))
                if (typeof message.include_apps !== "boolean")
                    return "include_apps: boolean expected";
            if (message.include_packages != null && message.hasOwnProperty("include_packages"))
                if (typeof message.include_packages !== "boolean")
                    return "include_packages: boolean expected";
            if (message.include_bundles != null && message.hasOwnProperty("include_bundles"))
                if (typeof message.include_bundles !== "boolean")
                    return "include_bundles: boolean expected";
            if (message.include_games != null && message.hasOwnProperty("include_games"))
                if (typeof message.include_games !== "boolean")
                    return "include_games: boolean expected";
            if (message.include_demos != null && message.hasOwnProperty("include_demos"))
                if (typeof message.include_demos !== "boolean")
                    return "include_demos: boolean expected";
            if (message.include_mods != null && message.hasOwnProperty("include_mods"))
                if (typeof message.include_mods !== "boolean")
                    return "include_mods: boolean expected";
            if (message.include_dlc != null && message.hasOwnProperty("include_dlc"))
                if (typeof message.include_dlc !== "boolean")
                    return "include_dlc: boolean expected";
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                if (typeof message.include_software !== "boolean")
                    return "include_software: boolean expected";
            if (message.include_video != null && message.hasOwnProperty("include_video"))
                if (typeof message.include_video !== "boolean")
                    return "include_video: boolean expected";
            if (message.include_hardware != null && message.hasOwnProperty("include_hardware"))
                if (typeof message.include_hardware !== "boolean")
                    return "include_hardware: boolean expected";
            if (message.include_series != null && message.hasOwnProperty("include_series"))
                if (typeof message.include_series !== "boolean")
                    return "include_series: boolean expected";
            if (message.include_music != null && message.hasOwnProperty("include_music"))
                if (typeof message.include_music !== "boolean")
                    return "include_music: boolean expected";
            return null;
        };
    
        /**
         * Creates a CStoreQueryFilters_TypeFilters message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CStoreQueryFilters_TypeFilters} CStoreQueryFilters_TypeFilters
         */
        CStoreQueryFilters_TypeFilters.fromObject = function fromObject(object) {
            if (object instanceof $root.CStoreQueryFilters_TypeFilters)
                return object;
            var message = new $root.CStoreQueryFilters_TypeFilters();
            if (object.include_apps != null)
                message.include_apps = Boolean(object.include_apps);
            if (object.include_packages != null)
                message.include_packages = Boolean(object.include_packages);
            if (object.include_bundles != null)
                message.include_bundles = Boolean(object.include_bundles);
            if (object.include_games != null)
                message.include_games = Boolean(object.include_games);
            if (object.include_demos != null)
                message.include_demos = Boolean(object.include_demos);
            if (object.include_mods != null)
                message.include_mods = Boolean(object.include_mods);
            if (object.include_dlc != null)
                message.include_dlc = Boolean(object.include_dlc);
            if (object.include_software != null)
                message.include_software = Boolean(object.include_software);
            if (object.include_video != null)
                message.include_video = Boolean(object.include_video);
            if (object.include_hardware != null)
                message.include_hardware = Boolean(object.include_hardware);
            if (object.include_series != null)
                message.include_series = Boolean(object.include_series);
            if (object.include_music != null)
                message.include_music = Boolean(object.include_music);
            return message;
        };
    
        /**
         * Creates a plain object from a CStoreQueryFilters_TypeFilters message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CStoreQueryFilters_TypeFilters
         * @static
         * @param {CStoreQueryFilters_TypeFilters} message CStoreQueryFilters_TypeFilters
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CStoreQueryFilters_TypeFilters.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.include_apps = false;
                object.include_packages = false;
                object.include_bundles = false;
                object.include_games = false;
                object.include_demos = false;
                object.include_mods = false;
                object.include_dlc = false;
                object.include_software = false;
                object.include_video = false;
                object.include_hardware = false;
                object.include_series = false;
                object.include_music = false;
            }
            if (message.include_apps != null && message.hasOwnProperty("include_apps"))
                object.include_apps = message.include_apps;
            if (message.include_packages != null && message.hasOwnProperty("include_packages"))
                object.include_packages = message.include_packages;
            if (message.include_bundles != null && message.hasOwnProperty("include_bundles"))
                object.include_bundles = message.include_bundles;
            if (message.include_games != null && message.hasOwnProperty("include_games"))
                object.include_games = message.include_games;
            if (message.include_demos != null && message.hasOwnProperty("include_demos"))
                object.include_demos = message.include_demos;
            if (message.include_mods != null && message.hasOwnProperty("include_mods"))
                object.include_mods = message.include_mods;
            if (message.include_dlc != null && message.hasOwnProperty("include_dlc"))
                object.include_dlc = message.include_dlc;
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                object.include_software = message.include_software;
            if (message.include_video != null && message.hasOwnProperty("include_video"))
                object.include_video = message.include_video;
            if (message.include_hardware != null && message.hasOwnProperty("include_hardware"))
                object.include_hardware = message.include_hardware;
            if (message.include_series != null && message.hasOwnProperty("include_series"))
                object.include_series = message.include_series;
            if (message.include_music != null && message.hasOwnProperty("include_music"))
                object.include_music = message.include_music;
            return object;
        };
    
        /**
         * Converts this CStoreQueryFilters_TypeFilters to JSON.
         * @function toJSON
         * @memberof CStoreQueryFilters_TypeFilters
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CStoreQueryFilters_TypeFilters.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CStoreQueryFilters_TypeFilters;
    })();
    
    $root.LoyaltyRewardDefinition = (function() {
    
        /**
         * Properties of a LoyaltyRewardDefinition.
         * @exports ILoyaltyRewardDefinition
         * @interface ILoyaltyRewardDefinition
         * @property {number|null} [appid] LoyaltyRewardDefinition appid
         * @property {number|null} [defid] LoyaltyRewardDefinition defid
         * @property {number|null} [type] LoyaltyRewardDefinition type
         * @property {number|null} [community_item_class] LoyaltyRewardDefinition community_item_class
         * @property {number|null} [community_item_type] LoyaltyRewardDefinition community_item_type
         * @property {number|Long|null} [point_cost] LoyaltyRewardDefinition point_cost
         * @property {number|null} [timestamp_created] LoyaltyRewardDefinition timestamp_created
         * @property {number|null} [timestamp_updated] LoyaltyRewardDefinition timestamp_updated
         * @property {number|null} [timestamp_available] LoyaltyRewardDefinition timestamp_available
         * @property {number|null} [timestamp_available_end] LoyaltyRewardDefinition timestamp_available_end
         * @property {number|Long|null} [quantity] LoyaltyRewardDefinition quantity
         * @property {string|null} [internal_description] LoyaltyRewardDefinition internal_description
         * @property {boolean|null} [active] LoyaltyRewardDefinition active
         * @property {ILoyaltyRewardDefinition_CommunityItemData|null} [community_item_data] LoyaltyRewardDefinition community_item_data
         * @property {Array.<number>|null} [bundle_defids] LoyaltyRewardDefinition bundle_defids
         * @property {number|null} [usable_duration] LoyaltyRewardDefinition usable_duration
         * @property {number|null} [bundle_discount] LoyaltyRewardDefinition bundle_discount
         */
    
        /**
         * Constructs a new LoyaltyRewardDefinition.
         * @exports LoyaltyRewardDefinition
         * @classdesc Represents a LoyaltyRewardDefinition.
         * @implements ILoyaltyRewardDefinition
         * @constructor
         * @param {ILoyaltyRewardDefinition=} [properties] Properties to set
         */
        function LoyaltyRewardDefinition(properties) {
            this.bundle_defids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * LoyaltyRewardDefinition appid.
         * @member {number} appid
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.appid = 0;
    
        /**
         * LoyaltyRewardDefinition defid.
         * @member {number} defid
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.defid = 0;
    
        /**
         * LoyaltyRewardDefinition type.
         * @member {number} type
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.type = 0;
    
        /**
         * LoyaltyRewardDefinition community_item_class.
         * @member {number} community_item_class
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.community_item_class = 0;
    
        /**
         * LoyaltyRewardDefinition community_item_type.
         * @member {number} community_item_type
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.community_item_type = 0;
    
        /**
         * LoyaltyRewardDefinition point_cost.
         * @member {number|Long} point_cost
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.point_cost = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * LoyaltyRewardDefinition timestamp_created.
         * @member {number} timestamp_created
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.timestamp_created = 0;
    
        /**
         * LoyaltyRewardDefinition timestamp_updated.
         * @member {number} timestamp_updated
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.timestamp_updated = 0;
    
        /**
         * LoyaltyRewardDefinition timestamp_available.
         * @member {number} timestamp_available
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.timestamp_available = 0;
    
        /**
         * LoyaltyRewardDefinition timestamp_available_end.
         * @member {number} timestamp_available_end
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.timestamp_available_end = 0;
    
        /**
         * LoyaltyRewardDefinition quantity.
         * @member {number|Long} quantity
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.quantity = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * LoyaltyRewardDefinition internal_description.
         * @member {string} internal_description
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.internal_description = "";
    
        /**
         * LoyaltyRewardDefinition active.
         * @member {boolean} active
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.active = false;
    
        /**
         * LoyaltyRewardDefinition community_item_data.
         * @member {ILoyaltyRewardDefinition_CommunityItemData|null|undefined} community_item_data
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.community_item_data = null;
    
        /**
         * LoyaltyRewardDefinition bundle_defids.
         * @member {Array.<number>} bundle_defids
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.bundle_defids = $util.emptyArray;
    
        /**
         * LoyaltyRewardDefinition usable_duration.
         * @member {number} usable_duration
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.usable_duration = 0;
    
        /**
         * LoyaltyRewardDefinition bundle_discount.
         * @member {number} bundle_discount
         * @memberof LoyaltyRewardDefinition
         * @instance
         */
        LoyaltyRewardDefinition.prototype.bundle_discount = 0;
    
        /**
         * Creates a new LoyaltyRewardDefinition instance using the specified properties.
         * @function create
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {ILoyaltyRewardDefinition=} [properties] Properties to set
         * @returns {LoyaltyRewardDefinition} LoyaltyRewardDefinition instance
         */
        LoyaltyRewardDefinition.create = function create(properties) {
            return new LoyaltyRewardDefinition(properties);
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition message. Does not implicitly {@link LoyaltyRewardDefinition.verify|verify} messages.
         * @function encode
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {ILoyaltyRewardDefinition} message LoyaltyRewardDefinition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.defid != null && message.hasOwnProperty("defid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.defid);
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
            if (message.community_item_class != null && message.hasOwnProperty("community_item_class"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.community_item_class);
            if (message.community_item_type != null && message.hasOwnProperty("community_item_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.community_item_type);
            if (message.point_cost != null && message.hasOwnProperty("point_cost"))
                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.point_cost);
            if (message.timestamp_created != null && message.hasOwnProperty("timestamp_created"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.timestamp_created);
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.timestamp_updated);
            if (message.timestamp_available != null && message.hasOwnProperty("timestamp_available"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.timestamp_available);
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                writer.uint32(/* id 10, wireType 0 =*/80).int64(message.quantity);
            if (message.internal_description != null && message.hasOwnProperty("internal_description"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.internal_description);
            if (message.active != null && message.hasOwnProperty("active"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.active);
            if (message.community_item_data != null && message.hasOwnProperty("community_item_data"))
                $root.LoyaltyRewardDefinition_CommunityItemData.encode(message.community_item_data, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
            if (message.timestamp_available_end != null && message.hasOwnProperty("timestamp_available_end"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.timestamp_available_end);
            if (message.bundle_defids != null && message.bundle_defids.length)
                for (var i = 0; i < message.bundle_defids.length; ++i)
                    writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.bundle_defids[i]);
            if (message.usable_duration != null && message.hasOwnProperty("usable_duration"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.usable_duration);
            if (message.bundle_discount != null && message.hasOwnProperty("bundle_discount"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.bundle_discount);
            return writer;
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition message, length delimited. Does not implicitly {@link LoyaltyRewardDefinition.verify|verify} messages.
         * @function encodeDelimited
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {ILoyaltyRewardDefinition} message LoyaltyRewardDefinition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition message from the specified reader or buffer.
         * @function decode
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {LoyaltyRewardDefinition} LoyaltyRewardDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.LoyaltyRewardDefinition();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.defid = reader.uint32();
                    break;
                case 3:
                    message.type = reader.int32();
                    break;
                case 4:
                    message.community_item_class = reader.int32();
                    break;
                case 5:
                    message.community_item_type = reader.uint32();
                    break;
                case 6:
                    message.point_cost = reader.int64();
                    break;
                case 7:
                    message.timestamp_created = reader.uint32();
                    break;
                case 8:
                    message.timestamp_updated = reader.uint32();
                    break;
                case 9:
                    message.timestamp_available = reader.uint32();
                    break;
                case 14:
                    message.timestamp_available_end = reader.uint32();
                    break;
                case 10:
                    message.quantity = reader.int64();
                    break;
                case 11:
                    message.internal_description = reader.string();
                    break;
                case 12:
                    message.active = reader.bool();
                    break;
                case 13:
                    message.community_item_data = $root.LoyaltyRewardDefinition_CommunityItemData.decode(reader, reader.uint32());
                    break;
                case 15:
                    if (!(message.bundle_defids && message.bundle_defids.length))
                        message.bundle_defids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.bundle_defids.push(reader.uint32());
                    } else
                        message.bundle_defids.push(reader.uint32());
                    break;
                case 16:
                    message.usable_duration = reader.uint32();
                    break;
                case 17:
                    message.bundle_discount = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {LoyaltyRewardDefinition} LoyaltyRewardDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a LoyaltyRewardDefinition message.
         * @function verify
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        LoyaltyRewardDefinition.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.defid != null && message.hasOwnProperty("defid"))
                if (!$util.isInteger(message.defid))
                    return "defid: integer expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.community_item_class != null && message.hasOwnProperty("community_item_class"))
                if (!$util.isInteger(message.community_item_class))
                    return "community_item_class: integer expected";
            if (message.community_item_type != null && message.hasOwnProperty("community_item_type"))
                if (!$util.isInteger(message.community_item_type))
                    return "community_item_type: integer expected";
            if (message.point_cost != null && message.hasOwnProperty("point_cost"))
                if (!$util.isInteger(message.point_cost) && !(message.point_cost && $util.isInteger(message.point_cost.low) && $util.isInteger(message.point_cost.high)))
                    return "point_cost: integer|Long expected";
            if (message.timestamp_created != null && message.hasOwnProperty("timestamp_created"))
                if (!$util.isInteger(message.timestamp_created))
                    return "timestamp_created: integer expected";
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                if (!$util.isInteger(message.timestamp_updated))
                    return "timestamp_updated: integer expected";
            if (message.timestamp_available != null && message.hasOwnProperty("timestamp_available"))
                if (!$util.isInteger(message.timestamp_available))
                    return "timestamp_available: integer expected";
            if (message.timestamp_available_end != null && message.hasOwnProperty("timestamp_available_end"))
                if (!$util.isInteger(message.timestamp_available_end))
                    return "timestamp_available_end: integer expected";
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (!$util.isInteger(message.quantity) && !(message.quantity && $util.isInteger(message.quantity.low) && $util.isInteger(message.quantity.high)))
                    return "quantity: integer|Long expected";
            if (message.internal_description != null && message.hasOwnProperty("internal_description"))
                if (!$util.isString(message.internal_description))
                    return "internal_description: string expected";
            if (message.active != null && message.hasOwnProperty("active"))
                if (typeof message.active !== "boolean")
                    return "active: boolean expected";
            if (message.community_item_data != null && message.hasOwnProperty("community_item_data")) {
                var error = $root.LoyaltyRewardDefinition_CommunityItemData.verify(message.community_item_data);
                if (error)
                    return "community_item_data." + error;
            }
            if (message.bundle_defids != null && message.hasOwnProperty("bundle_defids")) {
                if (!Array.isArray(message.bundle_defids))
                    return "bundle_defids: array expected";
                for (var i = 0; i < message.bundle_defids.length; ++i)
                    if (!$util.isInteger(message.bundle_defids[i]))
                        return "bundle_defids: integer[] expected";
            }
            if (message.usable_duration != null && message.hasOwnProperty("usable_duration"))
                if (!$util.isInteger(message.usable_duration))
                    return "usable_duration: integer expected";
            if (message.bundle_discount != null && message.hasOwnProperty("bundle_discount"))
                if (!$util.isInteger(message.bundle_discount))
                    return "bundle_discount: integer expected";
            return null;
        };
    
        /**
         * Creates a LoyaltyRewardDefinition message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {LoyaltyRewardDefinition} LoyaltyRewardDefinition
         */
        LoyaltyRewardDefinition.fromObject = function fromObject(object) {
            if (object instanceof $root.LoyaltyRewardDefinition)
                return object;
            var message = new $root.LoyaltyRewardDefinition();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.defid != null)
                message.defid = object.defid >>> 0;
            if (object.type != null)
                message.type = object.type | 0;
            if (object.community_item_class != null)
                message.community_item_class = object.community_item_class | 0;
            if (object.community_item_type != null)
                message.community_item_type = object.community_item_type >>> 0;
            if (object.point_cost != null)
                if ($util.Long)
                    (message.point_cost = $util.Long.fromValue(object.point_cost)).unsigned = false;
                else if (typeof object.point_cost === "string")
                    message.point_cost = parseInt(object.point_cost, 10);
                else if (typeof object.point_cost === "number")
                    message.point_cost = object.point_cost;
                else if (typeof object.point_cost === "object")
                    message.point_cost = new $util.LongBits(object.point_cost.low >>> 0, object.point_cost.high >>> 0).toNumber();
            if (object.timestamp_created != null)
                message.timestamp_created = object.timestamp_created >>> 0;
            if (object.timestamp_updated != null)
                message.timestamp_updated = object.timestamp_updated >>> 0;
            if (object.timestamp_available != null)
                message.timestamp_available = object.timestamp_available >>> 0;
            if (object.timestamp_available_end != null)
                message.timestamp_available_end = object.timestamp_available_end >>> 0;
            if (object.quantity != null)
                if ($util.Long)
                    (message.quantity = $util.Long.fromValue(object.quantity)).unsigned = false;
                else if (typeof object.quantity === "string")
                    message.quantity = parseInt(object.quantity, 10);
                else if (typeof object.quantity === "number")
                    message.quantity = object.quantity;
                else if (typeof object.quantity === "object")
                    message.quantity = new $util.LongBits(object.quantity.low >>> 0, object.quantity.high >>> 0).toNumber();
            if (object.internal_description != null)
                message.internal_description = String(object.internal_description);
            if (object.active != null)
                message.active = Boolean(object.active);
            if (object.community_item_data != null) {
                if (typeof object.community_item_data !== "object")
                    throw TypeError(".LoyaltyRewardDefinition.community_item_data: object expected");
                message.community_item_data = $root.LoyaltyRewardDefinition_CommunityItemData.fromObject(object.community_item_data);
            }
            if (object.bundle_defids) {
                if (!Array.isArray(object.bundle_defids))
                    throw TypeError(".LoyaltyRewardDefinition.bundle_defids: array expected");
                message.bundle_defids = [];
                for (var i = 0; i < object.bundle_defids.length; ++i)
                    message.bundle_defids[i] = object.bundle_defids[i] >>> 0;
            }
            if (object.usable_duration != null)
                message.usable_duration = object.usable_duration >>> 0;
            if (object.bundle_discount != null)
                message.bundle_discount = object.bundle_discount >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a LoyaltyRewardDefinition message. Also converts values to other types if specified.
         * @function toObject
         * @memberof LoyaltyRewardDefinition
         * @static
         * @param {LoyaltyRewardDefinition} message LoyaltyRewardDefinition
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        LoyaltyRewardDefinition.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.bundle_defids = [];
            if (options.defaults) {
                object.appid = 0;
                object.defid = 0;
                object.type = 0;
                object.community_item_class = 0;
                object.community_item_type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.point_cost = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.point_cost = options.longs === String ? "0" : 0;
                object.timestamp_created = 0;
                object.timestamp_updated = 0;
                object.timestamp_available = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.quantity = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.quantity = options.longs === String ? "0" : 0;
                object.internal_description = "";
                object.active = false;
                object.community_item_data = null;
                object.timestamp_available_end = 0;
                object.usable_duration = 0;
                object.bundle_discount = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.defid != null && message.hasOwnProperty("defid"))
                object.defid = message.defid;
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.community_item_class != null && message.hasOwnProperty("community_item_class"))
                object.community_item_class = message.community_item_class;
            if (message.community_item_type != null && message.hasOwnProperty("community_item_type"))
                object.community_item_type = message.community_item_type;
            if (message.point_cost != null && message.hasOwnProperty("point_cost"))
                if (typeof message.point_cost === "number")
                    object.point_cost = options.longs === String ? String(message.point_cost) : message.point_cost;
                else
                    object.point_cost = options.longs === String ? $util.Long.prototype.toString.call(message.point_cost) : options.longs === Number ? new $util.LongBits(message.point_cost.low >>> 0, message.point_cost.high >>> 0).toNumber() : message.point_cost;
            if (message.timestamp_created != null && message.hasOwnProperty("timestamp_created"))
                object.timestamp_created = message.timestamp_created;
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                object.timestamp_updated = message.timestamp_updated;
            if (message.timestamp_available != null && message.hasOwnProperty("timestamp_available"))
                object.timestamp_available = message.timestamp_available;
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (typeof message.quantity === "number")
                    object.quantity = options.longs === String ? String(message.quantity) : message.quantity;
                else
                    object.quantity = options.longs === String ? $util.Long.prototype.toString.call(message.quantity) : options.longs === Number ? new $util.LongBits(message.quantity.low >>> 0, message.quantity.high >>> 0).toNumber() : message.quantity;
            if (message.internal_description != null && message.hasOwnProperty("internal_description"))
                object.internal_description = message.internal_description;
            if (message.active != null && message.hasOwnProperty("active"))
                object.active = message.active;
            if (message.community_item_data != null && message.hasOwnProperty("community_item_data"))
                object.community_item_data = $root.LoyaltyRewardDefinition_CommunityItemData.toObject(message.community_item_data, options);
            if (message.timestamp_available_end != null && message.hasOwnProperty("timestamp_available_end"))
                object.timestamp_available_end = message.timestamp_available_end;
            if (message.bundle_defids && message.bundle_defids.length) {
                object.bundle_defids = [];
                for (var j = 0; j < message.bundle_defids.length; ++j)
                    object.bundle_defids[j] = message.bundle_defids[j];
            }
            if (message.usable_duration != null && message.hasOwnProperty("usable_duration"))
                object.usable_duration = message.usable_duration;
            if (message.bundle_discount != null && message.hasOwnProperty("bundle_discount"))
                object.bundle_discount = message.bundle_discount;
            return object;
        };
    
        /**
         * Converts this LoyaltyRewardDefinition to JSON.
         * @function toJSON
         * @memberof LoyaltyRewardDefinition
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        LoyaltyRewardDefinition.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return LoyaltyRewardDefinition;
    })();
    
    $root.LoyaltyRewardDefinition_BadgeData = (function() {
    
        /**
         * Properties of a LoyaltyRewardDefinition_BadgeData.
         * @exports ILoyaltyRewardDefinition_BadgeData
         * @interface ILoyaltyRewardDefinition_BadgeData
         * @property {number|null} [level] LoyaltyRewardDefinition_BadgeData level
         * @property {string|null} [image] LoyaltyRewardDefinition_BadgeData image
         */
    
        /**
         * Constructs a new LoyaltyRewardDefinition_BadgeData.
         * @exports LoyaltyRewardDefinition_BadgeData
         * @classdesc Represents a LoyaltyRewardDefinition_BadgeData.
         * @implements ILoyaltyRewardDefinition_BadgeData
         * @constructor
         * @param {ILoyaltyRewardDefinition_BadgeData=} [properties] Properties to set
         */
        function LoyaltyRewardDefinition_BadgeData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * LoyaltyRewardDefinition_BadgeData level.
         * @member {number} level
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @instance
         */
        LoyaltyRewardDefinition_BadgeData.prototype.level = 0;
    
        /**
         * LoyaltyRewardDefinition_BadgeData image.
         * @member {string} image
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @instance
         */
        LoyaltyRewardDefinition_BadgeData.prototype.image = "";
    
        /**
         * Creates a new LoyaltyRewardDefinition_BadgeData instance using the specified properties.
         * @function create
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {ILoyaltyRewardDefinition_BadgeData=} [properties] Properties to set
         * @returns {LoyaltyRewardDefinition_BadgeData} LoyaltyRewardDefinition_BadgeData instance
         */
        LoyaltyRewardDefinition_BadgeData.create = function create(properties) {
            return new LoyaltyRewardDefinition_BadgeData(properties);
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition_BadgeData message. Does not implicitly {@link LoyaltyRewardDefinition_BadgeData.verify|verify} messages.
         * @function encode
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {ILoyaltyRewardDefinition_BadgeData} message LoyaltyRewardDefinition_BadgeData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition_BadgeData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.level != null && message.hasOwnProperty("level"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.level);
            if (message.image != null && message.hasOwnProperty("image"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.image);
            return writer;
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition_BadgeData message, length delimited. Does not implicitly {@link LoyaltyRewardDefinition_BadgeData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {ILoyaltyRewardDefinition_BadgeData} message LoyaltyRewardDefinition_BadgeData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition_BadgeData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition_BadgeData message from the specified reader or buffer.
         * @function decode
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {LoyaltyRewardDefinition_BadgeData} LoyaltyRewardDefinition_BadgeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition_BadgeData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.LoyaltyRewardDefinition_BadgeData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.level = reader.int32();
                    break;
                case 2:
                    message.image = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition_BadgeData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {LoyaltyRewardDefinition_BadgeData} LoyaltyRewardDefinition_BadgeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition_BadgeData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a LoyaltyRewardDefinition_BadgeData message.
         * @function verify
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        LoyaltyRewardDefinition_BadgeData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.level != null && message.hasOwnProperty("level"))
                if (!$util.isInteger(message.level))
                    return "level: integer expected";
            if (message.image != null && message.hasOwnProperty("image"))
                if (!$util.isString(message.image))
                    return "image: string expected";
            return null;
        };
    
        /**
         * Creates a LoyaltyRewardDefinition_BadgeData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {LoyaltyRewardDefinition_BadgeData} LoyaltyRewardDefinition_BadgeData
         */
        LoyaltyRewardDefinition_BadgeData.fromObject = function fromObject(object) {
            if (object instanceof $root.LoyaltyRewardDefinition_BadgeData)
                return object;
            var message = new $root.LoyaltyRewardDefinition_BadgeData();
            if (object.level != null)
                message.level = object.level | 0;
            if (object.image != null)
                message.image = String(object.image);
            return message;
        };
    
        /**
         * Creates a plain object from a LoyaltyRewardDefinition_BadgeData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @static
         * @param {LoyaltyRewardDefinition_BadgeData} message LoyaltyRewardDefinition_BadgeData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        LoyaltyRewardDefinition_BadgeData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.level = 0;
                object.image = "";
            }
            if (message.level != null && message.hasOwnProperty("level"))
                object.level = message.level;
            if (message.image != null && message.hasOwnProperty("image"))
                object.image = message.image;
            return object;
        };
    
        /**
         * Converts this LoyaltyRewardDefinition_BadgeData to JSON.
         * @function toJSON
         * @memberof LoyaltyRewardDefinition_BadgeData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        LoyaltyRewardDefinition_BadgeData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return LoyaltyRewardDefinition_BadgeData;
    })();
    
    $root.LoyaltyRewardDefinition_CommunityItemData = (function() {
    
        /**
         * Properties of a LoyaltyRewardDefinition_CommunityItemData.
         * @exports ILoyaltyRewardDefinition_CommunityItemData
         * @interface ILoyaltyRewardDefinition_CommunityItemData
         * @property {string|null} [item_name] LoyaltyRewardDefinition_CommunityItemData item_name
         * @property {string|null} [item_title] LoyaltyRewardDefinition_CommunityItemData item_title
         * @property {string|null} [item_description] LoyaltyRewardDefinition_CommunityItemData item_description
         * @property {string|null} [item_image_small] LoyaltyRewardDefinition_CommunityItemData item_image_small
         * @property {string|null} [item_image_large] LoyaltyRewardDefinition_CommunityItemData item_image_large
         * @property {string|null} [item_movie_webm] LoyaltyRewardDefinition_CommunityItemData item_movie_webm
         * @property {string|null} [item_movie_mp4] LoyaltyRewardDefinition_CommunityItemData item_movie_mp4
         * @property {string|null} [item_movie_webm_small] LoyaltyRewardDefinition_CommunityItemData item_movie_webm_small
         * @property {string|null} [item_movie_mp4_small] LoyaltyRewardDefinition_CommunityItemData item_movie_mp4_small
         * @property {boolean|null} [animated] LoyaltyRewardDefinition_CommunityItemData animated
         * @property {Array.<ILoyaltyRewardDefinition_BadgeData>|null} [badge_data] LoyaltyRewardDefinition_CommunityItemData badge_data
         * @property {string|null} [profile_theme_id] LoyaltyRewardDefinition_CommunityItemData profile_theme_id
         */
    
        /**
         * Constructs a new LoyaltyRewardDefinition_CommunityItemData.
         * @exports LoyaltyRewardDefinition_CommunityItemData
         * @classdesc Represents a LoyaltyRewardDefinition_CommunityItemData.
         * @implements ILoyaltyRewardDefinition_CommunityItemData
         * @constructor
         * @param {ILoyaltyRewardDefinition_CommunityItemData=} [properties] Properties to set
         */
        function LoyaltyRewardDefinition_CommunityItemData(properties) {
            this.badge_data = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_name.
         * @member {string} item_name
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_name = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_title.
         * @member {string} item_title
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_title = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_description.
         * @member {string} item_description
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_description = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_image_small.
         * @member {string} item_image_small
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_image_small = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_image_large.
         * @member {string} item_image_large
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_image_large = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_movie_webm.
         * @member {string} item_movie_webm
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_movie_webm = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_movie_mp4.
         * @member {string} item_movie_mp4
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_movie_mp4 = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_movie_webm_small.
         * @member {string} item_movie_webm_small
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_movie_webm_small = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData item_movie_mp4_small.
         * @member {string} item_movie_mp4_small
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.item_movie_mp4_small = "";
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData animated.
         * @member {boolean} animated
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.animated = false;
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData badge_data.
         * @member {Array.<ILoyaltyRewardDefinition_BadgeData>} badge_data
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.badge_data = $util.emptyArray;
    
        /**
         * LoyaltyRewardDefinition_CommunityItemData profile_theme_id.
         * @member {string} profile_theme_id
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.profile_theme_id = "";
    
        /**
         * Creates a new LoyaltyRewardDefinition_CommunityItemData instance using the specified properties.
         * @function create
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {ILoyaltyRewardDefinition_CommunityItemData=} [properties] Properties to set
         * @returns {LoyaltyRewardDefinition_CommunityItemData} LoyaltyRewardDefinition_CommunityItemData instance
         */
        LoyaltyRewardDefinition_CommunityItemData.create = function create(properties) {
            return new LoyaltyRewardDefinition_CommunityItemData(properties);
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition_CommunityItemData message. Does not implicitly {@link LoyaltyRewardDefinition_CommunityItemData.verify|verify} messages.
         * @function encode
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {ILoyaltyRewardDefinition_CommunityItemData} message LoyaltyRewardDefinition_CommunityItemData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition_CommunityItemData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_name != null && message.hasOwnProperty("item_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.item_name);
            if (message.item_title != null && message.hasOwnProperty("item_title"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.item_title);
            if (message.item_description != null && message.hasOwnProperty("item_description"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.item_description);
            if (message.item_image_small != null && message.hasOwnProperty("item_image_small"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.item_image_small);
            if (message.item_image_large != null && message.hasOwnProperty("item_image_large"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.item_image_large);
            if (message.item_movie_webm != null && message.hasOwnProperty("item_movie_webm"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.item_movie_webm);
            if (message.item_movie_mp4 != null && message.hasOwnProperty("item_movie_mp4"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.item_movie_mp4);
            if (message.animated != null && message.hasOwnProperty("animated"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.animated);
            if (message.badge_data != null && message.badge_data.length)
                for (var i = 0; i < message.badge_data.length; ++i)
                    $root.LoyaltyRewardDefinition_BadgeData.encode(message.badge_data[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.item_movie_webm_small != null && message.hasOwnProperty("item_movie_webm_small"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.item_movie_webm_small);
            if (message.item_movie_mp4_small != null && message.hasOwnProperty("item_movie_mp4_small"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.item_movie_mp4_small);
            if (message.profile_theme_id != null && message.hasOwnProperty("profile_theme_id"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.profile_theme_id);
            return writer;
        };
    
        /**
         * Encodes the specified LoyaltyRewardDefinition_CommunityItemData message, length delimited. Does not implicitly {@link LoyaltyRewardDefinition_CommunityItemData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {ILoyaltyRewardDefinition_CommunityItemData} message LoyaltyRewardDefinition_CommunityItemData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        LoyaltyRewardDefinition_CommunityItemData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition_CommunityItemData message from the specified reader or buffer.
         * @function decode
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {LoyaltyRewardDefinition_CommunityItemData} LoyaltyRewardDefinition_CommunityItemData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition_CommunityItemData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.LoyaltyRewardDefinition_CommunityItemData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.item_name = reader.string();
                    break;
                case 2:
                    message.item_title = reader.string();
                    break;
                case 3:
                    message.item_description = reader.string();
                    break;
                case 4:
                    message.item_image_small = reader.string();
                    break;
                case 5:
                    message.item_image_large = reader.string();
                    break;
                case 6:
                    message.item_movie_webm = reader.string();
                    break;
                case 7:
                    message.item_movie_mp4 = reader.string();
                    break;
                case 10:
                    message.item_movie_webm_small = reader.string();
                    break;
                case 11:
                    message.item_movie_mp4_small = reader.string();
                    break;
                case 8:
                    message.animated = reader.bool();
                    break;
                case 9:
                    if (!(message.badge_data && message.badge_data.length))
                        message.badge_data = [];
                    message.badge_data.push($root.LoyaltyRewardDefinition_BadgeData.decode(reader, reader.uint32()));
                    break;
                case 12:
                    message.profile_theme_id = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a LoyaltyRewardDefinition_CommunityItemData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {LoyaltyRewardDefinition_CommunityItemData} LoyaltyRewardDefinition_CommunityItemData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        LoyaltyRewardDefinition_CommunityItemData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a LoyaltyRewardDefinition_CommunityItemData message.
         * @function verify
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        LoyaltyRewardDefinition_CommunityItemData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_name != null && message.hasOwnProperty("item_name"))
                if (!$util.isString(message.item_name))
                    return "item_name: string expected";
            if (message.item_title != null && message.hasOwnProperty("item_title"))
                if (!$util.isString(message.item_title))
                    return "item_title: string expected";
            if (message.item_description != null && message.hasOwnProperty("item_description"))
                if (!$util.isString(message.item_description))
                    return "item_description: string expected";
            if (message.item_image_small != null && message.hasOwnProperty("item_image_small"))
                if (!$util.isString(message.item_image_small))
                    return "item_image_small: string expected";
            if (message.item_image_large != null && message.hasOwnProperty("item_image_large"))
                if (!$util.isString(message.item_image_large))
                    return "item_image_large: string expected";
            if (message.item_movie_webm != null && message.hasOwnProperty("item_movie_webm"))
                if (!$util.isString(message.item_movie_webm))
                    return "item_movie_webm: string expected";
            if (message.item_movie_mp4 != null && message.hasOwnProperty("item_movie_mp4"))
                if (!$util.isString(message.item_movie_mp4))
                    return "item_movie_mp4: string expected";
            if (message.item_movie_webm_small != null && message.hasOwnProperty("item_movie_webm_small"))
                if (!$util.isString(message.item_movie_webm_small))
                    return "item_movie_webm_small: string expected";
            if (message.item_movie_mp4_small != null && message.hasOwnProperty("item_movie_mp4_small"))
                if (!$util.isString(message.item_movie_mp4_small))
                    return "item_movie_mp4_small: string expected";
            if (message.animated != null && message.hasOwnProperty("animated"))
                if (typeof message.animated !== "boolean")
                    return "animated: boolean expected";
            if (message.badge_data != null && message.hasOwnProperty("badge_data")) {
                if (!Array.isArray(message.badge_data))
                    return "badge_data: array expected";
                for (var i = 0; i < message.badge_data.length; ++i) {
                    var error = $root.LoyaltyRewardDefinition_BadgeData.verify(message.badge_data[i]);
                    if (error)
                        return "badge_data." + error;
                }
            }
            if (message.profile_theme_id != null && message.hasOwnProperty("profile_theme_id"))
                if (!$util.isString(message.profile_theme_id))
                    return "profile_theme_id: string expected";
            return null;
        };
    
        /**
         * Creates a LoyaltyRewardDefinition_CommunityItemData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {LoyaltyRewardDefinition_CommunityItemData} LoyaltyRewardDefinition_CommunityItemData
         */
        LoyaltyRewardDefinition_CommunityItemData.fromObject = function fromObject(object) {
            if (object instanceof $root.LoyaltyRewardDefinition_CommunityItemData)
                return object;
            var message = new $root.LoyaltyRewardDefinition_CommunityItemData();
            if (object.item_name != null)
                message.item_name = String(object.item_name);
            if (object.item_title != null)
                message.item_title = String(object.item_title);
            if (object.item_description != null)
                message.item_description = String(object.item_description);
            if (object.item_image_small != null)
                message.item_image_small = String(object.item_image_small);
            if (object.item_image_large != null)
                message.item_image_large = String(object.item_image_large);
            if (object.item_movie_webm != null)
                message.item_movie_webm = String(object.item_movie_webm);
            if (object.item_movie_mp4 != null)
                message.item_movie_mp4 = String(object.item_movie_mp4);
            if (object.item_movie_webm_small != null)
                message.item_movie_webm_small = String(object.item_movie_webm_small);
            if (object.item_movie_mp4_small != null)
                message.item_movie_mp4_small = String(object.item_movie_mp4_small);
            if (object.animated != null)
                message.animated = Boolean(object.animated);
            if (object.badge_data) {
                if (!Array.isArray(object.badge_data))
                    throw TypeError(".LoyaltyRewardDefinition_CommunityItemData.badge_data: array expected");
                message.badge_data = [];
                for (var i = 0; i < object.badge_data.length; ++i) {
                    if (typeof object.badge_data[i] !== "object")
                        throw TypeError(".LoyaltyRewardDefinition_CommunityItemData.badge_data: object expected");
                    message.badge_data[i] = $root.LoyaltyRewardDefinition_BadgeData.fromObject(object.badge_data[i]);
                }
            }
            if (object.profile_theme_id != null)
                message.profile_theme_id = String(object.profile_theme_id);
            return message;
        };
    
        /**
         * Creates a plain object from a LoyaltyRewardDefinition_CommunityItemData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @static
         * @param {LoyaltyRewardDefinition_CommunityItemData} message LoyaltyRewardDefinition_CommunityItemData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        LoyaltyRewardDefinition_CommunityItemData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.badge_data = [];
            if (options.defaults) {
                object.item_name = "";
                object.item_title = "";
                object.item_description = "";
                object.item_image_small = "";
                object.item_image_large = "";
                object.item_movie_webm = "";
                object.item_movie_mp4 = "";
                object.animated = false;
                object.item_movie_webm_small = "";
                object.item_movie_mp4_small = "";
                object.profile_theme_id = "";
            }
            if (message.item_name != null && message.hasOwnProperty("item_name"))
                object.item_name = message.item_name;
            if (message.item_title != null && message.hasOwnProperty("item_title"))
                object.item_title = message.item_title;
            if (message.item_description != null && message.hasOwnProperty("item_description"))
                object.item_description = message.item_description;
            if (message.item_image_small != null && message.hasOwnProperty("item_image_small"))
                object.item_image_small = message.item_image_small;
            if (message.item_image_large != null && message.hasOwnProperty("item_image_large"))
                object.item_image_large = message.item_image_large;
            if (message.item_movie_webm != null && message.hasOwnProperty("item_movie_webm"))
                object.item_movie_webm = message.item_movie_webm;
            if (message.item_movie_mp4 != null && message.hasOwnProperty("item_movie_mp4"))
                object.item_movie_mp4 = message.item_movie_mp4;
            if (message.animated != null && message.hasOwnProperty("animated"))
                object.animated = message.animated;
            if (message.badge_data && message.badge_data.length) {
                object.badge_data = [];
                for (var j = 0; j < message.badge_data.length; ++j)
                    object.badge_data[j] = $root.LoyaltyRewardDefinition_BadgeData.toObject(message.badge_data[j], options);
            }
            if (message.item_movie_webm_small != null && message.hasOwnProperty("item_movie_webm_small"))
                object.item_movie_webm_small = message.item_movie_webm_small;
            if (message.item_movie_mp4_small != null && message.hasOwnProperty("item_movie_mp4_small"))
                object.item_movie_mp4_small = message.item_movie_mp4_small;
            if (message.profile_theme_id != null && message.hasOwnProperty("profile_theme_id"))
                object.profile_theme_id = message.profile_theme_id;
            return object;
        };
    
        /**
         * Converts this LoyaltyRewardDefinition_CommunityItemData to JSON.
         * @function toJSON
         * @memberof LoyaltyRewardDefinition_CommunityItemData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        LoyaltyRewardDefinition_CommunityItemData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return LoyaltyRewardDefinition_CommunityItemData;
    })();
    
    $root.NotImplemented = (function() {
    
        /**
         * Properties of a NotImplemented.
         * @exports INotImplemented
         * @interface INotImplemented
         */
    
        /**
         * Constructs a new NotImplemented.
         * @exports NotImplemented
         * @classdesc Represents a NotImplemented.
         * @implements INotImplemented
         * @constructor
         * @param {INotImplemented=} [properties] Properties to set
         */
        function NotImplemented(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new NotImplemented instance using the specified properties.
         * @function create
         * @memberof NotImplemented
         * @static
         * @param {INotImplemented=} [properties] Properties to set
         * @returns {NotImplemented} NotImplemented instance
         */
        NotImplemented.create = function create(properties) {
            return new NotImplemented(properties);
        };
    
        /**
         * Encodes the specified NotImplemented message. Does not implicitly {@link NotImplemented.verify|verify} messages.
         * @function encode
         * @memberof NotImplemented
         * @static
         * @param {INotImplemented} message NotImplemented message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        NotImplemented.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified NotImplemented message, length delimited. Does not implicitly {@link NotImplemented.verify|verify} messages.
         * @function encodeDelimited
         * @memberof NotImplemented
         * @static
         * @param {INotImplemented} message NotImplemented message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        NotImplemented.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a NotImplemented message from the specified reader or buffer.
         * @function decode
         * @memberof NotImplemented
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {NotImplemented} NotImplemented
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        NotImplemented.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NotImplemented();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a NotImplemented message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof NotImplemented
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {NotImplemented} NotImplemented
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        NotImplemented.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a NotImplemented message.
         * @function verify
         * @memberof NotImplemented
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        NotImplemented.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a NotImplemented message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof NotImplemented
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {NotImplemented} NotImplemented
         */
        NotImplemented.fromObject = function fromObject(object) {
            if (object instanceof $root.NotImplemented)
                return object;
            return new $root.NotImplemented();
        };
    
        /**
         * Creates a plain object from a NotImplemented message. Also converts values to other types if specified.
         * @function toObject
         * @memberof NotImplemented
         * @static
         * @param {NotImplemented} message NotImplemented
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        NotImplemented.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this NotImplemented to JSON.
         * @function toJSON
         * @memberof NotImplemented
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        NotImplemented.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return NotImplemented;
    })();
    
    $root.StoreGameRating = (function() {
    
        /**
         * Properties of a StoreGameRating.
         * @exports IStoreGameRating
         * @interface IStoreGameRating
         * @property {string|null} [type] StoreGameRating type
         * @property {string|null} [rating] StoreGameRating rating
         * @property {Array.<string>|null} [descriptors] StoreGameRating descriptors
         * @property {string|null} [interactive_elements] StoreGameRating interactive_elements
         * @property {number|null} [required_age] StoreGameRating required_age
         * @property {boolean|null} [use_age_gate] StoreGameRating use_age_gate
         * @property {string|null} [image_url] StoreGameRating image_url
         * @property {string|null} [image_target] StoreGameRating image_target
         */
    
        /**
         * Constructs a new StoreGameRating.
         * @exports StoreGameRating
         * @classdesc Represents a StoreGameRating.
         * @implements IStoreGameRating
         * @constructor
         * @param {IStoreGameRating=} [properties] Properties to set
         */
        function StoreGameRating(properties) {
            this.descriptors = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreGameRating type.
         * @member {string} type
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.type = "";
    
        /**
         * StoreGameRating rating.
         * @member {string} rating
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.rating = "";
    
        /**
         * StoreGameRating descriptors.
         * @member {Array.<string>} descriptors
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.descriptors = $util.emptyArray;
    
        /**
         * StoreGameRating interactive_elements.
         * @member {string} interactive_elements
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.interactive_elements = "";
    
        /**
         * StoreGameRating required_age.
         * @member {number} required_age
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.required_age = 0;
    
        /**
         * StoreGameRating use_age_gate.
         * @member {boolean} use_age_gate
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.use_age_gate = false;
    
        /**
         * StoreGameRating image_url.
         * @member {string} image_url
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.image_url = "";
    
        /**
         * StoreGameRating image_target.
         * @member {string} image_target
         * @memberof StoreGameRating
         * @instance
         */
        StoreGameRating.prototype.image_target = "";
    
        /**
         * Creates a new StoreGameRating instance using the specified properties.
         * @function create
         * @memberof StoreGameRating
         * @static
         * @param {IStoreGameRating=} [properties] Properties to set
         * @returns {StoreGameRating} StoreGameRating instance
         */
        StoreGameRating.create = function create(properties) {
            return new StoreGameRating(properties);
        };
    
        /**
         * Encodes the specified StoreGameRating message. Does not implicitly {@link StoreGameRating.verify|verify} messages.
         * @function encode
         * @memberof StoreGameRating
         * @static
         * @param {IStoreGameRating} message StoreGameRating message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreGameRating.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
            if (message.rating != null && message.hasOwnProperty("rating"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rating);
            if (message.descriptors != null && message.descriptors.length)
                for (var i = 0; i < message.descriptors.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.descriptors[i]);
            if (message.interactive_elements != null && message.hasOwnProperty("interactive_elements"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.interactive_elements);
            if (message.required_age != null && message.hasOwnProperty("required_age"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.required_age);
            if (message.use_age_gate != null && message.hasOwnProperty("use_age_gate"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.use_age_gate);
            if (message.image_url != null && message.hasOwnProperty("image_url"))
                writer.uint32(/* id 20, wireType 2 =*/162).string(message.image_url);
            if (message.image_target != null && message.hasOwnProperty("image_target"))
                writer.uint32(/* id 21, wireType 2 =*/170).string(message.image_target);
            return writer;
        };
    
        /**
         * Encodes the specified StoreGameRating message, length delimited. Does not implicitly {@link StoreGameRating.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreGameRating
         * @static
         * @param {IStoreGameRating} message StoreGameRating message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreGameRating.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreGameRating message from the specified reader or buffer.
         * @function decode
         * @memberof StoreGameRating
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreGameRating} StoreGameRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreGameRating.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreGameRating();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.type = reader.string();
                    break;
                case 2:
                    message.rating = reader.string();
                    break;
                case 3:
                    if (!(message.descriptors && message.descriptors.length))
                        message.descriptors = [];
                    message.descriptors.push(reader.string());
                    break;
                case 4:
                    message.interactive_elements = reader.string();
                    break;
                case 10:
                    message.required_age = reader.int32();
                    break;
                case 11:
                    message.use_age_gate = reader.bool();
                    break;
                case 20:
                    message.image_url = reader.string();
                    break;
                case 21:
                    message.image_target = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreGameRating message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreGameRating
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreGameRating} StoreGameRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreGameRating.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreGameRating message.
         * @function verify
         * @memberof StoreGameRating
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreGameRating.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isString(message.type))
                    return "type: string expected";
            if (message.rating != null && message.hasOwnProperty("rating"))
                if (!$util.isString(message.rating))
                    return "rating: string expected";
            if (message.descriptors != null && message.hasOwnProperty("descriptors")) {
                if (!Array.isArray(message.descriptors))
                    return "descriptors: array expected";
                for (var i = 0; i < message.descriptors.length; ++i)
                    if (!$util.isString(message.descriptors[i]))
                        return "descriptors: string[] expected";
            }
            if (message.interactive_elements != null && message.hasOwnProperty("interactive_elements"))
                if (!$util.isString(message.interactive_elements))
                    return "interactive_elements: string expected";
            if (message.required_age != null && message.hasOwnProperty("required_age"))
                if (!$util.isInteger(message.required_age))
                    return "required_age: integer expected";
            if (message.use_age_gate != null && message.hasOwnProperty("use_age_gate"))
                if (typeof message.use_age_gate !== "boolean")
                    return "use_age_gate: boolean expected";
            if (message.image_url != null && message.hasOwnProperty("image_url"))
                if (!$util.isString(message.image_url))
                    return "image_url: string expected";
            if (message.image_target != null && message.hasOwnProperty("image_target"))
                if (!$util.isString(message.image_target))
                    return "image_target: string expected";
            return null;
        };
    
        /**
         * Creates a StoreGameRating message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreGameRating
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreGameRating} StoreGameRating
         */
        StoreGameRating.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreGameRating)
                return object;
            var message = new $root.StoreGameRating();
            if (object.type != null)
                message.type = String(object.type);
            if (object.rating != null)
                message.rating = String(object.rating);
            if (object.descriptors) {
                if (!Array.isArray(object.descriptors))
                    throw TypeError(".StoreGameRating.descriptors: array expected");
                message.descriptors = [];
                for (var i = 0; i < object.descriptors.length; ++i)
                    message.descriptors[i] = String(object.descriptors[i]);
            }
            if (object.interactive_elements != null)
                message.interactive_elements = String(object.interactive_elements);
            if (object.required_age != null)
                message.required_age = object.required_age | 0;
            if (object.use_age_gate != null)
                message.use_age_gate = Boolean(object.use_age_gate);
            if (object.image_url != null)
                message.image_url = String(object.image_url);
            if (object.image_target != null)
                message.image_target = String(object.image_target);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreGameRating message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreGameRating
         * @static
         * @param {StoreGameRating} message StoreGameRating
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreGameRating.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.descriptors = [];
            if (options.defaults) {
                object.type = "";
                object.rating = "";
                object.interactive_elements = "";
                object.required_age = 0;
                object.use_age_gate = false;
                object.image_url = "";
                object.image_target = "";
            }
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.rating != null && message.hasOwnProperty("rating"))
                object.rating = message.rating;
            if (message.descriptors && message.descriptors.length) {
                object.descriptors = [];
                for (var j = 0; j < message.descriptors.length; ++j)
                    object.descriptors[j] = message.descriptors[j];
            }
            if (message.interactive_elements != null && message.hasOwnProperty("interactive_elements"))
                object.interactive_elements = message.interactive_elements;
            if (message.required_age != null && message.hasOwnProperty("required_age"))
                object.required_age = message.required_age;
            if (message.use_age_gate != null && message.hasOwnProperty("use_age_gate"))
                object.use_age_gate = message.use_age_gate;
            if (message.image_url != null && message.hasOwnProperty("image_url"))
                object.image_url = message.image_url;
            if (message.image_target != null && message.hasOwnProperty("image_target"))
                object.image_target = message.image_target;
            return object;
        };
    
        /**
         * Converts this StoreGameRating to JSON.
         * @function toJSON
         * @memberof StoreGameRating
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreGameRating.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreGameRating;
    })();
    
    $root.StoreItem = (function() {
    
        /**
         * Properties of a StoreItem.
         * @exports IStoreItem
         * @interface IStoreItem
         * @property {number|null} [item_type] StoreItem item_type
         * @property {number|null} [id] StoreItem id
         * @property {number|null} [success] StoreItem success
         * @property {boolean|null} [visible] StoreItem visible
         * @property {boolean|null} [unvailable_for_country_restriction] StoreItem unvailable_for_country_restriction
         * @property {string|null} [name] StoreItem name
         * @property {string|null} [store_url_path] StoreItem store_url_path
         * @property {number|null} [appid] StoreItem appid
         * @property {number|null} [type] StoreItem type
         * @property {Array.<number>|null} [included_types] StoreItem included_types
         * @property {Array.<number>|null} [included_appids] StoreItem included_appids
         * @property {boolean|null} [is_free] StoreItem is_free
         * @property {boolean|null} [is_early_access] StoreItem is_early_access
         * @property {IStoreItem_RelatedItems|null} [related_items] StoreItem related_items
         * @property {Array.<number>|null} [content_descriptorids] StoreItem content_descriptorids
         * @property {Array.<number>|null} [tagids] StoreItem tagids
         * @property {IStoreItem_Categories|null} [categories] StoreItem categories
         * @property {IStoreItem_Reviews|null} [reviews] StoreItem reviews
         * @property {IStoreItem_BasicInfo|null} [basic_info] StoreItem basic_info
         * @property {Array.<IStoreItem_Tag>|null} [tags] StoreItem tags
         * @property {IStoreItem_Assets|null} [assets] StoreItem assets
         * @property {IStoreItem_ReleaseInfo|null} [release] StoreItem release
         * @property {IStoreItem_Platforms|null} [platforms] StoreItem platforms
         * @property {IStoreGameRating|null} [game_rating] StoreItem game_rating
         * @property {IStoreItem_PurchaseOption|null} [best_purchase_option] StoreItem best_purchase_option
         * @property {Array.<IStoreItem_PurchaseOption>|null} [purchase_options] StoreItem purchase_options
         * @property {Array.<IStoreItem_PurchaseOption>|null} [accessories] StoreItem accessories
         * @property {IStoreItem_Screenshots|null} [screenshots] StoreItem screenshots
         * @property {IStoreItem_Trailers|null} [trailers] StoreItem trailers
         */
    
        /**
         * Constructs a new StoreItem.
         * @exports StoreItem
         * @classdesc Represents a StoreItem.
         * @implements IStoreItem
         * @constructor
         * @param {IStoreItem=} [properties] Properties to set
         */
        function StoreItem(properties) {
            this.included_types = [];
            this.included_appids = [];
            this.content_descriptorids = [];
            this.tagids = [];
            this.tags = [];
            this.purchase_options = [];
            this.accessories = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem item_type.
         * @member {number} item_type
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.item_type = 0;
    
        /**
         * StoreItem id.
         * @member {number} id
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.id = 0;
    
        /**
         * StoreItem success.
         * @member {number} success
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.success = 0;
    
        /**
         * StoreItem visible.
         * @member {boolean} visible
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.visible = false;
    
        /**
         * StoreItem unvailable_for_country_restriction.
         * @member {boolean} unvailable_for_country_restriction
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.unvailable_for_country_restriction = false;
    
        /**
         * StoreItem name.
         * @member {string} name
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.name = "";
    
        /**
         * StoreItem store_url_path.
         * @member {string} store_url_path
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.store_url_path = "";
    
        /**
         * StoreItem appid.
         * @member {number} appid
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.appid = 0;
    
        /**
         * StoreItem type.
         * @member {number} type
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.type = 0;
    
        /**
         * StoreItem included_types.
         * @member {Array.<number>} included_types
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.included_types = $util.emptyArray;
    
        /**
         * StoreItem included_appids.
         * @member {Array.<number>} included_appids
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.included_appids = $util.emptyArray;
    
        /**
         * StoreItem is_free.
         * @member {boolean} is_free
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.is_free = false;
    
        /**
         * StoreItem is_early_access.
         * @member {boolean} is_early_access
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.is_early_access = false;
    
        /**
         * StoreItem related_items.
         * @member {IStoreItem_RelatedItems|null|undefined} related_items
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.related_items = null;
    
        /**
         * StoreItem content_descriptorids.
         * @member {Array.<number>} content_descriptorids
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.content_descriptorids = $util.emptyArray;
    
        /**
         * StoreItem tagids.
         * @member {Array.<number>} tagids
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.tagids = $util.emptyArray;
    
        /**
         * StoreItem categories.
         * @member {IStoreItem_Categories|null|undefined} categories
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.categories = null;
    
        /**
         * StoreItem reviews.
         * @member {IStoreItem_Reviews|null|undefined} reviews
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.reviews = null;
    
        /**
         * StoreItem basic_info.
         * @member {IStoreItem_BasicInfo|null|undefined} basic_info
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.basic_info = null;
    
        /**
         * StoreItem tags.
         * @member {Array.<IStoreItem_Tag>} tags
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.tags = $util.emptyArray;
    
        /**
         * StoreItem assets.
         * @member {IStoreItem_Assets|null|undefined} assets
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.assets = null;
    
        /**
         * StoreItem release.
         * @member {IStoreItem_ReleaseInfo|null|undefined} release
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.release = null;
    
        /**
         * StoreItem platforms.
         * @member {IStoreItem_Platforms|null|undefined} platforms
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.platforms = null;
    
        /**
         * StoreItem game_rating.
         * @member {IStoreGameRating|null|undefined} game_rating
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.game_rating = null;
    
        /**
         * StoreItem best_purchase_option.
         * @member {IStoreItem_PurchaseOption|null|undefined} best_purchase_option
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.best_purchase_option = null;
    
        /**
         * StoreItem purchase_options.
         * @member {Array.<IStoreItem_PurchaseOption>} purchase_options
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.purchase_options = $util.emptyArray;
    
        /**
         * StoreItem accessories.
         * @member {Array.<IStoreItem_PurchaseOption>} accessories
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.accessories = $util.emptyArray;
    
        /**
         * StoreItem screenshots.
         * @member {IStoreItem_Screenshots|null|undefined} screenshots
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.screenshots = null;
    
        /**
         * StoreItem trailers.
         * @member {IStoreItem_Trailers|null|undefined} trailers
         * @memberof StoreItem
         * @instance
         */
        StoreItem.prototype.trailers = null;
    
        /**
         * Creates a new StoreItem instance using the specified properties.
         * @function create
         * @memberof StoreItem
         * @static
         * @param {IStoreItem=} [properties] Properties to set
         * @returns {StoreItem} StoreItem instance
         */
        StoreItem.create = function create(properties) {
            return new StoreItem(properties);
        };
    
        /**
         * Encodes the specified StoreItem message. Does not implicitly {@link StoreItem.verify|verify} messages.
         * @function encode
         * @memberof StoreItem
         * @static
         * @param {IStoreItem} message StoreItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_type != null && message.hasOwnProperty("item_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.item_type);
            if (message.id != null && message.hasOwnProperty("id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.id);
            if (message.success != null && message.hasOwnProperty("success"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.success);
            if (message.visible != null && message.hasOwnProperty("visible"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.visible);
            if (message.unvailable_for_country_restriction != null && message.hasOwnProperty("unvailable_for_country_restriction"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.unvailable_for_country_restriction);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
            if (message.store_url_path != null && message.hasOwnProperty("store_url_path"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.store_url_path);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.appid);
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.type);
            if (message.included_types != null && message.included_types.length)
                for (var i = 0; i < message.included_types.length; ++i)
                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.included_types[i]);
            if (message.included_appids != null && message.included_appids.length)
                for (var i = 0; i < message.included_appids.length; ++i)
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.included_appids[i]);
            if (message.is_free != null && message.hasOwnProperty("is_free"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.is_free);
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.is_early_access);
            if (message.related_items != null && message.hasOwnProperty("related_items"))
                $root.StoreItem_RelatedItems.encode(message.related_items, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
            if (message.content_descriptorids != null && message.content_descriptorids.length)
                for (var i = 0; i < message.content_descriptorids.length; ++i)
                    writer.uint32(/* id 20, wireType 0 =*/160).int32(message.content_descriptorids[i]);
            if (message.tagids != null && message.tagids.length)
                for (var i = 0; i < message.tagids.length; ++i)
                    writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.tagids[i]);
            if (message.categories != null && message.hasOwnProperty("categories"))
                $root.StoreItem_Categories.encode(message.categories, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
            if (message.reviews != null && message.hasOwnProperty("reviews"))
                $root.StoreItem_Reviews.encode(message.reviews, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
            if (message.basic_info != null && message.hasOwnProperty("basic_info"))
                $root.StoreItem_BasicInfo.encode(message.basic_info, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
            if (message.tags != null && message.tags.length)
                for (var i = 0; i < message.tags.length; ++i)
                    $root.StoreItem_Tag.encode(message.tags[i], writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
            if (message.assets != null && message.hasOwnProperty("assets"))
                $root.StoreItem_Assets.encode(message.assets, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
            if (message.release != null && message.hasOwnProperty("release"))
                $root.StoreItem_ReleaseInfo.encode(message.release, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
            if (message.platforms != null && message.hasOwnProperty("platforms"))
                $root.StoreItem_Platforms.encode(message.platforms, writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
            if (message.game_rating != null && message.hasOwnProperty("game_rating"))
                $root.StoreGameRating.encode(message.game_rating, writer.uint32(/* id 33, wireType 2 =*/266).fork()).ldelim();
            if (message.best_purchase_option != null && message.hasOwnProperty("best_purchase_option"))
                $root.StoreItem_PurchaseOption.encode(message.best_purchase_option, writer.uint32(/* id 40, wireType 2 =*/322).fork()).ldelim();
            if (message.purchase_options != null && message.purchase_options.length)
                for (var i = 0; i < message.purchase_options.length; ++i)
                    $root.StoreItem_PurchaseOption.encode(message.purchase_options[i], writer.uint32(/* id 41, wireType 2 =*/330).fork()).ldelim();
            if (message.accessories != null && message.accessories.length)
                for (var i = 0; i < message.accessories.length; ++i)
                    $root.StoreItem_PurchaseOption.encode(message.accessories[i], writer.uint32(/* id 42, wireType 2 =*/338).fork()).ldelim();
            if (message.screenshots != null && message.hasOwnProperty("screenshots"))
                $root.StoreItem_Screenshots.encode(message.screenshots, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
            if (message.trailers != null && message.hasOwnProperty("trailers"))
                $root.StoreItem_Trailers.encode(message.trailers, writer.uint32(/* id 51, wireType 2 =*/410).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem message, length delimited. Does not implicitly {@link StoreItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem
         * @static
         * @param {IStoreItem} message StoreItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem} StoreItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.item_type = reader.int32();
                    break;
                case 2:
                    message.id = reader.uint32();
                    break;
                case 3:
                    message.success = reader.uint32();
                    break;
                case 4:
                    message.visible = reader.bool();
                    break;
                case 5:
                    message.unvailable_for_country_restriction = reader.bool();
                    break;
                case 6:
                    message.name = reader.string();
                    break;
                case 7:
                    message.store_url_path = reader.string();
                    break;
                case 9:
                    message.appid = reader.uint32();
                    break;
                case 10:
                    message.type = reader.int32();
                    break;
                case 11:
                    if (!(message.included_types && message.included_types.length))
                        message.included_types = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.included_types.push(reader.int32());
                    } else
                        message.included_types.push(reader.int32());
                    break;
                case 12:
                    if (!(message.included_appids && message.included_appids.length))
                        message.included_appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.included_appids.push(reader.uint32());
                    } else
                        message.included_appids.push(reader.uint32());
                    break;
                case 13:
                    message.is_free = reader.bool();
                    break;
                case 14:
                    message.is_early_access = reader.bool();
                    break;
                case 15:
                    message.related_items = $root.StoreItem_RelatedItems.decode(reader, reader.uint32());
                    break;
                case 20:
                    if (!(message.content_descriptorids && message.content_descriptorids.length))
                        message.content_descriptorids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.content_descriptorids.push(reader.int32());
                    } else
                        message.content_descriptorids.push(reader.int32());
                    break;
                case 21:
                    if (!(message.tagids && message.tagids.length))
                        message.tagids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids.push(reader.uint32());
                    } else
                        message.tagids.push(reader.uint32());
                    break;
                case 22:
                    message.categories = $root.StoreItem_Categories.decode(reader, reader.uint32());
                    break;
                case 23:
                    message.reviews = $root.StoreItem_Reviews.decode(reader, reader.uint32());
                    break;
                case 24:
                    message.basic_info = $root.StoreItem_BasicInfo.decode(reader, reader.uint32());
                    break;
                case 25:
                    if (!(message.tags && message.tags.length))
                        message.tags = [];
                    message.tags.push($root.StoreItem_Tag.decode(reader, reader.uint32()));
                    break;
                case 30:
                    message.assets = $root.StoreItem_Assets.decode(reader, reader.uint32());
                    break;
                case 31:
                    message.release = $root.StoreItem_ReleaseInfo.decode(reader, reader.uint32());
                    break;
                case 32:
                    message.platforms = $root.StoreItem_Platforms.decode(reader, reader.uint32());
                    break;
                case 33:
                    message.game_rating = $root.StoreGameRating.decode(reader, reader.uint32());
                    break;
                case 40:
                    message.best_purchase_option = $root.StoreItem_PurchaseOption.decode(reader, reader.uint32());
                    break;
                case 41:
                    if (!(message.purchase_options && message.purchase_options.length))
                        message.purchase_options = [];
                    message.purchase_options.push($root.StoreItem_PurchaseOption.decode(reader, reader.uint32()));
                    break;
                case 42:
                    if (!(message.accessories && message.accessories.length))
                        message.accessories = [];
                    message.accessories.push($root.StoreItem_PurchaseOption.decode(reader, reader.uint32()));
                    break;
                case 50:
                    message.screenshots = $root.StoreItem_Screenshots.decode(reader, reader.uint32());
                    break;
                case 51:
                    message.trailers = $root.StoreItem_Trailers.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem} StoreItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem message.
         * @function verify
         * @memberof StoreItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_type != null && message.hasOwnProperty("item_type"))
                if (!$util.isInteger(message.item_type))
                    return "item_type: integer expected";
            if (message.id != null && message.hasOwnProperty("id"))
                if (!$util.isInteger(message.id))
                    return "id: integer expected";
            if (message.success != null && message.hasOwnProperty("success"))
                if (!$util.isInteger(message.success))
                    return "success: integer expected";
            if (message.visible != null && message.hasOwnProperty("visible"))
                if (typeof message.visible !== "boolean")
                    return "visible: boolean expected";
            if (message.unvailable_for_country_restriction != null && message.hasOwnProperty("unvailable_for_country_restriction"))
                if (typeof message.unvailable_for_country_restriction !== "boolean")
                    return "unvailable_for_country_restriction: boolean expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.store_url_path != null && message.hasOwnProperty("store_url_path"))
                if (!$util.isString(message.store_url_path))
                    return "store_url_path: string expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.included_types != null && message.hasOwnProperty("included_types")) {
                if (!Array.isArray(message.included_types))
                    return "included_types: array expected";
                for (var i = 0; i < message.included_types.length; ++i)
                    if (!$util.isInteger(message.included_types[i]))
                        return "included_types: integer[] expected";
            }
            if (message.included_appids != null && message.hasOwnProperty("included_appids")) {
                if (!Array.isArray(message.included_appids))
                    return "included_appids: array expected";
                for (var i = 0; i < message.included_appids.length; ++i)
                    if (!$util.isInteger(message.included_appids[i]))
                        return "included_appids: integer[] expected";
            }
            if (message.is_free != null && message.hasOwnProperty("is_free"))
                if (typeof message.is_free !== "boolean")
                    return "is_free: boolean expected";
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                if (typeof message.is_early_access !== "boolean")
                    return "is_early_access: boolean expected";
            if (message.related_items != null && message.hasOwnProperty("related_items")) {
                var error = $root.StoreItem_RelatedItems.verify(message.related_items);
                if (error)
                    return "related_items." + error;
            }
            if (message.content_descriptorids != null && message.hasOwnProperty("content_descriptorids")) {
                if (!Array.isArray(message.content_descriptorids))
                    return "content_descriptorids: array expected";
                for (var i = 0; i < message.content_descriptorids.length; ++i)
                    if (!$util.isInteger(message.content_descriptorids[i]))
                        return "content_descriptorids: integer[] expected";
            }
            if (message.tagids != null && message.hasOwnProperty("tagids")) {
                if (!Array.isArray(message.tagids))
                    return "tagids: array expected";
                for (var i = 0; i < message.tagids.length; ++i)
                    if (!$util.isInteger(message.tagids[i]))
                        return "tagids: integer[] expected";
            }
            if (message.categories != null && message.hasOwnProperty("categories")) {
                var error = $root.StoreItem_Categories.verify(message.categories);
                if (error)
                    return "categories." + error;
            }
            if (message.reviews != null && message.hasOwnProperty("reviews")) {
                var error = $root.StoreItem_Reviews.verify(message.reviews);
                if (error)
                    return "reviews." + error;
            }
            if (message.basic_info != null && message.hasOwnProperty("basic_info")) {
                var error = $root.StoreItem_BasicInfo.verify(message.basic_info);
                if (error)
                    return "basic_info." + error;
            }
            if (message.tags != null && message.hasOwnProperty("tags")) {
                if (!Array.isArray(message.tags))
                    return "tags: array expected";
                for (var i = 0; i < message.tags.length; ++i) {
                    var error = $root.StoreItem_Tag.verify(message.tags[i]);
                    if (error)
                        return "tags." + error;
                }
            }
            if (message.assets != null && message.hasOwnProperty("assets")) {
                var error = $root.StoreItem_Assets.verify(message.assets);
                if (error)
                    return "assets." + error;
            }
            if (message.release != null && message.hasOwnProperty("release")) {
                var error = $root.StoreItem_ReleaseInfo.verify(message.release);
                if (error)
                    return "release." + error;
            }
            if (message.platforms != null && message.hasOwnProperty("platforms")) {
                var error = $root.StoreItem_Platforms.verify(message.platforms);
                if (error)
                    return "platforms." + error;
            }
            if (message.game_rating != null && message.hasOwnProperty("game_rating")) {
                var error = $root.StoreGameRating.verify(message.game_rating);
                if (error)
                    return "game_rating." + error;
            }
            if (message.best_purchase_option != null && message.hasOwnProperty("best_purchase_option")) {
                var error = $root.StoreItem_PurchaseOption.verify(message.best_purchase_option);
                if (error)
                    return "best_purchase_option." + error;
            }
            if (message.purchase_options != null && message.hasOwnProperty("purchase_options")) {
                if (!Array.isArray(message.purchase_options))
                    return "purchase_options: array expected";
                for (var i = 0; i < message.purchase_options.length; ++i) {
                    var error = $root.StoreItem_PurchaseOption.verify(message.purchase_options[i]);
                    if (error)
                        return "purchase_options." + error;
                }
            }
            if (message.accessories != null && message.hasOwnProperty("accessories")) {
                if (!Array.isArray(message.accessories))
                    return "accessories: array expected";
                for (var i = 0; i < message.accessories.length; ++i) {
                    var error = $root.StoreItem_PurchaseOption.verify(message.accessories[i]);
                    if (error)
                        return "accessories." + error;
                }
            }
            if (message.screenshots != null && message.hasOwnProperty("screenshots")) {
                var error = $root.StoreItem_Screenshots.verify(message.screenshots);
                if (error)
                    return "screenshots." + error;
            }
            if (message.trailers != null && message.hasOwnProperty("trailers")) {
                var error = $root.StoreItem_Trailers.verify(message.trailers);
                if (error)
                    return "trailers." + error;
            }
            return null;
        };
    
        /**
         * Creates a StoreItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem} StoreItem
         */
        StoreItem.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem)
                return object;
            var message = new $root.StoreItem();
            if (object.item_type != null)
                message.item_type = object.item_type | 0;
            if (object.id != null)
                message.id = object.id >>> 0;
            if (object.success != null)
                message.success = object.success >>> 0;
            if (object.visible != null)
                message.visible = Boolean(object.visible);
            if (object.unvailable_for_country_restriction != null)
                message.unvailable_for_country_restriction = Boolean(object.unvailable_for_country_restriction);
            if (object.name != null)
                message.name = String(object.name);
            if (object.store_url_path != null)
                message.store_url_path = String(object.store_url_path);
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.type != null)
                message.type = object.type | 0;
            if (object.included_types) {
                if (!Array.isArray(object.included_types))
                    throw TypeError(".StoreItem.included_types: array expected");
                message.included_types = [];
                for (var i = 0; i < object.included_types.length; ++i)
                    message.included_types[i] = object.included_types[i] | 0;
            }
            if (object.included_appids) {
                if (!Array.isArray(object.included_appids))
                    throw TypeError(".StoreItem.included_appids: array expected");
                message.included_appids = [];
                for (var i = 0; i < object.included_appids.length; ++i)
                    message.included_appids[i] = object.included_appids[i] >>> 0;
            }
            if (object.is_free != null)
                message.is_free = Boolean(object.is_free);
            if (object.is_early_access != null)
                message.is_early_access = Boolean(object.is_early_access);
            if (object.related_items != null) {
                if (typeof object.related_items !== "object")
                    throw TypeError(".StoreItem.related_items: object expected");
                message.related_items = $root.StoreItem_RelatedItems.fromObject(object.related_items);
            }
            if (object.content_descriptorids) {
                if (!Array.isArray(object.content_descriptorids))
                    throw TypeError(".StoreItem.content_descriptorids: array expected");
                message.content_descriptorids = [];
                for (var i = 0; i < object.content_descriptorids.length; ++i)
                    message.content_descriptorids[i] = object.content_descriptorids[i] | 0;
            }
            if (object.tagids) {
                if (!Array.isArray(object.tagids))
                    throw TypeError(".StoreItem.tagids: array expected");
                message.tagids = [];
                for (var i = 0; i < object.tagids.length; ++i)
                    message.tagids[i] = object.tagids[i] >>> 0;
            }
            if (object.categories != null) {
                if (typeof object.categories !== "object")
                    throw TypeError(".StoreItem.categories: object expected");
                message.categories = $root.StoreItem_Categories.fromObject(object.categories);
            }
            if (object.reviews != null) {
                if (typeof object.reviews !== "object")
                    throw TypeError(".StoreItem.reviews: object expected");
                message.reviews = $root.StoreItem_Reviews.fromObject(object.reviews);
            }
            if (object.basic_info != null) {
                if (typeof object.basic_info !== "object")
                    throw TypeError(".StoreItem.basic_info: object expected");
                message.basic_info = $root.StoreItem_BasicInfo.fromObject(object.basic_info);
            }
            if (object.tags) {
                if (!Array.isArray(object.tags))
                    throw TypeError(".StoreItem.tags: array expected");
                message.tags = [];
                for (var i = 0; i < object.tags.length; ++i) {
                    if (typeof object.tags[i] !== "object")
                        throw TypeError(".StoreItem.tags: object expected");
                    message.tags[i] = $root.StoreItem_Tag.fromObject(object.tags[i]);
                }
            }
            if (object.assets != null) {
                if (typeof object.assets !== "object")
                    throw TypeError(".StoreItem.assets: object expected");
                message.assets = $root.StoreItem_Assets.fromObject(object.assets);
            }
            if (object.release != null) {
                if (typeof object.release !== "object")
                    throw TypeError(".StoreItem.release: object expected");
                message.release = $root.StoreItem_ReleaseInfo.fromObject(object.release);
            }
            if (object.platforms != null) {
                if (typeof object.platforms !== "object")
                    throw TypeError(".StoreItem.platforms: object expected");
                message.platforms = $root.StoreItem_Platforms.fromObject(object.platforms);
            }
            if (object.game_rating != null) {
                if (typeof object.game_rating !== "object")
                    throw TypeError(".StoreItem.game_rating: object expected");
                message.game_rating = $root.StoreGameRating.fromObject(object.game_rating);
            }
            if (object.best_purchase_option != null) {
                if (typeof object.best_purchase_option !== "object")
                    throw TypeError(".StoreItem.best_purchase_option: object expected");
                message.best_purchase_option = $root.StoreItem_PurchaseOption.fromObject(object.best_purchase_option);
            }
            if (object.purchase_options) {
                if (!Array.isArray(object.purchase_options))
                    throw TypeError(".StoreItem.purchase_options: array expected");
                message.purchase_options = [];
                for (var i = 0; i < object.purchase_options.length; ++i) {
                    if (typeof object.purchase_options[i] !== "object")
                        throw TypeError(".StoreItem.purchase_options: object expected");
                    message.purchase_options[i] = $root.StoreItem_PurchaseOption.fromObject(object.purchase_options[i]);
                }
            }
            if (object.accessories) {
                if (!Array.isArray(object.accessories))
                    throw TypeError(".StoreItem.accessories: array expected");
                message.accessories = [];
                for (var i = 0; i < object.accessories.length; ++i) {
                    if (typeof object.accessories[i] !== "object")
                        throw TypeError(".StoreItem.accessories: object expected");
                    message.accessories[i] = $root.StoreItem_PurchaseOption.fromObject(object.accessories[i]);
                }
            }
            if (object.screenshots != null) {
                if (typeof object.screenshots !== "object")
                    throw TypeError(".StoreItem.screenshots: object expected");
                message.screenshots = $root.StoreItem_Screenshots.fromObject(object.screenshots);
            }
            if (object.trailers != null) {
                if (typeof object.trailers !== "object")
                    throw TypeError(".StoreItem.trailers: object expected");
                message.trailers = $root.StoreItem_Trailers.fromObject(object.trailers);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem
         * @static
         * @param {StoreItem} message StoreItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.included_types = [];
                object.included_appids = [];
                object.content_descriptorids = [];
                object.tagids = [];
                object.tags = [];
                object.purchase_options = [];
                object.accessories = [];
            }
            if (options.defaults) {
                object.item_type = 0;
                object.id = 0;
                object.success = 0;
                object.visible = false;
                object.unvailable_for_country_restriction = false;
                object.name = "";
                object.store_url_path = "";
                object.appid = 0;
                object.type = 0;
                object.is_free = false;
                object.is_early_access = false;
                object.related_items = null;
                object.categories = null;
                object.reviews = null;
                object.basic_info = null;
                object.assets = null;
                object.release = null;
                object.platforms = null;
                object.game_rating = null;
                object.best_purchase_option = null;
                object.screenshots = null;
                object.trailers = null;
            }
            if (message.item_type != null && message.hasOwnProperty("item_type"))
                object.item_type = message.item_type;
            if (message.id != null && message.hasOwnProperty("id"))
                object.id = message.id;
            if (message.success != null && message.hasOwnProperty("success"))
                object.success = message.success;
            if (message.visible != null && message.hasOwnProperty("visible"))
                object.visible = message.visible;
            if (message.unvailable_for_country_restriction != null && message.hasOwnProperty("unvailable_for_country_restriction"))
                object.unvailable_for_country_restriction = message.unvailable_for_country_restriction;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.store_url_path != null && message.hasOwnProperty("store_url_path"))
                object.store_url_path = message.store_url_path;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.included_types && message.included_types.length) {
                object.included_types = [];
                for (var j = 0; j < message.included_types.length; ++j)
                    object.included_types[j] = message.included_types[j];
            }
            if (message.included_appids && message.included_appids.length) {
                object.included_appids = [];
                for (var j = 0; j < message.included_appids.length; ++j)
                    object.included_appids[j] = message.included_appids[j];
            }
            if (message.is_free != null && message.hasOwnProperty("is_free"))
                object.is_free = message.is_free;
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                object.is_early_access = message.is_early_access;
            if (message.related_items != null && message.hasOwnProperty("related_items"))
                object.related_items = $root.StoreItem_RelatedItems.toObject(message.related_items, options);
            if (message.content_descriptorids && message.content_descriptorids.length) {
                object.content_descriptorids = [];
                for (var j = 0; j < message.content_descriptorids.length; ++j)
                    object.content_descriptorids[j] = message.content_descriptorids[j];
            }
            if (message.tagids && message.tagids.length) {
                object.tagids = [];
                for (var j = 0; j < message.tagids.length; ++j)
                    object.tagids[j] = message.tagids[j];
            }
            if (message.categories != null && message.hasOwnProperty("categories"))
                object.categories = $root.StoreItem_Categories.toObject(message.categories, options);
            if (message.reviews != null && message.hasOwnProperty("reviews"))
                object.reviews = $root.StoreItem_Reviews.toObject(message.reviews, options);
            if (message.basic_info != null && message.hasOwnProperty("basic_info"))
                object.basic_info = $root.StoreItem_BasicInfo.toObject(message.basic_info, options);
            if (message.tags && message.tags.length) {
                object.tags = [];
                for (var j = 0; j < message.tags.length; ++j)
                    object.tags[j] = $root.StoreItem_Tag.toObject(message.tags[j], options);
            }
            if (message.assets != null && message.hasOwnProperty("assets"))
                object.assets = $root.StoreItem_Assets.toObject(message.assets, options);
            if (message.release != null && message.hasOwnProperty("release"))
                object.release = $root.StoreItem_ReleaseInfo.toObject(message.release, options);
            if (message.platforms != null && message.hasOwnProperty("platforms"))
                object.platforms = $root.StoreItem_Platforms.toObject(message.platforms, options);
            if (message.game_rating != null && message.hasOwnProperty("game_rating"))
                object.game_rating = $root.StoreGameRating.toObject(message.game_rating, options);
            if (message.best_purchase_option != null && message.hasOwnProperty("best_purchase_option"))
                object.best_purchase_option = $root.StoreItem_PurchaseOption.toObject(message.best_purchase_option, options);
            if (message.purchase_options && message.purchase_options.length) {
                object.purchase_options = [];
                for (var j = 0; j < message.purchase_options.length; ++j)
                    object.purchase_options[j] = $root.StoreItem_PurchaseOption.toObject(message.purchase_options[j], options);
            }
            if (message.accessories && message.accessories.length) {
                object.accessories = [];
                for (var j = 0; j < message.accessories.length; ++j)
                    object.accessories[j] = $root.StoreItem_PurchaseOption.toObject(message.accessories[j], options);
            }
            if (message.screenshots != null && message.hasOwnProperty("screenshots"))
                object.screenshots = $root.StoreItem_Screenshots.toObject(message.screenshots, options);
            if (message.trailers != null && message.hasOwnProperty("trailers"))
                object.trailers = $root.StoreItem_Trailers.toObject(message.trailers, options);
            return object;
        };
    
        /**
         * Converts this StoreItem to JSON.
         * @function toJSON
         * @memberof StoreItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem;
    })();
    
    $root.StoreItem_Assets = (function() {
    
        /**
         * Properties of a StoreItem_Assets.
         * @exports IStoreItem_Assets
         * @interface IStoreItem_Assets
         * @property {string|null} [asset_url_format] StoreItem_Assets asset_url_format
         * @property {string|null} [main_capsule] StoreItem_Assets main_capsule
         * @property {string|null} [small_capsule] StoreItem_Assets small_capsule
         * @property {string|null} [header] StoreItem_Assets header
         * @property {string|null} [package_header] StoreItem_Assets package_header
         * @property {string|null} [page_background] StoreItem_Assets page_background
         * @property {string|null} [hero_capsule] StoreItem_Assets hero_capsule
         * @property {string|null} [hero_capsule_2x] StoreItem_Assets hero_capsule_2x
         * @property {string|null} [library_capsule] StoreItem_Assets library_capsule
         * @property {string|null} [library_capsule_2x] StoreItem_Assets library_capsule_2x
         * @property {string|null} [library_hero] StoreItem_Assets library_hero
         * @property {string|null} [library_hero_2x] StoreItem_Assets library_hero_2x
         */
    
        /**
         * Constructs a new StoreItem_Assets.
         * @exports StoreItem_Assets
         * @classdesc Represents a StoreItem_Assets.
         * @implements IStoreItem_Assets
         * @constructor
         * @param {IStoreItem_Assets=} [properties] Properties to set
         */
        function StoreItem_Assets(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Assets asset_url_format.
         * @member {string} asset_url_format
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.asset_url_format = "";
    
        /**
         * StoreItem_Assets main_capsule.
         * @member {string} main_capsule
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.main_capsule = "";
    
        /**
         * StoreItem_Assets small_capsule.
         * @member {string} small_capsule
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.small_capsule = "";
    
        /**
         * StoreItem_Assets header.
         * @member {string} header
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.header = "";
    
        /**
         * StoreItem_Assets package_header.
         * @member {string} package_header
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.package_header = "";
    
        /**
         * StoreItem_Assets page_background.
         * @member {string} page_background
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.page_background = "";
    
        /**
         * StoreItem_Assets hero_capsule.
         * @member {string} hero_capsule
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.hero_capsule = "";
    
        /**
         * StoreItem_Assets hero_capsule_2x.
         * @member {string} hero_capsule_2x
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.hero_capsule_2x = "";
    
        /**
         * StoreItem_Assets library_capsule.
         * @member {string} library_capsule
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.library_capsule = "";
    
        /**
         * StoreItem_Assets library_capsule_2x.
         * @member {string} library_capsule_2x
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.library_capsule_2x = "";
    
        /**
         * StoreItem_Assets library_hero.
         * @member {string} library_hero
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.library_hero = "";
    
        /**
         * StoreItem_Assets library_hero_2x.
         * @member {string} library_hero_2x
         * @memberof StoreItem_Assets
         * @instance
         */
        StoreItem_Assets.prototype.library_hero_2x = "";
    
        /**
         * Creates a new StoreItem_Assets instance using the specified properties.
         * @function create
         * @memberof StoreItem_Assets
         * @static
         * @param {IStoreItem_Assets=} [properties] Properties to set
         * @returns {StoreItem_Assets} StoreItem_Assets instance
         */
        StoreItem_Assets.create = function create(properties) {
            return new StoreItem_Assets(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Assets message. Does not implicitly {@link StoreItem_Assets.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Assets
         * @static
         * @param {IStoreItem_Assets} message StoreItem_Assets message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Assets.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.asset_url_format != null && message.hasOwnProperty("asset_url_format"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.asset_url_format);
            if (message.main_capsule != null && message.hasOwnProperty("main_capsule"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.main_capsule);
            if (message.small_capsule != null && message.hasOwnProperty("small_capsule"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.small_capsule);
            if (message.header != null && message.hasOwnProperty("header"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.header);
            if (message.package_header != null && message.hasOwnProperty("package_header"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.package_header);
            if (message.page_background != null && message.hasOwnProperty("page_background"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.page_background);
            if (message.hero_capsule != null && message.hasOwnProperty("hero_capsule"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.hero_capsule);
            if (message.hero_capsule_2x != null && message.hasOwnProperty("hero_capsule_2x"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.hero_capsule_2x);
            if (message.library_capsule != null && message.hasOwnProperty("library_capsule"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.library_capsule);
            if (message.library_capsule_2x != null && message.hasOwnProperty("library_capsule_2x"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.library_capsule_2x);
            if (message.library_hero != null && message.hasOwnProperty("library_hero"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.library_hero);
            if (message.library_hero_2x != null && message.hasOwnProperty("library_hero_2x"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.library_hero_2x);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Assets message, length delimited. Does not implicitly {@link StoreItem_Assets.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Assets
         * @static
         * @param {IStoreItem_Assets} message StoreItem_Assets message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Assets.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Assets message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Assets
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Assets} StoreItem_Assets
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Assets.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Assets();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.asset_url_format = reader.string();
                    break;
                case 2:
                    message.main_capsule = reader.string();
                    break;
                case 3:
                    message.small_capsule = reader.string();
                    break;
                case 4:
                    message.header = reader.string();
                    break;
                case 5:
                    message.package_header = reader.string();
                    break;
                case 6:
                    message.page_background = reader.string();
                    break;
                case 7:
                    message.hero_capsule = reader.string();
                    break;
                case 8:
                    message.hero_capsule_2x = reader.string();
                    break;
                case 9:
                    message.library_capsule = reader.string();
                    break;
                case 10:
                    message.library_capsule_2x = reader.string();
                    break;
                case 11:
                    message.library_hero = reader.string();
                    break;
                case 12:
                    message.library_hero_2x = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Assets message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Assets
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Assets} StoreItem_Assets
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Assets.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Assets message.
         * @function verify
         * @memberof StoreItem_Assets
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Assets.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.asset_url_format != null && message.hasOwnProperty("asset_url_format"))
                if (!$util.isString(message.asset_url_format))
                    return "asset_url_format: string expected";
            if (message.main_capsule != null && message.hasOwnProperty("main_capsule"))
                if (!$util.isString(message.main_capsule))
                    return "main_capsule: string expected";
            if (message.small_capsule != null && message.hasOwnProperty("small_capsule"))
                if (!$util.isString(message.small_capsule))
                    return "small_capsule: string expected";
            if (message.header != null && message.hasOwnProperty("header"))
                if (!$util.isString(message.header))
                    return "header: string expected";
            if (message.package_header != null && message.hasOwnProperty("package_header"))
                if (!$util.isString(message.package_header))
                    return "package_header: string expected";
            if (message.page_background != null && message.hasOwnProperty("page_background"))
                if (!$util.isString(message.page_background))
                    return "page_background: string expected";
            if (message.hero_capsule != null && message.hasOwnProperty("hero_capsule"))
                if (!$util.isString(message.hero_capsule))
                    return "hero_capsule: string expected";
            if (message.hero_capsule_2x != null && message.hasOwnProperty("hero_capsule_2x"))
                if (!$util.isString(message.hero_capsule_2x))
                    return "hero_capsule_2x: string expected";
            if (message.library_capsule != null && message.hasOwnProperty("library_capsule"))
                if (!$util.isString(message.library_capsule))
                    return "library_capsule: string expected";
            if (message.library_capsule_2x != null && message.hasOwnProperty("library_capsule_2x"))
                if (!$util.isString(message.library_capsule_2x))
                    return "library_capsule_2x: string expected";
            if (message.library_hero != null && message.hasOwnProperty("library_hero"))
                if (!$util.isString(message.library_hero))
                    return "library_hero: string expected";
            if (message.library_hero_2x != null && message.hasOwnProperty("library_hero_2x"))
                if (!$util.isString(message.library_hero_2x))
                    return "library_hero_2x: string expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Assets message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Assets
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Assets} StoreItem_Assets
         */
        StoreItem_Assets.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Assets)
                return object;
            var message = new $root.StoreItem_Assets();
            if (object.asset_url_format != null)
                message.asset_url_format = String(object.asset_url_format);
            if (object.main_capsule != null)
                message.main_capsule = String(object.main_capsule);
            if (object.small_capsule != null)
                message.small_capsule = String(object.small_capsule);
            if (object.header != null)
                message.header = String(object.header);
            if (object.package_header != null)
                message.package_header = String(object.package_header);
            if (object.page_background != null)
                message.page_background = String(object.page_background);
            if (object.hero_capsule != null)
                message.hero_capsule = String(object.hero_capsule);
            if (object.hero_capsule_2x != null)
                message.hero_capsule_2x = String(object.hero_capsule_2x);
            if (object.library_capsule != null)
                message.library_capsule = String(object.library_capsule);
            if (object.library_capsule_2x != null)
                message.library_capsule_2x = String(object.library_capsule_2x);
            if (object.library_hero != null)
                message.library_hero = String(object.library_hero);
            if (object.library_hero_2x != null)
                message.library_hero_2x = String(object.library_hero_2x);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Assets message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Assets
         * @static
         * @param {StoreItem_Assets} message StoreItem_Assets
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Assets.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.asset_url_format = "";
                object.main_capsule = "";
                object.small_capsule = "";
                object.header = "";
                object.package_header = "";
                object.page_background = "";
                object.hero_capsule = "";
                object.hero_capsule_2x = "";
                object.library_capsule = "";
                object.library_capsule_2x = "";
                object.library_hero = "";
                object.library_hero_2x = "";
            }
            if (message.asset_url_format != null && message.hasOwnProperty("asset_url_format"))
                object.asset_url_format = message.asset_url_format;
            if (message.main_capsule != null && message.hasOwnProperty("main_capsule"))
                object.main_capsule = message.main_capsule;
            if (message.small_capsule != null && message.hasOwnProperty("small_capsule"))
                object.small_capsule = message.small_capsule;
            if (message.header != null && message.hasOwnProperty("header"))
                object.header = message.header;
            if (message.package_header != null && message.hasOwnProperty("package_header"))
                object.package_header = message.package_header;
            if (message.page_background != null && message.hasOwnProperty("page_background"))
                object.page_background = message.page_background;
            if (message.hero_capsule != null && message.hasOwnProperty("hero_capsule"))
                object.hero_capsule = message.hero_capsule;
            if (message.hero_capsule_2x != null && message.hasOwnProperty("hero_capsule_2x"))
                object.hero_capsule_2x = message.hero_capsule_2x;
            if (message.library_capsule != null && message.hasOwnProperty("library_capsule"))
                object.library_capsule = message.library_capsule;
            if (message.library_capsule_2x != null && message.hasOwnProperty("library_capsule_2x"))
                object.library_capsule_2x = message.library_capsule_2x;
            if (message.library_hero != null && message.hasOwnProperty("library_hero"))
                object.library_hero = message.library_hero;
            if (message.library_hero_2x != null && message.hasOwnProperty("library_hero_2x"))
                object.library_hero_2x = message.library_hero_2x;
            return object;
        };
    
        /**
         * Converts this StoreItem_Assets to JSON.
         * @function toJSON
         * @memberof StoreItem_Assets
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Assets.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Assets;
    })();
    
    $root.StoreItem_BasicInfo = (function() {
    
        /**
         * Properties of a StoreItem_BasicInfo.
         * @exports IStoreItem_BasicInfo
         * @interface IStoreItem_BasicInfo
         * @property {string|null} [short_description] StoreItem_BasicInfo short_description
         * @property {Array.<string>|null} [publishers] StoreItem_BasicInfo publishers
         * @property {Array.<string>|null} [developers] StoreItem_BasicInfo developers
         * @property {Array.<string>|null} [franchises] StoreItem_BasicInfo franchises
         */
    
        /**
         * Constructs a new StoreItem_BasicInfo.
         * @exports StoreItem_BasicInfo
         * @classdesc Represents a StoreItem_BasicInfo.
         * @implements IStoreItem_BasicInfo
         * @constructor
         * @param {IStoreItem_BasicInfo=} [properties] Properties to set
         */
        function StoreItem_BasicInfo(properties) {
            this.publishers = [];
            this.developers = [];
            this.franchises = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_BasicInfo short_description.
         * @member {string} short_description
         * @memberof StoreItem_BasicInfo
         * @instance
         */
        StoreItem_BasicInfo.prototype.short_description = "";
    
        /**
         * StoreItem_BasicInfo publishers.
         * @member {Array.<string>} publishers
         * @memberof StoreItem_BasicInfo
         * @instance
         */
        StoreItem_BasicInfo.prototype.publishers = $util.emptyArray;
    
        /**
         * StoreItem_BasicInfo developers.
         * @member {Array.<string>} developers
         * @memberof StoreItem_BasicInfo
         * @instance
         */
        StoreItem_BasicInfo.prototype.developers = $util.emptyArray;
    
        /**
         * StoreItem_BasicInfo franchises.
         * @member {Array.<string>} franchises
         * @memberof StoreItem_BasicInfo
         * @instance
         */
        StoreItem_BasicInfo.prototype.franchises = $util.emptyArray;
    
        /**
         * Creates a new StoreItem_BasicInfo instance using the specified properties.
         * @function create
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {IStoreItem_BasicInfo=} [properties] Properties to set
         * @returns {StoreItem_BasicInfo} StoreItem_BasicInfo instance
         */
        StoreItem_BasicInfo.create = function create(properties) {
            return new StoreItem_BasicInfo(properties);
        };
    
        /**
         * Encodes the specified StoreItem_BasicInfo message. Does not implicitly {@link StoreItem_BasicInfo.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {IStoreItem_BasicInfo} message StoreItem_BasicInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_BasicInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.short_description != null && message.hasOwnProperty("short_description"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.short_description);
            if (message.publishers != null && message.publishers.length)
                for (var i = 0; i < message.publishers.length; ++i)
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.publishers[i]);
            if (message.developers != null && message.developers.length)
                for (var i = 0; i < message.developers.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.developers[i]);
            if (message.franchises != null && message.franchises.length)
                for (var i = 0; i < message.franchises.length; ++i)
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.franchises[i]);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_BasicInfo message, length delimited. Does not implicitly {@link StoreItem_BasicInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {IStoreItem_BasicInfo} message StoreItem_BasicInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_BasicInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_BasicInfo message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_BasicInfo} StoreItem_BasicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_BasicInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_BasicInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.short_description = reader.string();
                    break;
                case 2:
                    if (!(message.publishers && message.publishers.length))
                        message.publishers = [];
                    message.publishers.push(reader.string());
                    break;
                case 3:
                    if (!(message.developers && message.developers.length))
                        message.developers = [];
                    message.developers.push(reader.string());
                    break;
                case 4:
                    if (!(message.franchises && message.franchises.length))
                        message.franchises = [];
                    message.franchises.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_BasicInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_BasicInfo} StoreItem_BasicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_BasicInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_BasicInfo message.
         * @function verify
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_BasicInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.short_description != null && message.hasOwnProperty("short_description"))
                if (!$util.isString(message.short_description))
                    return "short_description: string expected";
            if (message.publishers != null && message.hasOwnProperty("publishers")) {
                if (!Array.isArray(message.publishers))
                    return "publishers: array expected";
                for (var i = 0; i < message.publishers.length; ++i)
                    if (!$util.isString(message.publishers[i]))
                        return "publishers: string[] expected";
            }
            if (message.developers != null && message.hasOwnProperty("developers")) {
                if (!Array.isArray(message.developers))
                    return "developers: array expected";
                for (var i = 0; i < message.developers.length; ++i)
                    if (!$util.isString(message.developers[i]))
                        return "developers: string[] expected";
            }
            if (message.franchises != null && message.hasOwnProperty("franchises")) {
                if (!Array.isArray(message.franchises))
                    return "franchises: array expected";
                for (var i = 0; i < message.franchises.length; ++i)
                    if (!$util.isString(message.franchises[i]))
                        return "franchises: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_BasicInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_BasicInfo} StoreItem_BasicInfo
         */
        StoreItem_BasicInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_BasicInfo)
                return object;
            var message = new $root.StoreItem_BasicInfo();
            if (object.short_description != null)
                message.short_description = String(object.short_description);
            if (object.publishers) {
                if (!Array.isArray(object.publishers))
                    throw TypeError(".StoreItem_BasicInfo.publishers: array expected");
                message.publishers = [];
                for (var i = 0; i < object.publishers.length; ++i)
                    message.publishers[i] = String(object.publishers[i]);
            }
            if (object.developers) {
                if (!Array.isArray(object.developers))
                    throw TypeError(".StoreItem_BasicInfo.developers: array expected");
                message.developers = [];
                for (var i = 0; i < object.developers.length; ++i)
                    message.developers[i] = String(object.developers[i]);
            }
            if (object.franchises) {
                if (!Array.isArray(object.franchises))
                    throw TypeError(".StoreItem_BasicInfo.franchises: array expected");
                message.franchises = [];
                for (var i = 0; i < object.franchises.length; ++i)
                    message.franchises[i] = String(object.franchises[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_BasicInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_BasicInfo
         * @static
         * @param {StoreItem_BasicInfo} message StoreItem_BasicInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_BasicInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.publishers = [];
                object.developers = [];
                object.franchises = [];
            }
            if (options.defaults)
                object.short_description = "";
            if (message.short_description != null && message.hasOwnProperty("short_description"))
                object.short_description = message.short_description;
            if (message.publishers && message.publishers.length) {
                object.publishers = [];
                for (var j = 0; j < message.publishers.length; ++j)
                    object.publishers[j] = message.publishers[j];
            }
            if (message.developers && message.developers.length) {
                object.developers = [];
                for (var j = 0; j < message.developers.length; ++j)
                    object.developers[j] = message.developers[j];
            }
            if (message.franchises && message.franchises.length) {
                object.franchises = [];
                for (var j = 0; j < message.franchises.length; ++j)
                    object.franchises[j] = message.franchises[j];
            }
            return object;
        };
    
        /**
         * Converts this StoreItem_BasicInfo to JSON.
         * @function toJSON
         * @memberof StoreItem_BasicInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_BasicInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_BasicInfo;
    })();
    
    $root.StoreItem_Categories = (function() {
    
        /**
         * Properties of a StoreItem_Categories.
         * @exports IStoreItem_Categories
         * @interface IStoreItem_Categories
         * @property {Array.<number>|null} [supported_player_categoryids] StoreItem_Categories supported_player_categoryids
         * @property {Array.<number>|null} [feature_categoryids] StoreItem_Categories feature_categoryids
         * @property {Array.<number>|null} [controller_categoryids] StoreItem_Categories controller_categoryids
         */
    
        /**
         * Constructs a new StoreItem_Categories.
         * @exports StoreItem_Categories
         * @classdesc Represents a StoreItem_Categories.
         * @implements IStoreItem_Categories
         * @constructor
         * @param {IStoreItem_Categories=} [properties] Properties to set
         */
        function StoreItem_Categories(properties) {
            this.supported_player_categoryids = [];
            this.feature_categoryids = [];
            this.controller_categoryids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Categories supported_player_categoryids.
         * @member {Array.<number>} supported_player_categoryids
         * @memberof StoreItem_Categories
         * @instance
         */
        StoreItem_Categories.prototype.supported_player_categoryids = $util.emptyArray;
    
        /**
         * StoreItem_Categories feature_categoryids.
         * @member {Array.<number>} feature_categoryids
         * @memberof StoreItem_Categories
         * @instance
         */
        StoreItem_Categories.prototype.feature_categoryids = $util.emptyArray;
    
        /**
         * StoreItem_Categories controller_categoryids.
         * @member {Array.<number>} controller_categoryids
         * @memberof StoreItem_Categories
         * @instance
         */
        StoreItem_Categories.prototype.controller_categoryids = $util.emptyArray;
    
        /**
         * Creates a new StoreItem_Categories instance using the specified properties.
         * @function create
         * @memberof StoreItem_Categories
         * @static
         * @param {IStoreItem_Categories=} [properties] Properties to set
         * @returns {StoreItem_Categories} StoreItem_Categories instance
         */
        StoreItem_Categories.create = function create(properties) {
            return new StoreItem_Categories(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Categories message. Does not implicitly {@link StoreItem_Categories.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Categories
         * @static
         * @param {IStoreItem_Categories} message StoreItem_Categories message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Categories.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.supported_player_categoryids != null && message.supported_player_categoryids.length)
                for (var i = 0; i < message.supported_player_categoryids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.supported_player_categoryids[i]);
            if (message.feature_categoryids != null && message.feature_categoryids.length)
                for (var i = 0; i < message.feature_categoryids.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.feature_categoryids[i]);
            if (message.controller_categoryids != null && message.controller_categoryids.length)
                for (var i = 0; i < message.controller_categoryids.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.controller_categoryids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Categories message, length delimited. Does not implicitly {@link StoreItem_Categories.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Categories
         * @static
         * @param {IStoreItem_Categories} message StoreItem_Categories message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Categories.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Categories message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Categories
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Categories} StoreItem_Categories
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Categories.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Categories();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    if (!(message.supported_player_categoryids && message.supported_player_categoryids.length))
                        message.supported_player_categoryids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.supported_player_categoryids.push(reader.uint32());
                    } else
                        message.supported_player_categoryids.push(reader.uint32());
                    break;
                case 3:
                    if (!(message.feature_categoryids && message.feature_categoryids.length))
                        message.feature_categoryids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.feature_categoryids.push(reader.uint32());
                    } else
                        message.feature_categoryids.push(reader.uint32());
                    break;
                case 4:
                    if (!(message.controller_categoryids && message.controller_categoryids.length))
                        message.controller_categoryids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.controller_categoryids.push(reader.uint32());
                    } else
                        message.controller_categoryids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Categories message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Categories
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Categories} StoreItem_Categories
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Categories.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Categories message.
         * @function verify
         * @memberof StoreItem_Categories
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Categories.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.supported_player_categoryids != null && message.hasOwnProperty("supported_player_categoryids")) {
                if (!Array.isArray(message.supported_player_categoryids))
                    return "supported_player_categoryids: array expected";
                for (var i = 0; i < message.supported_player_categoryids.length; ++i)
                    if (!$util.isInteger(message.supported_player_categoryids[i]))
                        return "supported_player_categoryids: integer[] expected";
            }
            if (message.feature_categoryids != null && message.hasOwnProperty("feature_categoryids")) {
                if (!Array.isArray(message.feature_categoryids))
                    return "feature_categoryids: array expected";
                for (var i = 0; i < message.feature_categoryids.length; ++i)
                    if (!$util.isInteger(message.feature_categoryids[i]))
                        return "feature_categoryids: integer[] expected";
            }
            if (message.controller_categoryids != null && message.hasOwnProperty("controller_categoryids")) {
                if (!Array.isArray(message.controller_categoryids))
                    return "controller_categoryids: array expected";
                for (var i = 0; i < message.controller_categoryids.length; ++i)
                    if (!$util.isInteger(message.controller_categoryids[i]))
                        return "controller_categoryids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_Categories message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Categories
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Categories} StoreItem_Categories
         */
        StoreItem_Categories.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Categories)
                return object;
            var message = new $root.StoreItem_Categories();
            if (object.supported_player_categoryids) {
                if (!Array.isArray(object.supported_player_categoryids))
                    throw TypeError(".StoreItem_Categories.supported_player_categoryids: array expected");
                message.supported_player_categoryids = [];
                for (var i = 0; i < object.supported_player_categoryids.length; ++i)
                    message.supported_player_categoryids[i] = object.supported_player_categoryids[i] >>> 0;
            }
            if (object.feature_categoryids) {
                if (!Array.isArray(object.feature_categoryids))
                    throw TypeError(".StoreItem_Categories.feature_categoryids: array expected");
                message.feature_categoryids = [];
                for (var i = 0; i < object.feature_categoryids.length; ++i)
                    message.feature_categoryids[i] = object.feature_categoryids[i] >>> 0;
            }
            if (object.controller_categoryids) {
                if (!Array.isArray(object.controller_categoryids))
                    throw TypeError(".StoreItem_Categories.controller_categoryids: array expected");
                message.controller_categoryids = [];
                for (var i = 0; i < object.controller_categoryids.length; ++i)
                    message.controller_categoryids[i] = object.controller_categoryids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Categories message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Categories
         * @static
         * @param {StoreItem_Categories} message StoreItem_Categories
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Categories.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.supported_player_categoryids = [];
                object.feature_categoryids = [];
                object.controller_categoryids = [];
            }
            if (message.supported_player_categoryids && message.supported_player_categoryids.length) {
                object.supported_player_categoryids = [];
                for (var j = 0; j < message.supported_player_categoryids.length; ++j)
                    object.supported_player_categoryids[j] = message.supported_player_categoryids[j];
            }
            if (message.feature_categoryids && message.feature_categoryids.length) {
                object.feature_categoryids = [];
                for (var j = 0; j < message.feature_categoryids.length; ++j)
                    object.feature_categoryids[j] = message.feature_categoryids[j];
            }
            if (message.controller_categoryids && message.controller_categoryids.length) {
                object.controller_categoryids = [];
                for (var j = 0; j < message.controller_categoryids.length; ++j)
                    object.controller_categoryids[j] = message.controller_categoryids[j];
            }
            return object;
        };
    
        /**
         * Converts this StoreItem_Categories to JSON.
         * @function toJSON
         * @memberof StoreItem_Categories
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Categories.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Categories;
    })();
    
    $root.StoreItem_Platforms = (function() {
    
        /**
         * Properties of a StoreItem_Platforms.
         * @exports IStoreItem_Platforms
         * @interface IStoreItem_Platforms
         * @property {boolean|null} [windows] StoreItem_Platforms windows
         * @property {boolean|null} [mac] StoreItem_Platforms mac
         * @property {boolean|null} [linux] StoreItem_Platforms linux
         * @property {IStoreItem_Platforms_VRSupport|null} [vr_support] StoreItem_Platforms vr_support
         */
    
        /**
         * Constructs a new StoreItem_Platforms.
         * @exports StoreItem_Platforms
         * @classdesc Represents a StoreItem_Platforms.
         * @implements IStoreItem_Platforms
         * @constructor
         * @param {IStoreItem_Platforms=} [properties] Properties to set
         */
        function StoreItem_Platforms(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Platforms windows.
         * @member {boolean} windows
         * @memberof StoreItem_Platforms
         * @instance
         */
        StoreItem_Platforms.prototype.windows = false;
    
        /**
         * StoreItem_Platforms mac.
         * @member {boolean} mac
         * @memberof StoreItem_Platforms
         * @instance
         */
        StoreItem_Platforms.prototype.mac = false;
    
        /**
         * StoreItem_Platforms linux.
         * @member {boolean} linux
         * @memberof StoreItem_Platforms
         * @instance
         */
        StoreItem_Platforms.prototype.linux = false;
    
        /**
         * StoreItem_Platforms vr_support.
         * @member {IStoreItem_Platforms_VRSupport|null|undefined} vr_support
         * @memberof StoreItem_Platforms
         * @instance
         */
        StoreItem_Platforms.prototype.vr_support = null;
    
        /**
         * Creates a new StoreItem_Platforms instance using the specified properties.
         * @function create
         * @memberof StoreItem_Platforms
         * @static
         * @param {IStoreItem_Platforms=} [properties] Properties to set
         * @returns {StoreItem_Platforms} StoreItem_Platforms instance
         */
        StoreItem_Platforms.create = function create(properties) {
            return new StoreItem_Platforms(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Platforms message. Does not implicitly {@link StoreItem_Platforms.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Platforms
         * @static
         * @param {IStoreItem_Platforms} message StoreItem_Platforms message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Platforms.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.windows != null && message.hasOwnProperty("windows"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.windows);
            if (message.mac != null && message.hasOwnProperty("mac"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.mac);
            if (message.linux != null && message.hasOwnProperty("linux"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.linux);
            if (message.vr_support != null && message.hasOwnProperty("vr_support"))
                $root.StoreItem_Platforms_VRSupport.encode(message.vr_support, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Platforms message, length delimited. Does not implicitly {@link StoreItem_Platforms.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Platforms
         * @static
         * @param {IStoreItem_Platforms} message StoreItem_Platforms message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Platforms.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Platforms message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Platforms
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Platforms} StoreItem_Platforms
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Platforms.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Platforms();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.windows = reader.bool();
                    break;
                case 2:
                    message.mac = reader.bool();
                    break;
                case 3:
                    message.linux = reader.bool();
                    break;
                case 10:
                    message.vr_support = $root.StoreItem_Platforms_VRSupport.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Platforms message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Platforms
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Platforms} StoreItem_Platforms
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Platforms.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Platforms message.
         * @function verify
         * @memberof StoreItem_Platforms
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Platforms.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.windows != null && message.hasOwnProperty("windows"))
                if (typeof message.windows !== "boolean")
                    return "windows: boolean expected";
            if (message.mac != null && message.hasOwnProperty("mac"))
                if (typeof message.mac !== "boolean")
                    return "mac: boolean expected";
            if (message.linux != null && message.hasOwnProperty("linux"))
                if (typeof message.linux !== "boolean")
                    return "linux: boolean expected";
            if (message.vr_support != null && message.hasOwnProperty("vr_support")) {
                var error = $root.StoreItem_Platforms_VRSupport.verify(message.vr_support);
                if (error)
                    return "vr_support." + error;
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_Platforms message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Platforms
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Platforms} StoreItem_Platforms
         */
        StoreItem_Platforms.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Platforms)
                return object;
            var message = new $root.StoreItem_Platforms();
            if (object.windows != null)
                message.windows = Boolean(object.windows);
            if (object.mac != null)
                message.mac = Boolean(object.mac);
            if (object.linux != null)
                message.linux = Boolean(object.linux);
            if (object.vr_support != null) {
                if (typeof object.vr_support !== "object")
                    throw TypeError(".StoreItem_Platforms.vr_support: object expected");
                message.vr_support = $root.StoreItem_Platforms_VRSupport.fromObject(object.vr_support);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Platforms message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Platforms
         * @static
         * @param {StoreItem_Platforms} message StoreItem_Platforms
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Platforms.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.windows = false;
                object.mac = false;
                object.linux = false;
                object.vr_support = null;
            }
            if (message.windows != null && message.hasOwnProperty("windows"))
                object.windows = message.windows;
            if (message.mac != null && message.hasOwnProperty("mac"))
                object.mac = message.mac;
            if (message.linux != null && message.hasOwnProperty("linux"))
                object.linux = message.linux;
            if (message.vr_support != null && message.hasOwnProperty("vr_support"))
                object.vr_support = $root.StoreItem_Platforms_VRSupport.toObject(message.vr_support, options);
            return object;
        };
    
        /**
         * Converts this StoreItem_Platforms to JSON.
         * @function toJSON
         * @memberof StoreItem_Platforms
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Platforms.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Platforms;
    })();
    
    $root.StoreItem_Platforms_VRSupport = (function() {
    
        /**
         * Properties of a StoreItem_Platforms_VRSupport.
         * @exports IStoreItem_Platforms_VRSupport
         * @interface IStoreItem_Platforms_VRSupport
         * @property {boolean|null} [vrhmd] StoreItem_Platforms_VRSupport vrhmd
         * @property {boolean|null} [vrhmd_only] StoreItem_Platforms_VRSupport vrhmd_only
         * @property {boolean|null} [htc_vive] StoreItem_Platforms_VRSupport htc_vive
         * @property {boolean|null} [oculus_rift] StoreItem_Platforms_VRSupport oculus_rift
         * @property {boolean|null} [windows_mr] StoreItem_Platforms_VRSupport windows_mr
         * @property {boolean|null} [valve_index] StoreItem_Platforms_VRSupport valve_index
         */
    
        /**
         * Constructs a new StoreItem_Platforms_VRSupport.
         * @exports StoreItem_Platforms_VRSupport
         * @classdesc Represents a StoreItem_Platforms_VRSupport.
         * @implements IStoreItem_Platforms_VRSupport
         * @constructor
         * @param {IStoreItem_Platforms_VRSupport=} [properties] Properties to set
         */
        function StoreItem_Platforms_VRSupport(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Platforms_VRSupport vrhmd.
         * @member {boolean} vrhmd
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.vrhmd = false;
    
        /**
         * StoreItem_Platforms_VRSupport vrhmd_only.
         * @member {boolean} vrhmd_only
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.vrhmd_only = false;
    
        /**
         * StoreItem_Platforms_VRSupport htc_vive.
         * @member {boolean} htc_vive
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.htc_vive = false;
    
        /**
         * StoreItem_Platforms_VRSupport oculus_rift.
         * @member {boolean} oculus_rift
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.oculus_rift = false;
    
        /**
         * StoreItem_Platforms_VRSupport windows_mr.
         * @member {boolean} windows_mr
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.windows_mr = false;
    
        /**
         * StoreItem_Platforms_VRSupport valve_index.
         * @member {boolean} valve_index
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         */
        StoreItem_Platforms_VRSupport.prototype.valve_index = false;
    
        /**
         * Creates a new StoreItem_Platforms_VRSupport instance using the specified properties.
         * @function create
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {IStoreItem_Platforms_VRSupport=} [properties] Properties to set
         * @returns {StoreItem_Platforms_VRSupport} StoreItem_Platforms_VRSupport instance
         */
        StoreItem_Platforms_VRSupport.create = function create(properties) {
            return new StoreItem_Platforms_VRSupport(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Platforms_VRSupport message. Does not implicitly {@link StoreItem_Platforms_VRSupport.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {IStoreItem_Platforms_VRSupport} message StoreItem_Platforms_VRSupport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Platforms_VRSupport.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.vrhmd != null && message.hasOwnProperty("vrhmd"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.vrhmd);
            if (message.vrhmd_only != null && message.hasOwnProperty("vrhmd_only"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.vrhmd_only);
            if (message.htc_vive != null && message.hasOwnProperty("htc_vive"))
                writer.uint32(/* id 40, wireType 0 =*/320).bool(message.htc_vive);
            if (message.oculus_rift != null && message.hasOwnProperty("oculus_rift"))
                writer.uint32(/* id 41, wireType 0 =*/328).bool(message.oculus_rift);
            if (message.windows_mr != null && message.hasOwnProperty("windows_mr"))
                writer.uint32(/* id 42, wireType 0 =*/336).bool(message.windows_mr);
            if (message.valve_index != null && message.hasOwnProperty("valve_index"))
                writer.uint32(/* id 43, wireType 0 =*/344).bool(message.valve_index);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Platforms_VRSupport message, length delimited. Does not implicitly {@link StoreItem_Platforms_VRSupport.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {IStoreItem_Platforms_VRSupport} message StoreItem_Platforms_VRSupport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Platforms_VRSupport.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Platforms_VRSupport message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Platforms_VRSupport} StoreItem_Platforms_VRSupport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Platforms_VRSupport.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Platforms_VRSupport();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.vrhmd = reader.bool();
                    break;
                case 2:
                    message.vrhmd_only = reader.bool();
                    break;
                case 40:
                    message.htc_vive = reader.bool();
                    break;
                case 41:
                    message.oculus_rift = reader.bool();
                    break;
                case 42:
                    message.windows_mr = reader.bool();
                    break;
                case 43:
                    message.valve_index = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Platforms_VRSupport message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Platforms_VRSupport} StoreItem_Platforms_VRSupport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Platforms_VRSupport.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Platforms_VRSupport message.
         * @function verify
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Platforms_VRSupport.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.vrhmd != null && message.hasOwnProperty("vrhmd"))
                if (typeof message.vrhmd !== "boolean")
                    return "vrhmd: boolean expected";
            if (message.vrhmd_only != null && message.hasOwnProperty("vrhmd_only"))
                if (typeof message.vrhmd_only !== "boolean")
                    return "vrhmd_only: boolean expected";
            if (message.htc_vive != null && message.hasOwnProperty("htc_vive"))
                if (typeof message.htc_vive !== "boolean")
                    return "htc_vive: boolean expected";
            if (message.oculus_rift != null && message.hasOwnProperty("oculus_rift"))
                if (typeof message.oculus_rift !== "boolean")
                    return "oculus_rift: boolean expected";
            if (message.windows_mr != null && message.hasOwnProperty("windows_mr"))
                if (typeof message.windows_mr !== "boolean")
                    return "windows_mr: boolean expected";
            if (message.valve_index != null && message.hasOwnProperty("valve_index"))
                if (typeof message.valve_index !== "boolean")
                    return "valve_index: boolean expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Platforms_VRSupport message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Platforms_VRSupport} StoreItem_Platforms_VRSupport
         */
        StoreItem_Platforms_VRSupport.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Platforms_VRSupport)
                return object;
            var message = new $root.StoreItem_Platforms_VRSupport();
            if (object.vrhmd != null)
                message.vrhmd = Boolean(object.vrhmd);
            if (object.vrhmd_only != null)
                message.vrhmd_only = Boolean(object.vrhmd_only);
            if (object.htc_vive != null)
                message.htc_vive = Boolean(object.htc_vive);
            if (object.oculus_rift != null)
                message.oculus_rift = Boolean(object.oculus_rift);
            if (object.windows_mr != null)
                message.windows_mr = Boolean(object.windows_mr);
            if (object.valve_index != null)
                message.valve_index = Boolean(object.valve_index);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Platforms_VRSupport message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Platforms_VRSupport
         * @static
         * @param {StoreItem_Platforms_VRSupport} message StoreItem_Platforms_VRSupport
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Platforms_VRSupport.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.vrhmd = false;
                object.vrhmd_only = false;
                object.htc_vive = false;
                object.oculus_rift = false;
                object.windows_mr = false;
                object.valve_index = false;
            }
            if (message.vrhmd != null && message.hasOwnProperty("vrhmd"))
                object.vrhmd = message.vrhmd;
            if (message.vrhmd_only != null && message.hasOwnProperty("vrhmd_only"))
                object.vrhmd_only = message.vrhmd_only;
            if (message.htc_vive != null && message.hasOwnProperty("htc_vive"))
                object.htc_vive = message.htc_vive;
            if (message.oculus_rift != null && message.hasOwnProperty("oculus_rift"))
                object.oculus_rift = message.oculus_rift;
            if (message.windows_mr != null && message.hasOwnProperty("windows_mr"))
                object.windows_mr = message.windows_mr;
            if (message.valve_index != null && message.hasOwnProperty("valve_index"))
                object.valve_index = message.valve_index;
            return object;
        };
    
        /**
         * Converts this StoreItem_Platforms_VRSupport to JSON.
         * @function toJSON
         * @memberof StoreItem_Platforms_VRSupport
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Platforms_VRSupport.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Platforms_VRSupport;
    })();
    
    $root.StoreItem_PurchaseOption = (function() {
    
        /**
         * Properties of a StoreItem_PurchaseOption.
         * @exports IStoreItem_PurchaseOption
         * @interface IStoreItem_PurchaseOption
         * @property {number|null} [packageid] StoreItem_PurchaseOption packageid
         * @property {number|null} [bundleid] StoreItem_PurchaseOption bundleid
         * @property {string|null} [purchase_option_name] StoreItem_PurchaseOption purchase_option_name
         * @property {number|Long|null} [final_price_in_cents] StoreItem_PurchaseOption final_price_in_cents
         * @property {number|Long|null} [original_price_in_cents] StoreItem_PurchaseOption original_price_in_cents
         * @property {number|Long|null} [user_final_price_in_cents] StoreItem_PurchaseOption user_final_price_in_cents
         * @property {number|null} [discount_pct] StoreItem_PurchaseOption discount_pct
         * @property {number|null} [user_discount_pct] StoreItem_PurchaseOption user_discount_pct
         * @property {number|null} [bundle_discount_pct] StoreItem_PurchaseOption bundle_discount_pct
         * @property {Array.<IStoreItem_PurchaseOption_Discount>|null} [active_discounts] StoreItem_PurchaseOption active_discounts
         * @property {Array.<IStoreItem_PurchaseOption_Discount>|null} [user_active_discounts] StoreItem_PurchaseOption user_active_discounts
         * @property {Array.<IStoreItem_PurchaseOption_Discount>|null} [inactive_discounts] StoreItem_PurchaseOption inactive_discounts
         * @property {boolean|null} [user_can_purchase] StoreItem_PurchaseOption user_can_purchase
         * @property {boolean|null} [user_can_purchase_as_gift] StoreItem_PurchaseOption user_can_purchase_as_gift
         * @property {boolean|null} [is_commercial_license] StoreItem_PurchaseOption is_commercial_license
         */
    
        /**
         * Constructs a new StoreItem_PurchaseOption.
         * @exports StoreItem_PurchaseOption
         * @classdesc Represents a StoreItem_PurchaseOption.
         * @implements IStoreItem_PurchaseOption
         * @constructor
         * @param {IStoreItem_PurchaseOption=} [properties] Properties to set
         */
        function StoreItem_PurchaseOption(properties) {
            this.active_discounts = [];
            this.user_active_discounts = [];
            this.inactive_discounts = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_PurchaseOption packageid.
         * @member {number} packageid
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.packageid = 0;
    
        /**
         * StoreItem_PurchaseOption bundleid.
         * @member {number} bundleid
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.bundleid = 0;
    
        /**
         * StoreItem_PurchaseOption purchase_option_name.
         * @member {string} purchase_option_name
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.purchase_option_name = "";
    
        /**
         * StoreItem_PurchaseOption final_price_in_cents.
         * @member {number|Long} final_price_in_cents
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.final_price_in_cents = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * StoreItem_PurchaseOption original_price_in_cents.
         * @member {number|Long} original_price_in_cents
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.original_price_in_cents = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * StoreItem_PurchaseOption user_final_price_in_cents.
         * @member {number|Long} user_final_price_in_cents
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.user_final_price_in_cents = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * StoreItem_PurchaseOption discount_pct.
         * @member {number} discount_pct
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.discount_pct = 0;
    
        /**
         * StoreItem_PurchaseOption user_discount_pct.
         * @member {number} user_discount_pct
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.user_discount_pct = 0;
    
        /**
         * StoreItem_PurchaseOption bundle_discount_pct.
         * @member {number} bundle_discount_pct
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.bundle_discount_pct = 0;
    
        /**
         * StoreItem_PurchaseOption active_discounts.
         * @member {Array.<IStoreItem_PurchaseOption_Discount>} active_discounts
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.active_discounts = $util.emptyArray;
    
        /**
         * StoreItem_PurchaseOption user_active_discounts.
         * @member {Array.<IStoreItem_PurchaseOption_Discount>} user_active_discounts
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.user_active_discounts = $util.emptyArray;
    
        /**
         * StoreItem_PurchaseOption inactive_discounts.
         * @member {Array.<IStoreItem_PurchaseOption_Discount>} inactive_discounts
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.inactive_discounts = $util.emptyArray;
    
        /**
         * StoreItem_PurchaseOption user_can_purchase.
         * @member {boolean} user_can_purchase
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.user_can_purchase = false;
    
        /**
         * StoreItem_PurchaseOption user_can_purchase_as_gift.
         * @member {boolean} user_can_purchase_as_gift
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.user_can_purchase_as_gift = false;
    
        /**
         * StoreItem_PurchaseOption is_commercial_license.
         * @member {boolean} is_commercial_license
         * @memberof StoreItem_PurchaseOption
         * @instance
         */
        StoreItem_PurchaseOption.prototype.is_commercial_license = false;
    
        /**
         * Creates a new StoreItem_PurchaseOption instance using the specified properties.
         * @function create
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {IStoreItem_PurchaseOption=} [properties] Properties to set
         * @returns {StoreItem_PurchaseOption} StoreItem_PurchaseOption instance
         */
        StoreItem_PurchaseOption.create = function create(properties) {
            return new StoreItem_PurchaseOption(properties);
        };
    
        /**
         * Encodes the specified StoreItem_PurchaseOption message. Does not implicitly {@link StoreItem_PurchaseOption.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {IStoreItem_PurchaseOption} message StoreItem_PurchaseOption message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_PurchaseOption.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.packageid);
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.bundleid);
            if (message.purchase_option_name != null && message.hasOwnProperty("purchase_option_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.purchase_option_name);
            if (message.final_price_in_cents != null && message.hasOwnProperty("final_price_in_cents"))
                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.final_price_in_cents);
            if (message.original_price_in_cents != null && message.hasOwnProperty("original_price_in_cents"))
                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.original_price_in_cents);
            if (message.user_final_price_in_cents != null && message.hasOwnProperty("user_final_price_in_cents"))
                writer.uint32(/* id 7, wireType 0 =*/56).int64(message.user_final_price_in_cents);
            if (message.discount_pct != null && message.hasOwnProperty("discount_pct"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.discount_pct);
            if (message.user_discount_pct != null && message.hasOwnProperty("user_discount_pct"))
                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.user_discount_pct);
            if (message.bundle_discount_pct != null && message.hasOwnProperty("bundle_discount_pct"))
                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.bundle_discount_pct);
            if (message.active_discounts != null && message.active_discounts.length)
                for (var i = 0; i < message.active_discounts.length; ++i)
                    $root.StoreItem_PurchaseOption_Discount.encode(message.active_discounts[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
            if (message.user_active_discounts != null && message.user_active_discounts.length)
                for (var i = 0; i < message.user_active_discounts.length; ++i)
                    $root.StoreItem_PurchaseOption_Discount.encode(message.user_active_discounts[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
            if (message.inactive_discounts != null && message.inactive_discounts.length)
                for (var i = 0; i < message.inactive_discounts.length; ++i)
                    $root.StoreItem_PurchaseOption_Discount.encode(message.inactive_discounts[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
            if (message.user_can_purchase != null && message.hasOwnProperty("user_can_purchase"))
                writer.uint32(/* id 30, wireType 0 =*/240).bool(message.user_can_purchase);
            if (message.user_can_purchase_as_gift != null && message.hasOwnProperty("user_can_purchase_as_gift"))
                writer.uint32(/* id 31, wireType 0 =*/248).bool(message.user_can_purchase_as_gift);
            if (message.is_commercial_license != null && message.hasOwnProperty("is_commercial_license"))
                writer.uint32(/* id 40, wireType 0 =*/320).bool(message.is_commercial_license);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_PurchaseOption message, length delimited. Does not implicitly {@link StoreItem_PurchaseOption.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {IStoreItem_PurchaseOption} message StoreItem_PurchaseOption message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_PurchaseOption.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_PurchaseOption message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_PurchaseOption} StoreItem_PurchaseOption
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_PurchaseOption.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_PurchaseOption();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.packageid = reader.int32();
                    break;
                case 2:
                    message.bundleid = reader.int32();
                    break;
                case 3:
                    message.purchase_option_name = reader.string();
                    break;
                case 5:
                    message.final_price_in_cents = reader.int64();
                    break;
                case 6:
                    message.original_price_in_cents = reader.int64();
                    break;
                case 7:
                    message.user_final_price_in_cents = reader.int64();
                    break;
                case 10:
                    message.discount_pct = reader.int32();
                    break;
                case 11:
                    message.user_discount_pct = reader.int32();
                    break;
                case 12:
                    message.bundle_discount_pct = reader.int32();
                    break;
                case 20:
                    if (!(message.active_discounts && message.active_discounts.length))
                        message.active_discounts = [];
                    message.active_discounts.push($root.StoreItem_PurchaseOption_Discount.decode(reader, reader.uint32()));
                    break;
                case 21:
                    if (!(message.user_active_discounts && message.user_active_discounts.length))
                        message.user_active_discounts = [];
                    message.user_active_discounts.push($root.StoreItem_PurchaseOption_Discount.decode(reader, reader.uint32()));
                    break;
                case 22:
                    if (!(message.inactive_discounts && message.inactive_discounts.length))
                        message.inactive_discounts = [];
                    message.inactive_discounts.push($root.StoreItem_PurchaseOption_Discount.decode(reader, reader.uint32()));
                    break;
                case 30:
                    message.user_can_purchase = reader.bool();
                    break;
                case 31:
                    message.user_can_purchase_as_gift = reader.bool();
                    break;
                case 40:
                    message.is_commercial_license = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_PurchaseOption message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_PurchaseOption} StoreItem_PurchaseOption
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_PurchaseOption.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_PurchaseOption message.
         * @function verify
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_PurchaseOption.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                if (!$util.isInteger(message.packageid))
                    return "packageid: integer expected";
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                if (!$util.isInteger(message.bundleid))
                    return "bundleid: integer expected";
            if (message.purchase_option_name != null && message.hasOwnProperty("purchase_option_name"))
                if (!$util.isString(message.purchase_option_name))
                    return "purchase_option_name: string expected";
            if (message.final_price_in_cents != null && message.hasOwnProperty("final_price_in_cents"))
                if (!$util.isInteger(message.final_price_in_cents) && !(message.final_price_in_cents && $util.isInteger(message.final_price_in_cents.low) && $util.isInteger(message.final_price_in_cents.high)))
                    return "final_price_in_cents: integer|Long expected";
            if (message.original_price_in_cents != null && message.hasOwnProperty("original_price_in_cents"))
                if (!$util.isInteger(message.original_price_in_cents) && !(message.original_price_in_cents && $util.isInteger(message.original_price_in_cents.low) && $util.isInteger(message.original_price_in_cents.high)))
                    return "original_price_in_cents: integer|Long expected";
            if (message.user_final_price_in_cents != null && message.hasOwnProperty("user_final_price_in_cents"))
                if (!$util.isInteger(message.user_final_price_in_cents) && !(message.user_final_price_in_cents && $util.isInteger(message.user_final_price_in_cents.low) && $util.isInteger(message.user_final_price_in_cents.high)))
                    return "user_final_price_in_cents: integer|Long expected";
            if (message.discount_pct != null && message.hasOwnProperty("discount_pct"))
                if (!$util.isInteger(message.discount_pct))
                    return "discount_pct: integer expected";
            if (message.user_discount_pct != null && message.hasOwnProperty("user_discount_pct"))
                if (!$util.isInteger(message.user_discount_pct))
                    return "user_discount_pct: integer expected";
            if (message.bundle_discount_pct != null && message.hasOwnProperty("bundle_discount_pct"))
                if (!$util.isInteger(message.bundle_discount_pct))
                    return "bundle_discount_pct: integer expected";
            if (message.active_discounts != null && message.hasOwnProperty("active_discounts")) {
                if (!Array.isArray(message.active_discounts))
                    return "active_discounts: array expected";
                for (var i = 0; i < message.active_discounts.length; ++i) {
                    var error = $root.StoreItem_PurchaseOption_Discount.verify(message.active_discounts[i]);
                    if (error)
                        return "active_discounts." + error;
                }
            }
            if (message.user_active_discounts != null && message.hasOwnProperty("user_active_discounts")) {
                if (!Array.isArray(message.user_active_discounts))
                    return "user_active_discounts: array expected";
                for (var i = 0; i < message.user_active_discounts.length; ++i) {
                    var error = $root.StoreItem_PurchaseOption_Discount.verify(message.user_active_discounts[i]);
                    if (error)
                        return "user_active_discounts." + error;
                }
            }
            if (message.inactive_discounts != null && message.hasOwnProperty("inactive_discounts")) {
                if (!Array.isArray(message.inactive_discounts))
                    return "inactive_discounts: array expected";
                for (var i = 0; i < message.inactive_discounts.length; ++i) {
                    var error = $root.StoreItem_PurchaseOption_Discount.verify(message.inactive_discounts[i]);
                    if (error)
                        return "inactive_discounts." + error;
                }
            }
            if (message.user_can_purchase != null && message.hasOwnProperty("user_can_purchase"))
                if (typeof message.user_can_purchase !== "boolean")
                    return "user_can_purchase: boolean expected";
            if (message.user_can_purchase_as_gift != null && message.hasOwnProperty("user_can_purchase_as_gift"))
                if (typeof message.user_can_purchase_as_gift !== "boolean")
                    return "user_can_purchase_as_gift: boolean expected";
            if (message.is_commercial_license != null && message.hasOwnProperty("is_commercial_license"))
                if (typeof message.is_commercial_license !== "boolean")
                    return "is_commercial_license: boolean expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_PurchaseOption message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_PurchaseOption} StoreItem_PurchaseOption
         */
        StoreItem_PurchaseOption.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_PurchaseOption)
                return object;
            var message = new $root.StoreItem_PurchaseOption();
            if (object.packageid != null)
                message.packageid = object.packageid | 0;
            if (object.bundleid != null)
                message.bundleid = object.bundleid | 0;
            if (object.purchase_option_name != null)
                message.purchase_option_name = String(object.purchase_option_name);
            if (object.final_price_in_cents != null)
                if ($util.Long)
                    (message.final_price_in_cents = $util.Long.fromValue(object.final_price_in_cents)).unsigned = false;
                else if (typeof object.final_price_in_cents === "string")
                    message.final_price_in_cents = parseInt(object.final_price_in_cents, 10);
                else if (typeof object.final_price_in_cents === "number")
                    message.final_price_in_cents = object.final_price_in_cents;
                else if (typeof object.final_price_in_cents === "object")
                    message.final_price_in_cents = new $util.LongBits(object.final_price_in_cents.low >>> 0, object.final_price_in_cents.high >>> 0).toNumber();
            if (object.original_price_in_cents != null)
                if ($util.Long)
                    (message.original_price_in_cents = $util.Long.fromValue(object.original_price_in_cents)).unsigned = false;
                else if (typeof object.original_price_in_cents === "string")
                    message.original_price_in_cents = parseInt(object.original_price_in_cents, 10);
                else if (typeof object.original_price_in_cents === "number")
                    message.original_price_in_cents = object.original_price_in_cents;
                else if (typeof object.original_price_in_cents === "object")
                    message.original_price_in_cents = new $util.LongBits(object.original_price_in_cents.low >>> 0, object.original_price_in_cents.high >>> 0).toNumber();
            if (object.user_final_price_in_cents != null)
                if ($util.Long)
                    (message.user_final_price_in_cents = $util.Long.fromValue(object.user_final_price_in_cents)).unsigned = false;
                else if (typeof object.user_final_price_in_cents === "string")
                    message.user_final_price_in_cents = parseInt(object.user_final_price_in_cents, 10);
                else if (typeof object.user_final_price_in_cents === "number")
                    message.user_final_price_in_cents = object.user_final_price_in_cents;
                else if (typeof object.user_final_price_in_cents === "object")
                    message.user_final_price_in_cents = new $util.LongBits(object.user_final_price_in_cents.low >>> 0, object.user_final_price_in_cents.high >>> 0).toNumber();
            if (object.discount_pct != null)
                message.discount_pct = object.discount_pct | 0;
            if (object.user_discount_pct != null)
                message.user_discount_pct = object.user_discount_pct | 0;
            if (object.bundle_discount_pct != null)
                message.bundle_discount_pct = object.bundle_discount_pct | 0;
            if (object.active_discounts) {
                if (!Array.isArray(object.active_discounts))
                    throw TypeError(".StoreItem_PurchaseOption.active_discounts: array expected");
                message.active_discounts = [];
                for (var i = 0; i < object.active_discounts.length; ++i) {
                    if (typeof object.active_discounts[i] !== "object")
                        throw TypeError(".StoreItem_PurchaseOption.active_discounts: object expected");
                    message.active_discounts[i] = $root.StoreItem_PurchaseOption_Discount.fromObject(object.active_discounts[i]);
                }
            }
            if (object.user_active_discounts) {
                if (!Array.isArray(object.user_active_discounts))
                    throw TypeError(".StoreItem_PurchaseOption.user_active_discounts: array expected");
                message.user_active_discounts = [];
                for (var i = 0; i < object.user_active_discounts.length; ++i) {
                    if (typeof object.user_active_discounts[i] !== "object")
                        throw TypeError(".StoreItem_PurchaseOption.user_active_discounts: object expected");
                    message.user_active_discounts[i] = $root.StoreItem_PurchaseOption_Discount.fromObject(object.user_active_discounts[i]);
                }
            }
            if (object.inactive_discounts) {
                if (!Array.isArray(object.inactive_discounts))
                    throw TypeError(".StoreItem_PurchaseOption.inactive_discounts: array expected");
                message.inactive_discounts = [];
                for (var i = 0; i < object.inactive_discounts.length; ++i) {
                    if (typeof object.inactive_discounts[i] !== "object")
                        throw TypeError(".StoreItem_PurchaseOption.inactive_discounts: object expected");
                    message.inactive_discounts[i] = $root.StoreItem_PurchaseOption_Discount.fromObject(object.inactive_discounts[i]);
                }
            }
            if (object.user_can_purchase != null)
                message.user_can_purchase = Boolean(object.user_can_purchase);
            if (object.user_can_purchase_as_gift != null)
                message.user_can_purchase_as_gift = Boolean(object.user_can_purchase_as_gift);
            if (object.is_commercial_license != null)
                message.is_commercial_license = Boolean(object.is_commercial_license);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_PurchaseOption message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_PurchaseOption
         * @static
         * @param {StoreItem_PurchaseOption} message StoreItem_PurchaseOption
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_PurchaseOption.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.active_discounts = [];
                object.user_active_discounts = [];
                object.inactive_discounts = [];
            }
            if (options.defaults) {
                object.packageid = 0;
                object.bundleid = 0;
                object.purchase_option_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.final_price_in_cents = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.final_price_in_cents = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.original_price_in_cents = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.original_price_in_cents = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.user_final_price_in_cents = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.user_final_price_in_cents = options.longs === String ? "0" : 0;
                object.discount_pct = 0;
                object.user_discount_pct = 0;
                object.bundle_discount_pct = 0;
                object.user_can_purchase = false;
                object.user_can_purchase_as_gift = false;
                object.is_commercial_license = false;
            }
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                object.packageid = message.packageid;
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                object.bundleid = message.bundleid;
            if (message.purchase_option_name != null && message.hasOwnProperty("purchase_option_name"))
                object.purchase_option_name = message.purchase_option_name;
            if (message.final_price_in_cents != null && message.hasOwnProperty("final_price_in_cents"))
                if (typeof message.final_price_in_cents === "number")
                    object.final_price_in_cents = options.longs === String ? String(message.final_price_in_cents) : message.final_price_in_cents;
                else
                    object.final_price_in_cents = options.longs === String ? $util.Long.prototype.toString.call(message.final_price_in_cents) : options.longs === Number ? new $util.LongBits(message.final_price_in_cents.low >>> 0, message.final_price_in_cents.high >>> 0).toNumber() : message.final_price_in_cents;
            if (message.original_price_in_cents != null && message.hasOwnProperty("original_price_in_cents"))
                if (typeof message.original_price_in_cents === "number")
                    object.original_price_in_cents = options.longs === String ? String(message.original_price_in_cents) : message.original_price_in_cents;
                else
                    object.original_price_in_cents = options.longs === String ? $util.Long.prototype.toString.call(message.original_price_in_cents) : options.longs === Number ? new $util.LongBits(message.original_price_in_cents.low >>> 0, message.original_price_in_cents.high >>> 0).toNumber() : message.original_price_in_cents;
            if (message.user_final_price_in_cents != null && message.hasOwnProperty("user_final_price_in_cents"))
                if (typeof message.user_final_price_in_cents === "number")
                    object.user_final_price_in_cents = options.longs === String ? String(message.user_final_price_in_cents) : message.user_final_price_in_cents;
                else
                    object.user_final_price_in_cents = options.longs === String ? $util.Long.prototype.toString.call(message.user_final_price_in_cents) : options.longs === Number ? new $util.LongBits(message.user_final_price_in_cents.low >>> 0, message.user_final_price_in_cents.high >>> 0).toNumber() : message.user_final_price_in_cents;
            if (message.discount_pct != null && message.hasOwnProperty("discount_pct"))
                object.discount_pct = message.discount_pct;
            if (message.user_discount_pct != null && message.hasOwnProperty("user_discount_pct"))
                object.user_discount_pct = message.user_discount_pct;
            if (message.bundle_discount_pct != null && message.hasOwnProperty("bundle_discount_pct"))
                object.bundle_discount_pct = message.bundle_discount_pct;
            if (message.active_discounts && message.active_discounts.length) {
                object.active_discounts = [];
                for (var j = 0; j < message.active_discounts.length; ++j)
                    object.active_discounts[j] = $root.StoreItem_PurchaseOption_Discount.toObject(message.active_discounts[j], options);
            }
            if (message.user_active_discounts && message.user_active_discounts.length) {
                object.user_active_discounts = [];
                for (var j = 0; j < message.user_active_discounts.length; ++j)
                    object.user_active_discounts[j] = $root.StoreItem_PurchaseOption_Discount.toObject(message.user_active_discounts[j], options);
            }
            if (message.inactive_discounts && message.inactive_discounts.length) {
                object.inactive_discounts = [];
                for (var j = 0; j < message.inactive_discounts.length; ++j)
                    object.inactive_discounts[j] = $root.StoreItem_PurchaseOption_Discount.toObject(message.inactive_discounts[j], options);
            }
            if (message.user_can_purchase != null && message.hasOwnProperty("user_can_purchase"))
                object.user_can_purchase = message.user_can_purchase;
            if (message.user_can_purchase_as_gift != null && message.hasOwnProperty("user_can_purchase_as_gift"))
                object.user_can_purchase_as_gift = message.user_can_purchase_as_gift;
            if (message.is_commercial_license != null && message.hasOwnProperty("is_commercial_license"))
                object.is_commercial_license = message.is_commercial_license;
            return object;
        };
    
        /**
         * Converts this StoreItem_PurchaseOption to JSON.
         * @function toJSON
         * @memberof StoreItem_PurchaseOption
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_PurchaseOption.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_PurchaseOption;
    })();
    
    $root.StoreItem_PurchaseOption_Discount = (function() {
    
        /**
         * Properties of a StoreItem_PurchaseOption_Discount.
         * @exports IStoreItem_PurchaseOption_Discount
         * @interface IStoreItem_PurchaseOption_Discount
         * @property {number|Long|null} [discount_amount] StoreItem_PurchaseOption_Discount discount_amount
         * @property {string|null} [discount_description] StoreItem_PurchaseOption_Discount discount_description
         * @property {number|null} [discount_end_date] StoreItem_PurchaseOption_Discount discount_end_date
         */
    
        /**
         * Constructs a new StoreItem_PurchaseOption_Discount.
         * @exports StoreItem_PurchaseOption_Discount
         * @classdesc Represents a StoreItem_PurchaseOption_Discount.
         * @implements IStoreItem_PurchaseOption_Discount
         * @constructor
         * @param {IStoreItem_PurchaseOption_Discount=} [properties] Properties to set
         */
        function StoreItem_PurchaseOption_Discount(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_PurchaseOption_Discount discount_amount.
         * @member {number|Long} discount_amount
         * @memberof StoreItem_PurchaseOption_Discount
         * @instance
         */
        StoreItem_PurchaseOption_Discount.prototype.discount_amount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * StoreItem_PurchaseOption_Discount discount_description.
         * @member {string} discount_description
         * @memberof StoreItem_PurchaseOption_Discount
         * @instance
         */
        StoreItem_PurchaseOption_Discount.prototype.discount_description = "";
    
        /**
         * StoreItem_PurchaseOption_Discount discount_end_date.
         * @member {number} discount_end_date
         * @memberof StoreItem_PurchaseOption_Discount
         * @instance
         */
        StoreItem_PurchaseOption_Discount.prototype.discount_end_date = 0;
    
        /**
         * Creates a new StoreItem_PurchaseOption_Discount instance using the specified properties.
         * @function create
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {IStoreItem_PurchaseOption_Discount=} [properties] Properties to set
         * @returns {StoreItem_PurchaseOption_Discount} StoreItem_PurchaseOption_Discount instance
         */
        StoreItem_PurchaseOption_Discount.create = function create(properties) {
            return new StoreItem_PurchaseOption_Discount(properties);
        };
    
        /**
         * Encodes the specified StoreItem_PurchaseOption_Discount message. Does not implicitly {@link StoreItem_PurchaseOption_Discount.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {IStoreItem_PurchaseOption_Discount} message StoreItem_PurchaseOption_Discount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_PurchaseOption_Discount.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.discount_amount != null && message.hasOwnProperty("discount_amount"))
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.discount_amount);
            if (message.discount_description != null && message.hasOwnProperty("discount_description"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.discount_description);
            if (message.discount_end_date != null && message.hasOwnProperty("discount_end_date"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.discount_end_date);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_PurchaseOption_Discount message, length delimited. Does not implicitly {@link StoreItem_PurchaseOption_Discount.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {IStoreItem_PurchaseOption_Discount} message StoreItem_PurchaseOption_Discount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_PurchaseOption_Discount.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_PurchaseOption_Discount message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_PurchaseOption_Discount} StoreItem_PurchaseOption_Discount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_PurchaseOption_Discount.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_PurchaseOption_Discount();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.discount_amount = reader.int64();
                    break;
                case 2:
                    message.discount_description = reader.string();
                    break;
                case 3:
                    message.discount_end_date = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_PurchaseOption_Discount message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_PurchaseOption_Discount} StoreItem_PurchaseOption_Discount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_PurchaseOption_Discount.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_PurchaseOption_Discount message.
         * @function verify
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_PurchaseOption_Discount.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.discount_amount != null && message.hasOwnProperty("discount_amount"))
                if (!$util.isInteger(message.discount_amount) && !(message.discount_amount && $util.isInteger(message.discount_amount.low) && $util.isInteger(message.discount_amount.high)))
                    return "discount_amount: integer|Long expected";
            if (message.discount_description != null && message.hasOwnProperty("discount_description"))
                if (!$util.isString(message.discount_description))
                    return "discount_description: string expected";
            if (message.discount_end_date != null && message.hasOwnProperty("discount_end_date"))
                if (!$util.isInteger(message.discount_end_date))
                    return "discount_end_date: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_PurchaseOption_Discount message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_PurchaseOption_Discount} StoreItem_PurchaseOption_Discount
         */
        StoreItem_PurchaseOption_Discount.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_PurchaseOption_Discount)
                return object;
            var message = new $root.StoreItem_PurchaseOption_Discount();
            if (object.discount_amount != null)
                if ($util.Long)
                    (message.discount_amount = $util.Long.fromValue(object.discount_amount)).unsigned = false;
                else if (typeof object.discount_amount === "string")
                    message.discount_amount = parseInt(object.discount_amount, 10);
                else if (typeof object.discount_amount === "number")
                    message.discount_amount = object.discount_amount;
                else if (typeof object.discount_amount === "object")
                    message.discount_amount = new $util.LongBits(object.discount_amount.low >>> 0, object.discount_amount.high >>> 0).toNumber();
            if (object.discount_description != null)
                message.discount_description = String(object.discount_description);
            if (object.discount_end_date != null)
                message.discount_end_date = object.discount_end_date >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_PurchaseOption_Discount message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_PurchaseOption_Discount
         * @static
         * @param {StoreItem_PurchaseOption_Discount} message StoreItem_PurchaseOption_Discount
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_PurchaseOption_Discount.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.discount_amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.discount_amount = options.longs === String ? "0" : 0;
                object.discount_description = "";
                object.discount_end_date = 0;
            }
            if (message.discount_amount != null && message.hasOwnProperty("discount_amount"))
                if (typeof message.discount_amount === "number")
                    object.discount_amount = options.longs === String ? String(message.discount_amount) : message.discount_amount;
                else
                    object.discount_amount = options.longs === String ? $util.Long.prototype.toString.call(message.discount_amount) : options.longs === Number ? new $util.LongBits(message.discount_amount.low >>> 0, message.discount_amount.high >>> 0).toNumber() : message.discount_amount;
            if (message.discount_description != null && message.hasOwnProperty("discount_description"))
                object.discount_description = message.discount_description;
            if (message.discount_end_date != null && message.hasOwnProperty("discount_end_date"))
                object.discount_end_date = message.discount_end_date;
            return object;
        };
    
        /**
         * Converts this StoreItem_PurchaseOption_Discount to JSON.
         * @function toJSON
         * @memberof StoreItem_PurchaseOption_Discount
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_PurchaseOption_Discount.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_PurchaseOption_Discount;
    })();
    
    $root.StoreItem_RelatedItems = (function() {
    
        /**
         * Properties of a StoreItem_RelatedItems.
         * @exports IStoreItem_RelatedItems
         * @interface IStoreItem_RelatedItems
         * @property {number|null} [parent_appid] StoreItem_RelatedItems parent_appid
         */
    
        /**
         * Constructs a new StoreItem_RelatedItems.
         * @exports StoreItem_RelatedItems
         * @classdesc Represents a StoreItem_RelatedItems.
         * @implements IStoreItem_RelatedItems
         * @constructor
         * @param {IStoreItem_RelatedItems=} [properties] Properties to set
         */
        function StoreItem_RelatedItems(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_RelatedItems parent_appid.
         * @member {number} parent_appid
         * @memberof StoreItem_RelatedItems
         * @instance
         */
        StoreItem_RelatedItems.prototype.parent_appid = 0;
    
        /**
         * Creates a new StoreItem_RelatedItems instance using the specified properties.
         * @function create
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {IStoreItem_RelatedItems=} [properties] Properties to set
         * @returns {StoreItem_RelatedItems} StoreItem_RelatedItems instance
         */
        StoreItem_RelatedItems.create = function create(properties) {
            return new StoreItem_RelatedItems(properties);
        };
    
        /**
         * Encodes the specified StoreItem_RelatedItems message. Does not implicitly {@link StoreItem_RelatedItems.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {IStoreItem_RelatedItems} message StoreItem_RelatedItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_RelatedItems.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.parent_appid != null && message.hasOwnProperty("parent_appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.parent_appid);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_RelatedItems message, length delimited. Does not implicitly {@link StoreItem_RelatedItems.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {IStoreItem_RelatedItems} message StoreItem_RelatedItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_RelatedItems.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_RelatedItems message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_RelatedItems} StoreItem_RelatedItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_RelatedItems.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_RelatedItems();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.parent_appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_RelatedItems message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_RelatedItems} StoreItem_RelatedItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_RelatedItems.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_RelatedItems message.
         * @function verify
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_RelatedItems.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.parent_appid != null && message.hasOwnProperty("parent_appid"))
                if (!$util.isInteger(message.parent_appid))
                    return "parent_appid: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_RelatedItems message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_RelatedItems} StoreItem_RelatedItems
         */
        StoreItem_RelatedItems.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_RelatedItems)
                return object;
            var message = new $root.StoreItem_RelatedItems();
            if (object.parent_appid != null)
                message.parent_appid = object.parent_appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_RelatedItems message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_RelatedItems
         * @static
         * @param {StoreItem_RelatedItems} message StoreItem_RelatedItems
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_RelatedItems.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.parent_appid = 0;
            if (message.parent_appid != null && message.hasOwnProperty("parent_appid"))
                object.parent_appid = message.parent_appid;
            return object;
        };
    
        /**
         * Converts this StoreItem_RelatedItems to JSON.
         * @function toJSON
         * @memberof StoreItem_RelatedItems
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_RelatedItems.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_RelatedItems;
    })();
    
    $root.StoreItem_ReleaseInfo = (function() {
    
        /**
         * Properties of a StoreItem_ReleaseInfo.
         * @exports IStoreItem_ReleaseInfo
         * @interface IStoreItem_ReleaseInfo
         * @property {number|null} [steam_release_date] StoreItem_ReleaseInfo steam_release_date
         * @property {number|null} [original_release_date] StoreItem_ReleaseInfo original_release_date
         * @property {number|null} [original_steam_release_date] StoreItem_ReleaseInfo original_steam_release_date
         * @property {boolean|null} [is_coming_soon] StoreItem_ReleaseInfo is_coming_soon
         * @property {boolean|null} [is_preload] StoreItem_ReleaseInfo is_preload
         * @property {string|null} [custom_release_date_message] StoreItem_ReleaseInfo custom_release_date_message
         * @property {boolean|null} [is_abridged_release_date] StoreItem_ReleaseInfo is_abridged_release_date
         * @property {boolean|null} [is_early_access] StoreItem_ReleaseInfo is_early_access
         * @property {number|null} [mac_release_date] StoreItem_ReleaseInfo mac_release_date
         * @property {number|null} [linux_release_date] StoreItem_ReleaseInfo linux_release_date
         */
    
        /**
         * Constructs a new StoreItem_ReleaseInfo.
         * @exports StoreItem_ReleaseInfo
         * @classdesc Represents a StoreItem_ReleaseInfo.
         * @implements IStoreItem_ReleaseInfo
         * @constructor
         * @param {IStoreItem_ReleaseInfo=} [properties] Properties to set
         */
        function StoreItem_ReleaseInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_ReleaseInfo steam_release_date.
         * @member {number} steam_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.steam_release_date = 0;
    
        /**
         * StoreItem_ReleaseInfo original_release_date.
         * @member {number} original_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.original_release_date = 0;
    
        /**
         * StoreItem_ReleaseInfo original_steam_release_date.
         * @member {number} original_steam_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.original_steam_release_date = 0;
    
        /**
         * StoreItem_ReleaseInfo is_coming_soon.
         * @member {boolean} is_coming_soon
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.is_coming_soon = false;
    
        /**
         * StoreItem_ReleaseInfo is_preload.
         * @member {boolean} is_preload
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.is_preload = false;
    
        /**
         * StoreItem_ReleaseInfo custom_release_date_message.
         * @member {string} custom_release_date_message
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.custom_release_date_message = "";
    
        /**
         * StoreItem_ReleaseInfo is_abridged_release_date.
         * @member {boolean} is_abridged_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.is_abridged_release_date = false;
    
        /**
         * StoreItem_ReleaseInfo is_early_access.
         * @member {boolean} is_early_access
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.is_early_access = false;
    
        /**
         * StoreItem_ReleaseInfo mac_release_date.
         * @member {number} mac_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.mac_release_date = 0;
    
        /**
         * StoreItem_ReleaseInfo linux_release_date.
         * @member {number} linux_release_date
         * @memberof StoreItem_ReleaseInfo
         * @instance
         */
        StoreItem_ReleaseInfo.prototype.linux_release_date = 0;
    
        /**
         * Creates a new StoreItem_ReleaseInfo instance using the specified properties.
         * @function create
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {IStoreItem_ReleaseInfo=} [properties] Properties to set
         * @returns {StoreItem_ReleaseInfo} StoreItem_ReleaseInfo instance
         */
        StoreItem_ReleaseInfo.create = function create(properties) {
            return new StoreItem_ReleaseInfo(properties);
        };
    
        /**
         * Encodes the specified StoreItem_ReleaseInfo message. Does not implicitly {@link StoreItem_ReleaseInfo.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {IStoreItem_ReleaseInfo} message StoreItem_ReleaseInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_ReleaseInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_release_date != null && message.hasOwnProperty("steam_release_date"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.steam_release_date);
            if (message.original_release_date != null && message.hasOwnProperty("original_release_date"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.original_release_date);
            if (message.original_steam_release_date != null && message.hasOwnProperty("original_steam_release_date"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.original_steam_release_date);
            if (message.is_coming_soon != null && message.hasOwnProperty("is_coming_soon"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.is_coming_soon);
            if (message.is_preload != null && message.hasOwnProperty("is_preload"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.is_preload);
            if (message.custom_release_date_message != null && message.hasOwnProperty("custom_release_date_message"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.custom_release_date_message);
            if (message.is_abridged_release_date != null && message.hasOwnProperty("is_abridged_release_date"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.is_abridged_release_date);
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.is_early_access);
            if (message.mac_release_date != null && message.hasOwnProperty("mac_release_date"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.mac_release_date);
            if (message.linux_release_date != null && message.hasOwnProperty("linux_release_date"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.linux_release_date);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_ReleaseInfo message, length delimited. Does not implicitly {@link StoreItem_ReleaseInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {IStoreItem_ReleaseInfo} message StoreItem_ReleaseInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_ReleaseInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_ReleaseInfo message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_ReleaseInfo} StoreItem_ReleaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_ReleaseInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_ReleaseInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_release_date = reader.uint32();
                    break;
                case 2:
                    message.original_release_date = reader.uint32();
                    break;
                case 3:
                    message.original_steam_release_date = reader.uint32();
                    break;
                case 4:
                    message.is_coming_soon = reader.bool();
                    break;
                case 5:
                    message.is_preload = reader.bool();
                    break;
                case 6:
                    message.custom_release_date_message = reader.string();
                    break;
                case 7:
                    message.is_abridged_release_date = reader.bool();
                    break;
                case 10:
                    message.is_early_access = reader.bool();
                    break;
                case 20:
                    message.mac_release_date = reader.uint32();
                    break;
                case 21:
                    message.linux_release_date = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_ReleaseInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_ReleaseInfo} StoreItem_ReleaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_ReleaseInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_ReleaseInfo message.
         * @function verify
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_ReleaseInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_release_date != null && message.hasOwnProperty("steam_release_date"))
                if (!$util.isInteger(message.steam_release_date))
                    return "steam_release_date: integer expected";
            if (message.original_release_date != null && message.hasOwnProperty("original_release_date"))
                if (!$util.isInteger(message.original_release_date))
                    return "original_release_date: integer expected";
            if (message.original_steam_release_date != null && message.hasOwnProperty("original_steam_release_date"))
                if (!$util.isInteger(message.original_steam_release_date))
                    return "original_steam_release_date: integer expected";
            if (message.is_coming_soon != null && message.hasOwnProperty("is_coming_soon"))
                if (typeof message.is_coming_soon !== "boolean")
                    return "is_coming_soon: boolean expected";
            if (message.is_preload != null && message.hasOwnProperty("is_preload"))
                if (typeof message.is_preload !== "boolean")
                    return "is_preload: boolean expected";
            if (message.custom_release_date_message != null && message.hasOwnProperty("custom_release_date_message"))
                if (!$util.isString(message.custom_release_date_message))
                    return "custom_release_date_message: string expected";
            if (message.is_abridged_release_date != null && message.hasOwnProperty("is_abridged_release_date"))
                if (typeof message.is_abridged_release_date !== "boolean")
                    return "is_abridged_release_date: boolean expected";
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                if (typeof message.is_early_access !== "boolean")
                    return "is_early_access: boolean expected";
            if (message.mac_release_date != null && message.hasOwnProperty("mac_release_date"))
                if (!$util.isInteger(message.mac_release_date))
                    return "mac_release_date: integer expected";
            if (message.linux_release_date != null && message.hasOwnProperty("linux_release_date"))
                if (!$util.isInteger(message.linux_release_date))
                    return "linux_release_date: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_ReleaseInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_ReleaseInfo} StoreItem_ReleaseInfo
         */
        StoreItem_ReleaseInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_ReleaseInfo)
                return object;
            var message = new $root.StoreItem_ReleaseInfo();
            if (object.steam_release_date != null)
                message.steam_release_date = object.steam_release_date >>> 0;
            if (object.original_release_date != null)
                message.original_release_date = object.original_release_date >>> 0;
            if (object.original_steam_release_date != null)
                message.original_steam_release_date = object.original_steam_release_date >>> 0;
            if (object.is_coming_soon != null)
                message.is_coming_soon = Boolean(object.is_coming_soon);
            if (object.is_preload != null)
                message.is_preload = Boolean(object.is_preload);
            if (object.custom_release_date_message != null)
                message.custom_release_date_message = String(object.custom_release_date_message);
            if (object.is_abridged_release_date != null)
                message.is_abridged_release_date = Boolean(object.is_abridged_release_date);
            if (object.is_early_access != null)
                message.is_early_access = Boolean(object.is_early_access);
            if (object.mac_release_date != null)
                message.mac_release_date = object.mac_release_date >>> 0;
            if (object.linux_release_date != null)
                message.linux_release_date = object.linux_release_date >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_ReleaseInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_ReleaseInfo
         * @static
         * @param {StoreItem_ReleaseInfo} message StoreItem_ReleaseInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_ReleaseInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.steam_release_date = 0;
                object.original_release_date = 0;
                object.original_steam_release_date = 0;
                object.is_coming_soon = false;
                object.is_preload = false;
                object.custom_release_date_message = "";
                object.is_abridged_release_date = false;
                object.is_early_access = false;
                object.mac_release_date = 0;
                object.linux_release_date = 0;
            }
            if (message.steam_release_date != null && message.hasOwnProperty("steam_release_date"))
                object.steam_release_date = message.steam_release_date;
            if (message.original_release_date != null && message.hasOwnProperty("original_release_date"))
                object.original_release_date = message.original_release_date;
            if (message.original_steam_release_date != null && message.hasOwnProperty("original_steam_release_date"))
                object.original_steam_release_date = message.original_steam_release_date;
            if (message.is_coming_soon != null && message.hasOwnProperty("is_coming_soon"))
                object.is_coming_soon = message.is_coming_soon;
            if (message.is_preload != null && message.hasOwnProperty("is_preload"))
                object.is_preload = message.is_preload;
            if (message.custom_release_date_message != null && message.hasOwnProperty("custom_release_date_message"))
                object.custom_release_date_message = message.custom_release_date_message;
            if (message.is_abridged_release_date != null && message.hasOwnProperty("is_abridged_release_date"))
                object.is_abridged_release_date = message.is_abridged_release_date;
            if (message.is_early_access != null && message.hasOwnProperty("is_early_access"))
                object.is_early_access = message.is_early_access;
            if (message.mac_release_date != null && message.hasOwnProperty("mac_release_date"))
                object.mac_release_date = message.mac_release_date;
            if (message.linux_release_date != null && message.hasOwnProperty("linux_release_date"))
                object.linux_release_date = message.linux_release_date;
            return object;
        };
    
        /**
         * Converts this StoreItem_ReleaseInfo to JSON.
         * @function toJSON
         * @memberof StoreItem_ReleaseInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_ReleaseInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_ReleaseInfo;
    })();
    
    $root.StoreItem_Reviews = (function() {
    
        /**
         * Properties of a StoreItem_Reviews.
         * @exports IStoreItem_Reviews
         * @interface IStoreItem_Reviews
         * @property {IStoreItem_Reviews_StoreReviewSummary|null} [summary_filtered] StoreItem_Reviews summary_filtered
         * @property {IStoreItem_Reviews_StoreReviewSummary|null} [summary_unfiltered] StoreItem_Reviews summary_unfiltered
         */
    
        /**
         * Constructs a new StoreItem_Reviews.
         * @exports StoreItem_Reviews
         * @classdesc Represents a StoreItem_Reviews.
         * @implements IStoreItem_Reviews
         * @constructor
         * @param {IStoreItem_Reviews=} [properties] Properties to set
         */
        function StoreItem_Reviews(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Reviews summary_filtered.
         * @member {IStoreItem_Reviews_StoreReviewSummary|null|undefined} summary_filtered
         * @memberof StoreItem_Reviews
         * @instance
         */
        StoreItem_Reviews.prototype.summary_filtered = null;
    
        /**
         * StoreItem_Reviews summary_unfiltered.
         * @member {IStoreItem_Reviews_StoreReviewSummary|null|undefined} summary_unfiltered
         * @memberof StoreItem_Reviews
         * @instance
         */
        StoreItem_Reviews.prototype.summary_unfiltered = null;
    
        /**
         * Creates a new StoreItem_Reviews instance using the specified properties.
         * @function create
         * @memberof StoreItem_Reviews
         * @static
         * @param {IStoreItem_Reviews=} [properties] Properties to set
         * @returns {StoreItem_Reviews} StoreItem_Reviews instance
         */
        StoreItem_Reviews.create = function create(properties) {
            return new StoreItem_Reviews(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Reviews message. Does not implicitly {@link StoreItem_Reviews.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Reviews
         * @static
         * @param {IStoreItem_Reviews} message StoreItem_Reviews message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Reviews.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.summary_filtered != null && message.hasOwnProperty("summary_filtered"))
                $root.StoreItem_Reviews_StoreReviewSummary.encode(message.summary_filtered, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.summary_unfiltered != null && message.hasOwnProperty("summary_unfiltered"))
                $root.StoreItem_Reviews_StoreReviewSummary.encode(message.summary_unfiltered, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Reviews message, length delimited. Does not implicitly {@link StoreItem_Reviews.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Reviews
         * @static
         * @param {IStoreItem_Reviews} message StoreItem_Reviews message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Reviews.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Reviews message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Reviews
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Reviews} StoreItem_Reviews
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Reviews.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Reviews();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.summary_filtered = $root.StoreItem_Reviews_StoreReviewSummary.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.summary_unfiltered = $root.StoreItem_Reviews_StoreReviewSummary.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Reviews message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Reviews
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Reviews} StoreItem_Reviews
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Reviews.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Reviews message.
         * @function verify
         * @memberof StoreItem_Reviews
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Reviews.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.summary_filtered != null && message.hasOwnProperty("summary_filtered")) {
                var error = $root.StoreItem_Reviews_StoreReviewSummary.verify(message.summary_filtered);
                if (error)
                    return "summary_filtered." + error;
            }
            if (message.summary_unfiltered != null && message.hasOwnProperty("summary_unfiltered")) {
                var error = $root.StoreItem_Reviews_StoreReviewSummary.verify(message.summary_unfiltered);
                if (error)
                    return "summary_unfiltered." + error;
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_Reviews message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Reviews
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Reviews} StoreItem_Reviews
         */
        StoreItem_Reviews.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Reviews)
                return object;
            var message = new $root.StoreItem_Reviews();
            if (object.summary_filtered != null) {
                if (typeof object.summary_filtered !== "object")
                    throw TypeError(".StoreItem_Reviews.summary_filtered: object expected");
                message.summary_filtered = $root.StoreItem_Reviews_StoreReviewSummary.fromObject(object.summary_filtered);
            }
            if (object.summary_unfiltered != null) {
                if (typeof object.summary_unfiltered !== "object")
                    throw TypeError(".StoreItem_Reviews.summary_unfiltered: object expected");
                message.summary_unfiltered = $root.StoreItem_Reviews_StoreReviewSummary.fromObject(object.summary_unfiltered);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Reviews message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Reviews
         * @static
         * @param {StoreItem_Reviews} message StoreItem_Reviews
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Reviews.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.summary_filtered = null;
                object.summary_unfiltered = null;
            }
            if (message.summary_filtered != null && message.hasOwnProperty("summary_filtered"))
                object.summary_filtered = $root.StoreItem_Reviews_StoreReviewSummary.toObject(message.summary_filtered, options);
            if (message.summary_unfiltered != null && message.hasOwnProperty("summary_unfiltered"))
                object.summary_unfiltered = $root.StoreItem_Reviews_StoreReviewSummary.toObject(message.summary_unfiltered, options);
            return object;
        };
    
        /**
         * Converts this StoreItem_Reviews to JSON.
         * @function toJSON
         * @memberof StoreItem_Reviews
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Reviews.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Reviews;
    })();
    
    $root.StoreItem_Reviews_StoreReviewSummary = (function() {
    
        /**
         * Properties of a StoreItem_Reviews_StoreReviewSummary.
         * @exports IStoreItem_Reviews_StoreReviewSummary
         * @interface IStoreItem_Reviews_StoreReviewSummary
         * @property {number|null} [review_count] StoreItem_Reviews_StoreReviewSummary review_count
         * @property {number|null} [percent_positive] StoreItem_Reviews_StoreReviewSummary percent_positive
         * @property {number|null} [review_score] StoreItem_Reviews_StoreReviewSummary review_score
         * @property {string|null} [review_score_label] StoreItem_Reviews_StoreReviewSummary review_score_label
         */
    
        /**
         * Constructs a new StoreItem_Reviews_StoreReviewSummary.
         * @exports StoreItem_Reviews_StoreReviewSummary
         * @classdesc Represents a StoreItem_Reviews_StoreReviewSummary.
         * @implements IStoreItem_Reviews_StoreReviewSummary
         * @constructor
         * @param {IStoreItem_Reviews_StoreReviewSummary=} [properties] Properties to set
         */
        function StoreItem_Reviews_StoreReviewSummary(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Reviews_StoreReviewSummary review_count.
         * @member {number} review_count
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @instance
         */
        StoreItem_Reviews_StoreReviewSummary.prototype.review_count = 0;
    
        /**
         * StoreItem_Reviews_StoreReviewSummary percent_positive.
         * @member {number} percent_positive
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @instance
         */
        StoreItem_Reviews_StoreReviewSummary.prototype.percent_positive = 0;
    
        /**
         * StoreItem_Reviews_StoreReviewSummary review_score.
         * @member {number} review_score
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @instance
         */
        StoreItem_Reviews_StoreReviewSummary.prototype.review_score = 0;
    
        /**
         * StoreItem_Reviews_StoreReviewSummary review_score_label.
         * @member {string} review_score_label
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @instance
         */
        StoreItem_Reviews_StoreReviewSummary.prototype.review_score_label = "";
    
        /**
         * Creates a new StoreItem_Reviews_StoreReviewSummary instance using the specified properties.
         * @function create
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {IStoreItem_Reviews_StoreReviewSummary=} [properties] Properties to set
         * @returns {StoreItem_Reviews_StoreReviewSummary} StoreItem_Reviews_StoreReviewSummary instance
         */
        StoreItem_Reviews_StoreReviewSummary.create = function create(properties) {
            return new StoreItem_Reviews_StoreReviewSummary(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Reviews_StoreReviewSummary message. Does not implicitly {@link StoreItem_Reviews_StoreReviewSummary.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {IStoreItem_Reviews_StoreReviewSummary} message StoreItem_Reviews_StoreReviewSummary message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Reviews_StoreReviewSummary.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.review_count != null && message.hasOwnProperty("review_count"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.review_count);
            if (message.percent_positive != null && message.hasOwnProperty("percent_positive"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.percent_positive);
            if (message.review_score != null && message.hasOwnProperty("review_score"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.review_score);
            if (message.review_score_label != null && message.hasOwnProperty("review_score_label"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.review_score_label);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Reviews_StoreReviewSummary message, length delimited. Does not implicitly {@link StoreItem_Reviews_StoreReviewSummary.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {IStoreItem_Reviews_StoreReviewSummary} message StoreItem_Reviews_StoreReviewSummary message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Reviews_StoreReviewSummary.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Reviews_StoreReviewSummary message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Reviews_StoreReviewSummary} StoreItem_Reviews_StoreReviewSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Reviews_StoreReviewSummary.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Reviews_StoreReviewSummary();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.review_count = reader.uint32();
                    break;
                case 2:
                    message.percent_positive = reader.int32();
                    break;
                case 3:
                    message.review_score = reader.int32();
                    break;
                case 4:
                    message.review_score_label = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Reviews_StoreReviewSummary message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Reviews_StoreReviewSummary} StoreItem_Reviews_StoreReviewSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Reviews_StoreReviewSummary.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Reviews_StoreReviewSummary message.
         * @function verify
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Reviews_StoreReviewSummary.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.review_count != null && message.hasOwnProperty("review_count"))
                if (!$util.isInteger(message.review_count))
                    return "review_count: integer expected";
            if (message.percent_positive != null && message.hasOwnProperty("percent_positive"))
                if (!$util.isInteger(message.percent_positive))
                    return "percent_positive: integer expected";
            if (message.review_score != null && message.hasOwnProperty("review_score"))
                if (!$util.isInteger(message.review_score))
                    return "review_score: integer expected";
            if (message.review_score_label != null && message.hasOwnProperty("review_score_label"))
                if (!$util.isString(message.review_score_label))
                    return "review_score_label: string expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Reviews_StoreReviewSummary message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Reviews_StoreReviewSummary} StoreItem_Reviews_StoreReviewSummary
         */
        StoreItem_Reviews_StoreReviewSummary.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Reviews_StoreReviewSummary)
                return object;
            var message = new $root.StoreItem_Reviews_StoreReviewSummary();
            if (object.review_count != null)
                message.review_count = object.review_count >>> 0;
            if (object.percent_positive != null)
                message.percent_positive = object.percent_positive | 0;
            if (object.review_score != null)
                message.review_score = object.review_score | 0;
            if (object.review_score_label != null)
                message.review_score_label = String(object.review_score_label);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Reviews_StoreReviewSummary message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @static
         * @param {StoreItem_Reviews_StoreReviewSummary} message StoreItem_Reviews_StoreReviewSummary
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Reviews_StoreReviewSummary.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.review_count = 0;
                object.percent_positive = 0;
                object.review_score = 0;
                object.review_score_label = "";
            }
            if (message.review_count != null && message.hasOwnProperty("review_count"))
                object.review_count = message.review_count;
            if (message.percent_positive != null && message.hasOwnProperty("percent_positive"))
                object.percent_positive = message.percent_positive;
            if (message.review_score != null && message.hasOwnProperty("review_score"))
                object.review_score = message.review_score;
            if (message.review_score_label != null && message.hasOwnProperty("review_score_label"))
                object.review_score_label = message.review_score_label;
            return object;
        };
    
        /**
         * Converts this StoreItem_Reviews_StoreReviewSummary to JSON.
         * @function toJSON
         * @memberof StoreItem_Reviews_StoreReviewSummary
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Reviews_StoreReviewSummary.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Reviews_StoreReviewSummary;
    })();
    
    $root.StoreItem_Screenshots = (function() {
    
        /**
         * Properties of a StoreItem_Screenshots.
         * @exports IStoreItem_Screenshots
         * @interface IStoreItem_Screenshots
         * @property {Array.<IStoreItem_Screenshots_Screenshot>|null} [all_ages_screenshots] StoreItem_Screenshots all_ages_screenshots
         * @property {Array.<IStoreItem_Screenshots_Screenshot>|null} [mature_content_screenshots] StoreItem_Screenshots mature_content_screenshots
         */
    
        /**
         * Constructs a new StoreItem_Screenshots.
         * @exports StoreItem_Screenshots
         * @classdesc Represents a StoreItem_Screenshots.
         * @implements IStoreItem_Screenshots
         * @constructor
         * @param {IStoreItem_Screenshots=} [properties] Properties to set
         */
        function StoreItem_Screenshots(properties) {
            this.all_ages_screenshots = [];
            this.mature_content_screenshots = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Screenshots all_ages_screenshots.
         * @member {Array.<IStoreItem_Screenshots_Screenshot>} all_ages_screenshots
         * @memberof StoreItem_Screenshots
         * @instance
         */
        StoreItem_Screenshots.prototype.all_ages_screenshots = $util.emptyArray;
    
        /**
         * StoreItem_Screenshots mature_content_screenshots.
         * @member {Array.<IStoreItem_Screenshots_Screenshot>} mature_content_screenshots
         * @memberof StoreItem_Screenshots
         * @instance
         */
        StoreItem_Screenshots.prototype.mature_content_screenshots = $util.emptyArray;
    
        /**
         * Creates a new StoreItem_Screenshots instance using the specified properties.
         * @function create
         * @memberof StoreItem_Screenshots
         * @static
         * @param {IStoreItem_Screenshots=} [properties] Properties to set
         * @returns {StoreItem_Screenshots} StoreItem_Screenshots instance
         */
        StoreItem_Screenshots.create = function create(properties) {
            return new StoreItem_Screenshots(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Screenshots message. Does not implicitly {@link StoreItem_Screenshots.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Screenshots
         * @static
         * @param {IStoreItem_Screenshots} message StoreItem_Screenshots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Screenshots.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.all_ages_screenshots != null && message.all_ages_screenshots.length)
                for (var i = 0; i < message.all_ages_screenshots.length; ++i)
                    $root.StoreItem_Screenshots_Screenshot.encode(message.all_ages_screenshots[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.mature_content_screenshots != null && message.mature_content_screenshots.length)
                for (var i = 0; i < message.mature_content_screenshots.length; ++i)
                    $root.StoreItem_Screenshots_Screenshot.encode(message.mature_content_screenshots[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Screenshots message, length delimited. Does not implicitly {@link StoreItem_Screenshots.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Screenshots
         * @static
         * @param {IStoreItem_Screenshots} message StoreItem_Screenshots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Screenshots.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Screenshots message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Screenshots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Screenshots} StoreItem_Screenshots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Screenshots.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Screenshots();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    if (!(message.all_ages_screenshots && message.all_ages_screenshots.length))
                        message.all_ages_screenshots = [];
                    message.all_ages_screenshots.push($root.StoreItem_Screenshots_Screenshot.decode(reader, reader.uint32()));
                    break;
                case 3:
                    if (!(message.mature_content_screenshots && message.mature_content_screenshots.length))
                        message.mature_content_screenshots = [];
                    message.mature_content_screenshots.push($root.StoreItem_Screenshots_Screenshot.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Screenshots message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Screenshots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Screenshots} StoreItem_Screenshots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Screenshots.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Screenshots message.
         * @function verify
         * @memberof StoreItem_Screenshots
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Screenshots.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.all_ages_screenshots != null && message.hasOwnProperty("all_ages_screenshots")) {
                if (!Array.isArray(message.all_ages_screenshots))
                    return "all_ages_screenshots: array expected";
                for (var i = 0; i < message.all_ages_screenshots.length; ++i) {
                    var error = $root.StoreItem_Screenshots_Screenshot.verify(message.all_ages_screenshots[i]);
                    if (error)
                        return "all_ages_screenshots." + error;
                }
            }
            if (message.mature_content_screenshots != null && message.hasOwnProperty("mature_content_screenshots")) {
                if (!Array.isArray(message.mature_content_screenshots))
                    return "mature_content_screenshots: array expected";
                for (var i = 0; i < message.mature_content_screenshots.length; ++i) {
                    var error = $root.StoreItem_Screenshots_Screenshot.verify(message.mature_content_screenshots[i]);
                    if (error)
                        return "mature_content_screenshots." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_Screenshots message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Screenshots
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Screenshots} StoreItem_Screenshots
         */
        StoreItem_Screenshots.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Screenshots)
                return object;
            var message = new $root.StoreItem_Screenshots();
            if (object.all_ages_screenshots) {
                if (!Array.isArray(object.all_ages_screenshots))
                    throw TypeError(".StoreItem_Screenshots.all_ages_screenshots: array expected");
                message.all_ages_screenshots = [];
                for (var i = 0; i < object.all_ages_screenshots.length; ++i) {
                    if (typeof object.all_ages_screenshots[i] !== "object")
                        throw TypeError(".StoreItem_Screenshots.all_ages_screenshots: object expected");
                    message.all_ages_screenshots[i] = $root.StoreItem_Screenshots_Screenshot.fromObject(object.all_ages_screenshots[i]);
                }
            }
            if (object.mature_content_screenshots) {
                if (!Array.isArray(object.mature_content_screenshots))
                    throw TypeError(".StoreItem_Screenshots.mature_content_screenshots: array expected");
                message.mature_content_screenshots = [];
                for (var i = 0; i < object.mature_content_screenshots.length; ++i) {
                    if (typeof object.mature_content_screenshots[i] !== "object")
                        throw TypeError(".StoreItem_Screenshots.mature_content_screenshots: object expected");
                    message.mature_content_screenshots[i] = $root.StoreItem_Screenshots_Screenshot.fromObject(object.mature_content_screenshots[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Screenshots message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Screenshots
         * @static
         * @param {StoreItem_Screenshots} message StoreItem_Screenshots
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Screenshots.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.all_ages_screenshots = [];
                object.mature_content_screenshots = [];
            }
            if (message.all_ages_screenshots && message.all_ages_screenshots.length) {
                object.all_ages_screenshots = [];
                for (var j = 0; j < message.all_ages_screenshots.length; ++j)
                    object.all_ages_screenshots[j] = $root.StoreItem_Screenshots_Screenshot.toObject(message.all_ages_screenshots[j], options);
            }
            if (message.mature_content_screenshots && message.mature_content_screenshots.length) {
                object.mature_content_screenshots = [];
                for (var j = 0; j < message.mature_content_screenshots.length; ++j)
                    object.mature_content_screenshots[j] = $root.StoreItem_Screenshots_Screenshot.toObject(message.mature_content_screenshots[j], options);
            }
            return object;
        };
    
        /**
         * Converts this StoreItem_Screenshots to JSON.
         * @function toJSON
         * @memberof StoreItem_Screenshots
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Screenshots.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Screenshots;
    })();
    
    $root.StoreItem_Screenshots_Screenshot = (function() {
    
        /**
         * Properties of a StoreItem_Screenshots_Screenshot.
         * @exports IStoreItem_Screenshots_Screenshot
         * @interface IStoreItem_Screenshots_Screenshot
         * @property {string|null} [filename] StoreItem_Screenshots_Screenshot filename
         * @property {number|null} [ordinal] StoreItem_Screenshots_Screenshot ordinal
         */
    
        /**
         * Constructs a new StoreItem_Screenshots_Screenshot.
         * @exports StoreItem_Screenshots_Screenshot
         * @classdesc Represents a StoreItem_Screenshots_Screenshot.
         * @implements IStoreItem_Screenshots_Screenshot
         * @constructor
         * @param {IStoreItem_Screenshots_Screenshot=} [properties] Properties to set
         */
        function StoreItem_Screenshots_Screenshot(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Screenshots_Screenshot filename.
         * @member {string} filename
         * @memberof StoreItem_Screenshots_Screenshot
         * @instance
         */
        StoreItem_Screenshots_Screenshot.prototype.filename = "";
    
        /**
         * StoreItem_Screenshots_Screenshot ordinal.
         * @member {number} ordinal
         * @memberof StoreItem_Screenshots_Screenshot
         * @instance
         */
        StoreItem_Screenshots_Screenshot.prototype.ordinal = 0;
    
        /**
         * Creates a new StoreItem_Screenshots_Screenshot instance using the specified properties.
         * @function create
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {IStoreItem_Screenshots_Screenshot=} [properties] Properties to set
         * @returns {StoreItem_Screenshots_Screenshot} StoreItem_Screenshots_Screenshot instance
         */
        StoreItem_Screenshots_Screenshot.create = function create(properties) {
            return new StoreItem_Screenshots_Screenshot(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Screenshots_Screenshot message. Does not implicitly {@link StoreItem_Screenshots_Screenshot.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {IStoreItem_Screenshots_Screenshot} message StoreItem_Screenshots_Screenshot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Screenshots_Screenshot.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ordinal);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Screenshots_Screenshot message, length delimited. Does not implicitly {@link StoreItem_Screenshots_Screenshot.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {IStoreItem_Screenshots_Screenshot} message StoreItem_Screenshots_Screenshot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Screenshots_Screenshot.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Screenshots_Screenshot message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Screenshots_Screenshot} StoreItem_Screenshots_Screenshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Screenshots_Screenshot.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Screenshots_Screenshot();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.ordinal = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Screenshots_Screenshot message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Screenshots_Screenshot} StoreItem_Screenshots_Screenshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Screenshots_Screenshot.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Screenshots_Screenshot message.
         * @function verify
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Screenshots_Screenshot.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                if (!$util.isInteger(message.ordinal))
                    return "ordinal: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Screenshots_Screenshot message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Screenshots_Screenshot} StoreItem_Screenshots_Screenshot
         */
        StoreItem_Screenshots_Screenshot.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Screenshots_Screenshot)
                return object;
            var message = new $root.StoreItem_Screenshots_Screenshot();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.ordinal != null)
                message.ordinal = object.ordinal | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Screenshots_Screenshot message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Screenshots_Screenshot
         * @static
         * @param {StoreItem_Screenshots_Screenshot} message StoreItem_Screenshots_Screenshot
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Screenshots_Screenshot.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.ordinal = 0;
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.ordinal != null && message.hasOwnProperty("ordinal"))
                object.ordinal = message.ordinal;
            return object;
        };
    
        /**
         * Converts this StoreItem_Screenshots_Screenshot to JSON.
         * @function toJSON
         * @memberof StoreItem_Screenshots_Screenshot
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Screenshots_Screenshot.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Screenshots_Screenshot;
    })();
    
    $root.StoreItem_Tag = (function() {
    
        /**
         * Properties of a StoreItem_Tag.
         * @exports IStoreItem_Tag
         * @interface IStoreItem_Tag
         * @property {number|null} [tagid] StoreItem_Tag tagid
         * @property {number|null} [weight] StoreItem_Tag weight
         */
    
        /**
         * Constructs a new StoreItem_Tag.
         * @exports StoreItem_Tag
         * @classdesc Represents a StoreItem_Tag.
         * @implements IStoreItem_Tag
         * @constructor
         * @param {IStoreItem_Tag=} [properties] Properties to set
         */
        function StoreItem_Tag(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Tag tagid.
         * @member {number} tagid
         * @memberof StoreItem_Tag
         * @instance
         */
        StoreItem_Tag.prototype.tagid = 0;
    
        /**
         * StoreItem_Tag weight.
         * @member {number} weight
         * @memberof StoreItem_Tag
         * @instance
         */
        StoreItem_Tag.prototype.weight = 0;
    
        /**
         * Creates a new StoreItem_Tag instance using the specified properties.
         * @function create
         * @memberof StoreItem_Tag
         * @static
         * @param {IStoreItem_Tag=} [properties] Properties to set
         * @returns {StoreItem_Tag} StoreItem_Tag instance
         */
        StoreItem_Tag.create = function create(properties) {
            return new StoreItem_Tag(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Tag message. Does not implicitly {@link StoreItem_Tag.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Tag
         * @static
         * @param {IStoreItem_Tag} message StoreItem_Tag message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Tag.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tagid != null && message.hasOwnProperty("tagid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.tagid);
            if (message.weight != null && message.hasOwnProperty("weight"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.weight);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Tag message, length delimited. Does not implicitly {@link StoreItem_Tag.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Tag
         * @static
         * @param {IStoreItem_Tag} message StoreItem_Tag message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Tag.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Tag message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Tag
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Tag} StoreItem_Tag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Tag.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Tag();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.tagid = reader.uint32();
                    break;
                case 2:
                    message.weight = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Tag message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Tag
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Tag} StoreItem_Tag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Tag.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Tag message.
         * @function verify
         * @memberof StoreItem_Tag
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Tag.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tagid != null && message.hasOwnProperty("tagid"))
                if (!$util.isInteger(message.tagid))
                    return "tagid: integer expected";
            if (message.weight != null && message.hasOwnProperty("weight"))
                if (!$util.isInteger(message.weight))
                    return "weight: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Tag message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Tag
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Tag} StoreItem_Tag
         */
        StoreItem_Tag.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Tag)
                return object;
            var message = new $root.StoreItem_Tag();
            if (object.tagid != null)
                message.tagid = object.tagid >>> 0;
            if (object.weight != null)
                message.weight = object.weight >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Tag message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Tag
         * @static
         * @param {StoreItem_Tag} message StoreItem_Tag
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Tag.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.tagid = 0;
                object.weight = 0;
            }
            if (message.tagid != null && message.hasOwnProperty("tagid"))
                object.tagid = message.tagid;
            if (message.weight != null && message.hasOwnProperty("weight"))
                object.weight = message.weight;
            return object;
        };
    
        /**
         * Converts this StoreItem_Tag to JSON.
         * @function toJSON
         * @memberof StoreItem_Tag
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Tag.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Tag;
    })();
    
    $root.StoreItem_Trailers = (function() {
    
        /**
         * Properties of a StoreItem_Trailers.
         * @exports IStoreItem_Trailers
         * @interface IStoreItem_Trailers
         * @property {Array.<IStoreItem_Trailers_Trailer>|null} [highlights] StoreItem_Trailers highlights
         * @property {Array.<IStoreItem_Trailers_Trailer>|null} [other_trailers] StoreItem_Trailers other_trailers
         */
    
        /**
         * Constructs a new StoreItem_Trailers.
         * @exports StoreItem_Trailers
         * @classdesc Represents a StoreItem_Trailers.
         * @implements IStoreItem_Trailers
         * @constructor
         * @param {IStoreItem_Trailers=} [properties] Properties to set
         */
        function StoreItem_Trailers(properties) {
            this.highlights = [];
            this.other_trailers = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Trailers highlights.
         * @member {Array.<IStoreItem_Trailers_Trailer>} highlights
         * @memberof StoreItem_Trailers
         * @instance
         */
        StoreItem_Trailers.prototype.highlights = $util.emptyArray;
    
        /**
         * StoreItem_Trailers other_trailers.
         * @member {Array.<IStoreItem_Trailers_Trailer>} other_trailers
         * @memberof StoreItem_Trailers
         * @instance
         */
        StoreItem_Trailers.prototype.other_trailers = $util.emptyArray;
    
        /**
         * Creates a new StoreItem_Trailers instance using the specified properties.
         * @function create
         * @memberof StoreItem_Trailers
         * @static
         * @param {IStoreItem_Trailers=} [properties] Properties to set
         * @returns {StoreItem_Trailers} StoreItem_Trailers instance
         */
        StoreItem_Trailers.create = function create(properties) {
            return new StoreItem_Trailers(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Trailers message. Does not implicitly {@link StoreItem_Trailers.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Trailers
         * @static
         * @param {IStoreItem_Trailers} message StoreItem_Trailers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.highlights != null && message.highlights.length)
                for (var i = 0; i < message.highlights.length; ++i)
                    $root.StoreItem_Trailers_Trailer.encode(message.highlights[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.other_trailers != null && message.other_trailers.length)
                for (var i = 0; i < message.other_trailers.length; ++i)
                    $root.StoreItem_Trailers_Trailer.encode(message.other_trailers[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Trailers message, length delimited. Does not implicitly {@link StoreItem_Trailers.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Trailers
         * @static
         * @param {IStoreItem_Trailers} message StoreItem_Trailers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Trailers message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Trailers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Trailers} StoreItem_Trailers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Trailers();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.highlights && message.highlights.length))
                        message.highlights = [];
                    message.highlights.push($root.StoreItem_Trailers_Trailer.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.other_trailers && message.other_trailers.length))
                        message.other_trailers = [];
                    message.other_trailers.push($root.StoreItem_Trailers_Trailer.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Trailers message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Trailers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Trailers} StoreItem_Trailers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Trailers message.
         * @function verify
         * @memberof StoreItem_Trailers
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Trailers.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.highlights != null && message.hasOwnProperty("highlights")) {
                if (!Array.isArray(message.highlights))
                    return "highlights: array expected";
                for (var i = 0; i < message.highlights.length; ++i) {
                    var error = $root.StoreItem_Trailers_Trailer.verify(message.highlights[i]);
                    if (error)
                        return "highlights." + error;
                }
            }
            if (message.other_trailers != null && message.hasOwnProperty("other_trailers")) {
                if (!Array.isArray(message.other_trailers))
                    return "other_trailers: array expected";
                for (var i = 0; i < message.other_trailers.length; ++i) {
                    var error = $root.StoreItem_Trailers_Trailer.verify(message.other_trailers[i]);
                    if (error)
                        return "other_trailers." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a StoreItem_Trailers message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Trailers
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Trailers} StoreItem_Trailers
         */
        StoreItem_Trailers.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Trailers)
                return object;
            var message = new $root.StoreItem_Trailers();
            if (object.highlights) {
                if (!Array.isArray(object.highlights))
                    throw TypeError(".StoreItem_Trailers.highlights: array expected");
                message.highlights = [];
                for (var i = 0; i < object.highlights.length; ++i) {
                    if (typeof object.highlights[i] !== "object")
                        throw TypeError(".StoreItem_Trailers.highlights: object expected");
                    message.highlights[i] = $root.StoreItem_Trailers_Trailer.fromObject(object.highlights[i]);
                }
            }
            if (object.other_trailers) {
                if (!Array.isArray(object.other_trailers))
                    throw TypeError(".StoreItem_Trailers.other_trailers: array expected");
                message.other_trailers = [];
                for (var i = 0; i < object.other_trailers.length; ++i) {
                    if (typeof object.other_trailers[i] !== "object")
                        throw TypeError(".StoreItem_Trailers.other_trailers: object expected");
                    message.other_trailers[i] = $root.StoreItem_Trailers_Trailer.fromObject(object.other_trailers[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Trailers message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Trailers
         * @static
         * @param {StoreItem_Trailers} message StoreItem_Trailers
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Trailers.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.highlights = [];
                object.other_trailers = [];
            }
            if (message.highlights && message.highlights.length) {
                object.highlights = [];
                for (var j = 0; j < message.highlights.length; ++j)
                    object.highlights[j] = $root.StoreItem_Trailers_Trailer.toObject(message.highlights[j], options);
            }
            if (message.other_trailers && message.other_trailers.length) {
                object.other_trailers = [];
                for (var j = 0; j < message.other_trailers.length; ++j)
                    object.other_trailers[j] = $root.StoreItem_Trailers_Trailer.toObject(message.other_trailers[j], options);
            }
            return object;
        };
    
        /**
         * Converts this StoreItem_Trailers to JSON.
         * @function toJSON
         * @memberof StoreItem_Trailers
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Trailers.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Trailers;
    })();
    
    $root.StoreItem_Trailers_Trailer = (function() {
    
        /**
         * Properties of a StoreItem_Trailers_Trailer.
         * @exports IStoreItem_Trailers_Trailer
         * @interface IStoreItem_Trailers_Trailer
         * @property {string|null} [trailer_name] StoreItem_Trailers_Trailer trailer_name
         * @property {string|null} [trailer_url_format] StoreItem_Trailers_Trailer trailer_url_format
         * @property {Array.<IStoreItem_Trailers_VideoSource>|null} [trailer_480p] StoreItem_Trailers_Trailer trailer_480p
         * @property {Array.<IStoreItem_Trailers_VideoSource>|null} [trailer_max] StoreItem_Trailers_Trailer trailer_max
         * @property {Array.<IStoreItem_Trailers_VideoSource>|null} [microtrailer] StoreItem_Trailers_Trailer microtrailer
         * @property {string|null} [screenshot_medium] StoreItem_Trailers_Trailer screenshot_medium
         * @property {string|null} [screenshot_full] StoreItem_Trailers_Trailer screenshot_full
         * @property {number|null} [trailer_base_id] StoreItem_Trailers_Trailer trailer_base_id
         */
    
        /**
         * Constructs a new StoreItem_Trailers_Trailer.
         * @exports StoreItem_Trailers_Trailer
         * @classdesc Represents a StoreItem_Trailers_Trailer.
         * @implements IStoreItem_Trailers_Trailer
         * @constructor
         * @param {IStoreItem_Trailers_Trailer=} [properties] Properties to set
         */
        function StoreItem_Trailers_Trailer(properties) {
            this.trailer_480p = [];
            this.trailer_max = [];
            this.microtrailer = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Trailers_Trailer trailer_name.
         * @member {string} trailer_name
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.trailer_name = "";
    
        /**
         * StoreItem_Trailers_Trailer trailer_url_format.
         * @member {string} trailer_url_format
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.trailer_url_format = "";
    
        /**
         * StoreItem_Trailers_Trailer trailer_480p.
         * @member {Array.<IStoreItem_Trailers_VideoSource>} trailer_480p
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.trailer_480p = $util.emptyArray;
    
        /**
         * StoreItem_Trailers_Trailer trailer_max.
         * @member {Array.<IStoreItem_Trailers_VideoSource>} trailer_max
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.trailer_max = $util.emptyArray;
    
        /**
         * StoreItem_Trailers_Trailer microtrailer.
         * @member {Array.<IStoreItem_Trailers_VideoSource>} microtrailer
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.microtrailer = $util.emptyArray;
    
        /**
         * StoreItem_Trailers_Trailer screenshot_medium.
         * @member {string} screenshot_medium
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.screenshot_medium = "";
    
        /**
         * StoreItem_Trailers_Trailer screenshot_full.
         * @member {string} screenshot_full
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.screenshot_full = "";
    
        /**
         * StoreItem_Trailers_Trailer trailer_base_id.
         * @member {number} trailer_base_id
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         */
        StoreItem_Trailers_Trailer.prototype.trailer_base_id = 0;
    
        /**
         * Creates a new StoreItem_Trailers_Trailer instance using the specified properties.
         * @function create
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {IStoreItem_Trailers_Trailer=} [properties] Properties to set
         * @returns {StoreItem_Trailers_Trailer} StoreItem_Trailers_Trailer instance
         */
        StoreItem_Trailers_Trailer.create = function create(properties) {
            return new StoreItem_Trailers_Trailer(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Trailers_Trailer message. Does not implicitly {@link StoreItem_Trailers_Trailer.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {IStoreItem_Trailers_Trailer} message StoreItem_Trailers_Trailer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers_Trailer.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.trailer_name != null && message.hasOwnProperty("trailer_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.trailer_name);
            if (message.trailer_url_format != null && message.hasOwnProperty("trailer_url_format"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.trailer_url_format);
            if (message.trailer_480p != null && message.trailer_480p.length)
                for (var i = 0; i < message.trailer_480p.length; ++i)
                    $root.StoreItem_Trailers_VideoSource.encode(message.trailer_480p[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.trailer_max != null && message.trailer_max.length)
                for (var i = 0; i < message.trailer_max.length; ++i)
                    $root.StoreItem_Trailers_VideoSource.encode(message.trailer_max[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.microtrailer != null && message.microtrailer.length)
                for (var i = 0; i < message.microtrailer.length; ++i)
                    $root.StoreItem_Trailers_VideoSource.encode(message.microtrailer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.screenshot_medium != null && message.hasOwnProperty("screenshot_medium"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.screenshot_medium);
            if (message.screenshot_full != null && message.hasOwnProperty("screenshot_full"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.screenshot_full);
            if (message.trailer_base_id != null && message.hasOwnProperty("trailer_base_id"))
                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.trailer_base_id);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Trailers_Trailer message, length delimited. Does not implicitly {@link StoreItem_Trailers_Trailer.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {IStoreItem_Trailers_Trailer} message StoreItem_Trailers_Trailer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers_Trailer.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Trailers_Trailer message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Trailers_Trailer} StoreItem_Trailers_Trailer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers_Trailer.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Trailers_Trailer();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.trailer_name = reader.string();
                    break;
                case 2:
                    message.trailer_url_format = reader.string();
                    break;
                case 3:
                    if (!(message.trailer_480p && message.trailer_480p.length))
                        message.trailer_480p = [];
                    message.trailer_480p.push($root.StoreItem_Trailers_VideoSource.decode(reader, reader.uint32()));
                    break;
                case 4:
                    if (!(message.trailer_max && message.trailer_max.length))
                        message.trailer_max = [];
                    message.trailer_max.push($root.StoreItem_Trailers_VideoSource.decode(reader, reader.uint32()));
                    break;
                case 5:
                    if (!(message.microtrailer && message.microtrailer.length))
                        message.microtrailer = [];
                    message.microtrailer.push($root.StoreItem_Trailers_VideoSource.decode(reader, reader.uint32()));
                    break;
                case 10:
                    message.screenshot_medium = reader.string();
                    break;
                case 11:
                    message.screenshot_full = reader.string();
                    break;
                case 12:
                    message.trailer_base_id = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Trailers_Trailer message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Trailers_Trailer} StoreItem_Trailers_Trailer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers_Trailer.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Trailers_Trailer message.
         * @function verify
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Trailers_Trailer.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.trailer_name != null && message.hasOwnProperty("trailer_name"))
                if (!$util.isString(message.trailer_name))
                    return "trailer_name: string expected";
            if (message.trailer_url_format != null && message.hasOwnProperty("trailer_url_format"))
                if (!$util.isString(message.trailer_url_format))
                    return "trailer_url_format: string expected";
            if (message.trailer_480p != null && message.hasOwnProperty("trailer_480p")) {
                if (!Array.isArray(message.trailer_480p))
                    return "trailer_480p: array expected";
                for (var i = 0; i < message.trailer_480p.length; ++i) {
                    var error = $root.StoreItem_Trailers_VideoSource.verify(message.trailer_480p[i]);
                    if (error)
                        return "trailer_480p." + error;
                }
            }
            if (message.trailer_max != null && message.hasOwnProperty("trailer_max")) {
                if (!Array.isArray(message.trailer_max))
                    return "trailer_max: array expected";
                for (var i = 0; i < message.trailer_max.length; ++i) {
                    var error = $root.StoreItem_Trailers_VideoSource.verify(message.trailer_max[i]);
                    if (error)
                        return "trailer_max." + error;
                }
            }
            if (message.microtrailer != null && message.hasOwnProperty("microtrailer")) {
                if (!Array.isArray(message.microtrailer))
                    return "microtrailer: array expected";
                for (var i = 0; i < message.microtrailer.length; ++i) {
                    var error = $root.StoreItem_Trailers_VideoSource.verify(message.microtrailer[i]);
                    if (error)
                        return "microtrailer." + error;
                }
            }
            if (message.screenshot_medium != null && message.hasOwnProperty("screenshot_medium"))
                if (!$util.isString(message.screenshot_medium))
                    return "screenshot_medium: string expected";
            if (message.screenshot_full != null && message.hasOwnProperty("screenshot_full"))
                if (!$util.isString(message.screenshot_full))
                    return "screenshot_full: string expected";
            if (message.trailer_base_id != null && message.hasOwnProperty("trailer_base_id"))
                if (!$util.isInteger(message.trailer_base_id))
                    return "trailer_base_id: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Trailers_Trailer message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Trailers_Trailer} StoreItem_Trailers_Trailer
         */
        StoreItem_Trailers_Trailer.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Trailers_Trailer)
                return object;
            var message = new $root.StoreItem_Trailers_Trailer();
            if (object.trailer_name != null)
                message.trailer_name = String(object.trailer_name);
            if (object.trailer_url_format != null)
                message.trailer_url_format = String(object.trailer_url_format);
            if (object.trailer_480p) {
                if (!Array.isArray(object.trailer_480p))
                    throw TypeError(".StoreItem_Trailers_Trailer.trailer_480p: array expected");
                message.trailer_480p = [];
                for (var i = 0; i < object.trailer_480p.length; ++i) {
                    if (typeof object.trailer_480p[i] !== "object")
                        throw TypeError(".StoreItem_Trailers_Trailer.trailer_480p: object expected");
                    message.trailer_480p[i] = $root.StoreItem_Trailers_VideoSource.fromObject(object.trailer_480p[i]);
                }
            }
            if (object.trailer_max) {
                if (!Array.isArray(object.trailer_max))
                    throw TypeError(".StoreItem_Trailers_Trailer.trailer_max: array expected");
                message.trailer_max = [];
                for (var i = 0; i < object.trailer_max.length; ++i) {
                    if (typeof object.trailer_max[i] !== "object")
                        throw TypeError(".StoreItem_Trailers_Trailer.trailer_max: object expected");
                    message.trailer_max[i] = $root.StoreItem_Trailers_VideoSource.fromObject(object.trailer_max[i]);
                }
            }
            if (object.microtrailer) {
                if (!Array.isArray(object.microtrailer))
                    throw TypeError(".StoreItem_Trailers_Trailer.microtrailer: array expected");
                message.microtrailer = [];
                for (var i = 0; i < object.microtrailer.length; ++i) {
                    if (typeof object.microtrailer[i] !== "object")
                        throw TypeError(".StoreItem_Trailers_Trailer.microtrailer: object expected");
                    message.microtrailer[i] = $root.StoreItem_Trailers_VideoSource.fromObject(object.microtrailer[i]);
                }
            }
            if (object.screenshot_medium != null)
                message.screenshot_medium = String(object.screenshot_medium);
            if (object.screenshot_full != null)
                message.screenshot_full = String(object.screenshot_full);
            if (object.trailer_base_id != null)
                message.trailer_base_id = object.trailer_base_id | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Trailers_Trailer message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Trailers_Trailer
         * @static
         * @param {StoreItem_Trailers_Trailer} message StoreItem_Trailers_Trailer
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Trailers_Trailer.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.trailer_480p = [];
                object.trailer_max = [];
                object.microtrailer = [];
            }
            if (options.defaults) {
                object.trailer_name = "";
                object.trailer_url_format = "";
                object.screenshot_medium = "";
                object.screenshot_full = "";
                object.trailer_base_id = 0;
            }
            if (message.trailer_name != null && message.hasOwnProperty("trailer_name"))
                object.trailer_name = message.trailer_name;
            if (message.trailer_url_format != null && message.hasOwnProperty("trailer_url_format"))
                object.trailer_url_format = message.trailer_url_format;
            if (message.trailer_480p && message.trailer_480p.length) {
                object.trailer_480p = [];
                for (var j = 0; j < message.trailer_480p.length; ++j)
                    object.trailer_480p[j] = $root.StoreItem_Trailers_VideoSource.toObject(message.trailer_480p[j], options);
            }
            if (message.trailer_max && message.trailer_max.length) {
                object.trailer_max = [];
                for (var j = 0; j < message.trailer_max.length; ++j)
                    object.trailer_max[j] = $root.StoreItem_Trailers_VideoSource.toObject(message.trailer_max[j], options);
            }
            if (message.microtrailer && message.microtrailer.length) {
                object.microtrailer = [];
                for (var j = 0; j < message.microtrailer.length; ++j)
                    object.microtrailer[j] = $root.StoreItem_Trailers_VideoSource.toObject(message.microtrailer[j], options);
            }
            if (message.screenshot_medium != null && message.hasOwnProperty("screenshot_medium"))
                object.screenshot_medium = message.screenshot_medium;
            if (message.screenshot_full != null && message.hasOwnProperty("screenshot_full"))
                object.screenshot_full = message.screenshot_full;
            if (message.trailer_base_id != null && message.hasOwnProperty("trailer_base_id"))
                object.trailer_base_id = message.trailer_base_id;
            return object;
        };
    
        /**
         * Converts this StoreItem_Trailers_Trailer to JSON.
         * @function toJSON
         * @memberof StoreItem_Trailers_Trailer
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Trailers_Trailer.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Trailers_Trailer;
    })();
    
    $root.StoreItem_Trailers_VideoSource = (function() {
    
        /**
         * Properties of a StoreItem_Trailers_VideoSource.
         * @exports IStoreItem_Trailers_VideoSource
         * @interface IStoreItem_Trailers_VideoSource
         * @property {string|null} [filename] StoreItem_Trailers_VideoSource filename
         * @property {string|null} [type] StoreItem_Trailers_VideoSource type
         */
    
        /**
         * Constructs a new StoreItem_Trailers_VideoSource.
         * @exports StoreItem_Trailers_VideoSource
         * @classdesc Represents a StoreItem_Trailers_VideoSource.
         * @implements IStoreItem_Trailers_VideoSource
         * @constructor
         * @param {IStoreItem_Trailers_VideoSource=} [properties] Properties to set
         */
        function StoreItem_Trailers_VideoSource(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItem_Trailers_VideoSource filename.
         * @member {string} filename
         * @memberof StoreItem_Trailers_VideoSource
         * @instance
         */
        StoreItem_Trailers_VideoSource.prototype.filename = "";
    
        /**
         * StoreItem_Trailers_VideoSource type.
         * @member {string} type
         * @memberof StoreItem_Trailers_VideoSource
         * @instance
         */
        StoreItem_Trailers_VideoSource.prototype.type = "";
    
        /**
         * Creates a new StoreItem_Trailers_VideoSource instance using the specified properties.
         * @function create
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {IStoreItem_Trailers_VideoSource=} [properties] Properties to set
         * @returns {StoreItem_Trailers_VideoSource} StoreItem_Trailers_VideoSource instance
         */
        StoreItem_Trailers_VideoSource.create = function create(properties) {
            return new StoreItem_Trailers_VideoSource(properties);
        };
    
        /**
         * Encodes the specified StoreItem_Trailers_VideoSource message. Does not implicitly {@link StoreItem_Trailers_VideoSource.verify|verify} messages.
         * @function encode
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {IStoreItem_Trailers_VideoSource} message StoreItem_Trailers_VideoSource message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers_VideoSource.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItem_Trailers_VideoSource message, length delimited. Does not implicitly {@link StoreItem_Trailers_VideoSource.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {IStoreItem_Trailers_VideoSource} message StoreItem_Trailers_VideoSource message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItem_Trailers_VideoSource.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItem_Trailers_VideoSource message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItem_Trailers_VideoSource} StoreItem_Trailers_VideoSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers_VideoSource.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItem_Trailers_VideoSource();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.type = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItem_Trailers_VideoSource message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItem_Trailers_VideoSource} StoreItem_Trailers_VideoSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItem_Trailers_VideoSource.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItem_Trailers_VideoSource message.
         * @function verify
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItem_Trailers_VideoSource.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isString(message.type))
                    return "type: string expected";
            return null;
        };
    
        /**
         * Creates a StoreItem_Trailers_VideoSource message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItem_Trailers_VideoSource} StoreItem_Trailers_VideoSource
         */
        StoreItem_Trailers_VideoSource.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItem_Trailers_VideoSource)
                return object;
            var message = new $root.StoreItem_Trailers_VideoSource();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.type != null)
                message.type = String(object.type);
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItem_Trailers_VideoSource message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItem_Trailers_VideoSource
         * @static
         * @param {StoreItem_Trailers_VideoSource} message StoreItem_Trailers_VideoSource
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItem_Trailers_VideoSource.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.type = "";
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            return object;
        };
    
        /**
         * Converts this StoreItem_Trailers_VideoSource to JSON.
         * @function toJSON
         * @memberof StoreItem_Trailers_VideoSource
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItem_Trailers_VideoSource.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItem_Trailers_VideoSource;
    })();
    
    $root.StoreItemID = (function() {
    
        /**
         * Properties of a StoreItemID.
         * @exports IStoreItemID
         * @interface IStoreItemID
         * @property {number|null} [appid] StoreItemID appid
         * @property {number|null} [packageid] StoreItemID packageid
         * @property {number|null} [bundleid] StoreItemID bundleid
         */
    
        /**
         * Constructs a new StoreItemID.
         * @exports StoreItemID
         * @classdesc Represents a StoreItemID.
         * @implements IStoreItemID
         * @constructor
         * @param {IStoreItemID=} [properties] Properties to set
         */
        function StoreItemID(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * StoreItemID appid.
         * @member {number} appid
         * @memberof StoreItemID
         * @instance
         */
        StoreItemID.prototype.appid = 0;
    
        /**
         * StoreItemID packageid.
         * @member {number} packageid
         * @memberof StoreItemID
         * @instance
         */
        StoreItemID.prototype.packageid = 0;
    
        /**
         * StoreItemID bundleid.
         * @member {number} bundleid
         * @memberof StoreItemID
         * @instance
         */
        StoreItemID.prototype.bundleid = 0;
    
        /**
         * Creates a new StoreItemID instance using the specified properties.
         * @function create
         * @memberof StoreItemID
         * @static
         * @param {IStoreItemID=} [properties] Properties to set
         * @returns {StoreItemID} StoreItemID instance
         */
        StoreItemID.create = function create(properties) {
            return new StoreItemID(properties);
        };
    
        /**
         * Encodes the specified StoreItemID message. Does not implicitly {@link StoreItemID.verify|verify} messages.
         * @function encode
         * @memberof StoreItemID
         * @static
         * @param {IStoreItemID} message StoreItemID message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItemID.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.packageid);
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.bundleid);
            return writer;
        };
    
        /**
         * Encodes the specified StoreItemID message, length delimited. Does not implicitly {@link StoreItemID.verify|verify} messages.
         * @function encodeDelimited
         * @memberof StoreItemID
         * @static
         * @param {IStoreItemID} message StoreItemID message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        StoreItemID.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a StoreItemID message from the specified reader or buffer.
         * @function decode
         * @memberof StoreItemID
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {StoreItemID} StoreItemID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItemID.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.StoreItemID();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.packageid = reader.uint32();
                    break;
                case 3:
                    message.bundleid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a StoreItemID message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof StoreItemID
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {StoreItemID} StoreItemID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        StoreItemID.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a StoreItemID message.
         * @function verify
         * @memberof StoreItemID
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        StoreItemID.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                if (!$util.isInteger(message.packageid))
                    return "packageid: integer expected";
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                if (!$util.isInteger(message.bundleid))
                    return "bundleid: integer expected";
            return null;
        };
    
        /**
         * Creates a StoreItemID message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof StoreItemID
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {StoreItemID} StoreItemID
         */
        StoreItemID.fromObject = function fromObject(object) {
            if (object instanceof $root.StoreItemID)
                return object;
            var message = new $root.StoreItemID();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.packageid != null)
                message.packageid = object.packageid >>> 0;
            if (object.bundleid != null)
                message.bundleid = object.bundleid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a StoreItemID message. Also converts values to other types if specified.
         * @function toObject
         * @memberof StoreItemID
         * @static
         * @param {StoreItemID} message StoreItemID
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        StoreItemID.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.packageid = 0;
                object.bundleid = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                object.packageid = message.packageid;
            if (message.bundleid != null && message.hasOwnProperty("bundleid"))
                object.bundleid = message.bundleid;
            return object;
        };
    
        /**
         * Converts this StoreItemID to JSON.
         * @function toJSON
         * @memberof StoreItemID
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        StoreItemID.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return StoreItemID;
    })();

    return $root;
});
