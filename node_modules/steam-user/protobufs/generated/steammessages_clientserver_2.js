/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    $root.CMsgClientUpdateUserGameInfo = (function() {
    
        /**
         * Properties of a CMsgClientUpdateUserGameInfo.
         * @exports ICMsgClientUpdateUserGameInfo
         * @interface ICMsgClientUpdateUserGameInfo
         * @property {number|Long|null} [steamid_idgs] CMsgClientUpdateUserGameInfo steamid_idgs
         * @property {number|Long|null} [gameid] CMsgClientUpdateUserGameInfo gameid
         * @property {number|null} [game_ip] CMsgClientUpdateUserGameInfo game_ip
         * @property {number|null} [game_port] CMsgClientUpdateUserGameInfo game_port
         * @property {Uint8Array|null} [token] CMsgClientUpdateUserGameInfo token
         */
    
        /**
         * Constructs a new CMsgClientUpdateUserGameInfo.
         * @exports CMsgClientUpdateUserGameInfo
         * @classdesc Represents a CMsgClientUpdateUserGameInfo.
         * @implements ICMsgClientUpdateUserGameInfo
         * @constructor
         * @param {ICMsgClientUpdateUserGameInfo=} [properties] Properties to set
         */
        function CMsgClientUpdateUserGameInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUpdateUserGameInfo steamid_idgs.
         * @member {number|Long} steamid_idgs
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         */
        CMsgClientUpdateUserGameInfo.prototype.steamid_idgs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUpdateUserGameInfo gameid.
         * @member {number|Long} gameid
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         */
        CMsgClientUpdateUserGameInfo.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUpdateUserGameInfo game_ip.
         * @member {number} game_ip
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         */
        CMsgClientUpdateUserGameInfo.prototype.game_ip = 0;
    
        /**
         * CMsgClientUpdateUserGameInfo game_port.
         * @member {number} game_port
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         */
        CMsgClientUpdateUserGameInfo.prototype.game_port = 0;
    
        /**
         * CMsgClientUpdateUserGameInfo token.
         * @member {Uint8Array} token
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         */
        CMsgClientUpdateUserGameInfo.prototype.token = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientUpdateUserGameInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {ICMsgClientUpdateUserGameInfo=} [properties] Properties to set
         * @returns {CMsgClientUpdateUserGameInfo} CMsgClientUpdateUserGameInfo instance
         */
        CMsgClientUpdateUserGameInfo.create = function create(properties) {
            return new CMsgClientUpdateUserGameInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUpdateUserGameInfo message. Does not implicitly {@link CMsgClientUpdateUserGameInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {ICMsgClientUpdateUserGameInfo} message CMsgClientUpdateUserGameInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateUserGameInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_idgs != null && message.hasOwnProperty("steamid_idgs"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_idgs);
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.gameid);
            if (message.game_ip != null && message.hasOwnProperty("game_ip"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.game_ip);
            if (message.game_port != null && message.hasOwnProperty("game_port"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_port);
            if (message.token != null && message.hasOwnProperty("token"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUpdateUserGameInfo message, length delimited. Does not implicitly {@link CMsgClientUpdateUserGameInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {ICMsgClientUpdateUserGameInfo} message CMsgClientUpdateUserGameInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateUserGameInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUpdateUserGameInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUpdateUserGameInfo} CMsgClientUpdateUserGameInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateUserGameInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUpdateUserGameInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_idgs = reader.fixed64();
                    break;
                case 2:
                    message.gameid = reader.fixed64();
                    break;
                case 3:
                    message.game_ip = reader.uint32();
                    break;
                case 4:
                    message.game_port = reader.uint32();
                    break;
                case 5:
                    message.token = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUpdateUserGameInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUpdateUserGameInfo} CMsgClientUpdateUserGameInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateUserGameInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUpdateUserGameInfo message.
         * @function verify
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUpdateUserGameInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_idgs != null && message.hasOwnProperty("steamid_idgs"))
                if (!$util.isInteger(message.steamid_idgs) && !(message.steamid_idgs && $util.isInteger(message.steamid_idgs.low) && $util.isInteger(message.steamid_idgs.high)))
                    return "steamid_idgs: integer|Long expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.game_ip != null && message.hasOwnProperty("game_ip"))
                if (!$util.isInteger(message.game_ip))
                    return "game_ip: integer expected";
            if (message.game_port != null && message.hasOwnProperty("game_port"))
                if (!$util.isInteger(message.game_port))
                    return "game_port: integer expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                    return "token: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUpdateUserGameInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUpdateUserGameInfo} CMsgClientUpdateUserGameInfo
         */
        CMsgClientUpdateUserGameInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUpdateUserGameInfo)
                return object;
            var message = new $root.CMsgClientUpdateUserGameInfo();
            if (object.steamid_idgs != null)
                if ($util.Long)
                    (message.steamid_idgs = $util.Long.fromValue(object.steamid_idgs)).unsigned = false;
                else if (typeof object.steamid_idgs === "string")
                    message.steamid_idgs = parseInt(object.steamid_idgs, 10);
                else if (typeof object.steamid_idgs === "number")
                    message.steamid_idgs = object.steamid_idgs;
                else if (typeof object.steamid_idgs === "object")
                    message.steamid_idgs = new $util.LongBits(object.steamid_idgs.low >>> 0, object.steamid_idgs.high >>> 0).toNumber();
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = false;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber();
            if (object.game_ip != null)
                message.game_ip = object.game_ip >>> 0;
            if (object.game_port != null)
                message.game_port = object.game_port >>> 0;
            if (object.token != null)
                if (typeof object.token === "string")
                    $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                else if (object.token.length)
                    message.token = object.token;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUpdateUserGameInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUpdateUserGameInfo
         * @static
         * @param {CMsgClientUpdateUserGameInfo} message CMsgClientUpdateUserGameInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUpdateUserGameInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_idgs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_idgs = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                object.game_ip = 0;
                object.game_port = 0;
                if (options.bytes === String)
                    object.token = "";
                else {
                    object.token = [];
                    if (options.bytes !== Array)
                        object.token = $util.newBuffer(object.token);
                }
            }
            if (message.steamid_idgs != null && message.hasOwnProperty("steamid_idgs"))
                if (typeof message.steamid_idgs === "number")
                    object.steamid_idgs = options.longs === String ? String(message.steamid_idgs) : message.steamid_idgs;
                else
                    object.steamid_idgs = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_idgs) : options.longs === Number ? new $util.LongBits(message.steamid_idgs.low >>> 0, message.steamid_idgs.high >>> 0).toNumber() : message.steamid_idgs;
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber() : message.gameid;
            if (message.game_ip != null && message.hasOwnProperty("game_ip"))
                object.game_ip = message.game_ip;
            if (message.game_port != null && message.hasOwnProperty("game_port"))
                object.game_port = message.game_port;
            if (message.token != null && message.hasOwnProperty("token"))
                object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
            return object;
        };
    
        /**
         * Converts this CMsgClientUpdateUserGameInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientUpdateUserGameInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUpdateUserGameInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUpdateUserGameInfo;
    })();
    
    $root.CMsgClientRichPresenceUpload = (function() {
    
        /**
         * Properties of a CMsgClientRichPresenceUpload.
         * @exports ICMsgClientRichPresenceUpload
         * @interface ICMsgClientRichPresenceUpload
         * @property {Uint8Array|null} [rich_presence_kv] CMsgClientRichPresenceUpload rich_presence_kv
         * @property {Array.<number|Long>|null} [steamid_broadcast] CMsgClientRichPresenceUpload steamid_broadcast
         */
    
        /**
         * Constructs a new CMsgClientRichPresenceUpload.
         * @exports CMsgClientRichPresenceUpload
         * @classdesc Represents a CMsgClientRichPresenceUpload.
         * @implements ICMsgClientRichPresenceUpload
         * @constructor
         * @param {ICMsgClientRichPresenceUpload=} [properties] Properties to set
         */
        function CMsgClientRichPresenceUpload(properties) {
            this.steamid_broadcast = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRichPresenceUpload rich_presence_kv.
         * @member {Uint8Array} rich_presence_kv
         * @memberof CMsgClientRichPresenceUpload
         * @instance
         */
        CMsgClientRichPresenceUpload.prototype.rich_presence_kv = $util.newBuffer([]);
    
        /**
         * CMsgClientRichPresenceUpload steamid_broadcast.
         * @member {Array.<number|Long>} steamid_broadcast
         * @memberof CMsgClientRichPresenceUpload
         * @instance
         */
        CMsgClientRichPresenceUpload.prototype.steamid_broadcast = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRichPresenceUpload instance using the specified properties.
         * @function create
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {ICMsgClientRichPresenceUpload=} [properties] Properties to set
         * @returns {CMsgClientRichPresenceUpload} CMsgClientRichPresenceUpload instance
         */
        CMsgClientRichPresenceUpload.create = function create(properties) {
            return new CMsgClientRichPresenceUpload(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceUpload message. Does not implicitly {@link CMsgClientRichPresenceUpload.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {ICMsgClientRichPresenceUpload} message CMsgClientRichPresenceUpload message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceUpload.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.rich_presence_kv);
            if (message.steamid_broadcast != null && message.steamid_broadcast.length)
                for (var i = 0; i < message.steamid_broadcast.length; ++i)
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid_broadcast[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceUpload message, length delimited. Does not implicitly {@link CMsgClientRichPresenceUpload.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {ICMsgClientRichPresenceUpload} message CMsgClientRichPresenceUpload message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceUpload.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRichPresenceUpload message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRichPresenceUpload} CMsgClientRichPresenceUpload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceUpload.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRichPresenceUpload();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.rich_presence_kv = reader.bytes();
                    break;
                case 2:
                    if (!(message.steamid_broadcast && message.steamid_broadcast.length))
                        message.steamid_broadcast = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_broadcast.push(reader.fixed64());
                    } else
                        message.steamid_broadcast.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRichPresenceUpload message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRichPresenceUpload} CMsgClientRichPresenceUpload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceUpload.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRichPresenceUpload message.
         * @function verify
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRichPresenceUpload.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                if (!(message.rich_presence_kv && typeof message.rich_presence_kv.length === "number" || $util.isString(message.rich_presence_kv)))
                    return "rich_presence_kv: buffer expected";
            if (message.steamid_broadcast != null && message.hasOwnProperty("steamid_broadcast")) {
                if (!Array.isArray(message.steamid_broadcast))
                    return "steamid_broadcast: array expected";
                for (var i = 0; i < message.steamid_broadcast.length; ++i)
                    if (!$util.isInteger(message.steamid_broadcast[i]) && !(message.steamid_broadcast[i] && $util.isInteger(message.steamid_broadcast[i].low) && $util.isInteger(message.steamid_broadcast[i].high)))
                        return "steamid_broadcast: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRichPresenceUpload message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRichPresenceUpload} CMsgClientRichPresenceUpload
         */
        CMsgClientRichPresenceUpload.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRichPresenceUpload)
                return object;
            var message = new $root.CMsgClientRichPresenceUpload();
            if (object.rich_presence_kv != null)
                if (typeof object.rich_presence_kv === "string")
                    $util.base64.decode(object.rich_presence_kv, message.rich_presence_kv = $util.newBuffer($util.base64.length(object.rich_presence_kv)), 0);
                else if (object.rich_presence_kv.length)
                    message.rich_presence_kv = object.rich_presence_kv;
            if (object.steamid_broadcast) {
                if (!Array.isArray(object.steamid_broadcast))
                    throw TypeError(".CMsgClientRichPresenceUpload.steamid_broadcast: array expected");
                message.steamid_broadcast = [];
                for (var i = 0; i < object.steamid_broadcast.length; ++i)
                    if ($util.Long)
                        (message.steamid_broadcast[i] = $util.Long.fromValue(object.steamid_broadcast[i])).unsigned = false;
                    else if (typeof object.steamid_broadcast[i] === "string")
                        message.steamid_broadcast[i] = parseInt(object.steamid_broadcast[i], 10);
                    else if (typeof object.steamid_broadcast[i] === "number")
                        message.steamid_broadcast[i] = object.steamid_broadcast[i];
                    else if (typeof object.steamid_broadcast[i] === "object")
                        message.steamid_broadcast[i] = new $util.LongBits(object.steamid_broadcast[i].low >>> 0, object.steamid_broadcast[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRichPresenceUpload message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRichPresenceUpload
         * @static
         * @param {CMsgClientRichPresenceUpload} message CMsgClientRichPresenceUpload
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRichPresenceUpload.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_broadcast = [];
            if (options.defaults)
                if (options.bytes === String)
                    object.rich_presence_kv = "";
                else {
                    object.rich_presence_kv = [];
                    if (options.bytes !== Array)
                        object.rich_presence_kv = $util.newBuffer(object.rich_presence_kv);
                }
            if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                object.rich_presence_kv = options.bytes === String ? $util.base64.encode(message.rich_presence_kv, 0, message.rich_presence_kv.length) : options.bytes === Array ? Array.prototype.slice.call(message.rich_presence_kv) : message.rich_presence_kv;
            if (message.steamid_broadcast && message.steamid_broadcast.length) {
                object.steamid_broadcast = [];
                for (var j = 0; j < message.steamid_broadcast.length; ++j)
                    if (typeof message.steamid_broadcast[j] === "number")
                        object.steamid_broadcast[j] = options.longs === String ? String(message.steamid_broadcast[j]) : message.steamid_broadcast[j];
                    else
                        object.steamid_broadcast[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_broadcast[j]) : options.longs === Number ? new $util.LongBits(message.steamid_broadcast[j].low >>> 0, message.steamid_broadcast[j].high >>> 0).toNumber() : message.steamid_broadcast[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRichPresenceUpload to JSON.
         * @function toJSON
         * @memberof CMsgClientRichPresenceUpload
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRichPresenceUpload.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRichPresenceUpload;
    })();
    
    $root.CMsgClientRichPresenceRequest = (function() {
    
        /**
         * Properties of a CMsgClientRichPresenceRequest.
         * @exports ICMsgClientRichPresenceRequest
         * @interface ICMsgClientRichPresenceRequest
         * @property {Array.<number|Long>|null} [steamid_request] CMsgClientRichPresenceRequest steamid_request
         */
    
        /**
         * Constructs a new CMsgClientRichPresenceRequest.
         * @exports CMsgClientRichPresenceRequest
         * @classdesc Represents a CMsgClientRichPresenceRequest.
         * @implements ICMsgClientRichPresenceRequest
         * @constructor
         * @param {ICMsgClientRichPresenceRequest=} [properties] Properties to set
         */
        function CMsgClientRichPresenceRequest(properties) {
            this.steamid_request = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRichPresenceRequest steamid_request.
         * @member {Array.<number|Long>} steamid_request
         * @memberof CMsgClientRichPresenceRequest
         * @instance
         */
        CMsgClientRichPresenceRequest.prototype.steamid_request = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRichPresenceRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {ICMsgClientRichPresenceRequest=} [properties] Properties to set
         * @returns {CMsgClientRichPresenceRequest} CMsgClientRichPresenceRequest instance
         */
        CMsgClientRichPresenceRequest.create = function create(properties) {
            return new CMsgClientRichPresenceRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceRequest message. Does not implicitly {@link CMsgClientRichPresenceRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {ICMsgClientRichPresenceRequest} message CMsgClientRichPresenceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_request != null && message.steamid_request.length)
                for (var i = 0; i < message.steamid_request.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_request[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceRequest message, length delimited. Does not implicitly {@link CMsgClientRichPresenceRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {ICMsgClientRichPresenceRequest} message CMsgClientRichPresenceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRichPresenceRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRichPresenceRequest} CMsgClientRichPresenceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRichPresenceRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.steamid_request && message.steamid_request.length))
                        message.steamid_request = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_request.push(reader.fixed64());
                    } else
                        message.steamid_request.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRichPresenceRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRichPresenceRequest} CMsgClientRichPresenceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRichPresenceRequest message.
         * @function verify
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRichPresenceRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_request != null && message.hasOwnProperty("steamid_request")) {
                if (!Array.isArray(message.steamid_request))
                    return "steamid_request: array expected";
                for (var i = 0; i < message.steamid_request.length; ++i)
                    if (!$util.isInteger(message.steamid_request[i]) && !(message.steamid_request[i] && $util.isInteger(message.steamid_request[i].low) && $util.isInteger(message.steamid_request[i].high)))
                        return "steamid_request: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRichPresenceRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRichPresenceRequest} CMsgClientRichPresenceRequest
         */
        CMsgClientRichPresenceRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRichPresenceRequest)
                return object;
            var message = new $root.CMsgClientRichPresenceRequest();
            if (object.steamid_request) {
                if (!Array.isArray(object.steamid_request))
                    throw TypeError(".CMsgClientRichPresenceRequest.steamid_request: array expected");
                message.steamid_request = [];
                for (var i = 0; i < object.steamid_request.length; ++i)
                    if ($util.Long)
                        (message.steamid_request[i] = $util.Long.fromValue(object.steamid_request[i])).unsigned = false;
                    else if (typeof object.steamid_request[i] === "string")
                        message.steamid_request[i] = parseInt(object.steamid_request[i], 10);
                    else if (typeof object.steamid_request[i] === "number")
                        message.steamid_request[i] = object.steamid_request[i];
                    else if (typeof object.steamid_request[i] === "object")
                        message.steamid_request[i] = new $util.LongBits(object.steamid_request[i].low >>> 0, object.steamid_request[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRichPresenceRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRichPresenceRequest
         * @static
         * @param {CMsgClientRichPresenceRequest} message CMsgClientRichPresenceRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRichPresenceRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_request = [];
            if (message.steamid_request && message.steamid_request.length) {
                object.steamid_request = [];
                for (var j = 0; j < message.steamid_request.length; ++j)
                    if (typeof message.steamid_request[j] === "number")
                        object.steamid_request[j] = options.longs === String ? String(message.steamid_request[j]) : message.steamid_request[j];
                    else
                        object.steamid_request[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_request[j]) : options.longs === Number ? new $util.LongBits(message.steamid_request[j].low >>> 0, message.steamid_request[j].high >>> 0).toNumber() : message.steamid_request[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRichPresenceRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientRichPresenceRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRichPresenceRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRichPresenceRequest;
    })();
    
    $root.CMsgClientRichPresenceInfo = (function() {
    
        /**
         * Properties of a CMsgClientRichPresenceInfo.
         * @exports ICMsgClientRichPresenceInfo
         * @interface ICMsgClientRichPresenceInfo
         * @property {Array.<CMsgClientRichPresenceInfo.IRichPresence>|null} [rich_presence] CMsgClientRichPresenceInfo rich_presence
         */
    
        /**
         * Constructs a new CMsgClientRichPresenceInfo.
         * @exports CMsgClientRichPresenceInfo
         * @classdesc Represents a CMsgClientRichPresenceInfo.
         * @implements ICMsgClientRichPresenceInfo
         * @constructor
         * @param {ICMsgClientRichPresenceInfo=} [properties] Properties to set
         */
        function CMsgClientRichPresenceInfo(properties) {
            this.rich_presence = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRichPresenceInfo rich_presence.
         * @member {Array.<CMsgClientRichPresenceInfo.IRichPresence>} rich_presence
         * @memberof CMsgClientRichPresenceInfo
         * @instance
         */
        CMsgClientRichPresenceInfo.prototype.rich_presence = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRichPresenceInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {ICMsgClientRichPresenceInfo=} [properties] Properties to set
         * @returns {CMsgClientRichPresenceInfo} CMsgClientRichPresenceInfo instance
         */
        CMsgClientRichPresenceInfo.create = function create(properties) {
            return new CMsgClientRichPresenceInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceInfo message. Does not implicitly {@link CMsgClientRichPresenceInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {ICMsgClientRichPresenceInfo} message CMsgClientRichPresenceInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.rich_presence != null && message.rich_presence.length)
                for (var i = 0; i < message.rich_presence.length; ++i)
                    $root.CMsgClientRichPresenceInfo.RichPresence.encode(message.rich_presence[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRichPresenceInfo message, length delimited. Does not implicitly {@link CMsgClientRichPresenceInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {ICMsgClientRichPresenceInfo} message CMsgClientRichPresenceInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRichPresenceInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRichPresenceInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRichPresenceInfo} CMsgClientRichPresenceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRichPresenceInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.rich_presence && message.rich_presence.length))
                        message.rich_presence = [];
                    message.rich_presence.push($root.CMsgClientRichPresenceInfo.RichPresence.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRichPresenceInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRichPresenceInfo} CMsgClientRichPresenceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRichPresenceInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRichPresenceInfo message.
         * @function verify
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRichPresenceInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.rich_presence != null && message.hasOwnProperty("rich_presence")) {
                if (!Array.isArray(message.rich_presence))
                    return "rich_presence: array expected";
                for (var i = 0; i < message.rich_presence.length; ++i) {
                    var error = $root.CMsgClientRichPresenceInfo.RichPresence.verify(message.rich_presence[i]);
                    if (error)
                        return "rich_presence." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRichPresenceInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRichPresenceInfo} CMsgClientRichPresenceInfo
         */
        CMsgClientRichPresenceInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRichPresenceInfo)
                return object;
            var message = new $root.CMsgClientRichPresenceInfo();
            if (object.rich_presence) {
                if (!Array.isArray(object.rich_presence))
                    throw TypeError(".CMsgClientRichPresenceInfo.rich_presence: array expected");
                message.rich_presence = [];
                for (var i = 0; i < object.rich_presence.length; ++i) {
                    if (typeof object.rich_presence[i] !== "object")
                        throw TypeError(".CMsgClientRichPresenceInfo.rich_presence: object expected");
                    message.rich_presence[i] = $root.CMsgClientRichPresenceInfo.RichPresence.fromObject(object.rich_presence[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRichPresenceInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRichPresenceInfo
         * @static
         * @param {CMsgClientRichPresenceInfo} message CMsgClientRichPresenceInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRichPresenceInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.rich_presence = [];
            if (message.rich_presence && message.rich_presence.length) {
                object.rich_presence = [];
                for (var j = 0; j < message.rich_presence.length; ++j)
                    object.rich_presence[j] = $root.CMsgClientRichPresenceInfo.RichPresence.toObject(message.rich_presence[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRichPresenceInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientRichPresenceInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRichPresenceInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientRichPresenceInfo.RichPresence = (function() {
    
            /**
             * Properties of a RichPresence.
             * @memberof CMsgClientRichPresenceInfo
             * @interface IRichPresence
             * @property {number|Long|null} [steamid_user] RichPresence steamid_user
             * @property {Uint8Array|null} [rich_presence_kv] RichPresence rich_presence_kv
             */
    
            /**
             * Constructs a new RichPresence.
             * @memberof CMsgClientRichPresenceInfo
             * @classdesc Represents a RichPresence.
             * @implements IRichPresence
             * @constructor
             * @param {CMsgClientRichPresenceInfo.IRichPresence=} [properties] Properties to set
             */
            function RichPresence(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * RichPresence steamid_user.
             * @member {number|Long} steamid_user
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @instance
             */
            RichPresence.prototype.steamid_user = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * RichPresence rich_presence_kv.
             * @member {Uint8Array} rich_presence_kv
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @instance
             */
            RichPresence.prototype.rich_presence_kv = $util.newBuffer([]);
    
            /**
             * Creates a new RichPresence instance using the specified properties.
             * @function create
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {CMsgClientRichPresenceInfo.IRichPresence=} [properties] Properties to set
             * @returns {CMsgClientRichPresenceInfo.RichPresence} RichPresence instance
             */
            RichPresence.create = function create(properties) {
                return new RichPresence(properties);
            };
    
            /**
             * Encodes the specified RichPresence message. Does not implicitly {@link CMsgClientRichPresenceInfo.RichPresence.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {CMsgClientRichPresenceInfo.IRichPresence} message RichPresence message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RichPresence.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid_user != null && message.hasOwnProperty("steamid_user"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_user);
                if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.rich_presence_kv);
                return writer;
            };
    
            /**
             * Encodes the specified RichPresence message, length delimited. Does not implicitly {@link CMsgClientRichPresenceInfo.RichPresence.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {CMsgClientRichPresenceInfo.IRichPresence} message RichPresence message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RichPresence.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a RichPresence message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientRichPresenceInfo.RichPresence} RichPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RichPresence.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRichPresenceInfo.RichPresence();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steamid_user = reader.fixed64();
                        break;
                    case 2:
                        message.rich_presence_kv = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a RichPresence message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientRichPresenceInfo.RichPresence} RichPresence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RichPresence.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a RichPresence message.
             * @function verify
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RichPresence.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid_user != null && message.hasOwnProperty("steamid_user"))
                    if (!$util.isInteger(message.steamid_user) && !(message.steamid_user && $util.isInteger(message.steamid_user.low) && $util.isInteger(message.steamid_user.high)))
                        return "steamid_user: integer|Long expected";
                if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                    if (!(message.rich_presence_kv && typeof message.rich_presence_kv.length === "number" || $util.isString(message.rich_presence_kv)))
                        return "rich_presence_kv: buffer expected";
                return null;
            };
    
            /**
             * Creates a RichPresence message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientRichPresenceInfo.RichPresence} RichPresence
             */
            RichPresence.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientRichPresenceInfo.RichPresence)
                    return object;
                var message = new $root.CMsgClientRichPresenceInfo.RichPresence();
                if (object.steamid_user != null)
                    if ($util.Long)
                        (message.steamid_user = $util.Long.fromValue(object.steamid_user)).unsigned = false;
                    else if (typeof object.steamid_user === "string")
                        message.steamid_user = parseInt(object.steamid_user, 10);
                    else if (typeof object.steamid_user === "number")
                        message.steamid_user = object.steamid_user;
                    else if (typeof object.steamid_user === "object")
                        message.steamid_user = new $util.LongBits(object.steamid_user.low >>> 0, object.steamid_user.high >>> 0).toNumber();
                if (object.rich_presence_kv != null)
                    if (typeof object.rich_presence_kv === "string")
                        $util.base64.decode(object.rich_presence_kv, message.rich_presence_kv = $util.newBuffer($util.base64.length(object.rich_presence_kv)), 0);
                    else if (object.rich_presence_kv.length)
                        message.rich_presence_kv = object.rich_presence_kv;
                return message;
            };
    
            /**
             * Creates a plain object from a RichPresence message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @static
             * @param {CMsgClientRichPresenceInfo.RichPresence} message RichPresence
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RichPresence.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid_user = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid_user = options.longs === String ? "0" : 0;
                    if (options.bytes === String)
                        object.rich_presence_kv = "";
                    else {
                        object.rich_presence_kv = [];
                        if (options.bytes !== Array)
                            object.rich_presence_kv = $util.newBuffer(object.rich_presence_kv);
                    }
                }
                if (message.steamid_user != null && message.hasOwnProperty("steamid_user"))
                    if (typeof message.steamid_user === "number")
                        object.steamid_user = options.longs === String ? String(message.steamid_user) : message.steamid_user;
                    else
                        object.steamid_user = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_user) : options.longs === Number ? new $util.LongBits(message.steamid_user.low >>> 0, message.steamid_user.high >>> 0).toNumber() : message.steamid_user;
                if (message.rich_presence_kv != null && message.hasOwnProperty("rich_presence_kv"))
                    object.rich_presence_kv = options.bytes === String ? $util.base64.encode(message.rich_presence_kv, 0, message.rich_presence_kv.length) : options.bytes === Array ? Array.prototype.slice.call(message.rich_presence_kv) : message.rich_presence_kv;
                return object;
            };
    
            /**
             * Converts this RichPresence to JSON.
             * @function toJSON
             * @memberof CMsgClientRichPresenceInfo.RichPresence
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RichPresence.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return RichPresence;
        })();
    
        return CMsgClientRichPresenceInfo;
    })();
    
    $root.CMsgClientCheckFileSignature = (function() {
    
        /**
         * Properties of a CMsgClientCheckFileSignature.
         * @exports ICMsgClientCheckFileSignature
         * @interface ICMsgClientCheckFileSignature
         * @property {number|null} [app_id] CMsgClientCheckFileSignature app_id
         */
    
        /**
         * Constructs a new CMsgClientCheckFileSignature.
         * @exports CMsgClientCheckFileSignature
         * @classdesc Represents a CMsgClientCheckFileSignature.
         * @implements ICMsgClientCheckFileSignature
         * @constructor
         * @param {ICMsgClientCheckFileSignature=} [properties] Properties to set
         */
        function CMsgClientCheckFileSignature(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCheckFileSignature app_id.
         * @member {number} app_id
         * @memberof CMsgClientCheckFileSignature
         * @instance
         */
        CMsgClientCheckFileSignature.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientCheckFileSignature instance using the specified properties.
         * @function create
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {ICMsgClientCheckFileSignature=} [properties] Properties to set
         * @returns {CMsgClientCheckFileSignature} CMsgClientCheckFileSignature instance
         */
        CMsgClientCheckFileSignature.create = function create(properties) {
            return new CMsgClientCheckFileSignature(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCheckFileSignature message. Does not implicitly {@link CMsgClientCheckFileSignature.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {ICMsgClientCheckFileSignature} message CMsgClientCheckFileSignature message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckFileSignature.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCheckFileSignature message, length delimited. Does not implicitly {@link CMsgClientCheckFileSignature.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {ICMsgClientCheckFileSignature} message CMsgClientCheckFileSignature message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckFileSignature.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCheckFileSignature message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCheckFileSignature} CMsgClientCheckFileSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckFileSignature.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCheckFileSignature();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCheckFileSignature message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCheckFileSignature} CMsgClientCheckFileSignature
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckFileSignature.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCheckFileSignature message.
         * @function verify
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCheckFileSignature.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCheckFileSignature message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCheckFileSignature} CMsgClientCheckFileSignature
         */
        CMsgClientCheckFileSignature.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCheckFileSignature)
                return object;
            var message = new $root.CMsgClientCheckFileSignature();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCheckFileSignature message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCheckFileSignature
         * @static
         * @param {CMsgClientCheckFileSignature} message CMsgClientCheckFileSignature
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCheckFileSignature.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.app_id = 0;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientCheckFileSignature to JSON.
         * @function toJSON
         * @memberof CMsgClientCheckFileSignature
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCheckFileSignature.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCheckFileSignature;
    })();
    
    $root.CMsgClientCheckFileSignatureResponse = (function() {
    
        /**
         * Properties of a CMsgClientCheckFileSignatureResponse.
         * @exports ICMsgClientCheckFileSignatureResponse
         * @interface ICMsgClientCheckFileSignatureResponse
         * @property {number|null} [app_id] CMsgClientCheckFileSignatureResponse app_id
         * @property {number|null} [pid] CMsgClientCheckFileSignatureResponse pid
         * @property {number|null} [eresult] CMsgClientCheckFileSignatureResponse eresult
         * @property {string|null} [filename] CMsgClientCheckFileSignatureResponse filename
         * @property {number|null} [esignatureresult] CMsgClientCheckFileSignatureResponse esignatureresult
         * @property {Uint8Array|null} [sha_file] CMsgClientCheckFileSignatureResponse sha_file
         * @property {Uint8Array|null} [signatureheader] CMsgClientCheckFileSignatureResponse signatureheader
         * @property {number|null} [filesize] CMsgClientCheckFileSignatureResponse filesize
         * @property {number|null} [getlasterror] CMsgClientCheckFileSignatureResponse getlasterror
         * @property {number|null} [evalvesignaturecheckdetail] CMsgClientCheckFileSignatureResponse evalvesignaturecheckdetail
         */
    
        /**
         * Constructs a new CMsgClientCheckFileSignatureResponse.
         * @exports CMsgClientCheckFileSignatureResponse
         * @classdesc Represents a CMsgClientCheckFileSignatureResponse.
         * @implements ICMsgClientCheckFileSignatureResponse
         * @constructor
         * @param {ICMsgClientCheckFileSignatureResponse=} [properties] Properties to set
         */
        function CMsgClientCheckFileSignatureResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCheckFileSignatureResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse pid.
         * @member {number} pid
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.pid = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.eresult = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse filename.
         * @member {string} filename
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.filename = "";
    
        /**
         * CMsgClientCheckFileSignatureResponse esignatureresult.
         * @member {number} esignatureresult
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.esignatureresult = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientCheckFileSignatureResponse signatureheader.
         * @member {Uint8Array} signatureheader
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.signatureheader = $util.newBuffer([]);
    
        /**
         * CMsgClientCheckFileSignatureResponse filesize.
         * @member {number} filesize
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.filesize = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse getlasterror.
         * @member {number} getlasterror
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.getlasterror = 0;
    
        /**
         * CMsgClientCheckFileSignatureResponse evalvesignaturecheckdetail.
         * @member {number} evalvesignaturecheckdetail
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         */
        CMsgClientCheckFileSignatureResponse.prototype.evalvesignaturecheckdetail = 0;
    
        /**
         * Creates a new CMsgClientCheckFileSignatureResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {ICMsgClientCheckFileSignatureResponse=} [properties] Properties to set
         * @returns {CMsgClientCheckFileSignatureResponse} CMsgClientCheckFileSignatureResponse instance
         */
        CMsgClientCheckFileSignatureResponse.create = function create(properties) {
            return new CMsgClientCheckFileSignatureResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCheckFileSignatureResponse message. Does not implicitly {@link CMsgClientCheckFileSignatureResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {ICMsgClientCheckFileSignatureResponse} message CMsgClientCheckFileSignatureResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckFileSignatureResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.pid != null && message.hasOwnProperty("pid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pid);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.eresult);
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filename);
            if (message.esignatureresult != null && message.hasOwnProperty("esignatureresult"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.esignatureresult);
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.sha_file);
            if (message.signatureheader != null && message.hasOwnProperty("signatureheader"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.signatureheader);
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.filesize);
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.getlasterror);
            if (message.evalvesignaturecheckdetail != null && message.hasOwnProperty("evalvesignaturecheckdetail"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.evalvesignaturecheckdetail);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCheckFileSignatureResponse message, length delimited. Does not implicitly {@link CMsgClientCheckFileSignatureResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {ICMsgClientCheckFileSignatureResponse} message CMsgClientCheckFileSignatureResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckFileSignatureResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCheckFileSignatureResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCheckFileSignatureResponse} CMsgClientCheckFileSignatureResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckFileSignatureResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCheckFileSignatureResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.pid = reader.uint32();
                    break;
                case 3:
                    message.eresult = reader.uint32();
                    break;
                case 4:
                    message.filename = reader.string();
                    break;
                case 5:
                    message.esignatureresult = reader.uint32();
                    break;
                case 6:
                    message.sha_file = reader.bytes();
                    break;
                case 7:
                    message.signatureheader = reader.bytes();
                    break;
                case 8:
                    message.filesize = reader.uint32();
                    break;
                case 9:
                    message.getlasterror = reader.uint32();
                    break;
                case 10:
                    message.evalvesignaturecheckdetail = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCheckFileSignatureResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCheckFileSignatureResponse} CMsgClientCheckFileSignatureResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckFileSignatureResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCheckFileSignatureResponse message.
         * @function verify
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCheckFileSignatureResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.pid != null && message.hasOwnProperty("pid"))
                if (!$util.isInteger(message.pid))
                    return "pid: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.esignatureresult != null && message.hasOwnProperty("esignatureresult"))
                if (!$util.isInteger(message.esignatureresult))
                    return "esignatureresult: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.signatureheader != null && message.hasOwnProperty("signatureheader"))
                if (!(message.signatureheader && typeof message.signatureheader.length === "number" || $util.isString(message.signatureheader)))
                    return "signatureheader: buffer expected";
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                if (!$util.isInteger(message.filesize))
                    return "filesize: integer expected";
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                if (!$util.isInteger(message.getlasterror))
                    return "getlasterror: integer expected";
            if (message.evalvesignaturecheckdetail != null && message.hasOwnProperty("evalvesignaturecheckdetail"))
                if (!$util.isInteger(message.evalvesignaturecheckdetail))
                    return "evalvesignaturecheckdetail: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCheckFileSignatureResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCheckFileSignatureResponse} CMsgClientCheckFileSignatureResponse
         */
        CMsgClientCheckFileSignatureResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCheckFileSignatureResponse)
                return object;
            var message = new $root.CMsgClientCheckFileSignatureResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.pid != null)
                message.pid = object.pid >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.esignatureresult != null)
                message.esignatureresult = object.esignatureresult >>> 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.signatureheader != null)
                if (typeof object.signatureheader === "string")
                    $util.base64.decode(object.signatureheader, message.signatureheader = $util.newBuffer($util.base64.length(object.signatureheader)), 0);
                else if (object.signatureheader.length)
                    message.signatureheader = object.signatureheader;
            if (object.filesize != null)
                message.filesize = object.filesize >>> 0;
            if (object.getlasterror != null)
                message.getlasterror = object.getlasterror >>> 0;
            if (object.evalvesignaturecheckdetail != null)
                message.evalvesignaturecheckdetail = object.evalvesignaturecheckdetail >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCheckFileSignatureResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCheckFileSignatureResponse
         * @static
         * @param {CMsgClientCheckFileSignatureResponse} message CMsgClientCheckFileSignatureResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCheckFileSignatureResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.pid = 0;
                object.eresult = 0;
                object.filename = "";
                object.esignatureresult = 0;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                if (options.bytes === String)
                    object.signatureheader = "";
                else {
                    object.signatureheader = [];
                    if (options.bytes !== Array)
                        object.signatureheader = $util.newBuffer(object.signatureheader);
                }
                object.filesize = 0;
                object.getlasterror = 0;
                object.evalvesignaturecheckdetail = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.pid != null && message.hasOwnProperty("pid"))
                object.pid = message.pid;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.esignatureresult != null && message.hasOwnProperty("esignatureresult"))
                object.esignatureresult = message.esignatureresult;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.signatureheader != null && message.hasOwnProperty("signatureheader"))
                object.signatureheader = options.bytes === String ? $util.base64.encode(message.signatureheader, 0, message.signatureheader.length) : options.bytes === Array ? Array.prototype.slice.call(message.signatureheader) : message.signatureheader;
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                object.filesize = message.filesize;
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                object.getlasterror = message.getlasterror;
            if (message.evalvesignaturecheckdetail != null && message.hasOwnProperty("evalvesignaturecheckdetail"))
                object.evalvesignaturecheckdetail = message.evalvesignaturecheckdetail;
            return object;
        };
    
        /**
         * Converts this CMsgClientCheckFileSignatureResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientCheckFileSignatureResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCheckFileSignatureResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCheckFileSignatureResponse;
    })();
    
    $root.CMsgClientReadMachineAuth = (function() {
    
        /**
         * Properties of a CMsgClientReadMachineAuth.
         * @exports ICMsgClientReadMachineAuth
         * @interface ICMsgClientReadMachineAuth
         * @property {string|null} [filename] CMsgClientReadMachineAuth filename
         * @property {number|null} [offset] CMsgClientReadMachineAuth offset
         * @property {number|null} [cubtoread] CMsgClientReadMachineAuth cubtoread
         */
    
        /**
         * Constructs a new CMsgClientReadMachineAuth.
         * @exports CMsgClientReadMachineAuth
         * @classdesc Represents a CMsgClientReadMachineAuth.
         * @implements ICMsgClientReadMachineAuth
         * @constructor
         * @param {ICMsgClientReadMachineAuth=} [properties] Properties to set
         */
        function CMsgClientReadMachineAuth(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientReadMachineAuth filename.
         * @member {string} filename
         * @memberof CMsgClientReadMachineAuth
         * @instance
         */
        CMsgClientReadMachineAuth.prototype.filename = "";
    
        /**
         * CMsgClientReadMachineAuth offset.
         * @member {number} offset
         * @memberof CMsgClientReadMachineAuth
         * @instance
         */
        CMsgClientReadMachineAuth.prototype.offset = 0;
    
        /**
         * CMsgClientReadMachineAuth cubtoread.
         * @member {number} cubtoread
         * @memberof CMsgClientReadMachineAuth
         * @instance
         */
        CMsgClientReadMachineAuth.prototype.cubtoread = 0;
    
        /**
         * Creates a new CMsgClientReadMachineAuth instance using the specified properties.
         * @function create
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {ICMsgClientReadMachineAuth=} [properties] Properties to set
         * @returns {CMsgClientReadMachineAuth} CMsgClientReadMachineAuth instance
         */
        CMsgClientReadMachineAuth.create = function create(properties) {
            return new CMsgClientReadMachineAuth(properties);
        };
    
        /**
         * Encodes the specified CMsgClientReadMachineAuth message. Does not implicitly {@link CMsgClientReadMachineAuth.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {ICMsgClientReadMachineAuth} message CMsgClientReadMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReadMachineAuth.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.offset != null && message.hasOwnProperty("offset"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.offset);
            if (message.cubtoread != null && message.hasOwnProperty("cubtoread"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cubtoread);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientReadMachineAuth message, length delimited. Does not implicitly {@link CMsgClientReadMachineAuth.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {ICMsgClientReadMachineAuth} message CMsgClientReadMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReadMachineAuth.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientReadMachineAuth message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientReadMachineAuth} CMsgClientReadMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReadMachineAuth.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientReadMachineAuth();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.offset = reader.uint32();
                    break;
                case 3:
                    message.cubtoread = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientReadMachineAuth message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientReadMachineAuth} CMsgClientReadMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReadMachineAuth.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientReadMachineAuth message.
         * @function verify
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientReadMachineAuth.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.offset != null && message.hasOwnProperty("offset"))
                if (!$util.isInteger(message.offset))
                    return "offset: integer expected";
            if (message.cubtoread != null && message.hasOwnProperty("cubtoread"))
                if (!$util.isInteger(message.cubtoread))
                    return "cubtoread: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientReadMachineAuth message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientReadMachineAuth} CMsgClientReadMachineAuth
         */
        CMsgClientReadMachineAuth.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientReadMachineAuth)
                return object;
            var message = new $root.CMsgClientReadMachineAuth();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.offset != null)
                message.offset = object.offset >>> 0;
            if (object.cubtoread != null)
                message.cubtoread = object.cubtoread >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientReadMachineAuth message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientReadMachineAuth
         * @static
         * @param {CMsgClientReadMachineAuth} message CMsgClientReadMachineAuth
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientReadMachineAuth.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.offset = 0;
                object.cubtoread = 0;
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.offset != null && message.hasOwnProperty("offset"))
                object.offset = message.offset;
            if (message.cubtoread != null && message.hasOwnProperty("cubtoread"))
                object.cubtoread = message.cubtoread;
            return object;
        };
    
        /**
         * Converts this CMsgClientReadMachineAuth to JSON.
         * @function toJSON
         * @memberof CMsgClientReadMachineAuth
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientReadMachineAuth.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientReadMachineAuth;
    })();
    
    $root.CMsgClientReadMachineAuthResponse = (function() {
    
        /**
         * Properties of a CMsgClientReadMachineAuthResponse.
         * @exports ICMsgClientReadMachineAuthResponse
         * @interface ICMsgClientReadMachineAuthResponse
         * @property {string|null} [filename] CMsgClientReadMachineAuthResponse filename
         * @property {number|null} [eresult] CMsgClientReadMachineAuthResponse eresult
         * @property {number|null} [filesize] CMsgClientReadMachineAuthResponse filesize
         * @property {Uint8Array|null} [sha_file] CMsgClientReadMachineAuthResponse sha_file
         * @property {number|null} [getlasterror] CMsgClientReadMachineAuthResponse getlasterror
         * @property {number|null} [offset] CMsgClientReadMachineAuthResponse offset
         * @property {number|null} [cubread] CMsgClientReadMachineAuthResponse cubread
         * @property {Uint8Array|null} [bytes_read] CMsgClientReadMachineAuthResponse bytes_read
         * @property {string|null} [filename_sentry] CMsgClientReadMachineAuthResponse filename_sentry
         */
    
        /**
         * Constructs a new CMsgClientReadMachineAuthResponse.
         * @exports CMsgClientReadMachineAuthResponse
         * @classdesc Represents a CMsgClientReadMachineAuthResponse.
         * @implements ICMsgClientReadMachineAuthResponse
         * @constructor
         * @param {ICMsgClientReadMachineAuthResponse=} [properties] Properties to set
         */
        function CMsgClientReadMachineAuthResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientReadMachineAuthResponse filename.
         * @member {string} filename
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.filename = "";
    
        /**
         * CMsgClientReadMachineAuthResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.eresult = 0;
    
        /**
         * CMsgClientReadMachineAuthResponse filesize.
         * @member {number} filesize
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.filesize = 0;
    
        /**
         * CMsgClientReadMachineAuthResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientReadMachineAuthResponse getlasterror.
         * @member {number} getlasterror
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.getlasterror = 0;
    
        /**
         * CMsgClientReadMachineAuthResponse offset.
         * @member {number} offset
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.offset = 0;
    
        /**
         * CMsgClientReadMachineAuthResponse cubread.
         * @member {number} cubread
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.cubread = 0;
    
        /**
         * CMsgClientReadMachineAuthResponse bytes_read.
         * @member {Uint8Array} bytes_read
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.bytes_read = $util.newBuffer([]);
    
        /**
         * CMsgClientReadMachineAuthResponse filename_sentry.
         * @member {string} filename_sentry
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         */
        CMsgClientReadMachineAuthResponse.prototype.filename_sentry = "";
    
        /**
         * Creates a new CMsgClientReadMachineAuthResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {ICMsgClientReadMachineAuthResponse=} [properties] Properties to set
         * @returns {CMsgClientReadMachineAuthResponse} CMsgClientReadMachineAuthResponse instance
         */
        CMsgClientReadMachineAuthResponse.create = function create(properties) {
            return new CMsgClientReadMachineAuthResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientReadMachineAuthResponse message. Does not implicitly {@link CMsgClientReadMachineAuthResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {ICMsgClientReadMachineAuthResponse} message CMsgClientReadMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReadMachineAuthResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.filesize);
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha_file);
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.getlasterror);
            if (message.offset != null && message.hasOwnProperty("offset"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.offset);
            if (message.cubread != null && message.hasOwnProperty("cubread"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.cubread);
            if (message.bytes_read != null && message.hasOwnProperty("bytes_read"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.bytes_read);
            if (message.filename_sentry != null && message.hasOwnProperty("filename_sentry"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.filename_sentry);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientReadMachineAuthResponse message, length delimited. Does not implicitly {@link CMsgClientReadMachineAuthResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {ICMsgClientReadMachineAuthResponse} message CMsgClientReadMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReadMachineAuthResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientReadMachineAuthResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientReadMachineAuthResponse} CMsgClientReadMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReadMachineAuthResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientReadMachineAuthResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.filesize = reader.uint32();
                    break;
                case 4:
                    message.sha_file = reader.bytes();
                    break;
                case 5:
                    message.getlasterror = reader.uint32();
                    break;
                case 6:
                    message.offset = reader.uint32();
                    break;
                case 7:
                    message.cubread = reader.uint32();
                    break;
                case 8:
                    message.bytes_read = reader.bytes();
                    break;
                case 9:
                    message.filename_sentry = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientReadMachineAuthResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientReadMachineAuthResponse} CMsgClientReadMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReadMachineAuthResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientReadMachineAuthResponse message.
         * @function verify
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientReadMachineAuthResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                if (!$util.isInteger(message.filesize))
                    return "filesize: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                if (!$util.isInteger(message.getlasterror))
                    return "getlasterror: integer expected";
            if (message.offset != null && message.hasOwnProperty("offset"))
                if (!$util.isInteger(message.offset))
                    return "offset: integer expected";
            if (message.cubread != null && message.hasOwnProperty("cubread"))
                if (!$util.isInteger(message.cubread))
                    return "cubread: integer expected";
            if (message.bytes_read != null && message.hasOwnProperty("bytes_read"))
                if (!(message.bytes_read && typeof message.bytes_read.length === "number" || $util.isString(message.bytes_read)))
                    return "bytes_read: buffer expected";
            if (message.filename_sentry != null && message.hasOwnProperty("filename_sentry"))
                if (!$util.isString(message.filename_sentry))
                    return "filename_sentry: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientReadMachineAuthResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientReadMachineAuthResponse} CMsgClientReadMachineAuthResponse
         */
        CMsgClientReadMachineAuthResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientReadMachineAuthResponse)
                return object;
            var message = new $root.CMsgClientReadMachineAuthResponse();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.filesize != null)
                message.filesize = object.filesize >>> 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.getlasterror != null)
                message.getlasterror = object.getlasterror >>> 0;
            if (object.offset != null)
                message.offset = object.offset >>> 0;
            if (object.cubread != null)
                message.cubread = object.cubread >>> 0;
            if (object.bytes_read != null)
                if (typeof object.bytes_read === "string")
                    $util.base64.decode(object.bytes_read, message.bytes_read = $util.newBuffer($util.base64.length(object.bytes_read)), 0);
                else if (object.bytes_read.length)
                    message.bytes_read = object.bytes_read;
            if (object.filename_sentry != null)
                message.filename_sentry = String(object.filename_sentry);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientReadMachineAuthResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientReadMachineAuthResponse
         * @static
         * @param {CMsgClientReadMachineAuthResponse} message CMsgClientReadMachineAuthResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientReadMachineAuthResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.eresult = 0;
                object.filesize = 0;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                object.getlasterror = 0;
                object.offset = 0;
                object.cubread = 0;
                if (options.bytes === String)
                    object.bytes_read = "";
                else {
                    object.bytes_read = [];
                    if (options.bytes !== Array)
                        object.bytes_read = $util.newBuffer(object.bytes_read);
                }
                object.filename_sentry = "";
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                object.filesize = message.filesize;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                object.getlasterror = message.getlasterror;
            if (message.offset != null && message.hasOwnProperty("offset"))
                object.offset = message.offset;
            if (message.cubread != null && message.hasOwnProperty("cubread"))
                object.cubread = message.cubread;
            if (message.bytes_read != null && message.hasOwnProperty("bytes_read"))
                object.bytes_read = options.bytes === String ? $util.base64.encode(message.bytes_read, 0, message.bytes_read.length) : options.bytes === Array ? Array.prototype.slice.call(message.bytes_read) : message.bytes_read;
            if (message.filename_sentry != null && message.hasOwnProperty("filename_sentry"))
                object.filename_sentry = message.filename_sentry;
            return object;
        };
    
        /**
         * Converts this CMsgClientReadMachineAuthResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientReadMachineAuthResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientReadMachineAuthResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientReadMachineAuthResponse;
    })();
    
    $root.CMsgClientUpdateMachineAuth = (function() {
    
        /**
         * Properties of a CMsgClientUpdateMachineAuth.
         * @exports ICMsgClientUpdateMachineAuth
         * @interface ICMsgClientUpdateMachineAuth
         * @property {string|null} [filename] CMsgClientUpdateMachineAuth filename
         * @property {number|null} [offset] CMsgClientUpdateMachineAuth offset
         * @property {number|null} [cubtowrite] CMsgClientUpdateMachineAuth cubtowrite
         * @property {Uint8Array|null} [bytes] CMsgClientUpdateMachineAuth bytes
         * @property {number|null} [otp_type] CMsgClientUpdateMachineAuth otp_type
         * @property {string|null} [otp_identifier] CMsgClientUpdateMachineAuth otp_identifier
         * @property {Uint8Array|null} [otp_sharedsecret] CMsgClientUpdateMachineAuth otp_sharedsecret
         * @property {number|null} [otp_timedrift] CMsgClientUpdateMachineAuth otp_timedrift
         */
    
        /**
         * Constructs a new CMsgClientUpdateMachineAuth.
         * @exports CMsgClientUpdateMachineAuth
         * @classdesc Represents a CMsgClientUpdateMachineAuth.
         * @implements ICMsgClientUpdateMachineAuth
         * @constructor
         * @param {ICMsgClientUpdateMachineAuth=} [properties] Properties to set
         */
        function CMsgClientUpdateMachineAuth(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUpdateMachineAuth filename.
         * @member {string} filename
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.filename = "";
    
        /**
         * CMsgClientUpdateMachineAuth offset.
         * @member {number} offset
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.offset = 0;
    
        /**
         * CMsgClientUpdateMachineAuth cubtowrite.
         * @member {number} cubtowrite
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.cubtowrite = 0;
    
        /**
         * CMsgClientUpdateMachineAuth bytes.
         * @member {Uint8Array} bytes
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.bytes = $util.newBuffer([]);
    
        /**
         * CMsgClientUpdateMachineAuth otp_type.
         * @member {number} otp_type
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.otp_type = 0;
    
        /**
         * CMsgClientUpdateMachineAuth otp_identifier.
         * @member {string} otp_identifier
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.otp_identifier = "";
    
        /**
         * CMsgClientUpdateMachineAuth otp_sharedsecret.
         * @member {Uint8Array} otp_sharedsecret
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.otp_sharedsecret = $util.newBuffer([]);
    
        /**
         * CMsgClientUpdateMachineAuth otp_timedrift.
         * @member {number} otp_timedrift
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         */
        CMsgClientUpdateMachineAuth.prototype.otp_timedrift = 0;
    
        /**
         * Creates a new CMsgClientUpdateMachineAuth instance using the specified properties.
         * @function create
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {ICMsgClientUpdateMachineAuth=} [properties] Properties to set
         * @returns {CMsgClientUpdateMachineAuth} CMsgClientUpdateMachineAuth instance
         */
        CMsgClientUpdateMachineAuth.create = function create(properties) {
            return new CMsgClientUpdateMachineAuth(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUpdateMachineAuth message. Does not implicitly {@link CMsgClientUpdateMachineAuth.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {ICMsgClientUpdateMachineAuth} message CMsgClientUpdateMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateMachineAuth.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.offset != null && message.hasOwnProperty("offset"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.offset);
            if (message.cubtowrite != null && message.hasOwnProperty("cubtowrite"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cubtowrite);
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.bytes);
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.otp_type);
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.otp_identifier);
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.otp_sharedsecret);
            if (message.otp_timedrift != null && message.hasOwnProperty("otp_timedrift"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.otp_timedrift);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUpdateMachineAuth message, length delimited. Does not implicitly {@link CMsgClientUpdateMachineAuth.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {ICMsgClientUpdateMachineAuth} message CMsgClientUpdateMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateMachineAuth.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUpdateMachineAuth message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUpdateMachineAuth} CMsgClientUpdateMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateMachineAuth.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUpdateMachineAuth();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.offset = reader.uint32();
                    break;
                case 3:
                    message.cubtowrite = reader.uint32();
                    break;
                case 4:
                    message.bytes = reader.bytes();
                    break;
                case 5:
                    message.otp_type = reader.uint32();
                    break;
                case 6:
                    message.otp_identifier = reader.string();
                    break;
                case 7:
                    message.otp_sharedsecret = reader.bytes();
                    break;
                case 8:
                    message.otp_timedrift = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUpdateMachineAuth message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUpdateMachineAuth} CMsgClientUpdateMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateMachineAuth.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUpdateMachineAuth message.
         * @function verify
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUpdateMachineAuth.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.offset != null && message.hasOwnProperty("offset"))
                if (!$util.isInteger(message.offset))
                    return "offset: integer expected";
            if (message.cubtowrite != null && message.hasOwnProperty("cubtowrite"))
                if (!$util.isInteger(message.cubtowrite))
                    return "cubtowrite: integer expected";
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                if (!(message.bytes && typeof message.bytes.length === "number" || $util.isString(message.bytes)))
                    return "bytes: buffer expected";
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                if (!$util.isInteger(message.otp_type))
                    return "otp_type: integer expected";
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                if (!$util.isString(message.otp_identifier))
                    return "otp_identifier: string expected";
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                if (!(message.otp_sharedsecret && typeof message.otp_sharedsecret.length === "number" || $util.isString(message.otp_sharedsecret)))
                    return "otp_sharedsecret: buffer expected";
            if (message.otp_timedrift != null && message.hasOwnProperty("otp_timedrift"))
                if (!$util.isInteger(message.otp_timedrift))
                    return "otp_timedrift: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUpdateMachineAuth message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUpdateMachineAuth} CMsgClientUpdateMachineAuth
         */
        CMsgClientUpdateMachineAuth.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUpdateMachineAuth)
                return object;
            var message = new $root.CMsgClientUpdateMachineAuth();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.offset != null)
                message.offset = object.offset >>> 0;
            if (object.cubtowrite != null)
                message.cubtowrite = object.cubtowrite >>> 0;
            if (object.bytes != null)
                if (typeof object.bytes === "string")
                    $util.base64.decode(object.bytes, message.bytes = $util.newBuffer($util.base64.length(object.bytes)), 0);
                else if (object.bytes.length)
                    message.bytes = object.bytes;
            if (object.otp_type != null)
                message.otp_type = object.otp_type >>> 0;
            if (object.otp_identifier != null)
                message.otp_identifier = String(object.otp_identifier);
            if (object.otp_sharedsecret != null)
                if (typeof object.otp_sharedsecret === "string")
                    $util.base64.decode(object.otp_sharedsecret, message.otp_sharedsecret = $util.newBuffer($util.base64.length(object.otp_sharedsecret)), 0);
                else if (object.otp_sharedsecret.length)
                    message.otp_sharedsecret = object.otp_sharedsecret;
            if (object.otp_timedrift != null)
                message.otp_timedrift = object.otp_timedrift >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUpdateMachineAuth message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUpdateMachineAuth
         * @static
         * @param {CMsgClientUpdateMachineAuth} message CMsgClientUpdateMachineAuth
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUpdateMachineAuth.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.offset = 0;
                object.cubtowrite = 0;
                if (options.bytes === String)
                    object.bytes = "";
                else {
                    object.bytes = [];
                    if (options.bytes !== Array)
                        object.bytes = $util.newBuffer(object.bytes);
                }
                object.otp_type = 0;
                object.otp_identifier = "";
                if (options.bytes === String)
                    object.otp_sharedsecret = "";
                else {
                    object.otp_sharedsecret = [];
                    if (options.bytes !== Array)
                        object.otp_sharedsecret = $util.newBuffer(object.otp_sharedsecret);
                }
                object.otp_timedrift = 0;
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.offset != null && message.hasOwnProperty("offset"))
                object.offset = message.offset;
            if (message.cubtowrite != null && message.hasOwnProperty("cubtowrite"))
                object.cubtowrite = message.cubtowrite;
            if (message.bytes != null && message.hasOwnProperty("bytes"))
                object.bytes = options.bytes === String ? $util.base64.encode(message.bytes, 0, message.bytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.bytes) : message.bytes;
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                object.otp_type = message.otp_type;
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                object.otp_identifier = message.otp_identifier;
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                object.otp_sharedsecret = options.bytes === String ? $util.base64.encode(message.otp_sharedsecret, 0, message.otp_sharedsecret.length) : options.bytes === Array ? Array.prototype.slice.call(message.otp_sharedsecret) : message.otp_sharedsecret;
            if (message.otp_timedrift != null && message.hasOwnProperty("otp_timedrift"))
                object.otp_timedrift = message.otp_timedrift;
            return object;
        };
    
        /**
         * Converts this CMsgClientUpdateMachineAuth to JSON.
         * @function toJSON
         * @memberof CMsgClientUpdateMachineAuth
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUpdateMachineAuth.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUpdateMachineAuth;
    })();
    
    $root.CMsgClientUpdateMachineAuthResponse = (function() {
    
        /**
         * Properties of a CMsgClientUpdateMachineAuthResponse.
         * @exports ICMsgClientUpdateMachineAuthResponse
         * @interface ICMsgClientUpdateMachineAuthResponse
         * @property {string|null} [filename] CMsgClientUpdateMachineAuthResponse filename
         * @property {number|null} [eresult] CMsgClientUpdateMachineAuthResponse eresult
         * @property {number|null} [filesize] CMsgClientUpdateMachineAuthResponse filesize
         * @property {Uint8Array|null} [sha_file] CMsgClientUpdateMachineAuthResponse sha_file
         * @property {number|null} [getlasterror] CMsgClientUpdateMachineAuthResponse getlasterror
         * @property {number|null} [offset] CMsgClientUpdateMachineAuthResponse offset
         * @property {number|null} [cubwrote] CMsgClientUpdateMachineAuthResponse cubwrote
         * @property {number|null} [otp_type] CMsgClientUpdateMachineAuthResponse otp_type
         * @property {number|null} [otp_value] CMsgClientUpdateMachineAuthResponse otp_value
         * @property {string|null} [otp_identifier] CMsgClientUpdateMachineAuthResponse otp_identifier
         */
    
        /**
         * Constructs a new CMsgClientUpdateMachineAuthResponse.
         * @exports CMsgClientUpdateMachineAuthResponse
         * @classdesc Represents a CMsgClientUpdateMachineAuthResponse.
         * @implements ICMsgClientUpdateMachineAuthResponse
         * @constructor
         * @param {ICMsgClientUpdateMachineAuthResponse=} [properties] Properties to set
         */
        function CMsgClientUpdateMachineAuthResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUpdateMachineAuthResponse filename.
         * @member {string} filename
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.filename = "";
    
        /**
         * CMsgClientUpdateMachineAuthResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.eresult = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse filesize.
         * @member {number} filesize
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.filesize = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUpdateMachineAuthResponse getlasterror.
         * @member {number} getlasterror
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.getlasterror = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse offset.
         * @member {number} offset
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.offset = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse cubwrote.
         * @member {number} cubwrote
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.cubwrote = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse otp_type.
         * @member {number} otp_type
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.otp_type = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse otp_value.
         * @member {number} otp_value
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.otp_value = 0;
    
        /**
         * CMsgClientUpdateMachineAuthResponse otp_identifier.
         * @member {string} otp_identifier
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         */
        CMsgClientUpdateMachineAuthResponse.prototype.otp_identifier = "";
    
        /**
         * Creates a new CMsgClientUpdateMachineAuthResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {ICMsgClientUpdateMachineAuthResponse=} [properties] Properties to set
         * @returns {CMsgClientUpdateMachineAuthResponse} CMsgClientUpdateMachineAuthResponse instance
         */
        CMsgClientUpdateMachineAuthResponse.create = function create(properties) {
            return new CMsgClientUpdateMachineAuthResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUpdateMachineAuthResponse message. Does not implicitly {@link CMsgClientUpdateMachineAuthResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {ICMsgClientUpdateMachineAuthResponse} message CMsgClientUpdateMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateMachineAuthResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.filesize);
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha_file);
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.getlasterror);
            if (message.offset != null && message.hasOwnProperty("offset"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.offset);
            if (message.cubwrote != null && message.hasOwnProperty("cubwrote"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.cubwrote);
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.otp_type);
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.otp_value);
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.otp_identifier);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUpdateMachineAuthResponse message, length delimited. Does not implicitly {@link CMsgClientUpdateMachineAuthResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {ICMsgClientUpdateMachineAuthResponse} message CMsgClientUpdateMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateMachineAuthResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUpdateMachineAuthResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUpdateMachineAuthResponse} CMsgClientUpdateMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateMachineAuthResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUpdateMachineAuthResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.filesize = reader.uint32();
                    break;
                case 4:
                    message.sha_file = reader.bytes();
                    break;
                case 5:
                    message.getlasterror = reader.uint32();
                    break;
                case 6:
                    message.offset = reader.uint32();
                    break;
                case 7:
                    message.cubwrote = reader.uint32();
                    break;
                case 8:
                    message.otp_type = reader.int32();
                    break;
                case 9:
                    message.otp_value = reader.uint32();
                    break;
                case 10:
                    message.otp_identifier = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUpdateMachineAuthResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUpdateMachineAuthResponse} CMsgClientUpdateMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateMachineAuthResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUpdateMachineAuthResponse message.
         * @function verify
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUpdateMachineAuthResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                if (!$util.isInteger(message.filesize))
                    return "filesize: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                if (!$util.isInteger(message.getlasterror))
                    return "getlasterror: integer expected";
            if (message.offset != null && message.hasOwnProperty("offset"))
                if (!$util.isInteger(message.offset))
                    return "offset: integer expected";
            if (message.cubwrote != null && message.hasOwnProperty("cubwrote"))
                if (!$util.isInteger(message.cubwrote))
                    return "cubwrote: integer expected";
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                if (!$util.isInteger(message.otp_type))
                    return "otp_type: integer expected";
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                if (!$util.isInteger(message.otp_value))
                    return "otp_value: integer expected";
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                if (!$util.isString(message.otp_identifier))
                    return "otp_identifier: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUpdateMachineAuthResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUpdateMachineAuthResponse} CMsgClientUpdateMachineAuthResponse
         */
        CMsgClientUpdateMachineAuthResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUpdateMachineAuthResponse)
                return object;
            var message = new $root.CMsgClientUpdateMachineAuthResponse();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.filesize != null)
                message.filesize = object.filesize >>> 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.getlasterror != null)
                message.getlasterror = object.getlasterror >>> 0;
            if (object.offset != null)
                message.offset = object.offset >>> 0;
            if (object.cubwrote != null)
                message.cubwrote = object.cubwrote >>> 0;
            if (object.otp_type != null)
                message.otp_type = object.otp_type | 0;
            if (object.otp_value != null)
                message.otp_value = object.otp_value >>> 0;
            if (object.otp_identifier != null)
                message.otp_identifier = String(object.otp_identifier);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUpdateMachineAuthResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @static
         * @param {CMsgClientUpdateMachineAuthResponse} message CMsgClientUpdateMachineAuthResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUpdateMachineAuthResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.eresult = 0;
                object.filesize = 0;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                object.getlasterror = 0;
                object.offset = 0;
                object.cubwrote = 0;
                object.otp_type = 0;
                object.otp_value = 0;
                object.otp_identifier = "";
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                object.filesize = message.filesize;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.getlasterror != null && message.hasOwnProperty("getlasterror"))
                object.getlasterror = message.getlasterror;
            if (message.offset != null && message.hasOwnProperty("offset"))
                object.offset = message.offset;
            if (message.cubwrote != null && message.hasOwnProperty("cubwrote"))
                object.cubwrote = message.cubwrote;
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                object.otp_type = message.otp_type;
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                object.otp_value = message.otp_value;
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                object.otp_identifier = message.otp_identifier;
            return object;
        };
    
        /**
         * Converts this CMsgClientUpdateMachineAuthResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUpdateMachineAuthResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUpdateMachineAuthResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUpdateMachineAuthResponse;
    })();
    
    $root.CMsgClientRequestMachineAuth = (function() {
    
        /**
         * Properties of a CMsgClientRequestMachineAuth.
         * @exports ICMsgClientRequestMachineAuth
         * @interface ICMsgClientRequestMachineAuth
         * @property {string|null} [filename] CMsgClientRequestMachineAuth filename
         * @property {number|null} [eresult_sentryfile] CMsgClientRequestMachineAuth eresult_sentryfile
         * @property {number|null} [filesize] CMsgClientRequestMachineAuth filesize
         * @property {Uint8Array|null} [sha_sentryfile] CMsgClientRequestMachineAuth sha_sentryfile
         * @property {number|null} [lock_account_action] CMsgClientRequestMachineAuth lock_account_action
         * @property {number|null} [otp_type] CMsgClientRequestMachineAuth otp_type
         * @property {string|null} [otp_identifier] CMsgClientRequestMachineAuth otp_identifier
         * @property {Uint8Array|null} [otp_sharedsecret] CMsgClientRequestMachineAuth otp_sharedsecret
         * @property {number|null} [otp_value] CMsgClientRequestMachineAuth otp_value
         * @property {string|null} [machine_name] CMsgClientRequestMachineAuth machine_name
         * @property {string|null} [machine_name_userchosen] CMsgClientRequestMachineAuth machine_name_userchosen
         */
    
        /**
         * Constructs a new CMsgClientRequestMachineAuth.
         * @exports CMsgClientRequestMachineAuth
         * @classdesc Represents a CMsgClientRequestMachineAuth.
         * @implements ICMsgClientRequestMachineAuth
         * @constructor
         * @param {ICMsgClientRequestMachineAuth=} [properties] Properties to set
         */
        function CMsgClientRequestMachineAuth(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestMachineAuth filename.
         * @member {string} filename
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.filename = "";
    
        /**
         * CMsgClientRequestMachineAuth eresult_sentryfile.
         * @member {number} eresult_sentryfile
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.eresult_sentryfile = 0;
    
        /**
         * CMsgClientRequestMachineAuth filesize.
         * @member {number} filesize
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.filesize = 0;
    
        /**
         * CMsgClientRequestMachineAuth sha_sentryfile.
         * @member {Uint8Array} sha_sentryfile
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.sha_sentryfile = $util.newBuffer([]);
    
        /**
         * CMsgClientRequestMachineAuth lock_account_action.
         * @member {number} lock_account_action
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.lock_account_action = 0;
    
        /**
         * CMsgClientRequestMachineAuth otp_type.
         * @member {number} otp_type
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.otp_type = 0;
    
        /**
         * CMsgClientRequestMachineAuth otp_identifier.
         * @member {string} otp_identifier
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.otp_identifier = "";
    
        /**
         * CMsgClientRequestMachineAuth otp_sharedsecret.
         * @member {Uint8Array} otp_sharedsecret
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.otp_sharedsecret = $util.newBuffer([]);
    
        /**
         * CMsgClientRequestMachineAuth otp_value.
         * @member {number} otp_value
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.otp_value = 0;
    
        /**
         * CMsgClientRequestMachineAuth machine_name.
         * @member {string} machine_name
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.machine_name = "";
    
        /**
         * CMsgClientRequestMachineAuth machine_name_userchosen.
         * @member {string} machine_name_userchosen
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         */
        CMsgClientRequestMachineAuth.prototype.machine_name_userchosen = "";
    
        /**
         * Creates a new CMsgClientRequestMachineAuth instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {ICMsgClientRequestMachineAuth=} [properties] Properties to set
         * @returns {CMsgClientRequestMachineAuth} CMsgClientRequestMachineAuth instance
         */
        CMsgClientRequestMachineAuth.create = function create(properties) {
            return new CMsgClientRequestMachineAuth(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestMachineAuth message. Does not implicitly {@link CMsgClientRequestMachineAuth.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {ICMsgClientRequestMachineAuth} message CMsgClientRequestMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestMachineAuth.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filename != null && message.hasOwnProperty("filename"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filename);
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult_sentryfile);
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.filesize);
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha_sentryfile);
            if (message.lock_account_action != null && message.hasOwnProperty("lock_account_action"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.lock_account_action);
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.otp_type);
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.otp_identifier);
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.otp_sharedsecret);
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.otp_value);
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.machine_name);
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.machine_name_userchosen);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestMachineAuth message, length delimited. Does not implicitly {@link CMsgClientRequestMachineAuth.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {ICMsgClientRequestMachineAuth} message CMsgClientRequestMachineAuth message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestMachineAuth.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestMachineAuth message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestMachineAuth} CMsgClientRequestMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestMachineAuth.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestMachineAuth();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.filename = reader.string();
                    break;
                case 2:
                    message.eresult_sentryfile = reader.uint32();
                    break;
                case 3:
                    message.filesize = reader.uint32();
                    break;
                case 4:
                    message.sha_sentryfile = reader.bytes();
                    break;
                case 6:
                    message.lock_account_action = reader.int32();
                    break;
                case 7:
                    message.otp_type = reader.uint32();
                    break;
                case 8:
                    message.otp_identifier = reader.string();
                    break;
                case 9:
                    message.otp_sharedsecret = reader.bytes();
                    break;
                case 10:
                    message.otp_value = reader.uint32();
                    break;
                case 11:
                    message.machine_name = reader.string();
                    break;
                case 12:
                    message.machine_name_userchosen = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestMachineAuth message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestMachineAuth} CMsgClientRequestMachineAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestMachineAuth.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestMachineAuth message.
         * @function verify
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestMachineAuth.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                if (!$util.isInteger(message.eresult_sentryfile))
                    return "eresult_sentryfile: integer expected";
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                if (!$util.isInteger(message.filesize))
                    return "filesize: integer expected";
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                if (!(message.sha_sentryfile && typeof message.sha_sentryfile.length === "number" || $util.isString(message.sha_sentryfile)))
                    return "sha_sentryfile: buffer expected";
            if (message.lock_account_action != null && message.hasOwnProperty("lock_account_action"))
                if (!$util.isInteger(message.lock_account_action))
                    return "lock_account_action: integer expected";
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                if (!$util.isInteger(message.otp_type))
                    return "otp_type: integer expected";
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                if (!$util.isString(message.otp_identifier))
                    return "otp_identifier: string expected";
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                if (!(message.otp_sharedsecret && typeof message.otp_sharedsecret.length === "number" || $util.isString(message.otp_sharedsecret)))
                    return "otp_sharedsecret: buffer expected";
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                if (!$util.isInteger(message.otp_value))
                    return "otp_value: integer expected";
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                if (!$util.isString(message.machine_name))
                    return "machine_name: string expected";
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                if (!$util.isString(message.machine_name_userchosen))
                    return "machine_name_userchosen: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestMachineAuth message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestMachineAuth} CMsgClientRequestMachineAuth
         */
        CMsgClientRequestMachineAuth.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestMachineAuth)
                return object;
            var message = new $root.CMsgClientRequestMachineAuth();
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.eresult_sentryfile != null)
                message.eresult_sentryfile = object.eresult_sentryfile >>> 0;
            if (object.filesize != null)
                message.filesize = object.filesize >>> 0;
            if (object.sha_sentryfile != null)
                if (typeof object.sha_sentryfile === "string")
                    $util.base64.decode(object.sha_sentryfile, message.sha_sentryfile = $util.newBuffer($util.base64.length(object.sha_sentryfile)), 0);
                else if (object.sha_sentryfile.length)
                    message.sha_sentryfile = object.sha_sentryfile;
            if (object.lock_account_action != null)
                message.lock_account_action = object.lock_account_action | 0;
            if (object.otp_type != null)
                message.otp_type = object.otp_type >>> 0;
            if (object.otp_identifier != null)
                message.otp_identifier = String(object.otp_identifier);
            if (object.otp_sharedsecret != null)
                if (typeof object.otp_sharedsecret === "string")
                    $util.base64.decode(object.otp_sharedsecret, message.otp_sharedsecret = $util.newBuffer($util.base64.length(object.otp_sharedsecret)), 0);
                else if (object.otp_sharedsecret.length)
                    message.otp_sharedsecret = object.otp_sharedsecret;
            if (object.otp_value != null)
                message.otp_value = object.otp_value >>> 0;
            if (object.machine_name != null)
                message.machine_name = String(object.machine_name);
            if (object.machine_name_userchosen != null)
                message.machine_name_userchosen = String(object.machine_name_userchosen);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestMachineAuth message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestMachineAuth
         * @static
         * @param {CMsgClientRequestMachineAuth} message CMsgClientRequestMachineAuth
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestMachineAuth.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.filename = "";
                object.eresult_sentryfile = 0;
                object.filesize = 0;
                if (options.bytes === String)
                    object.sha_sentryfile = "";
                else {
                    object.sha_sentryfile = [];
                    if (options.bytes !== Array)
                        object.sha_sentryfile = $util.newBuffer(object.sha_sentryfile);
                }
                object.lock_account_action = 0;
                object.otp_type = 0;
                object.otp_identifier = "";
                if (options.bytes === String)
                    object.otp_sharedsecret = "";
                else {
                    object.otp_sharedsecret = [];
                    if (options.bytes !== Array)
                        object.otp_sharedsecret = $util.newBuffer(object.otp_sharedsecret);
                }
                object.otp_value = 0;
                object.machine_name = "";
                object.machine_name_userchosen = "";
            }
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.eresult_sentryfile != null && message.hasOwnProperty("eresult_sentryfile"))
                object.eresult_sentryfile = message.eresult_sentryfile;
            if (message.filesize != null && message.hasOwnProperty("filesize"))
                object.filesize = message.filesize;
            if (message.sha_sentryfile != null && message.hasOwnProperty("sha_sentryfile"))
                object.sha_sentryfile = options.bytes === String ? $util.base64.encode(message.sha_sentryfile, 0, message.sha_sentryfile.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_sentryfile) : message.sha_sentryfile;
            if (message.lock_account_action != null && message.hasOwnProperty("lock_account_action"))
                object.lock_account_action = message.lock_account_action;
            if (message.otp_type != null && message.hasOwnProperty("otp_type"))
                object.otp_type = message.otp_type;
            if (message.otp_identifier != null && message.hasOwnProperty("otp_identifier"))
                object.otp_identifier = message.otp_identifier;
            if (message.otp_sharedsecret != null && message.hasOwnProperty("otp_sharedsecret"))
                object.otp_sharedsecret = options.bytes === String ? $util.base64.encode(message.otp_sharedsecret, 0, message.otp_sharedsecret.length) : options.bytes === Array ? Array.prototype.slice.call(message.otp_sharedsecret) : message.otp_sharedsecret;
            if (message.otp_value != null && message.hasOwnProperty("otp_value"))
                object.otp_value = message.otp_value;
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                object.machine_name = message.machine_name;
            if (message.machine_name_userchosen != null && message.hasOwnProperty("machine_name_userchosen"))
                object.machine_name_userchosen = message.machine_name_userchosen;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestMachineAuth to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestMachineAuth
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestMachineAuth.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestMachineAuth;
    })();
    
    $root.CMsgClientRequestMachineAuthResponse = (function() {
    
        /**
         * Properties of a CMsgClientRequestMachineAuthResponse.
         * @exports ICMsgClientRequestMachineAuthResponse
         * @interface ICMsgClientRequestMachineAuthResponse
         * @property {number|null} [eresult] CMsgClientRequestMachineAuthResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientRequestMachineAuthResponse.
         * @exports CMsgClientRequestMachineAuthResponse
         * @classdesc Represents a CMsgClientRequestMachineAuthResponse.
         * @implements ICMsgClientRequestMachineAuthResponse
         * @constructor
         * @param {ICMsgClientRequestMachineAuthResponse=} [properties] Properties to set
         */
        function CMsgClientRequestMachineAuthResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestMachineAuthResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRequestMachineAuthResponse
         * @instance
         */
        CMsgClientRequestMachineAuthResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientRequestMachineAuthResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {ICMsgClientRequestMachineAuthResponse=} [properties] Properties to set
         * @returns {CMsgClientRequestMachineAuthResponse} CMsgClientRequestMachineAuthResponse instance
         */
        CMsgClientRequestMachineAuthResponse.create = function create(properties) {
            return new CMsgClientRequestMachineAuthResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestMachineAuthResponse message. Does not implicitly {@link CMsgClientRequestMachineAuthResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {ICMsgClientRequestMachineAuthResponse} message CMsgClientRequestMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestMachineAuthResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestMachineAuthResponse message, length delimited. Does not implicitly {@link CMsgClientRequestMachineAuthResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {ICMsgClientRequestMachineAuthResponse} message CMsgClientRequestMachineAuthResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestMachineAuthResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestMachineAuthResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestMachineAuthResponse} CMsgClientRequestMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestMachineAuthResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestMachineAuthResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestMachineAuthResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestMachineAuthResponse} CMsgClientRequestMachineAuthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestMachineAuthResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestMachineAuthResponse message.
         * @function verify
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestMachineAuthResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestMachineAuthResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestMachineAuthResponse} CMsgClientRequestMachineAuthResponse
         */
        CMsgClientRequestMachineAuthResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestMachineAuthResponse)
                return object;
            var message = new $root.CMsgClientRequestMachineAuthResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestMachineAuthResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestMachineAuthResponse
         * @static
         * @param {CMsgClientRequestMachineAuthResponse} message CMsgClientRequestMachineAuthResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestMachineAuthResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestMachineAuthResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestMachineAuthResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestMachineAuthResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestMachineAuthResponse;
    })();
    
    $root.CMsgClientRegisterKey = (function() {
    
        /**
         * Properties of a CMsgClientRegisterKey.
         * @exports ICMsgClientRegisterKey
         * @interface ICMsgClientRegisterKey
         * @property {string|null} [key] CMsgClientRegisterKey key
         */
    
        /**
         * Constructs a new CMsgClientRegisterKey.
         * @exports CMsgClientRegisterKey
         * @classdesc Represents a CMsgClientRegisterKey.
         * @implements ICMsgClientRegisterKey
         * @constructor
         * @param {ICMsgClientRegisterKey=} [properties] Properties to set
         */
        function CMsgClientRegisterKey(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRegisterKey key.
         * @member {string} key
         * @memberof CMsgClientRegisterKey
         * @instance
         */
        CMsgClientRegisterKey.prototype.key = "";
    
        /**
         * Creates a new CMsgClientRegisterKey instance using the specified properties.
         * @function create
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {ICMsgClientRegisterKey=} [properties] Properties to set
         * @returns {CMsgClientRegisterKey} CMsgClientRegisterKey instance
         */
        CMsgClientRegisterKey.create = function create(properties) {
            return new CMsgClientRegisterKey(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRegisterKey message. Does not implicitly {@link CMsgClientRegisterKey.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {ICMsgClientRegisterKey} message CMsgClientRegisterKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterKey.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.key != null && message.hasOwnProperty("key"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRegisterKey message, length delimited. Does not implicitly {@link CMsgClientRegisterKey.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {ICMsgClientRegisterKey} message CMsgClientRegisterKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterKey.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRegisterKey message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRegisterKey} CMsgClientRegisterKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterKey.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRegisterKey();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.key = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRegisterKey message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRegisterKey} CMsgClientRegisterKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterKey.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRegisterKey message.
         * @function verify
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRegisterKey.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.key != null && message.hasOwnProperty("key"))
                if (!$util.isString(message.key))
                    return "key: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRegisterKey message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRegisterKey} CMsgClientRegisterKey
         */
        CMsgClientRegisterKey.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRegisterKey)
                return object;
            var message = new $root.CMsgClientRegisterKey();
            if (object.key != null)
                message.key = String(object.key);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRegisterKey message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRegisterKey
         * @static
         * @param {CMsgClientRegisterKey} message CMsgClientRegisterKey
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRegisterKey.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.key = "";
            if (message.key != null && message.hasOwnProperty("key"))
                object.key = message.key;
            return object;
        };
    
        /**
         * Converts this CMsgClientRegisterKey to JSON.
         * @function toJSON
         * @memberof CMsgClientRegisterKey
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRegisterKey.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRegisterKey;
    })();
    
    $root.CMsgClientPurchaseResponse = (function() {
    
        /**
         * Properties of a CMsgClientPurchaseResponse.
         * @exports ICMsgClientPurchaseResponse
         * @interface ICMsgClientPurchaseResponse
         * @property {number|null} [eresult] CMsgClientPurchaseResponse eresult
         * @property {number|null} [purchase_result_details] CMsgClientPurchaseResponse purchase_result_details
         * @property {Uint8Array|null} [purchase_receipt_info] CMsgClientPurchaseResponse purchase_receipt_info
         */
    
        /**
         * Constructs a new CMsgClientPurchaseResponse.
         * @exports CMsgClientPurchaseResponse
         * @classdesc Represents a CMsgClientPurchaseResponse.
         * @implements ICMsgClientPurchaseResponse
         * @constructor
         * @param {ICMsgClientPurchaseResponse=} [properties] Properties to set
         */
        function CMsgClientPurchaseResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPurchaseResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientPurchaseResponse
         * @instance
         */
        CMsgClientPurchaseResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientPurchaseResponse purchase_result_details.
         * @member {number} purchase_result_details
         * @memberof CMsgClientPurchaseResponse
         * @instance
         */
        CMsgClientPurchaseResponse.prototype.purchase_result_details = 0;
    
        /**
         * CMsgClientPurchaseResponse purchase_receipt_info.
         * @member {Uint8Array} purchase_receipt_info
         * @memberof CMsgClientPurchaseResponse
         * @instance
         */
        CMsgClientPurchaseResponse.prototype.purchase_receipt_info = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientPurchaseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {ICMsgClientPurchaseResponse=} [properties] Properties to set
         * @returns {CMsgClientPurchaseResponse} CMsgClientPurchaseResponse instance
         */
        CMsgClientPurchaseResponse.create = function create(properties) {
            return new CMsgClientPurchaseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPurchaseResponse message. Does not implicitly {@link CMsgClientPurchaseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {ICMsgClientPurchaseResponse} message CMsgClientPurchaseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPurchaseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.purchase_result_details != null && message.hasOwnProperty("purchase_result_details"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.purchase_result_details);
            if (message.purchase_receipt_info != null && message.hasOwnProperty("purchase_receipt_info"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.purchase_receipt_info);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPurchaseResponse message, length delimited. Does not implicitly {@link CMsgClientPurchaseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {ICMsgClientPurchaseResponse} message CMsgClientPurchaseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPurchaseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPurchaseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPurchaseResponse} CMsgClientPurchaseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPurchaseResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPurchaseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.purchase_result_details = reader.int32();
                    break;
                case 3:
                    message.purchase_receipt_info = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPurchaseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPurchaseResponse} CMsgClientPurchaseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPurchaseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPurchaseResponse message.
         * @function verify
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPurchaseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.purchase_result_details != null && message.hasOwnProperty("purchase_result_details"))
                if (!$util.isInteger(message.purchase_result_details))
                    return "purchase_result_details: integer expected";
            if (message.purchase_receipt_info != null && message.hasOwnProperty("purchase_receipt_info"))
                if (!(message.purchase_receipt_info && typeof message.purchase_receipt_info.length === "number" || $util.isString(message.purchase_receipt_info)))
                    return "purchase_receipt_info: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPurchaseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPurchaseResponse} CMsgClientPurchaseResponse
         */
        CMsgClientPurchaseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPurchaseResponse)
                return object;
            var message = new $root.CMsgClientPurchaseResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.purchase_result_details != null)
                message.purchase_result_details = object.purchase_result_details | 0;
            if (object.purchase_receipt_info != null)
                if (typeof object.purchase_receipt_info === "string")
                    $util.base64.decode(object.purchase_receipt_info, message.purchase_receipt_info = $util.newBuffer($util.base64.length(object.purchase_receipt_info)), 0);
                else if (object.purchase_receipt_info.length)
                    message.purchase_receipt_info = object.purchase_receipt_info;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPurchaseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPurchaseResponse
         * @static
         * @param {CMsgClientPurchaseResponse} message CMsgClientPurchaseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPurchaseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.purchase_result_details = 0;
                if (options.bytes === String)
                    object.purchase_receipt_info = "";
                else {
                    object.purchase_receipt_info = [];
                    if (options.bytes !== Array)
                        object.purchase_receipt_info = $util.newBuffer(object.purchase_receipt_info);
                }
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.purchase_result_details != null && message.hasOwnProperty("purchase_result_details"))
                object.purchase_result_details = message.purchase_result_details;
            if (message.purchase_receipt_info != null && message.hasOwnProperty("purchase_receipt_info"))
                object.purchase_receipt_info = options.bytes === String ? $util.base64.encode(message.purchase_receipt_info, 0, message.purchase_receipt_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.purchase_receipt_info) : message.purchase_receipt_info;
            return object;
        };
    
        /**
         * Converts this CMsgClientPurchaseResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientPurchaseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPurchaseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPurchaseResponse;
    })();
    
    $root.CMsgClientActivateOEMLicense = (function() {
    
        /**
         * Properties of a CMsgClientActivateOEMLicense.
         * @exports ICMsgClientActivateOEMLicense
         * @interface ICMsgClientActivateOEMLicense
         * @property {string|null} [bios_manufacturer] CMsgClientActivateOEMLicense bios_manufacturer
         * @property {string|null} [bios_serialnumber] CMsgClientActivateOEMLicense bios_serialnumber
         * @property {Uint8Array|null} [license_file] CMsgClientActivateOEMLicense license_file
         * @property {string|null} [mainboard_manufacturer] CMsgClientActivateOEMLicense mainboard_manufacturer
         * @property {string|null} [mainboard_product] CMsgClientActivateOEMLicense mainboard_product
         * @property {string|null} [mainboard_serialnumber] CMsgClientActivateOEMLicense mainboard_serialnumber
         */
    
        /**
         * Constructs a new CMsgClientActivateOEMLicense.
         * @exports CMsgClientActivateOEMLicense
         * @classdesc Represents a CMsgClientActivateOEMLicense.
         * @implements ICMsgClientActivateOEMLicense
         * @constructor
         * @param {ICMsgClientActivateOEMLicense=} [properties] Properties to set
         */
        function CMsgClientActivateOEMLicense(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientActivateOEMLicense bios_manufacturer.
         * @member {string} bios_manufacturer
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.bios_manufacturer = "";
    
        /**
         * CMsgClientActivateOEMLicense bios_serialnumber.
         * @member {string} bios_serialnumber
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.bios_serialnumber = "";
    
        /**
         * CMsgClientActivateOEMLicense license_file.
         * @member {Uint8Array} license_file
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.license_file = $util.newBuffer([]);
    
        /**
         * CMsgClientActivateOEMLicense mainboard_manufacturer.
         * @member {string} mainboard_manufacturer
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.mainboard_manufacturer = "";
    
        /**
         * CMsgClientActivateOEMLicense mainboard_product.
         * @member {string} mainboard_product
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.mainboard_product = "";
    
        /**
         * CMsgClientActivateOEMLicense mainboard_serialnumber.
         * @member {string} mainboard_serialnumber
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         */
        CMsgClientActivateOEMLicense.prototype.mainboard_serialnumber = "";
    
        /**
         * Creates a new CMsgClientActivateOEMLicense instance using the specified properties.
         * @function create
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {ICMsgClientActivateOEMLicense=} [properties] Properties to set
         * @returns {CMsgClientActivateOEMLicense} CMsgClientActivateOEMLicense instance
         */
        CMsgClientActivateOEMLicense.create = function create(properties) {
            return new CMsgClientActivateOEMLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgClientActivateOEMLicense message. Does not implicitly {@link CMsgClientActivateOEMLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {ICMsgClientActivateOEMLicense} message CMsgClientActivateOEMLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientActivateOEMLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.bios_manufacturer != null && message.hasOwnProperty("bios_manufacturer"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bios_manufacturer);
            if (message.bios_serialnumber != null && message.hasOwnProperty("bios_serialnumber"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.bios_serialnumber);
            if (message.license_file != null && message.hasOwnProperty("license_file"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.license_file);
            if (message.mainboard_manufacturer != null && message.hasOwnProperty("mainboard_manufacturer"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.mainboard_manufacturer);
            if (message.mainboard_product != null && message.hasOwnProperty("mainboard_product"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.mainboard_product);
            if (message.mainboard_serialnumber != null && message.hasOwnProperty("mainboard_serialnumber"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.mainboard_serialnumber);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientActivateOEMLicense message, length delimited. Does not implicitly {@link CMsgClientActivateOEMLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {ICMsgClientActivateOEMLicense} message CMsgClientActivateOEMLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientActivateOEMLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientActivateOEMLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientActivateOEMLicense} CMsgClientActivateOEMLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientActivateOEMLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientActivateOEMLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.bios_manufacturer = reader.string();
                    break;
                case 2:
                    message.bios_serialnumber = reader.string();
                    break;
                case 3:
                    message.license_file = reader.bytes();
                    break;
                case 4:
                    message.mainboard_manufacturer = reader.string();
                    break;
                case 5:
                    message.mainboard_product = reader.string();
                    break;
                case 6:
                    message.mainboard_serialnumber = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientActivateOEMLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientActivateOEMLicense} CMsgClientActivateOEMLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientActivateOEMLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientActivateOEMLicense message.
         * @function verify
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientActivateOEMLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.bios_manufacturer != null && message.hasOwnProperty("bios_manufacturer"))
                if (!$util.isString(message.bios_manufacturer))
                    return "bios_manufacturer: string expected";
            if (message.bios_serialnumber != null && message.hasOwnProperty("bios_serialnumber"))
                if (!$util.isString(message.bios_serialnumber))
                    return "bios_serialnumber: string expected";
            if (message.license_file != null && message.hasOwnProperty("license_file"))
                if (!(message.license_file && typeof message.license_file.length === "number" || $util.isString(message.license_file)))
                    return "license_file: buffer expected";
            if (message.mainboard_manufacturer != null && message.hasOwnProperty("mainboard_manufacturer"))
                if (!$util.isString(message.mainboard_manufacturer))
                    return "mainboard_manufacturer: string expected";
            if (message.mainboard_product != null && message.hasOwnProperty("mainboard_product"))
                if (!$util.isString(message.mainboard_product))
                    return "mainboard_product: string expected";
            if (message.mainboard_serialnumber != null && message.hasOwnProperty("mainboard_serialnumber"))
                if (!$util.isString(message.mainboard_serialnumber))
                    return "mainboard_serialnumber: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientActivateOEMLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientActivateOEMLicense} CMsgClientActivateOEMLicense
         */
        CMsgClientActivateOEMLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientActivateOEMLicense)
                return object;
            var message = new $root.CMsgClientActivateOEMLicense();
            if (object.bios_manufacturer != null)
                message.bios_manufacturer = String(object.bios_manufacturer);
            if (object.bios_serialnumber != null)
                message.bios_serialnumber = String(object.bios_serialnumber);
            if (object.license_file != null)
                if (typeof object.license_file === "string")
                    $util.base64.decode(object.license_file, message.license_file = $util.newBuffer($util.base64.length(object.license_file)), 0);
                else if (object.license_file.length)
                    message.license_file = object.license_file;
            if (object.mainboard_manufacturer != null)
                message.mainboard_manufacturer = String(object.mainboard_manufacturer);
            if (object.mainboard_product != null)
                message.mainboard_product = String(object.mainboard_product);
            if (object.mainboard_serialnumber != null)
                message.mainboard_serialnumber = String(object.mainboard_serialnumber);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientActivateOEMLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientActivateOEMLicense
         * @static
         * @param {CMsgClientActivateOEMLicense} message CMsgClientActivateOEMLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientActivateOEMLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.bios_manufacturer = "";
                object.bios_serialnumber = "";
                if (options.bytes === String)
                    object.license_file = "";
                else {
                    object.license_file = [];
                    if (options.bytes !== Array)
                        object.license_file = $util.newBuffer(object.license_file);
                }
                object.mainboard_manufacturer = "";
                object.mainboard_product = "";
                object.mainboard_serialnumber = "";
            }
            if (message.bios_manufacturer != null && message.hasOwnProperty("bios_manufacturer"))
                object.bios_manufacturer = message.bios_manufacturer;
            if (message.bios_serialnumber != null && message.hasOwnProperty("bios_serialnumber"))
                object.bios_serialnumber = message.bios_serialnumber;
            if (message.license_file != null && message.hasOwnProperty("license_file"))
                object.license_file = options.bytes === String ? $util.base64.encode(message.license_file, 0, message.license_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.license_file) : message.license_file;
            if (message.mainboard_manufacturer != null && message.hasOwnProperty("mainboard_manufacturer"))
                object.mainboard_manufacturer = message.mainboard_manufacturer;
            if (message.mainboard_product != null && message.hasOwnProperty("mainboard_product"))
                object.mainboard_product = message.mainboard_product;
            if (message.mainboard_serialnumber != null && message.hasOwnProperty("mainboard_serialnumber"))
                object.mainboard_serialnumber = message.mainboard_serialnumber;
            return object;
        };
    
        /**
         * Converts this CMsgClientActivateOEMLicense to JSON.
         * @function toJSON
         * @memberof CMsgClientActivateOEMLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientActivateOEMLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientActivateOEMLicense;
    })();
    
    $root.CMsgClientRegisterOEMMachine = (function() {
    
        /**
         * Properties of a CMsgClientRegisterOEMMachine.
         * @exports ICMsgClientRegisterOEMMachine
         * @interface ICMsgClientRegisterOEMMachine
         * @property {Uint8Array|null} [oem_register_file] CMsgClientRegisterOEMMachine oem_register_file
         */
    
        /**
         * Constructs a new CMsgClientRegisterOEMMachine.
         * @exports CMsgClientRegisterOEMMachine
         * @classdesc Represents a CMsgClientRegisterOEMMachine.
         * @implements ICMsgClientRegisterOEMMachine
         * @constructor
         * @param {ICMsgClientRegisterOEMMachine=} [properties] Properties to set
         */
        function CMsgClientRegisterOEMMachine(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRegisterOEMMachine oem_register_file.
         * @member {Uint8Array} oem_register_file
         * @memberof CMsgClientRegisterOEMMachine
         * @instance
         */
        CMsgClientRegisterOEMMachine.prototype.oem_register_file = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientRegisterOEMMachine instance using the specified properties.
         * @function create
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {ICMsgClientRegisterOEMMachine=} [properties] Properties to set
         * @returns {CMsgClientRegisterOEMMachine} CMsgClientRegisterOEMMachine instance
         */
        CMsgClientRegisterOEMMachine.create = function create(properties) {
            return new CMsgClientRegisterOEMMachine(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRegisterOEMMachine message. Does not implicitly {@link CMsgClientRegisterOEMMachine.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {ICMsgClientRegisterOEMMachine} message CMsgClientRegisterOEMMachine message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterOEMMachine.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.oem_register_file != null && message.hasOwnProperty("oem_register_file"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.oem_register_file);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRegisterOEMMachine message, length delimited. Does not implicitly {@link CMsgClientRegisterOEMMachine.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {ICMsgClientRegisterOEMMachine} message CMsgClientRegisterOEMMachine message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterOEMMachine.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRegisterOEMMachine message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRegisterOEMMachine} CMsgClientRegisterOEMMachine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterOEMMachine.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRegisterOEMMachine();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.oem_register_file = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRegisterOEMMachine message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRegisterOEMMachine} CMsgClientRegisterOEMMachine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterOEMMachine.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRegisterOEMMachine message.
         * @function verify
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRegisterOEMMachine.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.oem_register_file != null && message.hasOwnProperty("oem_register_file"))
                if (!(message.oem_register_file && typeof message.oem_register_file.length === "number" || $util.isString(message.oem_register_file)))
                    return "oem_register_file: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRegisterOEMMachine message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRegisterOEMMachine} CMsgClientRegisterOEMMachine
         */
        CMsgClientRegisterOEMMachine.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRegisterOEMMachine)
                return object;
            var message = new $root.CMsgClientRegisterOEMMachine();
            if (object.oem_register_file != null)
                if (typeof object.oem_register_file === "string")
                    $util.base64.decode(object.oem_register_file, message.oem_register_file = $util.newBuffer($util.base64.length(object.oem_register_file)), 0);
                else if (object.oem_register_file.length)
                    message.oem_register_file = object.oem_register_file;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRegisterOEMMachine message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRegisterOEMMachine
         * @static
         * @param {CMsgClientRegisterOEMMachine} message CMsgClientRegisterOEMMachine
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRegisterOEMMachine.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if (options.bytes === String)
                    object.oem_register_file = "";
                else {
                    object.oem_register_file = [];
                    if (options.bytes !== Array)
                        object.oem_register_file = $util.newBuffer(object.oem_register_file);
                }
            if (message.oem_register_file != null && message.hasOwnProperty("oem_register_file"))
                object.oem_register_file = options.bytes === String ? $util.base64.encode(message.oem_register_file, 0, message.oem_register_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.oem_register_file) : message.oem_register_file;
            return object;
        };
    
        /**
         * Converts this CMsgClientRegisterOEMMachine to JSON.
         * @function toJSON
         * @memberof CMsgClientRegisterOEMMachine
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRegisterOEMMachine.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRegisterOEMMachine;
    })();
    
    $root.CMsgClientRegisterOEMMachineResponse = (function() {
    
        /**
         * Properties of a CMsgClientRegisterOEMMachineResponse.
         * @exports ICMsgClientRegisterOEMMachineResponse
         * @interface ICMsgClientRegisterOEMMachineResponse
         * @property {number|null} [eresult] CMsgClientRegisterOEMMachineResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientRegisterOEMMachineResponse.
         * @exports CMsgClientRegisterOEMMachineResponse
         * @classdesc Represents a CMsgClientRegisterOEMMachineResponse.
         * @implements ICMsgClientRegisterOEMMachineResponse
         * @constructor
         * @param {ICMsgClientRegisterOEMMachineResponse=} [properties] Properties to set
         */
        function CMsgClientRegisterOEMMachineResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRegisterOEMMachineResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @instance
         */
        CMsgClientRegisterOEMMachineResponse.prototype.eresult = 0;
    
        /**
         * Creates a new CMsgClientRegisterOEMMachineResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {ICMsgClientRegisterOEMMachineResponse=} [properties] Properties to set
         * @returns {CMsgClientRegisterOEMMachineResponse} CMsgClientRegisterOEMMachineResponse instance
         */
        CMsgClientRegisterOEMMachineResponse.create = function create(properties) {
            return new CMsgClientRegisterOEMMachineResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRegisterOEMMachineResponse message. Does not implicitly {@link CMsgClientRegisterOEMMachineResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {ICMsgClientRegisterOEMMachineResponse} message CMsgClientRegisterOEMMachineResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterOEMMachineResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRegisterOEMMachineResponse message, length delimited. Does not implicitly {@link CMsgClientRegisterOEMMachineResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {ICMsgClientRegisterOEMMachineResponse} message CMsgClientRegisterOEMMachineResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterOEMMachineResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRegisterOEMMachineResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRegisterOEMMachineResponse} CMsgClientRegisterOEMMachineResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterOEMMachineResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRegisterOEMMachineResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRegisterOEMMachineResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRegisterOEMMachineResponse} CMsgClientRegisterOEMMachineResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterOEMMachineResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRegisterOEMMachineResponse message.
         * @function verify
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRegisterOEMMachineResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRegisterOEMMachineResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRegisterOEMMachineResponse} CMsgClientRegisterOEMMachineResponse
         */
        CMsgClientRegisterOEMMachineResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRegisterOEMMachineResponse)
                return object;
            var message = new $root.CMsgClientRegisterOEMMachineResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRegisterOEMMachineResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @static
         * @param {CMsgClientRegisterOEMMachineResponse} message CMsgClientRegisterOEMMachineResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRegisterOEMMachineResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 0;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientRegisterOEMMachineResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRegisterOEMMachineResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRegisterOEMMachineResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRegisterOEMMachineResponse;
    })();
    
    $root.CMsgClientPurchaseWithMachineID = (function() {
    
        /**
         * Properties of a CMsgClientPurchaseWithMachineID.
         * @exports ICMsgClientPurchaseWithMachineID
         * @interface ICMsgClientPurchaseWithMachineID
         * @property {number|null} [package_id] CMsgClientPurchaseWithMachineID package_id
         * @property {Uint8Array|null} [machine_info] CMsgClientPurchaseWithMachineID machine_info
         */
    
        /**
         * Constructs a new CMsgClientPurchaseWithMachineID.
         * @exports CMsgClientPurchaseWithMachineID
         * @classdesc Represents a CMsgClientPurchaseWithMachineID.
         * @implements ICMsgClientPurchaseWithMachineID
         * @constructor
         * @param {ICMsgClientPurchaseWithMachineID=} [properties] Properties to set
         */
        function CMsgClientPurchaseWithMachineID(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPurchaseWithMachineID package_id.
         * @member {number} package_id
         * @memberof CMsgClientPurchaseWithMachineID
         * @instance
         */
        CMsgClientPurchaseWithMachineID.prototype.package_id = 0;
    
        /**
         * CMsgClientPurchaseWithMachineID machine_info.
         * @member {Uint8Array} machine_info
         * @memberof CMsgClientPurchaseWithMachineID
         * @instance
         */
        CMsgClientPurchaseWithMachineID.prototype.machine_info = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientPurchaseWithMachineID instance using the specified properties.
         * @function create
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {ICMsgClientPurchaseWithMachineID=} [properties] Properties to set
         * @returns {CMsgClientPurchaseWithMachineID} CMsgClientPurchaseWithMachineID instance
         */
        CMsgClientPurchaseWithMachineID.create = function create(properties) {
            return new CMsgClientPurchaseWithMachineID(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPurchaseWithMachineID message. Does not implicitly {@link CMsgClientPurchaseWithMachineID.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {ICMsgClientPurchaseWithMachineID} message CMsgClientPurchaseWithMachineID message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPurchaseWithMachineID.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.package_id);
            if (message.machine_info != null && message.hasOwnProperty("machine_info"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.machine_info);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPurchaseWithMachineID message, length delimited. Does not implicitly {@link CMsgClientPurchaseWithMachineID.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {ICMsgClientPurchaseWithMachineID} message CMsgClientPurchaseWithMachineID message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPurchaseWithMachineID.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPurchaseWithMachineID message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPurchaseWithMachineID} CMsgClientPurchaseWithMachineID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPurchaseWithMachineID.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPurchaseWithMachineID();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.package_id = reader.uint32();
                    break;
                case 2:
                    message.machine_info = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPurchaseWithMachineID message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPurchaseWithMachineID} CMsgClientPurchaseWithMachineID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPurchaseWithMachineID.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPurchaseWithMachineID message.
         * @function verify
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPurchaseWithMachineID.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                if (!$util.isInteger(message.package_id))
                    return "package_id: integer expected";
            if (message.machine_info != null && message.hasOwnProperty("machine_info"))
                if (!(message.machine_info && typeof message.machine_info.length === "number" || $util.isString(message.machine_info)))
                    return "machine_info: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPurchaseWithMachineID message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPurchaseWithMachineID} CMsgClientPurchaseWithMachineID
         */
        CMsgClientPurchaseWithMachineID.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPurchaseWithMachineID)
                return object;
            var message = new $root.CMsgClientPurchaseWithMachineID();
            if (object.package_id != null)
                message.package_id = object.package_id >>> 0;
            if (object.machine_info != null)
                if (typeof object.machine_info === "string")
                    $util.base64.decode(object.machine_info, message.machine_info = $util.newBuffer($util.base64.length(object.machine_info)), 0);
                else if (object.machine_info.length)
                    message.machine_info = object.machine_info;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPurchaseWithMachineID message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPurchaseWithMachineID
         * @static
         * @param {CMsgClientPurchaseWithMachineID} message CMsgClientPurchaseWithMachineID
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPurchaseWithMachineID.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.package_id = 0;
                if (options.bytes === String)
                    object.machine_info = "";
                else {
                    object.machine_info = [];
                    if (options.bytes !== Array)
                        object.machine_info = $util.newBuffer(object.machine_info);
                }
            }
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                object.package_id = message.package_id;
            if (message.machine_info != null && message.hasOwnProperty("machine_info"))
                object.machine_info = options.bytes === String ? $util.base64.encode(message.machine_info, 0, message.machine_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.machine_info) : message.machine_info;
            return object;
        };
    
        /**
         * Converts this CMsgClientPurchaseWithMachineID to JSON.
         * @function toJSON
         * @memberof CMsgClientPurchaseWithMachineID
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPurchaseWithMachineID.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPurchaseWithMachineID;
    })();
    
    $root.CMsgTrading_InitiateTradeRequest = (function() {
    
        /**
         * Properties of a CMsgTrading_InitiateTradeRequest.
         * @exports ICMsgTrading_InitiateTradeRequest
         * @interface ICMsgTrading_InitiateTradeRequest
         * @property {number|null} [trade_request_id] CMsgTrading_InitiateTradeRequest trade_request_id
         * @property {number|Long|null} [other_steamid] CMsgTrading_InitiateTradeRequest other_steamid
         * @property {string|null} [other_name] CMsgTrading_InitiateTradeRequest other_name
         */
    
        /**
         * Constructs a new CMsgTrading_InitiateTradeRequest.
         * @exports CMsgTrading_InitiateTradeRequest
         * @classdesc Represents a CMsgTrading_InitiateTradeRequest.
         * @implements ICMsgTrading_InitiateTradeRequest
         * @constructor
         * @param {ICMsgTrading_InitiateTradeRequest=} [properties] Properties to set
         */
        function CMsgTrading_InitiateTradeRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgTrading_InitiateTradeRequest trade_request_id.
         * @member {number} trade_request_id
         * @memberof CMsgTrading_InitiateTradeRequest
         * @instance
         */
        CMsgTrading_InitiateTradeRequest.prototype.trade_request_id = 0;
    
        /**
         * CMsgTrading_InitiateTradeRequest other_steamid.
         * @member {number|Long} other_steamid
         * @memberof CMsgTrading_InitiateTradeRequest
         * @instance
         */
        CMsgTrading_InitiateTradeRequest.prototype.other_steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgTrading_InitiateTradeRequest other_name.
         * @member {string} other_name
         * @memberof CMsgTrading_InitiateTradeRequest
         * @instance
         */
        CMsgTrading_InitiateTradeRequest.prototype.other_name = "";
    
        /**
         * Creates a new CMsgTrading_InitiateTradeRequest instance using the specified properties.
         * @function create
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {ICMsgTrading_InitiateTradeRequest=} [properties] Properties to set
         * @returns {CMsgTrading_InitiateTradeRequest} CMsgTrading_InitiateTradeRequest instance
         */
        CMsgTrading_InitiateTradeRequest.create = function create(properties) {
            return new CMsgTrading_InitiateTradeRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgTrading_InitiateTradeRequest message. Does not implicitly {@link CMsgTrading_InitiateTradeRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {ICMsgTrading_InitiateTradeRequest} message CMsgTrading_InitiateTradeRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_InitiateTradeRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.trade_request_id);
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.other_steamid);
            if (message.other_name != null && message.hasOwnProperty("other_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.other_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgTrading_InitiateTradeRequest message, length delimited. Does not implicitly {@link CMsgTrading_InitiateTradeRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {ICMsgTrading_InitiateTradeRequest} message CMsgTrading_InitiateTradeRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_InitiateTradeRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgTrading_InitiateTradeRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgTrading_InitiateTradeRequest} CMsgTrading_InitiateTradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_InitiateTradeRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgTrading_InitiateTradeRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.trade_request_id = reader.uint32();
                    break;
                case 2:
                    message.other_steamid = reader.uint64();
                    break;
                case 3:
                    message.other_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgTrading_InitiateTradeRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgTrading_InitiateTradeRequest} CMsgTrading_InitiateTradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_InitiateTradeRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgTrading_InitiateTradeRequest message.
         * @function verify
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgTrading_InitiateTradeRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                if (!$util.isInteger(message.trade_request_id))
                    return "trade_request_id: integer expected";
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (!$util.isInteger(message.other_steamid) && !(message.other_steamid && $util.isInteger(message.other_steamid.low) && $util.isInteger(message.other_steamid.high)))
                    return "other_steamid: integer|Long expected";
            if (message.other_name != null && message.hasOwnProperty("other_name"))
                if (!$util.isString(message.other_name))
                    return "other_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgTrading_InitiateTradeRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgTrading_InitiateTradeRequest} CMsgTrading_InitiateTradeRequest
         */
        CMsgTrading_InitiateTradeRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgTrading_InitiateTradeRequest)
                return object;
            var message = new $root.CMsgTrading_InitiateTradeRequest();
            if (object.trade_request_id != null)
                message.trade_request_id = object.trade_request_id >>> 0;
            if (object.other_steamid != null)
                if ($util.Long)
                    (message.other_steamid = $util.Long.fromValue(object.other_steamid)).unsigned = true;
                else if (typeof object.other_steamid === "string")
                    message.other_steamid = parseInt(object.other_steamid, 10);
                else if (typeof object.other_steamid === "number")
                    message.other_steamid = object.other_steamid;
                else if (typeof object.other_steamid === "object")
                    message.other_steamid = new $util.LongBits(object.other_steamid.low >>> 0, object.other_steamid.high >>> 0).toNumber(true);
            if (object.other_name != null)
                message.other_name = String(object.other_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgTrading_InitiateTradeRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgTrading_InitiateTradeRequest
         * @static
         * @param {CMsgTrading_InitiateTradeRequest} message CMsgTrading_InitiateTradeRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgTrading_InitiateTradeRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.trade_request_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.other_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.other_steamid = options.longs === String ? "0" : 0;
                object.other_name = "";
            }
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                object.trade_request_id = message.trade_request_id;
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (typeof message.other_steamid === "number")
                    object.other_steamid = options.longs === String ? String(message.other_steamid) : message.other_steamid;
                else
                    object.other_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.other_steamid) : options.longs === Number ? new $util.LongBits(message.other_steamid.low >>> 0, message.other_steamid.high >>> 0).toNumber(true) : message.other_steamid;
            if (message.other_name != null && message.hasOwnProperty("other_name"))
                object.other_name = message.other_name;
            return object;
        };
    
        /**
         * Converts this CMsgTrading_InitiateTradeRequest to JSON.
         * @function toJSON
         * @memberof CMsgTrading_InitiateTradeRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgTrading_InitiateTradeRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgTrading_InitiateTradeRequest;
    })();
    
    $root.CMsgTrading_InitiateTradeResponse = (function() {
    
        /**
         * Properties of a CMsgTrading_InitiateTradeResponse.
         * @exports ICMsgTrading_InitiateTradeResponse
         * @interface ICMsgTrading_InitiateTradeResponse
         * @property {number|null} [response] CMsgTrading_InitiateTradeResponse response
         * @property {number|null} [trade_request_id] CMsgTrading_InitiateTradeResponse trade_request_id
         * @property {number|Long|null} [other_steamid] CMsgTrading_InitiateTradeResponse other_steamid
         * @property {number|null} [steamguard_required_days] CMsgTrading_InitiateTradeResponse steamguard_required_days
         * @property {number|null} [new_device_cooldown_days] CMsgTrading_InitiateTradeResponse new_device_cooldown_days
         * @property {number|null} [default_password_reset_probation_days] CMsgTrading_InitiateTradeResponse default_password_reset_probation_days
         * @property {number|null} [password_reset_probation_days] CMsgTrading_InitiateTradeResponse password_reset_probation_days
         * @property {number|null} [default_email_change_probation_days] CMsgTrading_InitiateTradeResponse default_email_change_probation_days
         * @property {number|null} [email_change_probation_days] CMsgTrading_InitiateTradeResponse email_change_probation_days
         */
    
        /**
         * Constructs a new CMsgTrading_InitiateTradeResponse.
         * @exports CMsgTrading_InitiateTradeResponse
         * @classdesc Represents a CMsgTrading_InitiateTradeResponse.
         * @implements ICMsgTrading_InitiateTradeResponse
         * @constructor
         * @param {ICMsgTrading_InitiateTradeResponse=} [properties] Properties to set
         */
        function CMsgTrading_InitiateTradeResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgTrading_InitiateTradeResponse response.
         * @member {number} response
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.response = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse trade_request_id.
         * @member {number} trade_request_id
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.trade_request_id = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse other_steamid.
         * @member {number|Long} other_steamid
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.other_steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse steamguard_required_days.
         * @member {number} steamguard_required_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.steamguard_required_days = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse new_device_cooldown_days.
         * @member {number} new_device_cooldown_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.new_device_cooldown_days = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse default_password_reset_probation_days.
         * @member {number} default_password_reset_probation_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.default_password_reset_probation_days = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse password_reset_probation_days.
         * @member {number} password_reset_probation_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.password_reset_probation_days = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse default_email_change_probation_days.
         * @member {number} default_email_change_probation_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.default_email_change_probation_days = 0;
    
        /**
         * CMsgTrading_InitiateTradeResponse email_change_probation_days.
         * @member {number} email_change_probation_days
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         */
        CMsgTrading_InitiateTradeResponse.prototype.email_change_probation_days = 0;
    
        /**
         * Creates a new CMsgTrading_InitiateTradeResponse instance using the specified properties.
         * @function create
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {ICMsgTrading_InitiateTradeResponse=} [properties] Properties to set
         * @returns {CMsgTrading_InitiateTradeResponse} CMsgTrading_InitiateTradeResponse instance
         */
        CMsgTrading_InitiateTradeResponse.create = function create(properties) {
            return new CMsgTrading_InitiateTradeResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgTrading_InitiateTradeResponse message. Does not implicitly {@link CMsgTrading_InitiateTradeResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {ICMsgTrading_InitiateTradeResponse} message CMsgTrading_InitiateTradeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_InitiateTradeResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.response != null && message.hasOwnProperty("response"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.response);
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.trade_request_id);
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.other_steamid);
            if (message.steamguard_required_days != null && message.hasOwnProperty("steamguard_required_days"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.steamguard_required_days);
            if (message.new_device_cooldown_days != null && message.hasOwnProperty("new_device_cooldown_days"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.new_device_cooldown_days);
            if (message.default_password_reset_probation_days != null && message.hasOwnProperty("default_password_reset_probation_days"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.default_password_reset_probation_days);
            if (message.password_reset_probation_days != null && message.hasOwnProperty("password_reset_probation_days"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.password_reset_probation_days);
            if (message.default_email_change_probation_days != null && message.hasOwnProperty("default_email_change_probation_days"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.default_email_change_probation_days);
            if (message.email_change_probation_days != null && message.hasOwnProperty("email_change_probation_days"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.email_change_probation_days);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgTrading_InitiateTradeResponse message, length delimited. Does not implicitly {@link CMsgTrading_InitiateTradeResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {ICMsgTrading_InitiateTradeResponse} message CMsgTrading_InitiateTradeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_InitiateTradeResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgTrading_InitiateTradeResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgTrading_InitiateTradeResponse} CMsgTrading_InitiateTradeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_InitiateTradeResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgTrading_InitiateTradeResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.response = reader.uint32();
                    break;
                case 2:
                    message.trade_request_id = reader.uint32();
                    break;
                case 3:
                    message.other_steamid = reader.uint64();
                    break;
                case 4:
                    message.steamguard_required_days = reader.uint32();
                    break;
                case 5:
                    message.new_device_cooldown_days = reader.uint32();
                    break;
                case 6:
                    message.default_password_reset_probation_days = reader.uint32();
                    break;
                case 7:
                    message.password_reset_probation_days = reader.uint32();
                    break;
                case 8:
                    message.default_email_change_probation_days = reader.uint32();
                    break;
                case 9:
                    message.email_change_probation_days = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgTrading_InitiateTradeResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgTrading_InitiateTradeResponse} CMsgTrading_InitiateTradeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_InitiateTradeResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgTrading_InitiateTradeResponse message.
         * @function verify
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgTrading_InitiateTradeResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.response != null && message.hasOwnProperty("response"))
                if (!$util.isInteger(message.response))
                    return "response: integer expected";
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                if (!$util.isInteger(message.trade_request_id))
                    return "trade_request_id: integer expected";
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (!$util.isInteger(message.other_steamid) && !(message.other_steamid && $util.isInteger(message.other_steamid.low) && $util.isInteger(message.other_steamid.high)))
                    return "other_steamid: integer|Long expected";
            if (message.steamguard_required_days != null && message.hasOwnProperty("steamguard_required_days"))
                if (!$util.isInteger(message.steamguard_required_days))
                    return "steamguard_required_days: integer expected";
            if (message.new_device_cooldown_days != null && message.hasOwnProperty("new_device_cooldown_days"))
                if (!$util.isInteger(message.new_device_cooldown_days))
                    return "new_device_cooldown_days: integer expected";
            if (message.default_password_reset_probation_days != null && message.hasOwnProperty("default_password_reset_probation_days"))
                if (!$util.isInteger(message.default_password_reset_probation_days))
                    return "default_password_reset_probation_days: integer expected";
            if (message.password_reset_probation_days != null && message.hasOwnProperty("password_reset_probation_days"))
                if (!$util.isInteger(message.password_reset_probation_days))
                    return "password_reset_probation_days: integer expected";
            if (message.default_email_change_probation_days != null && message.hasOwnProperty("default_email_change_probation_days"))
                if (!$util.isInteger(message.default_email_change_probation_days))
                    return "default_email_change_probation_days: integer expected";
            if (message.email_change_probation_days != null && message.hasOwnProperty("email_change_probation_days"))
                if (!$util.isInteger(message.email_change_probation_days))
                    return "email_change_probation_days: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgTrading_InitiateTradeResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgTrading_InitiateTradeResponse} CMsgTrading_InitiateTradeResponse
         */
        CMsgTrading_InitiateTradeResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgTrading_InitiateTradeResponse)
                return object;
            var message = new $root.CMsgTrading_InitiateTradeResponse();
            if (object.response != null)
                message.response = object.response >>> 0;
            if (object.trade_request_id != null)
                message.trade_request_id = object.trade_request_id >>> 0;
            if (object.other_steamid != null)
                if ($util.Long)
                    (message.other_steamid = $util.Long.fromValue(object.other_steamid)).unsigned = true;
                else if (typeof object.other_steamid === "string")
                    message.other_steamid = parseInt(object.other_steamid, 10);
                else if (typeof object.other_steamid === "number")
                    message.other_steamid = object.other_steamid;
                else if (typeof object.other_steamid === "object")
                    message.other_steamid = new $util.LongBits(object.other_steamid.low >>> 0, object.other_steamid.high >>> 0).toNumber(true);
            if (object.steamguard_required_days != null)
                message.steamguard_required_days = object.steamguard_required_days >>> 0;
            if (object.new_device_cooldown_days != null)
                message.new_device_cooldown_days = object.new_device_cooldown_days >>> 0;
            if (object.default_password_reset_probation_days != null)
                message.default_password_reset_probation_days = object.default_password_reset_probation_days >>> 0;
            if (object.password_reset_probation_days != null)
                message.password_reset_probation_days = object.password_reset_probation_days >>> 0;
            if (object.default_email_change_probation_days != null)
                message.default_email_change_probation_days = object.default_email_change_probation_days >>> 0;
            if (object.email_change_probation_days != null)
                message.email_change_probation_days = object.email_change_probation_days >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgTrading_InitiateTradeResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgTrading_InitiateTradeResponse
         * @static
         * @param {CMsgTrading_InitiateTradeResponse} message CMsgTrading_InitiateTradeResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgTrading_InitiateTradeResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.response = 0;
                object.trade_request_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.other_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.other_steamid = options.longs === String ? "0" : 0;
                object.steamguard_required_days = 0;
                object.new_device_cooldown_days = 0;
                object.default_password_reset_probation_days = 0;
                object.password_reset_probation_days = 0;
                object.default_email_change_probation_days = 0;
                object.email_change_probation_days = 0;
            }
            if (message.response != null && message.hasOwnProperty("response"))
                object.response = message.response;
            if (message.trade_request_id != null && message.hasOwnProperty("trade_request_id"))
                object.trade_request_id = message.trade_request_id;
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (typeof message.other_steamid === "number")
                    object.other_steamid = options.longs === String ? String(message.other_steamid) : message.other_steamid;
                else
                    object.other_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.other_steamid) : options.longs === Number ? new $util.LongBits(message.other_steamid.low >>> 0, message.other_steamid.high >>> 0).toNumber(true) : message.other_steamid;
            if (message.steamguard_required_days != null && message.hasOwnProperty("steamguard_required_days"))
                object.steamguard_required_days = message.steamguard_required_days;
            if (message.new_device_cooldown_days != null && message.hasOwnProperty("new_device_cooldown_days"))
                object.new_device_cooldown_days = message.new_device_cooldown_days;
            if (message.default_password_reset_probation_days != null && message.hasOwnProperty("default_password_reset_probation_days"))
                object.default_password_reset_probation_days = message.default_password_reset_probation_days;
            if (message.password_reset_probation_days != null && message.hasOwnProperty("password_reset_probation_days"))
                object.password_reset_probation_days = message.password_reset_probation_days;
            if (message.default_email_change_probation_days != null && message.hasOwnProperty("default_email_change_probation_days"))
                object.default_email_change_probation_days = message.default_email_change_probation_days;
            if (message.email_change_probation_days != null && message.hasOwnProperty("email_change_probation_days"))
                object.email_change_probation_days = message.email_change_probation_days;
            return object;
        };
    
        /**
         * Converts this CMsgTrading_InitiateTradeResponse to JSON.
         * @function toJSON
         * @memberof CMsgTrading_InitiateTradeResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgTrading_InitiateTradeResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgTrading_InitiateTradeResponse;
    })();
    
    $root.CMsgTrading_CancelTradeRequest = (function() {
    
        /**
         * Properties of a CMsgTrading_CancelTradeRequest.
         * @exports ICMsgTrading_CancelTradeRequest
         * @interface ICMsgTrading_CancelTradeRequest
         * @property {number|Long|null} [other_steamid] CMsgTrading_CancelTradeRequest other_steamid
         */
    
        /**
         * Constructs a new CMsgTrading_CancelTradeRequest.
         * @exports CMsgTrading_CancelTradeRequest
         * @classdesc Represents a CMsgTrading_CancelTradeRequest.
         * @implements ICMsgTrading_CancelTradeRequest
         * @constructor
         * @param {ICMsgTrading_CancelTradeRequest=} [properties] Properties to set
         */
        function CMsgTrading_CancelTradeRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgTrading_CancelTradeRequest other_steamid.
         * @member {number|Long} other_steamid
         * @memberof CMsgTrading_CancelTradeRequest
         * @instance
         */
        CMsgTrading_CancelTradeRequest.prototype.other_steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgTrading_CancelTradeRequest instance using the specified properties.
         * @function create
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {ICMsgTrading_CancelTradeRequest=} [properties] Properties to set
         * @returns {CMsgTrading_CancelTradeRequest} CMsgTrading_CancelTradeRequest instance
         */
        CMsgTrading_CancelTradeRequest.create = function create(properties) {
            return new CMsgTrading_CancelTradeRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgTrading_CancelTradeRequest message. Does not implicitly {@link CMsgTrading_CancelTradeRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {ICMsgTrading_CancelTradeRequest} message CMsgTrading_CancelTradeRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_CancelTradeRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.other_steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgTrading_CancelTradeRequest message, length delimited. Does not implicitly {@link CMsgTrading_CancelTradeRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {ICMsgTrading_CancelTradeRequest} message CMsgTrading_CancelTradeRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_CancelTradeRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgTrading_CancelTradeRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgTrading_CancelTradeRequest} CMsgTrading_CancelTradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_CancelTradeRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgTrading_CancelTradeRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.other_steamid = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgTrading_CancelTradeRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgTrading_CancelTradeRequest} CMsgTrading_CancelTradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_CancelTradeRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgTrading_CancelTradeRequest message.
         * @function verify
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgTrading_CancelTradeRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (!$util.isInteger(message.other_steamid) && !(message.other_steamid && $util.isInteger(message.other_steamid.low) && $util.isInteger(message.other_steamid.high)))
                    return "other_steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgTrading_CancelTradeRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgTrading_CancelTradeRequest} CMsgTrading_CancelTradeRequest
         */
        CMsgTrading_CancelTradeRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgTrading_CancelTradeRequest)
                return object;
            var message = new $root.CMsgTrading_CancelTradeRequest();
            if (object.other_steamid != null)
                if ($util.Long)
                    (message.other_steamid = $util.Long.fromValue(object.other_steamid)).unsigned = true;
                else if (typeof object.other_steamid === "string")
                    message.other_steamid = parseInt(object.other_steamid, 10);
                else if (typeof object.other_steamid === "number")
                    message.other_steamid = object.other_steamid;
                else if (typeof object.other_steamid === "object")
                    message.other_steamid = new $util.LongBits(object.other_steamid.low >>> 0, object.other_steamid.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgTrading_CancelTradeRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgTrading_CancelTradeRequest
         * @static
         * @param {CMsgTrading_CancelTradeRequest} message CMsgTrading_CancelTradeRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgTrading_CancelTradeRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.other_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.other_steamid = options.longs === String ? "0" : 0;
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (typeof message.other_steamid === "number")
                    object.other_steamid = options.longs === String ? String(message.other_steamid) : message.other_steamid;
                else
                    object.other_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.other_steamid) : options.longs === Number ? new $util.LongBits(message.other_steamid.low >>> 0, message.other_steamid.high >>> 0).toNumber(true) : message.other_steamid;
            return object;
        };
    
        /**
         * Converts this CMsgTrading_CancelTradeRequest to JSON.
         * @function toJSON
         * @memberof CMsgTrading_CancelTradeRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgTrading_CancelTradeRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgTrading_CancelTradeRequest;
    })();
    
    $root.CMsgTrading_StartSession = (function() {
    
        /**
         * Properties of a CMsgTrading_StartSession.
         * @exports ICMsgTrading_StartSession
         * @interface ICMsgTrading_StartSession
         * @property {number|Long|null} [other_steamid] CMsgTrading_StartSession other_steamid
         */
    
        /**
         * Constructs a new CMsgTrading_StartSession.
         * @exports CMsgTrading_StartSession
         * @classdesc Represents a CMsgTrading_StartSession.
         * @implements ICMsgTrading_StartSession
         * @constructor
         * @param {ICMsgTrading_StartSession=} [properties] Properties to set
         */
        function CMsgTrading_StartSession(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgTrading_StartSession other_steamid.
         * @member {number|Long} other_steamid
         * @memberof CMsgTrading_StartSession
         * @instance
         */
        CMsgTrading_StartSession.prototype.other_steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgTrading_StartSession instance using the specified properties.
         * @function create
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {ICMsgTrading_StartSession=} [properties] Properties to set
         * @returns {CMsgTrading_StartSession} CMsgTrading_StartSession instance
         */
        CMsgTrading_StartSession.create = function create(properties) {
            return new CMsgTrading_StartSession(properties);
        };
    
        /**
         * Encodes the specified CMsgTrading_StartSession message. Does not implicitly {@link CMsgTrading_StartSession.verify|verify} messages.
         * @function encode
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {ICMsgTrading_StartSession} message CMsgTrading_StartSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_StartSession.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.other_steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgTrading_StartSession message, length delimited. Does not implicitly {@link CMsgTrading_StartSession.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {ICMsgTrading_StartSession} message CMsgTrading_StartSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgTrading_StartSession.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgTrading_StartSession message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgTrading_StartSession} CMsgTrading_StartSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_StartSession.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgTrading_StartSession();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.other_steamid = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgTrading_StartSession message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgTrading_StartSession} CMsgTrading_StartSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgTrading_StartSession.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgTrading_StartSession message.
         * @function verify
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgTrading_StartSession.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (!$util.isInteger(message.other_steamid) && !(message.other_steamid && $util.isInteger(message.other_steamid.low) && $util.isInteger(message.other_steamid.high)))
                    return "other_steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgTrading_StartSession message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgTrading_StartSession} CMsgTrading_StartSession
         */
        CMsgTrading_StartSession.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgTrading_StartSession)
                return object;
            var message = new $root.CMsgTrading_StartSession();
            if (object.other_steamid != null)
                if ($util.Long)
                    (message.other_steamid = $util.Long.fromValue(object.other_steamid)).unsigned = true;
                else if (typeof object.other_steamid === "string")
                    message.other_steamid = parseInt(object.other_steamid, 10);
                else if (typeof object.other_steamid === "number")
                    message.other_steamid = object.other_steamid;
                else if (typeof object.other_steamid === "object")
                    message.other_steamid = new $util.LongBits(object.other_steamid.low >>> 0, object.other_steamid.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgTrading_StartSession message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgTrading_StartSession
         * @static
         * @param {CMsgTrading_StartSession} message CMsgTrading_StartSession
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgTrading_StartSession.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.other_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.other_steamid = options.longs === String ? "0" : 0;
            if (message.other_steamid != null && message.hasOwnProperty("other_steamid"))
                if (typeof message.other_steamid === "number")
                    object.other_steamid = options.longs === String ? String(message.other_steamid) : message.other_steamid;
                else
                    object.other_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.other_steamid) : options.longs === Number ? new $util.LongBits(message.other_steamid.low >>> 0, message.other_steamid.high >>> 0).toNumber(true) : message.other_steamid;
            return object;
        };
    
        /**
         * Converts this CMsgTrading_StartSession to JSON.
         * @function toJSON
         * @memberof CMsgTrading_StartSession
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgTrading_StartSession.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgTrading_StartSession;
    })();
    
    $root.CMsgClientGetCDNAuthToken = (function() {
    
        /**
         * Properties of a CMsgClientGetCDNAuthToken.
         * @exports ICMsgClientGetCDNAuthToken
         * @interface ICMsgClientGetCDNAuthToken
         * @property {number|null} [depot_id] CMsgClientGetCDNAuthToken depot_id
         * @property {string|null} [host_name] CMsgClientGetCDNAuthToken host_name
         * @property {number|null} [app_id] CMsgClientGetCDNAuthToken app_id
         */
    
        /**
         * Constructs a new CMsgClientGetCDNAuthToken.
         * @exports CMsgClientGetCDNAuthToken
         * @classdesc Represents a CMsgClientGetCDNAuthToken.
         * @implements ICMsgClientGetCDNAuthToken
         * @constructor
         * @param {ICMsgClientGetCDNAuthToken=} [properties] Properties to set
         */
        function CMsgClientGetCDNAuthToken(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetCDNAuthToken depot_id.
         * @member {number} depot_id
         * @memberof CMsgClientGetCDNAuthToken
         * @instance
         */
        CMsgClientGetCDNAuthToken.prototype.depot_id = 0;
    
        /**
         * CMsgClientGetCDNAuthToken host_name.
         * @member {string} host_name
         * @memberof CMsgClientGetCDNAuthToken
         * @instance
         */
        CMsgClientGetCDNAuthToken.prototype.host_name = "";
    
        /**
         * CMsgClientGetCDNAuthToken app_id.
         * @member {number} app_id
         * @memberof CMsgClientGetCDNAuthToken
         * @instance
         */
        CMsgClientGetCDNAuthToken.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientGetCDNAuthToken instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {ICMsgClientGetCDNAuthToken=} [properties] Properties to set
         * @returns {CMsgClientGetCDNAuthToken} CMsgClientGetCDNAuthToken instance
         */
        CMsgClientGetCDNAuthToken.create = function create(properties) {
            return new CMsgClientGetCDNAuthToken(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetCDNAuthToken message. Does not implicitly {@link CMsgClientGetCDNAuthToken.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {ICMsgClientGetCDNAuthToken} message CMsgClientGetCDNAuthToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetCDNAuthToken.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.depot_id);
            if (message.host_name != null && message.hasOwnProperty("host_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.host_name);
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetCDNAuthToken message, length delimited. Does not implicitly {@link CMsgClientGetCDNAuthToken.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {ICMsgClientGetCDNAuthToken} message CMsgClientGetCDNAuthToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetCDNAuthToken.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetCDNAuthToken message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetCDNAuthToken} CMsgClientGetCDNAuthToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetCDNAuthToken.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetCDNAuthToken();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.depot_id = reader.uint32();
                    break;
                case 2:
                    message.host_name = reader.string();
                    break;
                case 3:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetCDNAuthToken message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetCDNAuthToken} CMsgClientGetCDNAuthToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetCDNAuthToken.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetCDNAuthToken message.
         * @function verify
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetCDNAuthToken.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                if (!$util.isInteger(message.depot_id))
                    return "depot_id: integer expected";
            if (message.host_name != null && message.hasOwnProperty("host_name"))
                if (!$util.isString(message.host_name))
                    return "host_name: string expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetCDNAuthToken message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetCDNAuthToken} CMsgClientGetCDNAuthToken
         */
        CMsgClientGetCDNAuthToken.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetCDNAuthToken)
                return object;
            var message = new $root.CMsgClientGetCDNAuthToken();
            if (object.depot_id != null)
                message.depot_id = object.depot_id >>> 0;
            if (object.host_name != null)
                message.host_name = String(object.host_name);
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetCDNAuthToken message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetCDNAuthToken
         * @static
         * @param {CMsgClientGetCDNAuthToken} message CMsgClientGetCDNAuthToken
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetCDNAuthToken.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.depot_id = 0;
                object.host_name = "";
                object.app_id = 0;
            }
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                object.depot_id = message.depot_id;
            if (message.host_name != null && message.hasOwnProperty("host_name"))
                object.host_name = message.host_name;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetCDNAuthToken to JSON.
         * @function toJSON
         * @memberof CMsgClientGetCDNAuthToken
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetCDNAuthToken.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetCDNAuthToken;
    })();
    
    $root.CMsgClientGetDepotDecryptionKey = (function() {
    
        /**
         * Properties of a CMsgClientGetDepotDecryptionKey.
         * @exports ICMsgClientGetDepotDecryptionKey
         * @interface ICMsgClientGetDepotDecryptionKey
         * @property {number|null} [depot_id] CMsgClientGetDepotDecryptionKey depot_id
         * @property {number|null} [app_id] CMsgClientGetDepotDecryptionKey app_id
         */
    
        /**
         * Constructs a new CMsgClientGetDepotDecryptionKey.
         * @exports CMsgClientGetDepotDecryptionKey
         * @classdesc Represents a CMsgClientGetDepotDecryptionKey.
         * @implements ICMsgClientGetDepotDecryptionKey
         * @constructor
         * @param {ICMsgClientGetDepotDecryptionKey=} [properties] Properties to set
         */
        function CMsgClientGetDepotDecryptionKey(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetDepotDecryptionKey depot_id.
         * @member {number} depot_id
         * @memberof CMsgClientGetDepotDecryptionKey
         * @instance
         */
        CMsgClientGetDepotDecryptionKey.prototype.depot_id = 0;
    
        /**
         * CMsgClientGetDepotDecryptionKey app_id.
         * @member {number} app_id
         * @memberof CMsgClientGetDepotDecryptionKey
         * @instance
         */
        CMsgClientGetDepotDecryptionKey.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientGetDepotDecryptionKey instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {ICMsgClientGetDepotDecryptionKey=} [properties] Properties to set
         * @returns {CMsgClientGetDepotDecryptionKey} CMsgClientGetDepotDecryptionKey instance
         */
        CMsgClientGetDepotDecryptionKey.create = function create(properties) {
            return new CMsgClientGetDepotDecryptionKey(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetDepotDecryptionKey message. Does not implicitly {@link CMsgClientGetDepotDecryptionKey.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {ICMsgClientGetDepotDecryptionKey} message CMsgClientGetDepotDecryptionKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetDepotDecryptionKey.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.depot_id);
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetDepotDecryptionKey message, length delimited. Does not implicitly {@link CMsgClientGetDepotDecryptionKey.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {ICMsgClientGetDepotDecryptionKey} message CMsgClientGetDepotDecryptionKey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetDepotDecryptionKey.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetDepotDecryptionKey message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetDepotDecryptionKey} CMsgClientGetDepotDecryptionKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetDepotDecryptionKey.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetDepotDecryptionKey();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.depot_id = reader.uint32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetDepotDecryptionKey message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetDepotDecryptionKey} CMsgClientGetDepotDecryptionKey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetDepotDecryptionKey.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetDepotDecryptionKey message.
         * @function verify
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetDepotDecryptionKey.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                if (!$util.isInteger(message.depot_id))
                    return "depot_id: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetDepotDecryptionKey message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetDepotDecryptionKey} CMsgClientGetDepotDecryptionKey
         */
        CMsgClientGetDepotDecryptionKey.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetDepotDecryptionKey)
                return object;
            var message = new $root.CMsgClientGetDepotDecryptionKey();
            if (object.depot_id != null)
                message.depot_id = object.depot_id >>> 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetDepotDecryptionKey message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetDepotDecryptionKey
         * @static
         * @param {CMsgClientGetDepotDecryptionKey} message CMsgClientGetDepotDecryptionKey
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetDepotDecryptionKey.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.depot_id = 0;
                object.app_id = 0;
            }
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                object.depot_id = message.depot_id;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetDepotDecryptionKey to JSON.
         * @function toJSON
         * @memberof CMsgClientGetDepotDecryptionKey
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetDepotDecryptionKey.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetDepotDecryptionKey;
    })();
    
    $root.CMsgClientGetDepotDecryptionKeyResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetDepotDecryptionKeyResponse.
         * @exports ICMsgClientGetDepotDecryptionKeyResponse
         * @interface ICMsgClientGetDepotDecryptionKeyResponse
         * @property {number|null} [eresult] CMsgClientGetDepotDecryptionKeyResponse eresult
         * @property {number|null} [depot_id] CMsgClientGetDepotDecryptionKeyResponse depot_id
         * @property {Uint8Array|null} [depot_encryption_key] CMsgClientGetDepotDecryptionKeyResponse depot_encryption_key
         */
    
        /**
         * Constructs a new CMsgClientGetDepotDecryptionKeyResponse.
         * @exports CMsgClientGetDepotDecryptionKeyResponse
         * @classdesc Represents a CMsgClientGetDepotDecryptionKeyResponse.
         * @implements ICMsgClientGetDepotDecryptionKeyResponse
         * @constructor
         * @param {ICMsgClientGetDepotDecryptionKeyResponse=} [properties] Properties to set
         */
        function CMsgClientGetDepotDecryptionKeyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetDepotDecryptionKeyResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @instance
         */
        CMsgClientGetDepotDecryptionKeyResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientGetDepotDecryptionKeyResponse depot_id.
         * @member {number} depot_id
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @instance
         */
        CMsgClientGetDepotDecryptionKeyResponse.prototype.depot_id = 0;
    
        /**
         * CMsgClientGetDepotDecryptionKeyResponse depot_encryption_key.
         * @member {Uint8Array} depot_encryption_key
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @instance
         */
        CMsgClientGetDepotDecryptionKeyResponse.prototype.depot_encryption_key = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientGetDepotDecryptionKeyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {ICMsgClientGetDepotDecryptionKeyResponse=} [properties] Properties to set
         * @returns {CMsgClientGetDepotDecryptionKeyResponse} CMsgClientGetDepotDecryptionKeyResponse instance
         */
        CMsgClientGetDepotDecryptionKeyResponse.create = function create(properties) {
            return new CMsgClientGetDepotDecryptionKeyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetDepotDecryptionKeyResponse message. Does not implicitly {@link CMsgClientGetDepotDecryptionKeyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {ICMsgClientGetDepotDecryptionKeyResponse} message CMsgClientGetDepotDecryptionKeyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetDepotDecryptionKeyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.depot_id);
            if (message.depot_encryption_key != null && message.hasOwnProperty("depot_encryption_key"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.depot_encryption_key);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetDepotDecryptionKeyResponse message, length delimited. Does not implicitly {@link CMsgClientGetDepotDecryptionKeyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {ICMsgClientGetDepotDecryptionKeyResponse} message CMsgClientGetDepotDecryptionKeyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetDepotDecryptionKeyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetDepotDecryptionKeyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetDepotDecryptionKeyResponse} CMsgClientGetDepotDecryptionKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetDepotDecryptionKeyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetDepotDecryptionKeyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.depot_id = reader.uint32();
                    break;
                case 3:
                    message.depot_encryption_key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetDepotDecryptionKeyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetDepotDecryptionKeyResponse} CMsgClientGetDepotDecryptionKeyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetDepotDecryptionKeyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetDepotDecryptionKeyResponse message.
         * @function verify
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetDepotDecryptionKeyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                if (!$util.isInteger(message.depot_id))
                    return "depot_id: integer expected";
            if (message.depot_encryption_key != null && message.hasOwnProperty("depot_encryption_key"))
                if (!(message.depot_encryption_key && typeof message.depot_encryption_key.length === "number" || $util.isString(message.depot_encryption_key)))
                    return "depot_encryption_key: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetDepotDecryptionKeyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetDepotDecryptionKeyResponse} CMsgClientGetDepotDecryptionKeyResponse
         */
        CMsgClientGetDepotDecryptionKeyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetDepotDecryptionKeyResponse)
                return object;
            var message = new $root.CMsgClientGetDepotDecryptionKeyResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.depot_id != null)
                message.depot_id = object.depot_id >>> 0;
            if (object.depot_encryption_key != null)
                if (typeof object.depot_encryption_key === "string")
                    $util.base64.decode(object.depot_encryption_key, message.depot_encryption_key = $util.newBuffer($util.base64.length(object.depot_encryption_key)), 0);
                else if (object.depot_encryption_key.length)
                    message.depot_encryption_key = object.depot_encryption_key;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetDepotDecryptionKeyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @static
         * @param {CMsgClientGetDepotDecryptionKeyResponse} message CMsgClientGetDepotDecryptionKeyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetDepotDecryptionKeyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.depot_id = 0;
                if (options.bytes === String)
                    object.depot_encryption_key = "";
                else {
                    object.depot_encryption_key = [];
                    if (options.bytes !== Array)
                        object.depot_encryption_key = $util.newBuffer(object.depot_encryption_key);
                }
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                object.depot_id = message.depot_id;
            if (message.depot_encryption_key != null && message.hasOwnProperty("depot_encryption_key"))
                object.depot_encryption_key = options.bytes === String ? $util.base64.encode(message.depot_encryption_key, 0, message.depot_encryption_key.length) : options.bytes === Array ? Array.prototype.slice.call(message.depot_encryption_key) : message.depot_encryption_key;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetDepotDecryptionKeyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetDepotDecryptionKeyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetDepotDecryptionKeyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetDepotDecryptionKeyResponse;
    })();
    
    $root.CMsgClientCheckAppBetaPassword = (function() {
    
        /**
         * Properties of a CMsgClientCheckAppBetaPassword.
         * @exports ICMsgClientCheckAppBetaPassword
         * @interface ICMsgClientCheckAppBetaPassword
         * @property {number|null} [app_id] CMsgClientCheckAppBetaPassword app_id
         * @property {string|null} [betapassword] CMsgClientCheckAppBetaPassword betapassword
         * @property {number|null} [language] CMsgClientCheckAppBetaPassword language
         */
    
        /**
         * Constructs a new CMsgClientCheckAppBetaPassword.
         * @exports CMsgClientCheckAppBetaPassword
         * @classdesc Represents a CMsgClientCheckAppBetaPassword.
         * @implements ICMsgClientCheckAppBetaPassword
         * @constructor
         * @param {ICMsgClientCheckAppBetaPassword=} [properties] Properties to set
         */
        function CMsgClientCheckAppBetaPassword(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCheckAppBetaPassword app_id.
         * @member {number} app_id
         * @memberof CMsgClientCheckAppBetaPassword
         * @instance
         */
        CMsgClientCheckAppBetaPassword.prototype.app_id = 0;
    
        /**
         * CMsgClientCheckAppBetaPassword betapassword.
         * @member {string} betapassword
         * @memberof CMsgClientCheckAppBetaPassword
         * @instance
         */
        CMsgClientCheckAppBetaPassword.prototype.betapassword = "";
    
        /**
         * CMsgClientCheckAppBetaPassword language.
         * @member {number} language
         * @memberof CMsgClientCheckAppBetaPassword
         * @instance
         */
        CMsgClientCheckAppBetaPassword.prototype.language = 0;
    
        /**
         * Creates a new CMsgClientCheckAppBetaPassword instance using the specified properties.
         * @function create
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {ICMsgClientCheckAppBetaPassword=} [properties] Properties to set
         * @returns {CMsgClientCheckAppBetaPassword} CMsgClientCheckAppBetaPassword instance
         */
        CMsgClientCheckAppBetaPassword.create = function create(properties) {
            return new CMsgClientCheckAppBetaPassword(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCheckAppBetaPassword message. Does not implicitly {@link CMsgClientCheckAppBetaPassword.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {ICMsgClientCheckAppBetaPassword} message CMsgClientCheckAppBetaPassword message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckAppBetaPassword.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.betapassword);
            if (message.language != null && message.hasOwnProperty("language"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.language);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCheckAppBetaPassword message, length delimited. Does not implicitly {@link CMsgClientCheckAppBetaPassword.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {ICMsgClientCheckAppBetaPassword} message CMsgClientCheckAppBetaPassword message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckAppBetaPassword.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCheckAppBetaPassword message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCheckAppBetaPassword} CMsgClientCheckAppBetaPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckAppBetaPassword.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCheckAppBetaPassword();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.betapassword = reader.string();
                    break;
                case 3:
                    message.language = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCheckAppBetaPassword message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCheckAppBetaPassword} CMsgClientCheckAppBetaPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckAppBetaPassword.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCheckAppBetaPassword message.
         * @function verify
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCheckAppBetaPassword.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                if (!$util.isString(message.betapassword))
                    return "betapassword: string expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCheckAppBetaPassword message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCheckAppBetaPassword} CMsgClientCheckAppBetaPassword
         */
        CMsgClientCheckAppBetaPassword.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCheckAppBetaPassword)
                return object;
            var message = new $root.CMsgClientCheckAppBetaPassword();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.betapassword != null)
                message.betapassword = String(object.betapassword);
            if (object.language != null)
                message.language = object.language | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCheckAppBetaPassword message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCheckAppBetaPassword
         * @static
         * @param {CMsgClientCheckAppBetaPassword} message CMsgClientCheckAppBetaPassword
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCheckAppBetaPassword.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.betapassword = "";
                object.language = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                object.betapassword = message.betapassword;
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            return object;
        };
    
        /**
         * Converts this CMsgClientCheckAppBetaPassword to JSON.
         * @function toJSON
         * @memberof CMsgClientCheckAppBetaPassword
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCheckAppBetaPassword.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCheckAppBetaPassword;
    })();
    
    $root.CMsgClientCheckAppBetaPasswordResponse = (function() {
    
        /**
         * Properties of a CMsgClientCheckAppBetaPasswordResponse.
         * @exports ICMsgClientCheckAppBetaPasswordResponse
         * @interface ICMsgClientCheckAppBetaPasswordResponse
         * @property {number|null} [eresult] CMsgClientCheckAppBetaPasswordResponse eresult
         * @property {Array.<CMsgClientCheckAppBetaPasswordResponse.IBetaPassword>|null} [betapasswords] CMsgClientCheckAppBetaPasswordResponse betapasswords
         */
    
        /**
         * Constructs a new CMsgClientCheckAppBetaPasswordResponse.
         * @exports CMsgClientCheckAppBetaPasswordResponse
         * @classdesc Represents a CMsgClientCheckAppBetaPasswordResponse.
         * @implements ICMsgClientCheckAppBetaPasswordResponse
         * @constructor
         * @param {ICMsgClientCheckAppBetaPasswordResponse=} [properties] Properties to set
         */
        function CMsgClientCheckAppBetaPasswordResponse(properties) {
            this.betapasswords = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCheckAppBetaPasswordResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @instance
         */
        CMsgClientCheckAppBetaPasswordResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientCheckAppBetaPasswordResponse betapasswords.
         * @member {Array.<CMsgClientCheckAppBetaPasswordResponse.IBetaPassword>} betapasswords
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @instance
         */
        CMsgClientCheckAppBetaPasswordResponse.prototype.betapasswords = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientCheckAppBetaPasswordResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {ICMsgClientCheckAppBetaPasswordResponse=} [properties] Properties to set
         * @returns {CMsgClientCheckAppBetaPasswordResponse} CMsgClientCheckAppBetaPasswordResponse instance
         */
        CMsgClientCheckAppBetaPasswordResponse.create = function create(properties) {
            return new CMsgClientCheckAppBetaPasswordResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCheckAppBetaPasswordResponse message. Does not implicitly {@link CMsgClientCheckAppBetaPasswordResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {ICMsgClientCheckAppBetaPasswordResponse} message CMsgClientCheckAppBetaPasswordResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckAppBetaPasswordResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.betapasswords != null && message.betapasswords.length)
                for (var i = 0; i < message.betapasswords.length; ++i)
                    $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.encode(message.betapasswords[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCheckAppBetaPasswordResponse message, length delimited. Does not implicitly {@link CMsgClientCheckAppBetaPasswordResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {ICMsgClientCheckAppBetaPasswordResponse} message CMsgClientCheckAppBetaPasswordResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCheckAppBetaPasswordResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCheckAppBetaPasswordResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCheckAppBetaPasswordResponse} CMsgClientCheckAppBetaPasswordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckAppBetaPasswordResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCheckAppBetaPasswordResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 4:
                    if (!(message.betapasswords && message.betapasswords.length))
                        message.betapasswords = [];
                    message.betapasswords.push($root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCheckAppBetaPasswordResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCheckAppBetaPasswordResponse} CMsgClientCheckAppBetaPasswordResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCheckAppBetaPasswordResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCheckAppBetaPasswordResponse message.
         * @function verify
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCheckAppBetaPasswordResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.betapasswords != null && message.hasOwnProperty("betapasswords")) {
                if (!Array.isArray(message.betapasswords))
                    return "betapasswords: array expected";
                for (var i = 0; i < message.betapasswords.length; ++i) {
                    var error = $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.verify(message.betapasswords[i]);
                    if (error)
                        return "betapasswords." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientCheckAppBetaPasswordResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCheckAppBetaPasswordResponse} CMsgClientCheckAppBetaPasswordResponse
         */
        CMsgClientCheckAppBetaPasswordResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCheckAppBetaPasswordResponse)
                return object;
            var message = new $root.CMsgClientCheckAppBetaPasswordResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.betapasswords) {
                if (!Array.isArray(object.betapasswords))
                    throw TypeError(".CMsgClientCheckAppBetaPasswordResponse.betapasswords: array expected");
                message.betapasswords = [];
                for (var i = 0; i < object.betapasswords.length; ++i) {
                    if (typeof object.betapasswords[i] !== "object")
                        throw TypeError(".CMsgClientCheckAppBetaPasswordResponse.betapasswords: object expected");
                    message.betapasswords[i] = $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.fromObject(object.betapasswords[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCheckAppBetaPasswordResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @static
         * @param {CMsgClientCheckAppBetaPasswordResponse} message CMsgClientCheckAppBetaPasswordResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCheckAppBetaPasswordResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.betapasswords = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.betapasswords && message.betapasswords.length) {
                object.betapasswords = [];
                for (var j = 0; j < message.betapasswords.length; ++j)
                    object.betapasswords[j] = $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.toObject(message.betapasswords[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientCheckAppBetaPasswordResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientCheckAppBetaPasswordResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCheckAppBetaPasswordResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientCheckAppBetaPasswordResponse.BetaPassword = (function() {
    
            /**
             * Properties of a BetaPassword.
             * @memberof CMsgClientCheckAppBetaPasswordResponse
             * @interface IBetaPassword
             * @property {string|null} [betaname] BetaPassword betaname
             * @property {string|null} [betapassword] BetaPassword betapassword
             * @property {string|null} [betadescription] BetaPassword betadescription
             */
    
            /**
             * Constructs a new BetaPassword.
             * @memberof CMsgClientCheckAppBetaPasswordResponse
             * @classdesc Represents a BetaPassword.
             * @implements IBetaPassword
             * @constructor
             * @param {CMsgClientCheckAppBetaPasswordResponse.IBetaPassword=} [properties] Properties to set
             */
            function BetaPassword(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * BetaPassword betaname.
             * @member {string} betaname
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @instance
             */
            BetaPassword.prototype.betaname = "";
    
            /**
             * BetaPassword betapassword.
             * @member {string} betapassword
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @instance
             */
            BetaPassword.prototype.betapassword = "";
    
            /**
             * BetaPassword betadescription.
             * @member {string} betadescription
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @instance
             */
            BetaPassword.prototype.betadescription = "";
    
            /**
             * Creates a new BetaPassword instance using the specified properties.
             * @function create
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {CMsgClientCheckAppBetaPasswordResponse.IBetaPassword=} [properties] Properties to set
             * @returns {CMsgClientCheckAppBetaPasswordResponse.BetaPassword} BetaPassword instance
             */
            BetaPassword.create = function create(properties) {
                return new BetaPassword(properties);
            };
    
            /**
             * Encodes the specified BetaPassword message. Does not implicitly {@link CMsgClientCheckAppBetaPasswordResponse.BetaPassword.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {CMsgClientCheckAppBetaPasswordResponse.IBetaPassword} message BetaPassword message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BetaPassword.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.betaname != null && message.hasOwnProperty("betaname"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.betaname);
                if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.betapassword);
                if (message.betadescription != null && message.hasOwnProperty("betadescription"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.betadescription);
                return writer;
            };
    
            /**
             * Encodes the specified BetaPassword message, length delimited. Does not implicitly {@link CMsgClientCheckAppBetaPasswordResponse.BetaPassword.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {CMsgClientCheckAppBetaPasswordResponse.IBetaPassword} message BetaPassword message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BetaPassword.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a BetaPassword message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientCheckAppBetaPasswordResponse.BetaPassword} BetaPassword
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BetaPassword.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.betaname = reader.string();
                        break;
                    case 2:
                        message.betapassword = reader.string();
                        break;
                    case 3:
                        message.betadescription = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a BetaPassword message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientCheckAppBetaPasswordResponse.BetaPassword} BetaPassword
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BetaPassword.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a BetaPassword message.
             * @function verify
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BetaPassword.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.betaname != null && message.hasOwnProperty("betaname"))
                    if (!$util.isString(message.betaname))
                        return "betaname: string expected";
                if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                    if (!$util.isString(message.betapassword))
                        return "betapassword: string expected";
                if (message.betadescription != null && message.hasOwnProperty("betadescription"))
                    if (!$util.isString(message.betadescription))
                        return "betadescription: string expected";
                return null;
            };
    
            /**
             * Creates a BetaPassword message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientCheckAppBetaPasswordResponse.BetaPassword} BetaPassword
             */
            BetaPassword.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
                    return object;
                var message = new $root.CMsgClientCheckAppBetaPasswordResponse.BetaPassword();
                if (object.betaname != null)
                    message.betaname = String(object.betaname);
                if (object.betapassword != null)
                    message.betapassword = String(object.betapassword);
                if (object.betadescription != null)
                    message.betadescription = String(object.betadescription);
                return message;
            };
    
            /**
             * Creates a plain object from a BetaPassword message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @static
             * @param {CMsgClientCheckAppBetaPasswordResponse.BetaPassword} message BetaPassword
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BetaPassword.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.betaname = "";
                    object.betapassword = "";
                    object.betadescription = "";
                }
                if (message.betaname != null && message.hasOwnProperty("betaname"))
                    object.betaname = message.betaname;
                if (message.betapassword != null && message.hasOwnProperty("betapassword"))
                    object.betapassword = message.betapassword;
                if (message.betadescription != null && message.hasOwnProperty("betadescription"))
                    object.betadescription = message.betadescription;
                return object;
            };
    
            /**
             * Converts this BetaPassword to JSON.
             * @function toJSON
             * @memberof CMsgClientCheckAppBetaPasswordResponse.BetaPassword
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BetaPassword.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return BetaPassword;
        })();
    
        return CMsgClientCheckAppBetaPasswordResponse;
    })();
    
    $root.CMsgClientUpdateAppJobReport = (function() {
    
        /**
         * Properties of a CMsgClientUpdateAppJobReport.
         * @exports ICMsgClientUpdateAppJobReport
         * @interface ICMsgClientUpdateAppJobReport
         * @property {number|null} [app_id] CMsgClientUpdateAppJobReport app_id
         * @property {Array.<number>|null} [depot_ids] CMsgClientUpdateAppJobReport depot_ids
         * @property {number|null} [app_state] CMsgClientUpdateAppJobReport app_state
         * @property {number|null} [job_app_error] CMsgClientUpdateAppJobReport job_app_error
         * @property {string|null} [error_details] CMsgClientUpdateAppJobReport error_details
         * @property {number|null} [job_duration] CMsgClientUpdateAppJobReport job_duration
         * @property {number|null} [files_validation_failed] CMsgClientUpdateAppJobReport files_validation_failed
         * @property {number|Long|null} [job_bytes_downloaded] CMsgClientUpdateAppJobReport job_bytes_downloaded
         * @property {number|Long|null} [job_bytes_staged] CMsgClientUpdateAppJobReport job_bytes_staged
         * @property {number|Long|null} [bytes_comitted] CMsgClientUpdateAppJobReport bytes_comitted
         * @property {number|null} [start_app_state] CMsgClientUpdateAppJobReport start_app_state
         * @property {number|Long|null} [stats_machine_id] CMsgClientUpdateAppJobReport stats_machine_id
         * @property {string|null} [branch_name] CMsgClientUpdateAppJobReport branch_name
         * @property {number|Long|null} [total_bytes_downloaded] CMsgClientUpdateAppJobReport total_bytes_downloaded
         * @property {number|Long|null} [total_bytes_staged] CMsgClientUpdateAppJobReport total_bytes_staged
         * @property {number|Long|null} [total_bytes_restored] CMsgClientUpdateAppJobReport total_bytes_restored
         * @property {boolean|null} [is_borrowed] CMsgClientUpdateAppJobReport is_borrowed
         * @property {boolean|null} [is_free_weekend] CMsgClientUpdateAppJobReport is_free_weekend
         * @property {number|Long|null} [total_bytes_legacy] CMsgClientUpdateAppJobReport total_bytes_legacy
         * @property {number|Long|null} [total_bytes_patched] CMsgClientUpdateAppJobReport total_bytes_patched
         * @property {number|Long|null} [total_bytes_saved] CMsgClientUpdateAppJobReport total_bytes_saved
         * @property {number|null} [cell_id] CMsgClientUpdateAppJobReport cell_id
         */
    
        /**
         * Constructs a new CMsgClientUpdateAppJobReport.
         * @exports CMsgClientUpdateAppJobReport
         * @classdesc Represents a CMsgClientUpdateAppJobReport.
         * @implements ICMsgClientUpdateAppJobReport
         * @constructor
         * @param {ICMsgClientUpdateAppJobReport=} [properties] Properties to set
         */
        function CMsgClientUpdateAppJobReport(properties) {
            this.depot_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUpdateAppJobReport app_id.
         * @member {number} app_id
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.app_id = 0;
    
        /**
         * CMsgClientUpdateAppJobReport depot_ids.
         * @member {Array.<number>} depot_ids
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.depot_ids = $util.emptyArray;
    
        /**
         * CMsgClientUpdateAppJobReport app_state.
         * @member {number} app_state
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.app_state = 0;
    
        /**
         * CMsgClientUpdateAppJobReport job_app_error.
         * @member {number} job_app_error
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.job_app_error = 0;
    
        /**
         * CMsgClientUpdateAppJobReport error_details.
         * @member {string} error_details
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.error_details = "";
    
        /**
         * CMsgClientUpdateAppJobReport job_duration.
         * @member {number} job_duration
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.job_duration = 0;
    
        /**
         * CMsgClientUpdateAppJobReport files_validation_failed.
         * @member {number} files_validation_failed
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.files_validation_failed = 0;
    
        /**
         * CMsgClientUpdateAppJobReport job_bytes_downloaded.
         * @member {number|Long} job_bytes_downloaded
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.job_bytes_downloaded = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport job_bytes_staged.
         * @member {number|Long} job_bytes_staged
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.job_bytes_staged = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport bytes_comitted.
         * @member {number|Long} bytes_comitted
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.bytes_comitted = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport start_app_state.
         * @member {number} start_app_state
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.start_app_state = 0;
    
        /**
         * CMsgClientUpdateAppJobReport stats_machine_id.
         * @member {number|Long} stats_machine_id
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.stats_machine_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport branch_name.
         * @member {string} branch_name
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.branch_name = "";
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_downloaded.
         * @member {number|Long} total_bytes_downloaded
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_downloaded = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_staged.
         * @member {number|Long} total_bytes_staged
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_staged = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_restored.
         * @member {number|Long} total_bytes_restored
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_restored = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport is_borrowed.
         * @member {boolean} is_borrowed
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.is_borrowed = false;
    
        /**
         * CMsgClientUpdateAppJobReport is_free_weekend.
         * @member {boolean} is_free_weekend
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.is_free_weekend = false;
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_legacy.
         * @member {number|Long} total_bytes_legacy
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_legacy = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_patched.
         * @member {number|Long} total_bytes_patched
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_patched = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport total_bytes_saved.
         * @member {number|Long} total_bytes_saved
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.total_bytes_saved = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUpdateAppJobReport cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         */
        CMsgClientUpdateAppJobReport.prototype.cell_id = 0;
    
        /**
         * Creates a new CMsgClientUpdateAppJobReport instance using the specified properties.
         * @function create
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {ICMsgClientUpdateAppJobReport=} [properties] Properties to set
         * @returns {CMsgClientUpdateAppJobReport} CMsgClientUpdateAppJobReport instance
         */
        CMsgClientUpdateAppJobReport.create = function create(properties) {
            return new CMsgClientUpdateAppJobReport(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUpdateAppJobReport message. Does not implicitly {@link CMsgClientUpdateAppJobReport.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {ICMsgClientUpdateAppJobReport} message CMsgClientUpdateAppJobReport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateAppJobReport.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.depot_ids != null && message.depot_ids.length)
                for (var i = 0; i < message.depot_ids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.depot_ids[i]);
            if (message.app_state != null && message.hasOwnProperty("app_state"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_state);
            if (message.job_app_error != null && message.hasOwnProperty("job_app_error"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.job_app_error);
            if (message.error_details != null && message.hasOwnProperty("error_details"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.error_details);
            if (message.job_duration != null && message.hasOwnProperty("job_duration"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.job_duration);
            if (message.files_validation_failed != null && message.hasOwnProperty("files_validation_failed"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.files_validation_failed);
            if (message.job_bytes_downloaded != null && message.hasOwnProperty("job_bytes_downloaded"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.job_bytes_downloaded);
            if (message.job_bytes_staged != null && message.hasOwnProperty("job_bytes_staged"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.job_bytes_staged);
            if (message.bytes_comitted != null && message.hasOwnProperty("bytes_comitted"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.bytes_comitted);
            if (message.start_app_state != null && message.hasOwnProperty("start_app_state"))
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.start_app_state);
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.stats_machine_id);
            if (message.branch_name != null && message.hasOwnProperty("branch_name"))
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.branch_name);
            if (message.total_bytes_downloaded != null && message.hasOwnProperty("total_bytes_downloaded"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint64(message.total_bytes_downloaded);
            if (message.total_bytes_staged != null && message.hasOwnProperty("total_bytes_staged"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint64(message.total_bytes_staged);
            if (message.total_bytes_restored != null && message.hasOwnProperty("total_bytes_restored"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint64(message.total_bytes_restored);
            if (message.is_borrowed != null && message.hasOwnProperty("is_borrowed"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.is_borrowed);
            if (message.is_free_weekend != null && message.hasOwnProperty("is_free_weekend"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.is_free_weekend);
            if (message.total_bytes_legacy != null && message.hasOwnProperty("total_bytes_legacy"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint64(message.total_bytes_legacy);
            if (message.total_bytes_patched != null && message.hasOwnProperty("total_bytes_patched"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint64(message.total_bytes_patched);
            if (message.total_bytes_saved != null && message.hasOwnProperty("total_bytes_saved"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint64(message.total_bytes_saved);
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.cell_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUpdateAppJobReport message, length delimited. Does not implicitly {@link CMsgClientUpdateAppJobReport.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {ICMsgClientUpdateAppJobReport} message CMsgClientUpdateAppJobReport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUpdateAppJobReport.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUpdateAppJobReport message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUpdateAppJobReport} CMsgClientUpdateAppJobReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateAppJobReport.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUpdateAppJobReport();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    if (!(message.depot_ids && message.depot_ids.length))
                        message.depot_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.depot_ids.push(reader.uint32());
                    } else
                        message.depot_ids.push(reader.uint32());
                    break;
                case 3:
                    message.app_state = reader.uint32();
                    break;
                case 4:
                    message.job_app_error = reader.uint32();
                    break;
                case 5:
                    message.error_details = reader.string();
                    break;
                case 6:
                    message.job_duration = reader.uint32();
                    break;
                case 7:
                    message.files_validation_failed = reader.uint32();
                    break;
                case 8:
                    message.job_bytes_downloaded = reader.uint64();
                    break;
                case 9:
                    message.job_bytes_staged = reader.uint64();
                    break;
                case 10:
                    message.bytes_comitted = reader.uint64();
                    break;
                case 11:
                    message.start_app_state = reader.uint32();
                    break;
                case 12:
                    message.stats_machine_id = reader.fixed64();
                    break;
                case 13:
                    message.branch_name = reader.string();
                    break;
                case 14:
                    message.total_bytes_downloaded = reader.uint64();
                    break;
                case 15:
                    message.total_bytes_staged = reader.uint64();
                    break;
                case 16:
                    message.total_bytes_restored = reader.uint64();
                    break;
                case 17:
                    message.is_borrowed = reader.bool();
                    break;
                case 18:
                    message.is_free_weekend = reader.bool();
                    break;
                case 19:
                    message.total_bytes_legacy = reader.uint64();
                    break;
                case 20:
                    message.total_bytes_patched = reader.uint64();
                    break;
                case 21:
                    message.total_bytes_saved = reader.uint64();
                    break;
                case 22:
                    message.cell_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUpdateAppJobReport message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUpdateAppJobReport} CMsgClientUpdateAppJobReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUpdateAppJobReport.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUpdateAppJobReport message.
         * @function verify
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUpdateAppJobReport.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.depot_ids != null && message.hasOwnProperty("depot_ids")) {
                if (!Array.isArray(message.depot_ids))
                    return "depot_ids: array expected";
                for (var i = 0; i < message.depot_ids.length; ++i)
                    if (!$util.isInteger(message.depot_ids[i]))
                        return "depot_ids: integer[] expected";
            }
            if (message.app_state != null && message.hasOwnProperty("app_state"))
                if (!$util.isInteger(message.app_state))
                    return "app_state: integer expected";
            if (message.job_app_error != null && message.hasOwnProperty("job_app_error"))
                if (!$util.isInteger(message.job_app_error))
                    return "job_app_error: integer expected";
            if (message.error_details != null && message.hasOwnProperty("error_details"))
                if (!$util.isString(message.error_details))
                    return "error_details: string expected";
            if (message.job_duration != null && message.hasOwnProperty("job_duration"))
                if (!$util.isInteger(message.job_duration))
                    return "job_duration: integer expected";
            if (message.files_validation_failed != null && message.hasOwnProperty("files_validation_failed"))
                if (!$util.isInteger(message.files_validation_failed))
                    return "files_validation_failed: integer expected";
            if (message.job_bytes_downloaded != null && message.hasOwnProperty("job_bytes_downloaded"))
                if (!$util.isInteger(message.job_bytes_downloaded) && !(message.job_bytes_downloaded && $util.isInteger(message.job_bytes_downloaded.low) && $util.isInteger(message.job_bytes_downloaded.high)))
                    return "job_bytes_downloaded: integer|Long expected";
            if (message.job_bytes_staged != null && message.hasOwnProperty("job_bytes_staged"))
                if (!$util.isInteger(message.job_bytes_staged) && !(message.job_bytes_staged && $util.isInteger(message.job_bytes_staged.low) && $util.isInteger(message.job_bytes_staged.high)))
                    return "job_bytes_staged: integer|Long expected";
            if (message.bytes_comitted != null && message.hasOwnProperty("bytes_comitted"))
                if (!$util.isInteger(message.bytes_comitted) && !(message.bytes_comitted && $util.isInteger(message.bytes_comitted.low) && $util.isInteger(message.bytes_comitted.high)))
                    return "bytes_comitted: integer|Long expected";
            if (message.start_app_state != null && message.hasOwnProperty("start_app_state"))
                if (!$util.isInteger(message.start_app_state))
                    return "start_app_state: integer expected";
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                if (!$util.isInteger(message.stats_machine_id) && !(message.stats_machine_id && $util.isInteger(message.stats_machine_id.low) && $util.isInteger(message.stats_machine_id.high)))
                    return "stats_machine_id: integer|Long expected";
            if (message.branch_name != null && message.hasOwnProperty("branch_name"))
                if (!$util.isString(message.branch_name))
                    return "branch_name: string expected";
            if (message.total_bytes_downloaded != null && message.hasOwnProperty("total_bytes_downloaded"))
                if (!$util.isInteger(message.total_bytes_downloaded) && !(message.total_bytes_downloaded && $util.isInteger(message.total_bytes_downloaded.low) && $util.isInteger(message.total_bytes_downloaded.high)))
                    return "total_bytes_downloaded: integer|Long expected";
            if (message.total_bytes_staged != null && message.hasOwnProperty("total_bytes_staged"))
                if (!$util.isInteger(message.total_bytes_staged) && !(message.total_bytes_staged && $util.isInteger(message.total_bytes_staged.low) && $util.isInteger(message.total_bytes_staged.high)))
                    return "total_bytes_staged: integer|Long expected";
            if (message.total_bytes_restored != null && message.hasOwnProperty("total_bytes_restored"))
                if (!$util.isInteger(message.total_bytes_restored) && !(message.total_bytes_restored && $util.isInteger(message.total_bytes_restored.low) && $util.isInteger(message.total_bytes_restored.high)))
                    return "total_bytes_restored: integer|Long expected";
            if (message.is_borrowed != null && message.hasOwnProperty("is_borrowed"))
                if (typeof message.is_borrowed !== "boolean")
                    return "is_borrowed: boolean expected";
            if (message.is_free_weekend != null && message.hasOwnProperty("is_free_weekend"))
                if (typeof message.is_free_weekend !== "boolean")
                    return "is_free_weekend: boolean expected";
            if (message.total_bytes_legacy != null && message.hasOwnProperty("total_bytes_legacy"))
                if (!$util.isInteger(message.total_bytes_legacy) && !(message.total_bytes_legacy && $util.isInteger(message.total_bytes_legacy.low) && $util.isInteger(message.total_bytes_legacy.high)))
                    return "total_bytes_legacy: integer|Long expected";
            if (message.total_bytes_patched != null && message.hasOwnProperty("total_bytes_patched"))
                if (!$util.isInteger(message.total_bytes_patched) && !(message.total_bytes_patched && $util.isInteger(message.total_bytes_patched.low) && $util.isInteger(message.total_bytes_patched.high)))
                    return "total_bytes_patched: integer|Long expected";
            if (message.total_bytes_saved != null && message.hasOwnProperty("total_bytes_saved"))
                if (!$util.isInteger(message.total_bytes_saved) && !(message.total_bytes_saved && $util.isInteger(message.total_bytes_saved.low) && $util.isInteger(message.total_bytes_saved.high)))
                    return "total_bytes_saved: integer|Long expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUpdateAppJobReport message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUpdateAppJobReport} CMsgClientUpdateAppJobReport
         */
        CMsgClientUpdateAppJobReport.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUpdateAppJobReport)
                return object;
            var message = new $root.CMsgClientUpdateAppJobReport();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.depot_ids) {
                if (!Array.isArray(object.depot_ids))
                    throw TypeError(".CMsgClientUpdateAppJobReport.depot_ids: array expected");
                message.depot_ids = [];
                for (var i = 0; i < object.depot_ids.length; ++i)
                    message.depot_ids[i] = object.depot_ids[i] >>> 0;
            }
            if (object.app_state != null)
                message.app_state = object.app_state >>> 0;
            if (object.job_app_error != null)
                message.job_app_error = object.job_app_error >>> 0;
            if (object.error_details != null)
                message.error_details = String(object.error_details);
            if (object.job_duration != null)
                message.job_duration = object.job_duration >>> 0;
            if (object.files_validation_failed != null)
                message.files_validation_failed = object.files_validation_failed >>> 0;
            if (object.job_bytes_downloaded != null)
                if ($util.Long)
                    (message.job_bytes_downloaded = $util.Long.fromValue(object.job_bytes_downloaded)).unsigned = true;
                else if (typeof object.job_bytes_downloaded === "string")
                    message.job_bytes_downloaded = parseInt(object.job_bytes_downloaded, 10);
                else if (typeof object.job_bytes_downloaded === "number")
                    message.job_bytes_downloaded = object.job_bytes_downloaded;
                else if (typeof object.job_bytes_downloaded === "object")
                    message.job_bytes_downloaded = new $util.LongBits(object.job_bytes_downloaded.low >>> 0, object.job_bytes_downloaded.high >>> 0).toNumber(true);
            if (object.job_bytes_staged != null)
                if ($util.Long)
                    (message.job_bytes_staged = $util.Long.fromValue(object.job_bytes_staged)).unsigned = true;
                else if (typeof object.job_bytes_staged === "string")
                    message.job_bytes_staged = parseInt(object.job_bytes_staged, 10);
                else if (typeof object.job_bytes_staged === "number")
                    message.job_bytes_staged = object.job_bytes_staged;
                else if (typeof object.job_bytes_staged === "object")
                    message.job_bytes_staged = new $util.LongBits(object.job_bytes_staged.low >>> 0, object.job_bytes_staged.high >>> 0).toNumber(true);
            if (object.bytes_comitted != null)
                if ($util.Long)
                    (message.bytes_comitted = $util.Long.fromValue(object.bytes_comitted)).unsigned = true;
                else if (typeof object.bytes_comitted === "string")
                    message.bytes_comitted = parseInt(object.bytes_comitted, 10);
                else if (typeof object.bytes_comitted === "number")
                    message.bytes_comitted = object.bytes_comitted;
                else if (typeof object.bytes_comitted === "object")
                    message.bytes_comitted = new $util.LongBits(object.bytes_comitted.low >>> 0, object.bytes_comitted.high >>> 0).toNumber(true);
            if (object.start_app_state != null)
                message.start_app_state = object.start_app_state >>> 0;
            if (object.stats_machine_id != null)
                if ($util.Long)
                    (message.stats_machine_id = $util.Long.fromValue(object.stats_machine_id)).unsigned = false;
                else if (typeof object.stats_machine_id === "string")
                    message.stats_machine_id = parseInt(object.stats_machine_id, 10);
                else if (typeof object.stats_machine_id === "number")
                    message.stats_machine_id = object.stats_machine_id;
                else if (typeof object.stats_machine_id === "object")
                    message.stats_machine_id = new $util.LongBits(object.stats_machine_id.low >>> 0, object.stats_machine_id.high >>> 0).toNumber();
            if (object.branch_name != null)
                message.branch_name = String(object.branch_name);
            if (object.total_bytes_downloaded != null)
                if ($util.Long)
                    (message.total_bytes_downloaded = $util.Long.fromValue(object.total_bytes_downloaded)).unsigned = true;
                else if (typeof object.total_bytes_downloaded === "string")
                    message.total_bytes_downloaded = parseInt(object.total_bytes_downloaded, 10);
                else if (typeof object.total_bytes_downloaded === "number")
                    message.total_bytes_downloaded = object.total_bytes_downloaded;
                else if (typeof object.total_bytes_downloaded === "object")
                    message.total_bytes_downloaded = new $util.LongBits(object.total_bytes_downloaded.low >>> 0, object.total_bytes_downloaded.high >>> 0).toNumber(true);
            if (object.total_bytes_staged != null)
                if ($util.Long)
                    (message.total_bytes_staged = $util.Long.fromValue(object.total_bytes_staged)).unsigned = true;
                else if (typeof object.total_bytes_staged === "string")
                    message.total_bytes_staged = parseInt(object.total_bytes_staged, 10);
                else if (typeof object.total_bytes_staged === "number")
                    message.total_bytes_staged = object.total_bytes_staged;
                else if (typeof object.total_bytes_staged === "object")
                    message.total_bytes_staged = new $util.LongBits(object.total_bytes_staged.low >>> 0, object.total_bytes_staged.high >>> 0).toNumber(true);
            if (object.total_bytes_restored != null)
                if ($util.Long)
                    (message.total_bytes_restored = $util.Long.fromValue(object.total_bytes_restored)).unsigned = true;
                else if (typeof object.total_bytes_restored === "string")
                    message.total_bytes_restored = parseInt(object.total_bytes_restored, 10);
                else if (typeof object.total_bytes_restored === "number")
                    message.total_bytes_restored = object.total_bytes_restored;
                else if (typeof object.total_bytes_restored === "object")
                    message.total_bytes_restored = new $util.LongBits(object.total_bytes_restored.low >>> 0, object.total_bytes_restored.high >>> 0).toNumber(true);
            if (object.is_borrowed != null)
                message.is_borrowed = Boolean(object.is_borrowed);
            if (object.is_free_weekend != null)
                message.is_free_weekend = Boolean(object.is_free_weekend);
            if (object.total_bytes_legacy != null)
                if ($util.Long)
                    (message.total_bytes_legacy = $util.Long.fromValue(object.total_bytes_legacy)).unsigned = true;
                else if (typeof object.total_bytes_legacy === "string")
                    message.total_bytes_legacy = parseInt(object.total_bytes_legacy, 10);
                else if (typeof object.total_bytes_legacy === "number")
                    message.total_bytes_legacy = object.total_bytes_legacy;
                else if (typeof object.total_bytes_legacy === "object")
                    message.total_bytes_legacy = new $util.LongBits(object.total_bytes_legacy.low >>> 0, object.total_bytes_legacy.high >>> 0).toNumber(true);
            if (object.total_bytes_patched != null)
                if ($util.Long)
                    (message.total_bytes_patched = $util.Long.fromValue(object.total_bytes_patched)).unsigned = true;
                else if (typeof object.total_bytes_patched === "string")
                    message.total_bytes_patched = parseInt(object.total_bytes_patched, 10);
                else if (typeof object.total_bytes_patched === "number")
                    message.total_bytes_patched = object.total_bytes_patched;
                else if (typeof object.total_bytes_patched === "object")
                    message.total_bytes_patched = new $util.LongBits(object.total_bytes_patched.low >>> 0, object.total_bytes_patched.high >>> 0).toNumber(true);
            if (object.total_bytes_saved != null)
                if ($util.Long)
                    (message.total_bytes_saved = $util.Long.fromValue(object.total_bytes_saved)).unsigned = true;
                else if (typeof object.total_bytes_saved === "string")
                    message.total_bytes_saved = parseInt(object.total_bytes_saved, 10);
                else if (typeof object.total_bytes_saved === "number")
                    message.total_bytes_saved = object.total_bytes_saved;
                else if (typeof object.total_bytes_saved === "object")
                    message.total_bytes_saved = new $util.LongBits(object.total_bytes_saved.low >>> 0, object.total_bytes_saved.high >>> 0).toNumber(true);
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUpdateAppJobReport message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUpdateAppJobReport
         * @static
         * @param {CMsgClientUpdateAppJobReport} message CMsgClientUpdateAppJobReport
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUpdateAppJobReport.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.depot_ids = [];
            if (options.defaults) {
                object.app_id = 0;
                object.app_state = 0;
                object.job_app_error = 0;
                object.error_details = "";
                object.job_duration = 0;
                object.files_validation_failed = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.job_bytes_downloaded = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_bytes_downloaded = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.job_bytes_staged = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_bytes_staged = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytes_comitted = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytes_comitted = options.longs === String ? "0" : 0;
                object.start_app_state = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.stats_machine_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.stats_machine_id = options.longs === String ? "0" : 0;
                object.branch_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_downloaded = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_downloaded = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_staged = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_staged = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_restored = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_restored = options.longs === String ? "0" : 0;
                object.is_borrowed = false;
                object.is_free_weekend = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_legacy = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_legacy = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_patched = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_patched = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.total_bytes_saved = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.total_bytes_saved = options.longs === String ? "0" : 0;
                object.cell_id = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.depot_ids && message.depot_ids.length) {
                object.depot_ids = [];
                for (var j = 0; j < message.depot_ids.length; ++j)
                    object.depot_ids[j] = message.depot_ids[j];
            }
            if (message.app_state != null && message.hasOwnProperty("app_state"))
                object.app_state = message.app_state;
            if (message.job_app_error != null && message.hasOwnProperty("job_app_error"))
                object.job_app_error = message.job_app_error;
            if (message.error_details != null && message.hasOwnProperty("error_details"))
                object.error_details = message.error_details;
            if (message.job_duration != null && message.hasOwnProperty("job_duration"))
                object.job_duration = message.job_duration;
            if (message.files_validation_failed != null && message.hasOwnProperty("files_validation_failed"))
                object.files_validation_failed = message.files_validation_failed;
            if (message.job_bytes_downloaded != null && message.hasOwnProperty("job_bytes_downloaded"))
                if (typeof message.job_bytes_downloaded === "number")
                    object.job_bytes_downloaded = options.longs === String ? String(message.job_bytes_downloaded) : message.job_bytes_downloaded;
                else
                    object.job_bytes_downloaded = options.longs === String ? $util.Long.prototype.toString.call(message.job_bytes_downloaded) : options.longs === Number ? new $util.LongBits(message.job_bytes_downloaded.low >>> 0, message.job_bytes_downloaded.high >>> 0).toNumber(true) : message.job_bytes_downloaded;
            if (message.job_bytes_staged != null && message.hasOwnProperty("job_bytes_staged"))
                if (typeof message.job_bytes_staged === "number")
                    object.job_bytes_staged = options.longs === String ? String(message.job_bytes_staged) : message.job_bytes_staged;
                else
                    object.job_bytes_staged = options.longs === String ? $util.Long.prototype.toString.call(message.job_bytes_staged) : options.longs === Number ? new $util.LongBits(message.job_bytes_staged.low >>> 0, message.job_bytes_staged.high >>> 0).toNumber(true) : message.job_bytes_staged;
            if (message.bytes_comitted != null && message.hasOwnProperty("bytes_comitted"))
                if (typeof message.bytes_comitted === "number")
                    object.bytes_comitted = options.longs === String ? String(message.bytes_comitted) : message.bytes_comitted;
                else
                    object.bytes_comitted = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_comitted) : options.longs === Number ? new $util.LongBits(message.bytes_comitted.low >>> 0, message.bytes_comitted.high >>> 0).toNumber(true) : message.bytes_comitted;
            if (message.start_app_state != null && message.hasOwnProperty("start_app_state"))
                object.start_app_state = message.start_app_state;
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                if (typeof message.stats_machine_id === "number")
                    object.stats_machine_id = options.longs === String ? String(message.stats_machine_id) : message.stats_machine_id;
                else
                    object.stats_machine_id = options.longs === String ? $util.Long.prototype.toString.call(message.stats_machine_id) : options.longs === Number ? new $util.LongBits(message.stats_machine_id.low >>> 0, message.stats_machine_id.high >>> 0).toNumber() : message.stats_machine_id;
            if (message.branch_name != null && message.hasOwnProperty("branch_name"))
                object.branch_name = message.branch_name;
            if (message.total_bytes_downloaded != null && message.hasOwnProperty("total_bytes_downloaded"))
                if (typeof message.total_bytes_downloaded === "number")
                    object.total_bytes_downloaded = options.longs === String ? String(message.total_bytes_downloaded) : message.total_bytes_downloaded;
                else
                    object.total_bytes_downloaded = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_downloaded) : options.longs === Number ? new $util.LongBits(message.total_bytes_downloaded.low >>> 0, message.total_bytes_downloaded.high >>> 0).toNumber(true) : message.total_bytes_downloaded;
            if (message.total_bytes_staged != null && message.hasOwnProperty("total_bytes_staged"))
                if (typeof message.total_bytes_staged === "number")
                    object.total_bytes_staged = options.longs === String ? String(message.total_bytes_staged) : message.total_bytes_staged;
                else
                    object.total_bytes_staged = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_staged) : options.longs === Number ? new $util.LongBits(message.total_bytes_staged.low >>> 0, message.total_bytes_staged.high >>> 0).toNumber(true) : message.total_bytes_staged;
            if (message.total_bytes_restored != null && message.hasOwnProperty("total_bytes_restored"))
                if (typeof message.total_bytes_restored === "number")
                    object.total_bytes_restored = options.longs === String ? String(message.total_bytes_restored) : message.total_bytes_restored;
                else
                    object.total_bytes_restored = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_restored) : options.longs === Number ? new $util.LongBits(message.total_bytes_restored.low >>> 0, message.total_bytes_restored.high >>> 0).toNumber(true) : message.total_bytes_restored;
            if (message.is_borrowed != null && message.hasOwnProperty("is_borrowed"))
                object.is_borrowed = message.is_borrowed;
            if (message.is_free_weekend != null && message.hasOwnProperty("is_free_weekend"))
                object.is_free_weekend = message.is_free_weekend;
            if (message.total_bytes_legacy != null && message.hasOwnProperty("total_bytes_legacy"))
                if (typeof message.total_bytes_legacy === "number")
                    object.total_bytes_legacy = options.longs === String ? String(message.total_bytes_legacy) : message.total_bytes_legacy;
                else
                    object.total_bytes_legacy = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_legacy) : options.longs === Number ? new $util.LongBits(message.total_bytes_legacy.low >>> 0, message.total_bytes_legacy.high >>> 0).toNumber(true) : message.total_bytes_legacy;
            if (message.total_bytes_patched != null && message.hasOwnProperty("total_bytes_patched"))
                if (typeof message.total_bytes_patched === "number")
                    object.total_bytes_patched = options.longs === String ? String(message.total_bytes_patched) : message.total_bytes_patched;
                else
                    object.total_bytes_patched = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_patched) : options.longs === Number ? new $util.LongBits(message.total_bytes_patched.low >>> 0, message.total_bytes_patched.high >>> 0).toNumber(true) : message.total_bytes_patched;
            if (message.total_bytes_saved != null && message.hasOwnProperty("total_bytes_saved"))
                if (typeof message.total_bytes_saved === "number")
                    object.total_bytes_saved = options.longs === String ? String(message.total_bytes_saved) : message.total_bytes_saved;
                else
                    object.total_bytes_saved = options.longs === String ? $util.Long.prototype.toString.call(message.total_bytes_saved) : options.longs === Number ? new $util.LongBits(message.total_bytes_saved.low >>> 0, message.total_bytes_saved.high >>> 0).toNumber(true) : message.total_bytes_saved;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientUpdateAppJobReport to JSON.
         * @function toJSON
         * @memberof CMsgClientUpdateAppJobReport
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUpdateAppJobReport.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUpdateAppJobReport;
    })();
    
    $root.CMsgClientDPContentStatsReport = (function() {
    
        /**
         * Properties of a CMsgClientDPContentStatsReport.
         * @exports ICMsgClientDPContentStatsReport
         * @interface ICMsgClientDPContentStatsReport
         * @property {number|Long|null} [stats_machine_id] CMsgClientDPContentStatsReport stats_machine_id
         * @property {string|null} [country_code] CMsgClientDPContentStatsReport country_code
         * @property {number|null} [os_type] CMsgClientDPContentStatsReport os_type
         * @property {number|null} [language] CMsgClientDPContentStatsReport language
         * @property {number|null} [num_install_folders] CMsgClientDPContentStatsReport num_install_folders
         * @property {number|null} [num_installed_games] CMsgClientDPContentStatsReport num_installed_games
         * @property {number|Long|null} [size_installed_games] CMsgClientDPContentStatsReport size_installed_games
         */
    
        /**
         * Constructs a new CMsgClientDPContentStatsReport.
         * @exports CMsgClientDPContentStatsReport
         * @classdesc Represents a CMsgClientDPContentStatsReport.
         * @implements ICMsgClientDPContentStatsReport
         * @constructor
         * @param {ICMsgClientDPContentStatsReport=} [properties] Properties to set
         */
        function CMsgClientDPContentStatsReport(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDPContentStatsReport stats_machine_id.
         * @member {number|Long} stats_machine_id
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.stats_machine_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientDPContentStatsReport country_code.
         * @member {string} country_code
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.country_code = "";
    
        /**
         * CMsgClientDPContentStatsReport os_type.
         * @member {number} os_type
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.os_type = 0;
    
        /**
         * CMsgClientDPContentStatsReport language.
         * @member {number} language
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.language = 0;
    
        /**
         * CMsgClientDPContentStatsReport num_install_folders.
         * @member {number} num_install_folders
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.num_install_folders = 0;
    
        /**
         * CMsgClientDPContentStatsReport num_installed_games.
         * @member {number} num_installed_games
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.num_installed_games = 0;
    
        /**
         * CMsgClientDPContentStatsReport size_installed_games.
         * @member {number|Long} size_installed_games
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         */
        CMsgClientDPContentStatsReport.prototype.size_installed_games = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientDPContentStatsReport instance using the specified properties.
         * @function create
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {ICMsgClientDPContentStatsReport=} [properties] Properties to set
         * @returns {CMsgClientDPContentStatsReport} CMsgClientDPContentStatsReport instance
         */
        CMsgClientDPContentStatsReport.create = function create(properties) {
            return new CMsgClientDPContentStatsReport(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDPContentStatsReport message. Does not implicitly {@link CMsgClientDPContentStatsReport.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {ICMsgClientDPContentStatsReport} message CMsgClientDPContentStatsReport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPContentStatsReport.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.stats_machine_id);
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.country_code);
            if (message.os_type != null && message.hasOwnProperty("os_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.os_type);
            if (message.language != null && message.hasOwnProperty("language"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.language);
            if (message.num_install_folders != null && message.hasOwnProperty("num_install_folders"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.num_install_folders);
            if (message.num_installed_games != null && message.hasOwnProperty("num_installed_games"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.num_installed_games);
            if (message.size_installed_games != null && message.hasOwnProperty("size_installed_games"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.size_installed_games);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDPContentStatsReport message, length delimited. Does not implicitly {@link CMsgClientDPContentStatsReport.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {ICMsgClientDPContentStatsReport} message CMsgClientDPContentStatsReport message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPContentStatsReport.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDPContentStatsReport message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDPContentStatsReport} CMsgClientDPContentStatsReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPContentStatsReport.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDPContentStatsReport();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.stats_machine_id = reader.fixed64();
                    break;
                case 2:
                    message.country_code = reader.string();
                    break;
                case 3:
                    message.os_type = reader.int32();
                    break;
                case 4:
                    message.language = reader.int32();
                    break;
                case 5:
                    message.num_install_folders = reader.uint32();
                    break;
                case 6:
                    message.num_installed_games = reader.uint32();
                    break;
                case 7:
                    message.size_installed_games = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDPContentStatsReport message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDPContentStatsReport} CMsgClientDPContentStatsReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPContentStatsReport.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDPContentStatsReport message.
         * @function verify
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDPContentStatsReport.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                if (!$util.isInteger(message.stats_machine_id) && !(message.stats_machine_id && $util.isInteger(message.stats_machine_id.low) && $util.isInteger(message.stats_machine_id.high)))
                    return "stats_machine_id: integer|Long expected";
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                if (!$util.isString(message.country_code))
                    return "country_code: string expected";
            if (message.os_type != null && message.hasOwnProperty("os_type"))
                if (!$util.isInteger(message.os_type))
                    return "os_type: integer expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.num_install_folders != null && message.hasOwnProperty("num_install_folders"))
                if (!$util.isInteger(message.num_install_folders))
                    return "num_install_folders: integer expected";
            if (message.num_installed_games != null && message.hasOwnProperty("num_installed_games"))
                if (!$util.isInteger(message.num_installed_games))
                    return "num_installed_games: integer expected";
            if (message.size_installed_games != null && message.hasOwnProperty("size_installed_games"))
                if (!$util.isInteger(message.size_installed_games) && !(message.size_installed_games && $util.isInteger(message.size_installed_games.low) && $util.isInteger(message.size_installed_games.high)))
                    return "size_installed_games: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDPContentStatsReport message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDPContentStatsReport} CMsgClientDPContentStatsReport
         */
        CMsgClientDPContentStatsReport.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDPContentStatsReport)
                return object;
            var message = new $root.CMsgClientDPContentStatsReport();
            if (object.stats_machine_id != null)
                if ($util.Long)
                    (message.stats_machine_id = $util.Long.fromValue(object.stats_machine_id)).unsigned = false;
                else if (typeof object.stats_machine_id === "string")
                    message.stats_machine_id = parseInt(object.stats_machine_id, 10);
                else if (typeof object.stats_machine_id === "number")
                    message.stats_machine_id = object.stats_machine_id;
                else if (typeof object.stats_machine_id === "object")
                    message.stats_machine_id = new $util.LongBits(object.stats_machine_id.low >>> 0, object.stats_machine_id.high >>> 0).toNumber();
            if (object.country_code != null)
                message.country_code = String(object.country_code);
            if (object.os_type != null)
                message.os_type = object.os_type | 0;
            if (object.language != null)
                message.language = object.language | 0;
            if (object.num_install_folders != null)
                message.num_install_folders = object.num_install_folders >>> 0;
            if (object.num_installed_games != null)
                message.num_installed_games = object.num_installed_games >>> 0;
            if (object.size_installed_games != null)
                if ($util.Long)
                    (message.size_installed_games = $util.Long.fromValue(object.size_installed_games)).unsigned = true;
                else if (typeof object.size_installed_games === "string")
                    message.size_installed_games = parseInt(object.size_installed_games, 10);
                else if (typeof object.size_installed_games === "number")
                    message.size_installed_games = object.size_installed_games;
                else if (typeof object.size_installed_games === "object")
                    message.size_installed_games = new $util.LongBits(object.size_installed_games.low >>> 0, object.size_installed_games.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDPContentStatsReport message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDPContentStatsReport
         * @static
         * @param {CMsgClientDPContentStatsReport} message CMsgClientDPContentStatsReport
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDPContentStatsReport.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.stats_machine_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.stats_machine_id = options.longs === String ? "0" : 0;
                object.country_code = "";
                object.os_type = 0;
                object.language = 0;
                object.num_install_folders = 0;
                object.num_installed_games = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.size_installed_games = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.size_installed_games = options.longs === String ? "0" : 0;
            }
            if (message.stats_machine_id != null && message.hasOwnProperty("stats_machine_id"))
                if (typeof message.stats_machine_id === "number")
                    object.stats_machine_id = options.longs === String ? String(message.stats_machine_id) : message.stats_machine_id;
                else
                    object.stats_machine_id = options.longs === String ? $util.Long.prototype.toString.call(message.stats_machine_id) : options.longs === Number ? new $util.LongBits(message.stats_machine_id.low >>> 0, message.stats_machine_id.high >>> 0).toNumber() : message.stats_machine_id;
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                object.country_code = message.country_code;
            if (message.os_type != null && message.hasOwnProperty("os_type"))
                object.os_type = message.os_type;
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.num_install_folders != null && message.hasOwnProperty("num_install_folders"))
                object.num_install_folders = message.num_install_folders;
            if (message.num_installed_games != null && message.hasOwnProperty("num_installed_games"))
                object.num_installed_games = message.num_installed_games;
            if (message.size_installed_games != null && message.hasOwnProperty("size_installed_games"))
                if (typeof message.size_installed_games === "number")
                    object.size_installed_games = options.longs === String ? String(message.size_installed_games) : message.size_installed_games;
                else
                    object.size_installed_games = options.longs === String ? $util.Long.prototype.toString.call(message.size_installed_games) : options.longs === Number ? new $util.LongBits(message.size_installed_games.low >>> 0, message.size_installed_games.high >>> 0).toNumber(true) : message.size_installed_games;
            return object;
        };
    
        /**
         * Converts this CMsgClientDPContentStatsReport to JSON.
         * @function toJSON
         * @memberof CMsgClientDPContentStatsReport
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDPContentStatsReport.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDPContentStatsReport;
    })();
    
    $root.CMsgClientGetCDNAuthTokenResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetCDNAuthTokenResponse.
         * @exports ICMsgClientGetCDNAuthTokenResponse
         * @interface ICMsgClientGetCDNAuthTokenResponse
         * @property {number|null} [eresult] CMsgClientGetCDNAuthTokenResponse eresult
         * @property {string|null} [token] CMsgClientGetCDNAuthTokenResponse token
         * @property {number|null} [expiration_time] CMsgClientGetCDNAuthTokenResponse expiration_time
         */
    
        /**
         * Constructs a new CMsgClientGetCDNAuthTokenResponse.
         * @exports CMsgClientGetCDNAuthTokenResponse
         * @classdesc Represents a CMsgClientGetCDNAuthTokenResponse.
         * @implements ICMsgClientGetCDNAuthTokenResponse
         * @constructor
         * @param {ICMsgClientGetCDNAuthTokenResponse=} [properties] Properties to set
         */
        function CMsgClientGetCDNAuthTokenResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetCDNAuthTokenResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @instance
         */
        CMsgClientGetCDNAuthTokenResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientGetCDNAuthTokenResponse token.
         * @member {string} token
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @instance
         */
        CMsgClientGetCDNAuthTokenResponse.prototype.token = "";
    
        /**
         * CMsgClientGetCDNAuthTokenResponse expiration_time.
         * @member {number} expiration_time
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @instance
         */
        CMsgClientGetCDNAuthTokenResponse.prototype.expiration_time = 0;
    
        /**
         * Creates a new CMsgClientGetCDNAuthTokenResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {ICMsgClientGetCDNAuthTokenResponse=} [properties] Properties to set
         * @returns {CMsgClientGetCDNAuthTokenResponse} CMsgClientGetCDNAuthTokenResponse instance
         */
        CMsgClientGetCDNAuthTokenResponse.create = function create(properties) {
            return new CMsgClientGetCDNAuthTokenResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetCDNAuthTokenResponse message. Does not implicitly {@link CMsgClientGetCDNAuthTokenResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {ICMsgClientGetCDNAuthTokenResponse} message CMsgClientGetCDNAuthTokenResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetCDNAuthTokenResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.token != null && message.hasOwnProperty("token"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.token);
            if (message.expiration_time != null && message.hasOwnProperty("expiration_time"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.expiration_time);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetCDNAuthTokenResponse message, length delimited. Does not implicitly {@link CMsgClientGetCDNAuthTokenResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {ICMsgClientGetCDNAuthTokenResponse} message CMsgClientGetCDNAuthTokenResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetCDNAuthTokenResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetCDNAuthTokenResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetCDNAuthTokenResponse} CMsgClientGetCDNAuthTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetCDNAuthTokenResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetCDNAuthTokenResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    message.token = reader.string();
                    break;
                case 3:
                    message.expiration_time = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetCDNAuthTokenResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetCDNAuthTokenResponse} CMsgClientGetCDNAuthTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetCDNAuthTokenResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetCDNAuthTokenResponse message.
         * @function verify
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetCDNAuthTokenResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!$util.isString(message.token))
                    return "token: string expected";
            if (message.expiration_time != null && message.hasOwnProperty("expiration_time"))
                if (!$util.isInteger(message.expiration_time))
                    return "expiration_time: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetCDNAuthTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetCDNAuthTokenResponse} CMsgClientGetCDNAuthTokenResponse
         */
        CMsgClientGetCDNAuthTokenResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetCDNAuthTokenResponse)
                return object;
            var message = new $root.CMsgClientGetCDNAuthTokenResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.token != null)
                message.token = String(object.token);
            if (object.expiration_time != null)
                message.expiration_time = object.expiration_time >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetCDNAuthTokenResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @static
         * @param {CMsgClientGetCDNAuthTokenResponse} message CMsgClientGetCDNAuthTokenResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetCDNAuthTokenResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.token = "";
                object.expiration_time = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.token != null && message.hasOwnProperty("token"))
                object.token = message.token;
            if (message.expiration_time != null && message.hasOwnProperty("expiration_time"))
                object.expiration_time = message.expiration_time;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetCDNAuthTokenResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetCDNAuthTokenResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetCDNAuthTokenResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetCDNAuthTokenResponse;
    })();
    
    $root.CMsgDownloadRateStatistics = (function() {
    
        /**
         * Properties of a CMsgDownloadRateStatistics.
         * @exports ICMsgDownloadRateStatistics
         * @interface ICMsgDownloadRateStatistics
         * @property {number|null} [cell_id] CMsgDownloadRateStatistics cell_id
         * @property {Array.<CMsgDownloadRateStatistics.IStatsInfo>|null} [stats] CMsgDownloadRateStatistics stats
         * @property {number|null} [throttling_kbps] CMsgDownloadRateStatistics throttling_kbps
         * @property {number|null} [steam_realm] CMsgDownloadRateStatistics steam_realm
         */
    
        /**
         * Constructs a new CMsgDownloadRateStatistics.
         * @exports CMsgDownloadRateStatistics
         * @classdesc Represents a CMsgDownloadRateStatistics.
         * @implements ICMsgDownloadRateStatistics
         * @constructor
         * @param {ICMsgDownloadRateStatistics=} [properties] Properties to set
         */
        function CMsgDownloadRateStatistics(properties) {
            this.stats = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDownloadRateStatistics cell_id.
         * @member {number} cell_id
         * @memberof CMsgDownloadRateStatistics
         * @instance
         */
        CMsgDownloadRateStatistics.prototype.cell_id = 0;
    
        /**
         * CMsgDownloadRateStatistics stats.
         * @member {Array.<CMsgDownloadRateStatistics.IStatsInfo>} stats
         * @memberof CMsgDownloadRateStatistics
         * @instance
         */
        CMsgDownloadRateStatistics.prototype.stats = $util.emptyArray;
    
        /**
         * CMsgDownloadRateStatistics throttling_kbps.
         * @member {number} throttling_kbps
         * @memberof CMsgDownloadRateStatistics
         * @instance
         */
        CMsgDownloadRateStatistics.prototype.throttling_kbps = 0;
    
        /**
         * CMsgDownloadRateStatistics steam_realm.
         * @member {number} steam_realm
         * @memberof CMsgDownloadRateStatistics
         * @instance
         */
        CMsgDownloadRateStatistics.prototype.steam_realm = 0;
    
        /**
         * Creates a new CMsgDownloadRateStatistics instance using the specified properties.
         * @function create
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {ICMsgDownloadRateStatistics=} [properties] Properties to set
         * @returns {CMsgDownloadRateStatistics} CMsgDownloadRateStatistics instance
         */
        CMsgDownloadRateStatistics.create = function create(properties) {
            return new CMsgDownloadRateStatistics(properties);
        };
    
        /**
         * Encodes the specified CMsgDownloadRateStatistics message. Does not implicitly {@link CMsgDownloadRateStatistics.verify|verify} messages.
         * @function encode
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {ICMsgDownloadRateStatistics} message CMsgDownloadRateStatistics message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDownloadRateStatistics.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cell_id);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    $root.CMsgDownloadRateStatistics.StatsInfo.encode(message.stats[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.throttling_kbps != null && message.hasOwnProperty("throttling_kbps"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.throttling_kbps);
            if (message.steam_realm != null && message.hasOwnProperty("steam_realm"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.steam_realm);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDownloadRateStatistics message, length delimited. Does not implicitly {@link CMsgDownloadRateStatistics.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {ICMsgDownloadRateStatistics} message CMsgDownloadRateStatistics message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDownloadRateStatistics.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDownloadRateStatistics message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDownloadRateStatistics} CMsgDownloadRateStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDownloadRateStatistics.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDownloadRateStatistics();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.cell_id = reader.uint32();
                    break;
                case 2:
                    if (!(message.stats && message.stats.length))
                        message.stats = [];
                    message.stats.push($root.CMsgDownloadRateStatistics.StatsInfo.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.throttling_kbps = reader.uint32();
                    break;
                case 4:
                    message.steam_realm = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDownloadRateStatistics message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDownloadRateStatistics} CMsgDownloadRateStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDownloadRateStatistics.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDownloadRateStatistics message.
         * @function verify
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDownloadRateStatistics.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i) {
                    var error = $root.CMsgDownloadRateStatistics.StatsInfo.verify(message.stats[i]);
                    if (error)
                        return "stats." + error;
                }
            }
            if (message.throttling_kbps != null && message.hasOwnProperty("throttling_kbps"))
                if (!$util.isInteger(message.throttling_kbps))
                    return "throttling_kbps: integer expected";
            if (message.steam_realm != null && message.hasOwnProperty("steam_realm"))
                if (!$util.isInteger(message.steam_realm))
                    return "steam_realm: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgDownloadRateStatistics message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDownloadRateStatistics} CMsgDownloadRateStatistics
         */
        CMsgDownloadRateStatistics.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDownloadRateStatistics)
                return object;
            var message = new $root.CMsgDownloadRateStatistics();
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgDownloadRateStatistics.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i) {
                    if (typeof object.stats[i] !== "object")
                        throw TypeError(".CMsgDownloadRateStatistics.stats: object expected");
                    message.stats[i] = $root.CMsgDownloadRateStatistics.StatsInfo.fromObject(object.stats[i]);
                }
            }
            if (object.throttling_kbps != null)
                message.throttling_kbps = object.throttling_kbps >>> 0;
            if (object.steam_realm != null)
                message.steam_realm = object.steam_realm >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDownloadRateStatistics message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDownloadRateStatistics
         * @static
         * @param {CMsgDownloadRateStatistics} message CMsgDownloadRateStatistics
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDownloadRateStatistics.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats = [];
            if (options.defaults) {
                object.cell_id = 0;
                object.throttling_kbps = 0;
                object.steam_realm = 0;
            }
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = $root.CMsgDownloadRateStatistics.StatsInfo.toObject(message.stats[j], options);
            }
            if (message.throttling_kbps != null && message.hasOwnProperty("throttling_kbps"))
                object.throttling_kbps = message.throttling_kbps;
            if (message.steam_realm != null && message.hasOwnProperty("steam_realm"))
                object.steam_realm = message.steam_realm;
            return object;
        };
    
        /**
         * Converts this CMsgDownloadRateStatistics to JSON.
         * @function toJSON
         * @memberof CMsgDownloadRateStatistics
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDownloadRateStatistics.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgDownloadRateStatistics.StatsInfo = (function() {
    
            /**
             * Properties of a StatsInfo.
             * @memberof CMsgDownloadRateStatistics
             * @interface IStatsInfo
             * @property {number|null} [source_type] StatsInfo source_type
             * @property {number|null} [source_id] StatsInfo source_id
             * @property {number|null} [seconds] StatsInfo seconds
             * @property {number|Long|null} [bytes] StatsInfo bytes
             * @property {string|null} [host_name] StatsInfo host_name
             * @property {number|Long|null} [microseconds] StatsInfo microseconds
             * @property {boolean|null} [used_ipv6] StatsInfo used_ipv6
             * @property {boolean|null} [proxied] StatsInfo proxied
             */
    
            /**
             * Constructs a new StatsInfo.
             * @memberof CMsgDownloadRateStatistics
             * @classdesc Represents a StatsInfo.
             * @implements IStatsInfo
             * @constructor
             * @param {CMsgDownloadRateStatistics.IStatsInfo=} [properties] Properties to set
             */
            function StatsInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StatsInfo source_type.
             * @member {number} source_type
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.source_type = 0;
    
            /**
             * StatsInfo source_id.
             * @member {number} source_id
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.source_id = 0;
    
            /**
             * StatsInfo seconds.
             * @member {number} seconds
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.seconds = 0;
    
            /**
             * StatsInfo bytes.
             * @member {number|Long} bytes
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.bytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * StatsInfo host_name.
             * @member {string} host_name
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.host_name = "";
    
            /**
             * StatsInfo microseconds.
             * @member {number|Long} microseconds
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.microseconds = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * StatsInfo used_ipv6.
             * @member {boolean} used_ipv6
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.used_ipv6 = false;
    
            /**
             * StatsInfo proxied.
             * @member {boolean} proxied
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             */
            StatsInfo.prototype.proxied = false;
    
            /**
             * Creates a new StatsInfo instance using the specified properties.
             * @function create
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {CMsgDownloadRateStatistics.IStatsInfo=} [properties] Properties to set
             * @returns {CMsgDownloadRateStatistics.StatsInfo} StatsInfo instance
             */
            StatsInfo.create = function create(properties) {
                return new StatsInfo(properties);
            };
    
            /**
             * Encodes the specified StatsInfo message. Does not implicitly {@link CMsgDownloadRateStatistics.StatsInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {CMsgDownloadRateStatistics.IStatsInfo} message StatsInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatsInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.source_type != null && message.hasOwnProperty("source_type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.source_type);
                if (message.source_id != null && message.hasOwnProperty("source_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.source_id);
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seconds);
                if (message.bytes != null && message.hasOwnProperty("bytes"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.bytes);
                if (message.host_name != null && message.hasOwnProperty("host_name"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.host_name);
                if (message.microseconds != null && message.hasOwnProperty("microseconds"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.microseconds);
                if (message.used_ipv6 != null && message.hasOwnProperty("used_ipv6"))
                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.used_ipv6);
                if (message.proxied != null && message.hasOwnProperty("proxied"))
                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.proxied);
                return writer;
            };
    
            /**
             * Encodes the specified StatsInfo message, length delimited. Does not implicitly {@link CMsgDownloadRateStatistics.StatsInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {CMsgDownloadRateStatistics.IStatsInfo} message StatsInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatsInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatsInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgDownloadRateStatistics.StatsInfo} StatsInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatsInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDownloadRateStatistics.StatsInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.source_type = reader.uint32();
                        break;
                    case 2:
                        message.source_id = reader.uint32();
                        break;
                    case 3:
                        message.seconds = reader.uint32();
                        break;
                    case 4:
                        message.bytes = reader.uint64();
                        break;
                    case 5:
                        message.host_name = reader.string();
                        break;
                    case 6:
                        message.microseconds = reader.uint64();
                        break;
                    case 7:
                        message.used_ipv6 = reader.bool();
                        break;
                    case 8:
                        message.proxied = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatsInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgDownloadRateStatistics.StatsInfo} StatsInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatsInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatsInfo message.
             * @function verify
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatsInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.source_type != null && message.hasOwnProperty("source_type"))
                    if (!$util.isInteger(message.source_type))
                        return "source_type: integer expected";
                if (message.source_id != null && message.hasOwnProperty("source_id"))
                    if (!$util.isInteger(message.source_id))
                        return "source_id: integer expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds))
                        return "seconds: integer expected";
                if (message.bytes != null && message.hasOwnProperty("bytes"))
                    if (!$util.isInteger(message.bytes) && !(message.bytes && $util.isInteger(message.bytes.low) && $util.isInteger(message.bytes.high)))
                        return "bytes: integer|Long expected";
                if (message.host_name != null && message.hasOwnProperty("host_name"))
                    if (!$util.isString(message.host_name))
                        return "host_name: string expected";
                if (message.microseconds != null && message.hasOwnProperty("microseconds"))
                    if (!$util.isInteger(message.microseconds) && !(message.microseconds && $util.isInteger(message.microseconds.low) && $util.isInteger(message.microseconds.high)))
                        return "microseconds: integer|Long expected";
                if (message.used_ipv6 != null && message.hasOwnProperty("used_ipv6"))
                    if (typeof message.used_ipv6 !== "boolean")
                        return "used_ipv6: boolean expected";
                if (message.proxied != null && message.hasOwnProperty("proxied"))
                    if (typeof message.proxied !== "boolean")
                        return "proxied: boolean expected";
                return null;
            };
    
            /**
             * Creates a StatsInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgDownloadRateStatistics.StatsInfo} StatsInfo
             */
            StatsInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgDownloadRateStatistics.StatsInfo)
                    return object;
                var message = new $root.CMsgDownloadRateStatistics.StatsInfo();
                if (object.source_type != null)
                    message.source_type = object.source_type >>> 0;
                if (object.source_id != null)
                    message.source_id = object.source_id >>> 0;
                if (object.seconds != null)
                    message.seconds = object.seconds >>> 0;
                if (object.bytes != null)
                    if ($util.Long)
                        (message.bytes = $util.Long.fromValue(object.bytes)).unsigned = true;
                    else if (typeof object.bytes === "string")
                        message.bytes = parseInt(object.bytes, 10);
                    else if (typeof object.bytes === "number")
                        message.bytes = object.bytes;
                    else if (typeof object.bytes === "object")
                        message.bytes = new $util.LongBits(object.bytes.low >>> 0, object.bytes.high >>> 0).toNumber(true);
                if (object.host_name != null)
                    message.host_name = String(object.host_name);
                if (object.microseconds != null)
                    if ($util.Long)
                        (message.microseconds = $util.Long.fromValue(object.microseconds)).unsigned = true;
                    else if (typeof object.microseconds === "string")
                        message.microseconds = parseInt(object.microseconds, 10);
                    else if (typeof object.microseconds === "number")
                        message.microseconds = object.microseconds;
                    else if (typeof object.microseconds === "object")
                        message.microseconds = new $util.LongBits(object.microseconds.low >>> 0, object.microseconds.high >>> 0).toNumber(true);
                if (object.used_ipv6 != null)
                    message.used_ipv6 = Boolean(object.used_ipv6);
                if (object.proxied != null)
                    message.proxied = Boolean(object.proxied);
                return message;
            };
    
            /**
             * Creates a plain object from a StatsInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @static
             * @param {CMsgDownloadRateStatistics.StatsInfo} message StatsInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatsInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.source_type = 0;
                    object.source_id = 0;
                    object.seconds = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bytes = options.longs === String ? "0" : 0;
                    object.host_name = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.microseconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.microseconds = options.longs === String ? "0" : 0;
                    object.used_ipv6 = false;
                    object.proxied = false;
                }
                if (message.source_type != null && message.hasOwnProperty("source_type"))
                    object.source_type = message.source_type;
                if (message.source_id != null && message.hasOwnProperty("source_id"))
                    object.source_id = message.source_id;
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    object.seconds = message.seconds;
                if (message.bytes != null && message.hasOwnProperty("bytes"))
                    if (typeof message.bytes === "number")
                        object.bytes = options.longs === String ? String(message.bytes) : message.bytes;
                    else
                        object.bytes = options.longs === String ? $util.Long.prototype.toString.call(message.bytes) : options.longs === Number ? new $util.LongBits(message.bytes.low >>> 0, message.bytes.high >>> 0).toNumber(true) : message.bytes;
                if (message.host_name != null && message.hasOwnProperty("host_name"))
                    object.host_name = message.host_name;
                if (message.microseconds != null && message.hasOwnProperty("microseconds"))
                    if (typeof message.microseconds === "number")
                        object.microseconds = options.longs === String ? String(message.microseconds) : message.microseconds;
                    else
                        object.microseconds = options.longs === String ? $util.Long.prototype.toString.call(message.microseconds) : options.longs === Number ? new $util.LongBits(message.microseconds.low >>> 0, message.microseconds.high >>> 0).toNumber(true) : message.microseconds;
                if (message.used_ipv6 != null && message.hasOwnProperty("used_ipv6"))
                    object.used_ipv6 = message.used_ipv6;
                if (message.proxied != null && message.hasOwnProperty("proxied"))
                    object.proxied = message.proxied;
                return object;
            };
    
            /**
             * Converts this StatsInfo to JSON.
             * @function toJSON
             * @memberof CMsgDownloadRateStatistics.StatsInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatsInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return StatsInfo;
        })();
    
        return CMsgDownloadRateStatistics;
    })();
    
    $root.CMsgClientRequestAccountData = (function() {
    
        /**
         * Properties of a CMsgClientRequestAccountData.
         * @exports ICMsgClientRequestAccountData
         * @interface ICMsgClientRequestAccountData
         * @property {string|null} [account_or_email] CMsgClientRequestAccountData account_or_email
         * @property {number|null} [action] CMsgClientRequestAccountData action
         */
    
        /**
         * Constructs a new CMsgClientRequestAccountData.
         * @exports CMsgClientRequestAccountData
         * @classdesc Represents a CMsgClientRequestAccountData.
         * @implements ICMsgClientRequestAccountData
         * @constructor
         * @param {ICMsgClientRequestAccountData=} [properties] Properties to set
         */
        function CMsgClientRequestAccountData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestAccountData account_or_email.
         * @member {string} account_or_email
         * @memberof CMsgClientRequestAccountData
         * @instance
         */
        CMsgClientRequestAccountData.prototype.account_or_email = "";
    
        /**
         * CMsgClientRequestAccountData action.
         * @member {number} action
         * @memberof CMsgClientRequestAccountData
         * @instance
         */
        CMsgClientRequestAccountData.prototype.action = 0;
    
        /**
         * Creates a new CMsgClientRequestAccountData instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {ICMsgClientRequestAccountData=} [properties] Properties to set
         * @returns {CMsgClientRequestAccountData} CMsgClientRequestAccountData instance
         */
        CMsgClientRequestAccountData.create = function create(properties) {
            return new CMsgClientRequestAccountData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestAccountData message. Does not implicitly {@link CMsgClientRequestAccountData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {ICMsgClientRequestAccountData} message CMsgClientRequestAccountData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestAccountData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_or_email != null && message.hasOwnProperty("account_or_email"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account_or_email);
            if (message.action != null && message.hasOwnProperty("action"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.action);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestAccountData message, length delimited. Does not implicitly {@link CMsgClientRequestAccountData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {ICMsgClientRequestAccountData} message CMsgClientRequestAccountData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestAccountData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestAccountData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestAccountData} CMsgClientRequestAccountData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestAccountData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestAccountData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.account_or_email = reader.string();
                    break;
                case 2:
                    message.action = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestAccountData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestAccountData} CMsgClientRequestAccountData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestAccountData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestAccountData message.
         * @function verify
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestAccountData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_or_email != null && message.hasOwnProperty("account_or_email"))
                if (!$util.isString(message.account_or_email))
                    return "account_or_email: string expected";
            if (message.action != null && message.hasOwnProperty("action"))
                if (!$util.isInteger(message.action))
                    return "action: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestAccountData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestAccountData} CMsgClientRequestAccountData
         */
        CMsgClientRequestAccountData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestAccountData)
                return object;
            var message = new $root.CMsgClientRequestAccountData();
            if (object.account_or_email != null)
                message.account_or_email = String(object.account_or_email);
            if (object.action != null)
                message.action = object.action >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestAccountData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestAccountData
         * @static
         * @param {CMsgClientRequestAccountData} message CMsgClientRequestAccountData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestAccountData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_or_email = "";
                object.action = 0;
            }
            if (message.account_or_email != null && message.hasOwnProperty("account_or_email"))
                object.account_or_email = message.account_or_email;
            if (message.action != null && message.hasOwnProperty("action"))
                object.action = message.action;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestAccountData to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestAccountData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestAccountData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestAccountData;
    })();
    
    $root.CMsgClientRequestAccountDataResponse = (function() {
    
        /**
         * Properties of a CMsgClientRequestAccountDataResponse.
         * @exports ICMsgClientRequestAccountDataResponse
         * @interface ICMsgClientRequestAccountDataResponse
         * @property {number|null} [action] CMsgClientRequestAccountDataResponse action
         * @property {number|null} [eresult] CMsgClientRequestAccountDataResponse eresult
         * @property {string|null} [account_name] CMsgClientRequestAccountDataResponse account_name
         * @property {number|null} [ct_matches] CMsgClientRequestAccountDataResponse ct_matches
         * @property {string|null} [account_name_suggestion1] CMsgClientRequestAccountDataResponse account_name_suggestion1
         * @property {string|null} [account_name_suggestion2] CMsgClientRequestAccountDataResponse account_name_suggestion2
         * @property {string|null} [account_name_suggestion3] CMsgClientRequestAccountDataResponse account_name_suggestion3
         */
    
        /**
         * Constructs a new CMsgClientRequestAccountDataResponse.
         * @exports CMsgClientRequestAccountDataResponse
         * @classdesc Represents a CMsgClientRequestAccountDataResponse.
         * @implements ICMsgClientRequestAccountDataResponse
         * @constructor
         * @param {ICMsgClientRequestAccountDataResponse=} [properties] Properties to set
         */
        function CMsgClientRequestAccountDataResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestAccountDataResponse action.
         * @member {number} action
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.action = 0;
    
        /**
         * CMsgClientRequestAccountDataResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.eresult = 0;
    
        /**
         * CMsgClientRequestAccountDataResponse account_name.
         * @member {string} account_name
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.account_name = "";
    
        /**
         * CMsgClientRequestAccountDataResponse ct_matches.
         * @member {number} ct_matches
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.ct_matches = 0;
    
        /**
         * CMsgClientRequestAccountDataResponse account_name_suggestion1.
         * @member {string} account_name_suggestion1
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.account_name_suggestion1 = "";
    
        /**
         * CMsgClientRequestAccountDataResponse account_name_suggestion2.
         * @member {string} account_name_suggestion2
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.account_name_suggestion2 = "";
    
        /**
         * CMsgClientRequestAccountDataResponse account_name_suggestion3.
         * @member {string} account_name_suggestion3
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         */
        CMsgClientRequestAccountDataResponse.prototype.account_name_suggestion3 = "";
    
        /**
         * Creates a new CMsgClientRequestAccountDataResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {ICMsgClientRequestAccountDataResponse=} [properties] Properties to set
         * @returns {CMsgClientRequestAccountDataResponse} CMsgClientRequestAccountDataResponse instance
         */
        CMsgClientRequestAccountDataResponse.create = function create(properties) {
            return new CMsgClientRequestAccountDataResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestAccountDataResponse message. Does not implicitly {@link CMsgClientRequestAccountDataResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {ICMsgClientRequestAccountDataResponse} message CMsgClientRequestAccountDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestAccountDataResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.action != null && message.hasOwnProperty("action"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.action);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.account_name);
            if (message.ct_matches != null && message.hasOwnProperty("ct_matches"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ct_matches);
            if (message.account_name_suggestion1 != null && message.hasOwnProperty("account_name_suggestion1"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.account_name_suggestion1);
            if (message.account_name_suggestion2 != null && message.hasOwnProperty("account_name_suggestion2"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.account_name_suggestion2);
            if (message.account_name_suggestion3 != null && message.hasOwnProperty("account_name_suggestion3"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.account_name_suggestion3);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestAccountDataResponse message, length delimited. Does not implicitly {@link CMsgClientRequestAccountDataResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {ICMsgClientRequestAccountDataResponse} message CMsgClientRequestAccountDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestAccountDataResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestAccountDataResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestAccountDataResponse} CMsgClientRequestAccountDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestAccountDataResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestAccountDataResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.action = reader.uint32();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.account_name = reader.string();
                    break;
                case 4:
                    message.ct_matches = reader.uint32();
                    break;
                case 5:
                    message.account_name_suggestion1 = reader.string();
                    break;
                case 6:
                    message.account_name_suggestion2 = reader.string();
                    break;
                case 7:
                    message.account_name_suggestion3 = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestAccountDataResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestAccountDataResponse} CMsgClientRequestAccountDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestAccountDataResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestAccountDataResponse message.
         * @function verify
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestAccountDataResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.action != null && message.hasOwnProperty("action"))
                if (!$util.isInteger(message.action))
                    return "action: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                if (!$util.isString(message.account_name))
                    return "account_name: string expected";
            if (message.ct_matches != null && message.hasOwnProperty("ct_matches"))
                if (!$util.isInteger(message.ct_matches))
                    return "ct_matches: integer expected";
            if (message.account_name_suggestion1 != null && message.hasOwnProperty("account_name_suggestion1"))
                if (!$util.isString(message.account_name_suggestion1))
                    return "account_name_suggestion1: string expected";
            if (message.account_name_suggestion2 != null && message.hasOwnProperty("account_name_suggestion2"))
                if (!$util.isString(message.account_name_suggestion2))
                    return "account_name_suggestion2: string expected";
            if (message.account_name_suggestion3 != null && message.hasOwnProperty("account_name_suggestion3"))
                if (!$util.isString(message.account_name_suggestion3))
                    return "account_name_suggestion3: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestAccountDataResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestAccountDataResponse} CMsgClientRequestAccountDataResponse
         */
        CMsgClientRequestAccountDataResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestAccountDataResponse)
                return object;
            var message = new $root.CMsgClientRequestAccountDataResponse();
            if (object.action != null)
                message.action = object.action >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.account_name != null)
                message.account_name = String(object.account_name);
            if (object.ct_matches != null)
                message.ct_matches = object.ct_matches >>> 0;
            if (object.account_name_suggestion1 != null)
                message.account_name_suggestion1 = String(object.account_name_suggestion1);
            if (object.account_name_suggestion2 != null)
                message.account_name_suggestion2 = String(object.account_name_suggestion2);
            if (object.account_name_suggestion3 != null)
                message.account_name_suggestion3 = String(object.account_name_suggestion3);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestAccountDataResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestAccountDataResponse
         * @static
         * @param {CMsgClientRequestAccountDataResponse} message CMsgClientRequestAccountDataResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestAccountDataResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.action = 0;
                object.eresult = 0;
                object.account_name = "";
                object.ct_matches = 0;
                object.account_name_suggestion1 = "";
                object.account_name_suggestion2 = "";
                object.account_name_suggestion3 = "";
            }
            if (message.action != null && message.hasOwnProperty("action"))
                object.action = message.action;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                object.account_name = message.account_name;
            if (message.ct_matches != null && message.hasOwnProperty("ct_matches"))
                object.ct_matches = message.ct_matches;
            if (message.account_name_suggestion1 != null && message.hasOwnProperty("account_name_suggestion1"))
                object.account_name_suggestion1 = message.account_name_suggestion1;
            if (message.account_name_suggestion2 != null && message.hasOwnProperty("account_name_suggestion2"))
                object.account_name_suggestion2 = message.account_name_suggestion2;
            if (message.account_name_suggestion3 != null && message.hasOwnProperty("account_name_suggestion3"))
                object.account_name_suggestion3 = message.account_name_suggestion3;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestAccountDataResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestAccountDataResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestAccountDataResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestAccountDataResponse;
    })();
    
    $root.CMsgClientUGSGetGlobalStats = (function() {
    
        /**
         * Properties of a CMsgClientUGSGetGlobalStats.
         * @exports ICMsgClientUGSGetGlobalStats
         * @interface ICMsgClientUGSGetGlobalStats
         * @property {number|Long|null} [gameid] CMsgClientUGSGetGlobalStats gameid
         * @property {number|null} [history_days_requested] CMsgClientUGSGetGlobalStats history_days_requested
         * @property {number|null} [time_last_requested] CMsgClientUGSGetGlobalStats time_last_requested
         * @property {number|null} [first_day_cached] CMsgClientUGSGetGlobalStats first_day_cached
         * @property {number|null} [days_cached] CMsgClientUGSGetGlobalStats days_cached
         */
    
        /**
         * Constructs a new CMsgClientUGSGetGlobalStats.
         * @exports CMsgClientUGSGetGlobalStats
         * @classdesc Represents a CMsgClientUGSGetGlobalStats.
         * @implements ICMsgClientUGSGetGlobalStats
         * @constructor
         * @param {ICMsgClientUGSGetGlobalStats=} [properties] Properties to set
         */
        function CMsgClientUGSGetGlobalStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUGSGetGlobalStats gameid.
         * @member {number|Long} gameid
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         */
        CMsgClientUGSGetGlobalStats.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUGSGetGlobalStats history_days_requested.
         * @member {number} history_days_requested
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         */
        CMsgClientUGSGetGlobalStats.prototype.history_days_requested = 0;
    
        /**
         * CMsgClientUGSGetGlobalStats time_last_requested.
         * @member {number} time_last_requested
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         */
        CMsgClientUGSGetGlobalStats.prototype.time_last_requested = 0;
    
        /**
         * CMsgClientUGSGetGlobalStats first_day_cached.
         * @member {number} first_day_cached
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         */
        CMsgClientUGSGetGlobalStats.prototype.first_day_cached = 0;
    
        /**
         * CMsgClientUGSGetGlobalStats days_cached.
         * @member {number} days_cached
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         */
        CMsgClientUGSGetGlobalStats.prototype.days_cached = 0;
    
        /**
         * Creates a new CMsgClientUGSGetGlobalStats instance using the specified properties.
         * @function create
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {ICMsgClientUGSGetGlobalStats=} [properties] Properties to set
         * @returns {CMsgClientUGSGetGlobalStats} CMsgClientUGSGetGlobalStats instance
         */
        CMsgClientUGSGetGlobalStats.create = function create(properties) {
            return new CMsgClientUGSGetGlobalStats(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUGSGetGlobalStats message. Does not implicitly {@link CMsgClientUGSGetGlobalStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {ICMsgClientUGSGetGlobalStats} message CMsgClientUGSGetGlobalStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUGSGetGlobalStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.gameid);
            if (message.history_days_requested != null && message.hasOwnProperty("history_days_requested"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.history_days_requested);
            if (message.time_last_requested != null && message.hasOwnProperty("time_last_requested"))
                writer.uint32(/* id 3, wireType 5 =*/29).fixed32(message.time_last_requested);
            if (message.first_day_cached != null && message.hasOwnProperty("first_day_cached"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.first_day_cached);
            if (message.days_cached != null && message.hasOwnProperty("days_cached"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.days_cached);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUGSGetGlobalStats message, length delimited. Does not implicitly {@link CMsgClientUGSGetGlobalStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {ICMsgClientUGSGetGlobalStats} message CMsgClientUGSGetGlobalStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUGSGetGlobalStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUGSGetGlobalStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUGSGetGlobalStats} CMsgClientUGSGetGlobalStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUGSGetGlobalStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUGSGetGlobalStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gameid = reader.uint64();
                    break;
                case 2:
                    message.history_days_requested = reader.uint32();
                    break;
                case 3:
                    message.time_last_requested = reader.fixed32();
                    break;
                case 4:
                    message.first_day_cached = reader.uint32();
                    break;
                case 5:
                    message.days_cached = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUGSGetGlobalStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUGSGetGlobalStats} CMsgClientUGSGetGlobalStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUGSGetGlobalStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUGSGetGlobalStats message.
         * @function verify
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUGSGetGlobalStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.history_days_requested != null && message.hasOwnProperty("history_days_requested"))
                if (!$util.isInteger(message.history_days_requested))
                    return "history_days_requested: integer expected";
            if (message.time_last_requested != null && message.hasOwnProperty("time_last_requested"))
                if (!$util.isInteger(message.time_last_requested))
                    return "time_last_requested: integer expected";
            if (message.first_day_cached != null && message.hasOwnProperty("first_day_cached"))
                if (!$util.isInteger(message.first_day_cached))
                    return "first_day_cached: integer expected";
            if (message.days_cached != null && message.hasOwnProperty("days_cached"))
                if (!$util.isInteger(message.days_cached))
                    return "days_cached: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUGSGetGlobalStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUGSGetGlobalStats} CMsgClientUGSGetGlobalStats
         */
        CMsgClientUGSGetGlobalStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUGSGetGlobalStats)
                return object;
            var message = new $root.CMsgClientUGSGetGlobalStats();
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = true;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber(true);
            if (object.history_days_requested != null)
                message.history_days_requested = object.history_days_requested >>> 0;
            if (object.time_last_requested != null)
                message.time_last_requested = object.time_last_requested >>> 0;
            if (object.first_day_cached != null)
                message.first_day_cached = object.first_day_cached >>> 0;
            if (object.days_cached != null)
                message.days_cached = object.days_cached >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUGSGetGlobalStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUGSGetGlobalStats
         * @static
         * @param {CMsgClientUGSGetGlobalStats} message CMsgClientUGSGetGlobalStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUGSGetGlobalStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                object.history_days_requested = 0;
                object.time_last_requested = 0;
                object.first_day_cached = 0;
                object.days_cached = 0;
            }
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber(true) : message.gameid;
            if (message.history_days_requested != null && message.hasOwnProperty("history_days_requested"))
                object.history_days_requested = message.history_days_requested;
            if (message.time_last_requested != null && message.hasOwnProperty("time_last_requested"))
                object.time_last_requested = message.time_last_requested;
            if (message.first_day_cached != null && message.hasOwnProperty("first_day_cached"))
                object.first_day_cached = message.first_day_cached;
            if (message.days_cached != null && message.hasOwnProperty("days_cached"))
                object.days_cached = message.days_cached;
            return object;
        };
    
        /**
         * Converts this CMsgClientUGSGetGlobalStats to JSON.
         * @function toJSON
         * @memberof CMsgClientUGSGetGlobalStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUGSGetGlobalStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUGSGetGlobalStats;
    })();
    
    $root.CMsgClientUGSGetGlobalStatsResponse = (function() {
    
        /**
         * Properties of a CMsgClientUGSGetGlobalStatsResponse.
         * @exports ICMsgClientUGSGetGlobalStatsResponse
         * @interface ICMsgClientUGSGetGlobalStatsResponse
         * @property {number|null} [eresult] CMsgClientUGSGetGlobalStatsResponse eresult
         * @property {number|null} [timestamp] CMsgClientUGSGetGlobalStatsResponse timestamp
         * @property {number|null} [day_current] CMsgClientUGSGetGlobalStatsResponse day_current
         * @property {Array.<CMsgClientUGSGetGlobalStatsResponse.IDay>|null} [days] CMsgClientUGSGetGlobalStatsResponse days
         */
    
        /**
         * Constructs a new CMsgClientUGSGetGlobalStatsResponse.
         * @exports CMsgClientUGSGetGlobalStatsResponse
         * @classdesc Represents a CMsgClientUGSGetGlobalStatsResponse.
         * @implements ICMsgClientUGSGetGlobalStatsResponse
         * @constructor
         * @param {ICMsgClientUGSGetGlobalStatsResponse=} [properties] Properties to set
         */
        function CMsgClientUGSGetGlobalStatsResponse(properties) {
            this.days = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUGSGetGlobalStatsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @instance
         */
        CMsgClientUGSGetGlobalStatsResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUGSGetGlobalStatsResponse timestamp.
         * @member {number} timestamp
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @instance
         */
        CMsgClientUGSGetGlobalStatsResponse.prototype.timestamp = 0;
    
        /**
         * CMsgClientUGSGetGlobalStatsResponse day_current.
         * @member {number} day_current
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @instance
         */
        CMsgClientUGSGetGlobalStatsResponse.prototype.day_current = 0;
    
        /**
         * CMsgClientUGSGetGlobalStatsResponse days.
         * @member {Array.<CMsgClientUGSGetGlobalStatsResponse.IDay>} days
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @instance
         */
        CMsgClientUGSGetGlobalStatsResponse.prototype.days = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUGSGetGlobalStatsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {ICMsgClientUGSGetGlobalStatsResponse=} [properties] Properties to set
         * @returns {CMsgClientUGSGetGlobalStatsResponse} CMsgClientUGSGetGlobalStatsResponse instance
         */
        CMsgClientUGSGetGlobalStatsResponse.create = function create(properties) {
            return new CMsgClientUGSGetGlobalStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUGSGetGlobalStatsResponse message. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {ICMsgClientUGSGetGlobalStatsResponse} message CMsgClientUGSGetGlobalStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUGSGetGlobalStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.timestamp);
            if (message.day_current != null && message.hasOwnProperty("day_current"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day_current);
            if (message.days != null && message.days.length)
                for (var i = 0; i < message.days.length; ++i)
                    $root.CMsgClientUGSGetGlobalStatsResponse.Day.encode(message.days[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUGSGetGlobalStatsResponse message, length delimited. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {ICMsgClientUGSGetGlobalStatsResponse} message CMsgClientUGSGetGlobalStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUGSGetGlobalStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUGSGetGlobalStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUGSGetGlobalStatsResponse} CMsgClientUGSGetGlobalStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUGSGetGlobalStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUGSGetGlobalStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.timestamp = reader.fixed32();
                    break;
                case 3:
                    message.day_current = reader.int32();
                    break;
                case 4:
                    if (!(message.days && message.days.length))
                        message.days = [];
                    message.days.push($root.CMsgClientUGSGetGlobalStatsResponse.Day.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUGSGetGlobalStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUGSGetGlobalStatsResponse} CMsgClientUGSGetGlobalStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUGSGetGlobalStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUGSGetGlobalStatsResponse message.
         * @function verify
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUGSGetGlobalStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
            if (message.day_current != null && message.hasOwnProperty("day_current"))
                if (!$util.isInteger(message.day_current))
                    return "day_current: integer expected";
            if (message.days != null && message.hasOwnProperty("days")) {
                if (!Array.isArray(message.days))
                    return "days: array expected";
                for (var i = 0; i < message.days.length; ++i) {
                    var error = $root.CMsgClientUGSGetGlobalStatsResponse.Day.verify(message.days[i]);
                    if (error)
                        return "days." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUGSGetGlobalStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUGSGetGlobalStatsResponse} CMsgClientUGSGetGlobalStatsResponse
         */
        CMsgClientUGSGetGlobalStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUGSGetGlobalStatsResponse)
                return object;
            var message = new $root.CMsgClientUGSGetGlobalStatsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.timestamp != null)
                message.timestamp = object.timestamp >>> 0;
            if (object.day_current != null)
                message.day_current = object.day_current | 0;
            if (object.days) {
                if (!Array.isArray(object.days))
                    throw TypeError(".CMsgClientUGSGetGlobalStatsResponse.days: array expected");
                message.days = [];
                for (var i = 0; i < object.days.length; ++i) {
                    if (typeof object.days[i] !== "object")
                        throw TypeError(".CMsgClientUGSGetGlobalStatsResponse.days: object expected");
                    message.days[i] = $root.CMsgClientUGSGetGlobalStatsResponse.Day.fromObject(object.days[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUGSGetGlobalStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @static
         * @param {CMsgClientUGSGetGlobalStatsResponse} message CMsgClientUGSGetGlobalStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUGSGetGlobalStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.days = [];
            if (options.defaults) {
                object.eresult = 2;
                object.timestamp = 0;
                object.day_current = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                object.timestamp = message.timestamp;
            if (message.day_current != null && message.hasOwnProperty("day_current"))
                object.day_current = message.day_current;
            if (message.days && message.days.length) {
                object.days = [];
                for (var j = 0; j < message.days.length; ++j)
                    object.days[j] = $root.CMsgClientUGSGetGlobalStatsResponse.Day.toObject(message.days[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUGSGetGlobalStatsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUGSGetGlobalStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUGSGetGlobalStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUGSGetGlobalStatsResponse.Day = (function() {
    
            /**
             * Properties of a Day.
             * @memberof CMsgClientUGSGetGlobalStatsResponse
             * @interface IDay
             * @property {number|null} [day_id] Day day_id
             * @property {Array.<CMsgClientUGSGetGlobalStatsResponse.Day.IStat>|null} [stats] Day stats
             */
    
            /**
             * Constructs a new Day.
             * @memberof CMsgClientUGSGetGlobalStatsResponse
             * @classdesc Represents a Day.
             * @implements IDay
             * @constructor
             * @param {CMsgClientUGSGetGlobalStatsResponse.IDay=} [properties] Properties to set
             */
            function Day(properties) {
                this.stats = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Day day_id.
             * @member {number} day_id
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @instance
             */
            Day.prototype.day_id = 0;
    
            /**
             * Day stats.
             * @member {Array.<CMsgClientUGSGetGlobalStatsResponse.Day.IStat>} stats
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @instance
             */
            Day.prototype.stats = $util.emptyArray;
    
            /**
             * Creates a new Day instance using the specified properties.
             * @function create
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {CMsgClientUGSGetGlobalStatsResponse.IDay=} [properties] Properties to set
             * @returns {CMsgClientUGSGetGlobalStatsResponse.Day} Day instance
             */
            Day.create = function create(properties) {
                return new Day(properties);
            };
    
            /**
             * Encodes the specified Day message. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.Day.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {CMsgClientUGSGetGlobalStatsResponse.IDay} message Day message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Day.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.day_id != null && message.hasOwnProperty("day_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.day_id);
                if (message.stats != null && message.stats.length)
                    for (var i = 0; i < message.stats.length; ++i)
                        $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.encode(message.stats[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Day message, length delimited. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.Day.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {CMsgClientUGSGetGlobalStatsResponse.IDay} message Day message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Day.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Day message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUGSGetGlobalStatsResponse.Day} Day
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Day.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUGSGetGlobalStatsResponse.Day();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.day_id = reader.uint32();
                        break;
                    case 2:
                        if (!(message.stats && message.stats.length))
                            message.stats = [];
                        message.stats.push($root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Day message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUGSGetGlobalStatsResponse.Day} Day
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Day.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Day message.
             * @function verify
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Day.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.day_id != null && message.hasOwnProperty("day_id"))
                    if (!$util.isInteger(message.day_id))
                        return "day_id: integer expected";
                if (message.stats != null && message.hasOwnProperty("stats")) {
                    if (!Array.isArray(message.stats))
                        return "stats: array expected";
                    for (var i = 0; i < message.stats.length; ++i) {
                        var error = $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.verify(message.stats[i]);
                        if (error)
                            return "stats." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a Day message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUGSGetGlobalStatsResponse.Day} Day
             */
            Day.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUGSGetGlobalStatsResponse.Day)
                    return object;
                var message = new $root.CMsgClientUGSGetGlobalStatsResponse.Day();
                if (object.day_id != null)
                    message.day_id = object.day_id >>> 0;
                if (object.stats) {
                    if (!Array.isArray(object.stats))
                        throw TypeError(".CMsgClientUGSGetGlobalStatsResponse.Day.stats: array expected");
                    message.stats = [];
                    for (var i = 0; i < object.stats.length; ++i) {
                        if (typeof object.stats[i] !== "object")
                            throw TypeError(".CMsgClientUGSGetGlobalStatsResponse.Day.stats: object expected");
                        message.stats[i] = $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.fromObject(object.stats[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Day message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @static
             * @param {CMsgClientUGSGetGlobalStatsResponse.Day} message Day
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Day.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.stats = [];
                if (options.defaults)
                    object.day_id = 0;
                if (message.day_id != null && message.hasOwnProperty("day_id"))
                    object.day_id = message.day_id;
                if (message.stats && message.stats.length) {
                    object.stats = [];
                    for (var j = 0; j < message.stats.length; ++j)
                        object.stats[j] = $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.toObject(message.stats[j], options);
                }
                return object;
            };
    
            /**
             * Converts this Day to JSON.
             * @function toJSON
             * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Day.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            Day.Stat = (function() {
    
                /**
                 * Properties of a Stat.
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
                 * @interface IStat
                 * @property {number|null} [stat_id] Stat stat_id
                 * @property {number|Long|null} [data] Stat data
                 */
    
                /**
                 * Constructs a new Stat.
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day
                 * @classdesc Represents a Stat.
                 * @implements IStat
                 * @constructor
                 * @param {CMsgClientUGSGetGlobalStatsResponse.Day.IStat=} [properties] Properties to set
                 */
                function Stat(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Stat stat_id.
                 * @member {number} stat_id
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @instance
                 */
                Stat.prototype.stat_id = 0;
    
                /**
                 * Stat data.
                 * @member {number|Long} data
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @instance
                 */
                Stat.prototype.data = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Stat instance using the specified properties.
                 * @function create
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {CMsgClientUGSGetGlobalStatsResponse.Day.IStat=} [properties] Properties to set
                 * @returns {CMsgClientUGSGetGlobalStatsResponse.Day.Stat} Stat instance
                 */
                Stat.create = function create(properties) {
                    return new Stat(properties);
                };
    
                /**
                 * Encodes the specified Stat message. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.Day.Stat.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {CMsgClientUGSGetGlobalStatsResponse.Day.IStat} message Stat message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Stat.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.stat_id);
                    if (message.data != null && message.hasOwnProperty("data"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.data);
                    return writer;
                };
    
                /**
                 * Encodes the specified Stat message, length delimited. Does not implicitly {@link CMsgClientUGSGetGlobalStatsResponse.Day.Stat.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {CMsgClientUGSGetGlobalStatsResponse.Day.IStat} message Stat message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Stat.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Stat message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgClientUGSGetGlobalStatsResponse.Day.Stat} Stat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Stat.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.stat_id = reader.int32();
                            break;
                        case 2:
                            message.data = reader.int64();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Stat message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgClientUGSGetGlobalStatsResponse.Day.Stat} Stat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Stat.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Stat message.
                 * @function verify
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Stat.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                        if (!$util.isInteger(message.stat_id))
                            return "stat_id: integer expected";
                    if (message.data != null && message.hasOwnProperty("data"))
                        if (!$util.isInteger(message.data) && !(message.data && $util.isInteger(message.data.low) && $util.isInteger(message.data.high)))
                            return "data: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a Stat message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgClientUGSGetGlobalStatsResponse.Day.Stat} Stat
                 */
                Stat.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
                        return object;
                    var message = new $root.CMsgClientUGSGetGlobalStatsResponse.Day.Stat();
                    if (object.stat_id != null)
                        message.stat_id = object.stat_id | 0;
                    if (object.data != null)
                        if ($util.Long)
                            (message.data = $util.Long.fromValue(object.data)).unsigned = false;
                        else if (typeof object.data === "string")
                            message.data = parseInt(object.data, 10);
                        else if (typeof object.data === "number")
                            message.data = object.data;
                        else if (typeof object.data === "object")
                            message.data = new $util.LongBits(object.data.low >>> 0, object.data.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from a Stat message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @static
                 * @param {CMsgClientUGSGetGlobalStatsResponse.Day.Stat} message Stat
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Stat.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.stat_id = 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.data = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.data = options.longs === String ? "0" : 0;
                    }
                    if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                        object.stat_id = message.stat_id;
                    if (message.data != null && message.hasOwnProperty("data"))
                        if (typeof message.data === "number")
                            object.data = options.longs === String ? String(message.data) : message.data;
                        else
                            object.data = options.longs === String ? $util.Long.prototype.toString.call(message.data) : options.longs === Number ? new $util.LongBits(message.data.low >>> 0, message.data.high >>> 0).toNumber() : message.data;
                    return object;
                };
    
                /**
                 * Converts this Stat to JSON.
                 * @function toJSON
                 * @memberof CMsgClientUGSGetGlobalStatsResponse.Day.Stat
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Stat.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Stat;
            })();
    
            return Day;
        })();
    
        return CMsgClientUGSGetGlobalStatsResponse;
    })();
    
    $root.CMsgClientRedeemGuestPass = (function() {
    
        /**
         * Properties of a CMsgClientRedeemGuestPass.
         * @exports ICMsgClientRedeemGuestPass
         * @interface ICMsgClientRedeemGuestPass
         * @property {number|Long|null} [guest_pass_id] CMsgClientRedeemGuestPass guest_pass_id
         */
    
        /**
         * Constructs a new CMsgClientRedeemGuestPass.
         * @exports CMsgClientRedeemGuestPass
         * @classdesc Represents a CMsgClientRedeemGuestPass.
         * @implements ICMsgClientRedeemGuestPass
         * @constructor
         * @param {ICMsgClientRedeemGuestPass=} [properties] Properties to set
         */
        function CMsgClientRedeemGuestPass(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRedeemGuestPass guest_pass_id.
         * @member {number|Long} guest_pass_id
         * @memberof CMsgClientRedeemGuestPass
         * @instance
         */
        CMsgClientRedeemGuestPass.prototype.guest_pass_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientRedeemGuestPass instance using the specified properties.
         * @function create
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {ICMsgClientRedeemGuestPass=} [properties] Properties to set
         * @returns {CMsgClientRedeemGuestPass} CMsgClientRedeemGuestPass instance
         */
        CMsgClientRedeemGuestPass.create = function create(properties) {
            return new CMsgClientRedeemGuestPass(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRedeemGuestPass message. Does not implicitly {@link CMsgClientRedeemGuestPass.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {ICMsgClientRedeemGuestPass} message CMsgClientRedeemGuestPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRedeemGuestPass.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.guest_pass_id != null && message.hasOwnProperty("guest_pass_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.guest_pass_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRedeemGuestPass message, length delimited. Does not implicitly {@link CMsgClientRedeemGuestPass.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {ICMsgClientRedeemGuestPass} message CMsgClientRedeemGuestPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRedeemGuestPass.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRedeemGuestPass message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRedeemGuestPass} CMsgClientRedeemGuestPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRedeemGuestPass.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRedeemGuestPass();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.guest_pass_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRedeemGuestPass message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRedeemGuestPass} CMsgClientRedeemGuestPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRedeemGuestPass.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRedeemGuestPass message.
         * @function verify
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRedeemGuestPass.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.guest_pass_id != null && message.hasOwnProperty("guest_pass_id"))
                if (!$util.isInteger(message.guest_pass_id) && !(message.guest_pass_id && $util.isInteger(message.guest_pass_id.low) && $util.isInteger(message.guest_pass_id.high)))
                    return "guest_pass_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRedeemGuestPass message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRedeemGuestPass} CMsgClientRedeemGuestPass
         */
        CMsgClientRedeemGuestPass.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRedeemGuestPass)
                return object;
            var message = new $root.CMsgClientRedeemGuestPass();
            if (object.guest_pass_id != null)
                if ($util.Long)
                    (message.guest_pass_id = $util.Long.fromValue(object.guest_pass_id)).unsigned = false;
                else if (typeof object.guest_pass_id === "string")
                    message.guest_pass_id = parseInt(object.guest_pass_id, 10);
                else if (typeof object.guest_pass_id === "number")
                    message.guest_pass_id = object.guest_pass_id;
                else if (typeof object.guest_pass_id === "object")
                    message.guest_pass_id = new $util.LongBits(object.guest_pass_id.low >>> 0, object.guest_pass_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRedeemGuestPass message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRedeemGuestPass
         * @static
         * @param {CMsgClientRedeemGuestPass} message CMsgClientRedeemGuestPass
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRedeemGuestPass.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.guest_pass_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.guest_pass_id = options.longs === String ? "0" : 0;
            if (message.guest_pass_id != null && message.hasOwnProperty("guest_pass_id"))
                if (typeof message.guest_pass_id === "number")
                    object.guest_pass_id = options.longs === String ? String(message.guest_pass_id) : message.guest_pass_id;
                else
                    object.guest_pass_id = options.longs === String ? $util.Long.prototype.toString.call(message.guest_pass_id) : options.longs === Number ? new $util.LongBits(message.guest_pass_id.low >>> 0, message.guest_pass_id.high >>> 0).toNumber() : message.guest_pass_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientRedeemGuestPass to JSON.
         * @function toJSON
         * @memberof CMsgClientRedeemGuestPass
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRedeemGuestPass.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRedeemGuestPass;
    })();
    
    $root.CMsgClientRedeemGuestPassResponse = (function() {
    
        /**
         * Properties of a CMsgClientRedeemGuestPassResponse.
         * @exports ICMsgClientRedeemGuestPassResponse
         * @interface ICMsgClientRedeemGuestPassResponse
         * @property {number|null} [eresult] CMsgClientRedeemGuestPassResponse eresult
         * @property {number|null} [package_id] CMsgClientRedeemGuestPassResponse package_id
         * @property {number|null} [must_own_appid] CMsgClientRedeemGuestPassResponse must_own_appid
         */
    
        /**
         * Constructs a new CMsgClientRedeemGuestPassResponse.
         * @exports CMsgClientRedeemGuestPassResponse
         * @classdesc Represents a CMsgClientRedeemGuestPassResponse.
         * @implements ICMsgClientRedeemGuestPassResponse
         * @constructor
         * @param {ICMsgClientRedeemGuestPassResponse=} [properties] Properties to set
         */
        function CMsgClientRedeemGuestPassResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRedeemGuestPassResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRedeemGuestPassResponse
         * @instance
         */
        CMsgClientRedeemGuestPassResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientRedeemGuestPassResponse package_id.
         * @member {number} package_id
         * @memberof CMsgClientRedeemGuestPassResponse
         * @instance
         */
        CMsgClientRedeemGuestPassResponse.prototype.package_id = 0;
    
        /**
         * CMsgClientRedeemGuestPassResponse must_own_appid.
         * @member {number} must_own_appid
         * @memberof CMsgClientRedeemGuestPassResponse
         * @instance
         */
        CMsgClientRedeemGuestPassResponse.prototype.must_own_appid = 0;
    
        /**
         * Creates a new CMsgClientRedeemGuestPassResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {ICMsgClientRedeemGuestPassResponse=} [properties] Properties to set
         * @returns {CMsgClientRedeemGuestPassResponse} CMsgClientRedeemGuestPassResponse instance
         */
        CMsgClientRedeemGuestPassResponse.create = function create(properties) {
            return new CMsgClientRedeemGuestPassResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRedeemGuestPassResponse message. Does not implicitly {@link CMsgClientRedeemGuestPassResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {ICMsgClientRedeemGuestPassResponse} message CMsgClientRedeemGuestPassResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRedeemGuestPassResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.package_id);
            if (message.must_own_appid != null && message.hasOwnProperty("must_own_appid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.must_own_appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRedeemGuestPassResponse message, length delimited. Does not implicitly {@link CMsgClientRedeemGuestPassResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {ICMsgClientRedeemGuestPassResponse} message CMsgClientRedeemGuestPassResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRedeemGuestPassResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRedeemGuestPassResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRedeemGuestPassResponse} CMsgClientRedeemGuestPassResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRedeemGuestPassResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRedeemGuestPassResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    message.package_id = reader.uint32();
                    break;
                case 3:
                    message.must_own_appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRedeemGuestPassResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRedeemGuestPassResponse} CMsgClientRedeemGuestPassResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRedeemGuestPassResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRedeemGuestPassResponse message.
         * @function verify
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRedeemGuestPassResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                if (!$util.isInteger(message.package_id))
                    return "package_id: integer expected";
            if (message.must_own_appid != null && message.hasOwnProperty("must_own_appid"))
                if (!$util.isInteger(message.must_own_appid))
                    return "must_own_appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRedeemGuestPassResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRedeemGuestPassResponse} CMsgClientRedeemGuestPassResponse
         */
        CMsgClientRedeemGuestPassResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRedeemGuestPassResponse)
                return object;
            var message = new $root.CMsgClientRedeemGuestPassResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.package_id != null)
                message.package_id = object.package_id >>> 0;
            if (object.must_own_appid != null)
                message.must_own_appid = object.must_own_appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRedeemGuestPassResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRedeemGuestPassResponse
         * @static
         * @param {CMsgClientRedeemGuestPassResponse} message CMsgClientRedeemGuestPassResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRedeemGuestPassResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.package_id = 0;
                object.must_own_appid = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.package_id != null && message.hasOwnProperty("package_id"))
                object.package_id = message.package_id;
            if (message.must_own_appid != null && message.hasOwnProperty("must_own_appid"))
                object.must_own_appid = message.must_own_appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientRedeemGuestPassResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRedeemGuestPassResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRedeemGuestPassResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRedeemGuestPassResponse;
    })();
    
    $root.CMsgClientGetClanActivityCounts = (function() {
    
        /**
         * Properties of a CMsgClientGetClanActivityCounts.
         * @exports ICMsgClientGetClanActivityCounts
         * @interface ICMsgClientGetClanActivityCounts
         * @property {Array.<number|Long>|null} [steamid_clans] CMsgClientGetClanActivityCounts steamid_clans
         */
    
        /**
         * Constructs a new CMsgClientGetClanActivityCounts.
         * @exports CMsgClientGetClanActivityCounts
         * @classdesc Represents a CMsgClientGetClanActivityCounts.
         * @implements ICMsgClientGetClanActivityCounts
         * @constructor
         * @param {ICMsgClientGetClanActivityCounts=} [properties] Properties to set
         */
        function CMsgClientGetClanActivityCounts(properties) {
            this.steamid_clans = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClanActivityCounts steamid_clans.
         * @member {Array.<number|Long>} steamid_clans
         * @memberof CMsgClientGetClanActivityCounts
         * @instance
         */
        CMsgClientGetClanActivityCounts.prototype.steamid_clans = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGetClanActivityCounts instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts=} [properties] Properties to set
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts instance
         */
        CMsgClientGetClanActivityCounts.create = function create(properties) {
            return new CMsgClientGetClanActivityCounts(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCounts message. Does not implicitly {@link CMsgClientGetClanActivityCounts.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCounts.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_clans != null && message.steamid_clans.length)
                for (var i = 0; i < message.steamid_clans.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.steamid_clans[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCounts message, length delimited. Does not implicitly {@link CMsgClientGetClanActivityCounts.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {ICMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCounts.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCounts message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCounts.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClanActivityCounts();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.steamid_clans && message.steamid_clans.length))
                        message.steamid_clans = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamid_clans.push(reader.uint64());
                    } else
                        message.steamid_clans.push(reader.uint64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCounts message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCounts.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClanActivityCounts message.
         * @function verify
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClanActivityCounts.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_clans != null && message.hasOwnProperty("steamid_clans")) {
                if (!Array.isArray(message.steamid_clans))
                    return "steamid_clans: array expected";
                for (var i = 0; i < message.steamid_clans.length; ++i)
                    if (!$util.isInteger(message.steamid_clans[i]) && !(message.steamid_clans[i] && $util.isInteger(message.steamid_clans[i].low) && $util.isInteger(message.steamid_clans[i].high)))
                        return "steamid_clans: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClanActivityCounts message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClanActivityCounts} CMsgClientGetClanActivityCounts
         */
        CMsgClientGetClanActivityCounts.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClanActivityCounts)
                return object;
            var message = new $root.CMsgClientGetClanActivityCounts();
            if (object.steamid_clans) {
                if (!Array.isArray(object.steamid_clans))
                    throw TypeError(".CMsgClientGetClanActivityCounts.steamid_clans: array expected");
                message.steamid_clans = [];
                for (var i = 0; i < object.steamid_clans.length; ++i)
                    if ($util.Long)
                        (message.steamid_clans[i] = $util.Long.fromValue(object.steamid_clans[i])).unsigned = true;
                    else if (typeof object.steamid_clans[i] === "string")
                        message.steamid_clans[i] = parseInt(object.steamid_clans[i], 10);
                    else if (typeof object.steamid_clans[i] === "number")
                        message.steamid_clans[i] = object.steamid_clans[i];
                    else if (typeof object.steamid_clans[i] === "object")
                        message.steamid_clans[i] = new $util.LongBits(object.steamid_clans[i].low >>> 0, object.steamid_clans[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClanActivityCounts message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClanActivityCounts
         * @static
         * @param {CMsgClientGetClanActivityCounts} message CMsgClientGetClanActivityCounts
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClanActivityCounts.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamid_clans = [];
            if (message.steamid_clans && message.steamid_clans.length) {
                object.steamid_clans = [];
                for (var j = 0; j < message.steamid_clans.length; ++j)
                    if (typeof message.steamid_clans[j] === "number")
                        object.steamid_clans[j] = options.longs === String ? String(message.steamid_clans[j]) : message.steamid_clans[j];
                    else
                        object.steamid_clans[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clans[j]) : options.longs === Number ? new $util.LongBits(message.steamid_clans[j].low >>> 0, message.steamid_clans[j].high >>> 0).toNumber(true) : message.steamid_clans[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClanActivityCounts to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClanActivityCounts
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClanActivityCounts.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetClanActivityCounts;
    })();
    
    $root.CMsgClientGetClanActivityCountsResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetClanActivityCountsResponse.
         * @exports ICMsgClientGetClanActivityCountsResponse
         * @interface ICMsgClientGetClanActivityCountsResponse
         * @property {number|null} [eresult] CMsgClientGetClanActivityCountsResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientGetClanActivityCountsResponse.
         * @exports CMsgClientGetClanActivityCountsResponse
         * @classdesc Represents a CMsgClientGetClanActivityCountsResponse.
         * @implements ICMsgClientGetClanActivityCountsResponse
         * @constructor
         * @param {ICMsgClientGetClanActivityCountsResponse=} [properties] Properties to set
         */
        function CMsgClientGetClanActivityCountsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClanActivityCountsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @instance
         */
        CMsgClientGetClanActivityCountsResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientGetClanActivityCountsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {ICMsgClientGetClanActivityCountsResponse=} [properties] Properties to set
         * @returns {CMsgClientGetClanActivityCountsResponse} CMsgClientGetClanActivityCountsResponse instance
         */
        CMsgClientGetClanActivityCountsResponse.create = function create(properties) {
            return new CMsgClientGetClanActivityCountsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCountsResponse message. Does not implicitly {@link CMsgClientGetClanActivityCountsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {ICMsgClientGetClanActivityCountsResponse} message CMsgClientGetClanActivityCountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCountsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClanActivityCountsResponse message, length delimited. Does not implicitly {@link CMsgClientGetClanActivityCountsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {ICMsgClientGetClanActivityCountsResponse} message CMsgClientGetClanActivityCountsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClanActivityCountsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCountsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClanActivityCountsResponse} CMsgClientGetClanActivityCountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCountsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClanActivityCountsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClanActivityCountsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClanActivityCountsResponse} CMsgClientGetClanActivityCountsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClanActivityCountsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClanActivityCountsResponse message.
         * @function verify
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClanActivityCountsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClanActivityCountsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClanActivityCountsResponse} CMsgClientGetClanActivityCountsResponse
         */
        CMsgClientGetClanActivityCountsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClanActivityCountsResponse)
                return object;
            var message = new $root.CMsgClientGetClanActivityCountsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClanActivityCountsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @static
         * @param {CMsgClientGetClanActivityCountsResponse} message CMsgClientGetClanActivityCountsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClanActivityCountsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClanActivityCountsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClanActivityCountsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClanActivityCountsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetClanActivityCountsResponse;
    })();
    
    $root.CMsgClientOGSReportString = (function() {
    
        /**
         * Properties of a CMsgClientOGSReportString.
         * @exports ICMsgClientOGSReportString
         * @interface ICMsgClientOGSReportString
         * @property {boolean|null} [accumulated] CMsgClientOGSReportString accumulated
         * @property {number|Long|null} [sessionid] CMsgClientOGSReportString sessionid
         * @property {number|null} [severity] CMsgClientOGSReportString severity
         * @property {string|null} [formatter] CMsgClientOGSReportString formatter
         * @property {Uint8Array|null} [varargs] CMsgClientOGSReportString varargs
         */
    
        /**
         * Constructs a new CMsgClientOGSReportString.
         * @exports CMsgClientOGSReportString
         * @classdesc Represents a CMsgClientOGSReportString.
         * @implements ICMsgClientOGSReportString
         * @constructor
         * @param {ICMsgClientOGSReportString=} [properties] Properties to set
         */
        function CMsgClientOGSReportString(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientOGSReportString accumulated.
         * @member {boolean} accumulated
         * @memberof CMsgClientOGSReportString
         * @instance
         */
        CMsgClientOGSReportString.prototype.accumulated = false;
    
        /**
         * CMsgClientOGSReportString sessionid.
         * @member {number|Long} sessionid
         * @memberof CMsgClientOGSReportString
         * @instance
         */
        CMsgClientOGSReportString.prototype.sessionid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientOGSReportString severity.
         * @member {number} severity
         * @memberof CMsgClientOGSReportString
         * @instance
         */
        CMsgClientOGSReportString.prototype.severity = 0;
    
        /**
         * CMsgClientOGSReportString formatter.
         * @member {string} formatter
         * @memberof CMsgClientOGSReportString
         * @instance
         */
        CMsgClientOGSReportString.prototype.formatter = "";
    
        /**
         * CMsgClientOGSReportString varargs.
         * @member {Uint8Array} varargs
         * @memberof CMsgClientOGSReportString
         * @instance
         */
        CMsgClientOGSReportString.prototype.varargs = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientOGSReportString instance using the specified properties.
         * @function create
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {ICMsgClientOGSReportString=} [properties] Properties to set
         * @returns {CMsgClientOGSReportString} CMsgClientOGSReportString instance
         */
        CMsgClientOGSReportString.create = function create(properties) {
            return new CMsgClientOGSReportString(properties);
        };
    
        /**
         * Encodes the specified CMsgClientOGSReportString message. Does not implicitly {@link CMsgClientOGSReportString.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {ICMsgClientOGSReportString} message CMsgClientOGSReportString message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOGSReportString.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accumulated != null && message.hasOwnProperty("accumulated"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.accumulated);
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.sessionid);
            if (message.severity != null && message.hasOwnProperty("severity"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.severity);
            if (message.formatter != null && message.hasOwnProperty("formatter"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.formatter);
            if (message.varargs != null && message.hasOwnProperty("varargs"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.varargs);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientOGSReportString message, length delimited. Does not implicitly {@link CMsgClientOGSReportString.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {ICMsgClientOGSReportString} message CMsgClientOGSReportString message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOGSReportString.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientOGSReportString message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientOGSReportString} CMsgClientOGSReportString
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOGSReportString.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientOGSReportString();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.accumulated = reader.bool();
                    break;
                case 2:
                    message.sessionid = reader.uint64();
                    break;
                case 3:
                    message.severity = reader.int32();
                    break;
                case 4:
                    message.formatter = reader.string();
                    break;
                case 5:
                    message.varargs = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientOGSReportString message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientOGSReportString} CMsgClientOGSReportString
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOGSReportString.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientOGSReportString message.
         * @function verify
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientOGSReportString.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accumulated != null && message.hasOwnProperty("accumulated"))
                if (typeof message.accumulated !== "boolean")
                    return "accumulated: boolean expected";
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                if (!$util.isInteger(message.sessionid) && !(message.sessionid && $util.isInteger(message.sessionid.low) && $util.isInteger(message.sessionid.high)))
                    return "sessionid: integer|Long expected";
            if (message.severity != null && message.hasOwnProperty("severity"))
                if (!$util.isInteger(message.severity))
                    return "severity: integer expected";
            if (message.formatter != null && message.hasOwnProperty("formatter"))
                if (!$util.isString(message.formatter))
                    return "formatter: string expected";
            if (message.varargs != null && message.hasOwnProperty("varargs"))
                if (!(message.varargs && typeof message.varargs.length === "number" || $util.isString(message.varargs)))
                    return "varargs: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientOGSReportString message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientOGSReportString} CMsgClientOGSReportString
         */
        CMsgClientOGSReportString.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientOGSReportString)
                return object;
            var message = new $root.CMsgClientOGSReportString();
            if (object.accumulated != null)
                message.accumulated = Boolean(object.accumulated);
            if (object.sessionid != null)
                if ($util.Long)
                    (message.sessionid = $util.Long.fromValue(object.sessionid)).unsigned = true;
                else if (typeof object.sessionid === "string")
                    message.sessionid = parseInt(object.sessionid, 10);
                else if (typeof object.sessionid === "number")
                    message.sessionid = object.sessionid;
                else if (typeof object.sessionid === "object")
                    message.sessionid = new $util.LongBits(object.sessionid.low >>> 0, object.sessionid.high >>> 0).toNumber(true);
            if (object.severity != null)
                message.severity = object.severity | 0;
            if (object.formatter != null)
                message.formatter = String(object.formatter);
            if (object.varargs != null)
                if (typeof object.varargs === "string")
                    $util.base64.decode(object.varargs, message.varargs = $util.newBuffer($util.base64.length(object.varargs)), 0);
                else if (object.varargs.length)
                    message.varargs = object.varargs;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientOGSReportString message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientOGSReportString
         * @static
         * @param {CMsgClientOGSReportString} message CMsgClientOGSReportString
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientOGSReportString.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.accumulated = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.sessionid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sessionid = options.longs === String ? "0" : 0;
                object.severity = 0;
                object.formatter = "";
                if (options.bytes === String)
                    object.varargs = "";
                else {
                    object.varargs = [];
                    if (options.bytes !== Array)
                        object.varargs = $util.newBuffer(object.varargs);
                }
            }
            if (message.accumulated != null && message.hasOwnProperty("accumulated"))
                object.accumulated = message.accumulated;
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                if (typeof message.sessionid === "number")
                    object.sessionid = options.longs === String ? String(message.sessionid) : message.sessionid;
                else
                    object.sessionid = options.longs === String ? $util.Long.prototype.toString.call(message.sessionid) : options.longs === Number ? new $util.LongBits(message.sessionid.low >>> 0, message.sessionid.high >>> 0).toNumber(true) : message.sessionid;
            if (message.severity != null && message.hasOwnProperty("severity"))
                object.severity = message.severity;
            if (message.formatter != null && message.hasOwnProperty("formatter"))
                object.formatter = message.formatter;
            if (message.varargs != null && message.hasOwnProperty("varargs"))
                object.varargs = options.bytes === String ? $util.base64.encode(message.varargs, 0, message.varargs.length) : options.bytes === Array ? Array.prototype.slice.call(message.varargs) : message.varargs;
            return object;
        };
    
        /**
         * Converts this CMsgClientOGSReportString to JSON.
         * @function toJSON
         * @memberof CMsgClientOGSReportString
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientOGSReportString.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientOGSReportString;
    })();
    
    $root.CMsgClientOGSReportBug = (function() {
    
        /**
         * Properties of a CMsgClientOGSReportBug.
         * @exports ICMsgClientOGSReportBug
         * @interface ICMsgClientOGSReportBug
         * @property {number|Long|null} [sessionid] CMsgClientOGSReportBug sessionid
         * @property {string|null} [bugtext] CMsgClientOGSReportBug bugtext
         * @property {Uint8Array|null} [screenshot] CMsgClientOGSReportBug screenshot
         */
    
        /**
         * Constructs a new CMsgClientOGSReportBug.
         * @exports CMsgClientOGSReportBug
         * @classdesc Represents a CMsgClientOGSReportBug.
         * @implements ICMsgClientOGSReportBug
         * @constructor
         * @param {ICMsgClientOGSReportBug=} [properties] Properties to set
         */
        function CMsgClientOGSReportBug(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientOGSReportBug sessionid.
         * @member {number|Long} sessionid
         * @memberof CMsgClientOGSReportBug
         * @instance
         */
        CMsgClientOGSReportBug.prototype.sessionid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientOGSReportBug bugtext.
         * @member {string} bugtext
         * @memberof CMsgClientOGSReportBug
         * @instance
         */
        CMsgClientOGSReportBug.prototype.bugtext = "";
    
        /**
         * CMsgClientOGSReportBug screenshot.
         * @member {Uint8Array} screenshot
         * @memberof CMsgClientOGSReportBug
         * @instance
         */
        CMsgClientOGSReportBug.prototype.screenshot = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientOGSReportBug instance using the specified properties.
         * @function create
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {ICMsgClientOGSReportBug=} [properties] Properties to set
         * @returns {CMsgClientOGSReportBug} CMsgClientOGSReportBug instance
         */
        CMsgClientOGSReportBug.create = function create(properties) {
            return new CMsgClientOGSReportBug(properties);
        };
    
        /**
         * Encodes the specified CMsgClientOGSReportBug message. Does not implicitly {@link CMsgClientOGSReportBug.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {ICMsgClientOGSReportBug} message CMsgClientOGSReportBug message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOGSReportBug.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.sessionid);
            if (message.bugtext != null && message.hasOwnProperty("bugtext"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.bugtext);
            if (message.screenshot != null && message.hasOwnProperty("screenshot"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.screenshot);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientOGSReportBug message, length delimited. Does not implicitly {@link CMsgClientOGSReportBug.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {ICMsgClientOGSReportBug} message CMsgClientOGSReportBug message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOGSReportBug.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientOGSReportBug message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientOGSReportBug} CMsgClientOGSReportBug
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOGSReportBug.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientOGSReportBug();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.sessionid = reader.uint64();
                    break;
                case 2:
                    message.bugtext = reader.string();
                    break;
                case 3:
                    message.screenshot = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientOGSReportBug message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientOGSReportBug} CMsgClientOGSReportBug
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOGSReportBug.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientOGSReportBug message.
         * @function verify
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientOGSReportBug.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                if (!$util.isInteger(message.sessionid) && !(message.sessionid && $util.isInteger(message.sessionid.low) && $util.isInteger(message.sessionid.high)))
                    return "sessionid: integer|Long expected";
            if (message.bugtext != null && message.hasOwnProperty("bugtext"))
                if (!$util.isString(message.bugtext))
                    return "bugtext: string expected";
            if (message.screenshot != null && message.hasOwnProperty("screenshot"))
                if (!(message.screenshot && typeof message.screenshot.length === "number" || $util.isString(message.screenshot)))
                    return "screenshot: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientOGSReportBug message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientOGSReportBug} CMsgClientOGSReportBug
         */
        CMsgClientOGSReportBug.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientOGSReportBug)
                return object;
            var message = new $root.CMsgClientOGSReportBug();
            if (object.sessionid != null)
                if ($util.Long)
                    (message.sessionid = $util.Long.fromValue(object.sessionid)).unsigned = true;
                else if (typeof object.sessionid === "string")
                    message.sessionid = parseInt(object.sessionid, 10);
                else if (typeof object.sessionid === "number")
                    message.sessionid = object.sessionid;
                else if (typeof object.sessionid === "object")
                    message.sessionid = new $util.LongBits(object.sessionid.low >>> 0, object.sessionid.high >>> 0).toNumber(true);
            if (object.bugtext != null)
                message.bugtext = String(object.bugtext);
            if (object.screenshot != null)
                if (typeof object.screenshot === "string")
                    $util.base64.decode(object.screenshot, message.screenshot = $util.newBuffer($util.base64.length(object.screenshot)), 0);
                else if (object.screenshot.length)
                    message.screenshot = object.screenshot;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientOGSReportBug message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientOGSReportBug
         * @static
         * @param {CMsgClientOGSReportBug} message CMsgClientOGSReportBug
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientOGSReportBug.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.sessionid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sessionid = options.longs === String ? "0" : 0;
                object.bugtext = "";
                if (options.bytes === String)
                    object.screenshot = "";
                else {
                    object.screenshot = [];
                    if (options.bytes !== Array)
                        object.screenshot = $util.newBuffer(object.screenshot);
                }
            }
            if (message.sessionid != null && message.hasOwnProperty("sessionid"))
                if (typeof message.sessionid === "number")
                    object.sessionid = options.longs === String ? String(message.sessionid) : message.sessionid;
                else
                    object.sessionid = options.longs === String ? $util.Long.prototype.toString.call(message.sessionid) : options.longs === Number ? new $util.LongBits(message.sessionid.low >>> 0, message.sessionid.high >>> 0).toNumber(true) : message.sessionid;
            if (message.bugtext != null && message.hasOwnProperty("bugtext"))
                object.bugtext = message.bugtext;
            if (message.screenshot != null && message.hasOwnProperty("screenshot"))
                object.screenshot = options.bytes === String ? $util.base64.encode(message.screenshot, 0, message.screenshot.length) : options.bytes === Array ? Array.prototype.slice.call(message.screenshot) : message.screenshot;
            return object;
        };
    
        /**
         * Converts this CMsgClientOGSReportBug to JSON.
         * @function toJSON
         * @memberof CMsgClientOGSReportBug
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientOGSReportBug.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientOGSReportBug;
    })();
    
    $root.CMsgClientSentLogs = (function() {
    
        /**
         * Properties of a CMsgClientSentLogs.
         * @exports ICMsgClientSentLogs
         * @interface ICMsgClientSentLogs
         */
    
        /**
         * Constructs a new CMsgClientSentLogs.
         * @exports CMsgClientSentLogs
         * @classdesc Represents a CMsgClientSentLogs.
         * @implements ICMsgClientSentLogs
         * @constructor
         * @param {ICMsgClientSentLogs=} [properties] Properties to set
         */
        function CMsgClientSentLogs(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientSentLogs instance using the specified properties.
         * @function create
         * @memberof CMsgClientSentLogs
         * @static
         * @param {ICMsgClientSentLogs=} [properties] Properties to set
         * @returns {CMsgClientSentLogs} CMsgClientSentLogs instance
         */
        CMsgClientSentLogs.create = function create(properties) {
            return new CMsgClientSentLogs(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSentLogs message. Does not implicitly {@link CMsgClientSentLogs.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSentLogs
         * @static
         * @param {ICMsgClientSentLogs} message CMsgClientSentLogs message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSentLogs.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSentLogs message, length delimited. Does not implicitly {@link CMsgClientSentLogs.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSentLogs
         * @static
         * @param {ICMsgClientSentLogs} message CMsgClientSentLogs message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSentLogs.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSentLogs message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSentLogs
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSentLogs} CMsgClientSentLogs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSentLogs.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSentLogs();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSentLogs message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSentLogs
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSentLogs} CMsgClientSentLogs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSentLogs.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSentLogs message.
         * @function verify
         * @memberof CMsgClientSentLogs
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSentLogs.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSentLogs message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSentLogs
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSentLogs} CMsgClientSentLogs
         */
        CMsgClientSentLogs.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSentLogs)
                return object;
            return new $root.CMsgClientSentLogs();
        };
    
        /**
         * Creates a plain object from a CMsgClientSentLogs message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSentLogs
         * @static
         * @param {CMsgClientSentLogs} message CMsgClientSentLogs
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSentLogs.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientSentLogs to JSON.
         * @function toJSON
         * @memberof CMsgClientSentLogs
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSentLogs.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientSentLogs;
    })();
    
    $root.CMsgGCClient = (function() {
    
        /**
         * Properties of a CMsgGCClient.
         * @exports ICMsgGCClient
         * @interface ICMsgGCClient
         * @property {number|null} [appid] CMsgGCClient appid
         * @property {number|null} [msgtype] CMsgGCClient msgtype
         * @property {Uint8Array|null} [payload] CMsgGCClient payload
         * @property {number|Long|null} [steamid] CMsgGCClient steamid
         * @property {string|null} [gcname] CMsgGCClient gcname
         * @property {number|null} [ip] CMsgGCClient ip
         */
    
        /**
         * Constructs a new CMsgGCClient.
         * @exports CMsgGCClient
         * @classdesc Represents a CMsgGCClient.
         * @implements ICMsgGCClient
         * @constructor
         * @param {ICMsgGCClient=} [properties] Properties to set
         */
        function CMsgGCClient(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCClient appid.
         * @member {number} appid
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.appid = 0;
    
        /**
         * CMsgGCClient msgtype.
         * @member {number} msgtype
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.msgtype = 0;
    
        /**
         * CMsgGCClient payload.
         * @member {Uint8Array} payload
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.payload = $util.newBuffer([]);
    
        /**
         * CMsgGCClient steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCClient gcname.
         * @member {string} gcname
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.gcname = "";
    
        /**
         * CMsgGCClient ip.
         * @member {number} ip
         * @memberof CMsgGCClient
         * @instance
         */
        CMsgGCClient.prototype.ip = 0;
    
        /**
         * Creates a new CMsgGCClient instance using the specified properties.
         * @function create
         * @memberof CMsgGCClient
         * @static
         * @param {ICMsgGCClient=} [properties] Properties to set
         * @returns {CMsgGCClient} CMsgGCClient instance
         */
        CMsgGCClient.create = function create(properties) {
            return new CMsgGCClient(properties);
        };
    
        /**
         * Encodes the specified CMsgGCClient message. Does not implicitly {@link CMsgGCClient.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCClient
         * @static
         * @param {ICMsgGCClient} message CMsgGCClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClient.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.msgtype);
            if (message.payload != null && message.hasOwnProperty("payload"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.payload);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steamid);
            if (message.gcname != null && message.hasOwnProperty("gcname"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.gcname);
            if (message.ip != null && message.hasOwnProperty("ip"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCClient message, length delimited. Does not implicitly {@link CMsgGCClient.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCClient
         * @static
         * @param {ICMsgGCClient} message CMsgGCClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClient.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCClient message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCClient} CMsgGCClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClient.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCClient();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.msgtype = reader.uint32();
                    break;
                case 3:
                    message.payload = reader.bytes();
                    break;
                case 4:
                    message.steamid = reader.fixed64();
                    break;
                case 5:
                    message.gcname = reader.string();
                    break;
                case 6:
                    message.ip = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCClient message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCClient} CMsgGCClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClient.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCClient message.
         * @function verify
         * @memberof CMsgGCClient
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCClient.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                if (!$util.isInteger(message.msgtype))
                    return "msgtype: integer expected";
            if (message.payload != null && message.hasOwnProperty("payload"))
                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                    return "payload: buffer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.gcname != null && message.hasOwnProperty("gcname"))
                if (!$util.isString(message.gcname))
                    return "gcname: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCClient message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCClient
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCClient} CMsgGCClient
         */
        CMsgGCClient.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCClient)
                return object;
            var message = new $root.CMsgGCClient();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.msgtype != null)
                message.msgtype = object.msgtype >>> 0;
            if (object.payload != null)
                if (typeof object.payload === "string")
                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                else if (object.payload.length)
                    message.payload = object.payload;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.gcname != null)
                message.gcname = String(object.gcname);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCClient message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCClient
         * @static
         * @param {CMsgGCClient} message CMsgGCClient
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCClient.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.msgtype = 0;
                if (options.bytes === String)
                    object.payload = "";
                else {
                    object.payload = [];
                    if (options.bytes !== Array)
                        object.payload = $util.newBuffer(object.payload);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.gcname = "";
                object.ip = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                object.msgtype = message.msgtype;
            if (message.payload != null && message.hasOwnProperty("payload"))
                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.gcname != null && message.hasOwnProperty("gcname"))
                object.gcname = message.gcname;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CMsgGCClient to JSON.
         * @function toJSON
         * @memberof CMsgGCClient
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCClient.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGCClient;
    })();
    
    $root.CMsgClientRequestFreeLicense = (function() {
    
        /**
         * Properties of a CMsgClientRequestFreeLicense.
         * @exports ICMsgClientRequestFreeLicense
         * @interface ICMsgClientRequestFreeLicense
         * @property {Array.<number>|null} [appids] CMsgClientRequestFreeLicense appids
         */
    
        /**
         * Constructs a new CMsgClientRequestFreeLicense.
         * @exports CMsgClientRequestFreeLicense
         * @classdesc Represents a CMsgClientRequestFreeLicense.
         * @implements ICMsgClientRequestFreeLicense
         * @constructor
         * @param {ICMsgClientRequestFreeLicense=} [properties] Properties to set
         */
        function CMsgClientRequestFreeLicense(properties) {
            this.appids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestFreeLicense appids.
         * @member {Array.<number>} appids
         * @memberof CMsgClientRequestFreeLicense
         * @instance
         */
        CMsgClientRequestFreeLicense.prototype.appids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRequestFreeLicense instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {ICMsgClientRequestFreeLicense=} [properties] Properties to set
         * @returns {CMsgClientRequestFreeLicense} CMsgClientRequestFreeLicense instance
         */
        CMsgClientRequestFreeLicense.create = function create(properties) {
            return new CMsgClientRequestFreeLicense(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestFreeLicense message. Does not implicitly {@link CMsgClientRequestFreeLicense.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {ICMsgClientRequestFreeLicense} message CMsgClientRequestFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFreeLicense.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appids != null && message.appids.length)
                for (var i = 0; i < message.appids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestFreeLicense message, length delimited. Does not implicitly {@link CMsgClientRequestFreeLicense.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {ICMsgClientRequestFreeLicense} message CMsgClientRequestFreeLicense message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFreeLicense.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestFreeLicense message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestFreeLicense} CMsgClientRequestFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFreeLicense.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestFreeLicense();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    if (!(message.appids && message.appids.length))
                        message.appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.appids.push(reader.uint32());
                    } else
                        message.appids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestFreeLicense message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestFreeLicense} CMsgClientRequestFreeLicense
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFreeLicense.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestFreeLicense message.
         * @function verify
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestFreeLicense.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appids != null && message.hasOwnProperty("appids")) {
                if (!Array.isArray(message.appids))
                    return "appids: array expected";
                for (var i = 0; i < message.appids.length; ++i)
                    if (!$util.isInteger(message.appids[i]))
                        return "appids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestFreeLicense message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestFreeLicense} CMsgClientRequestFreeLicense
         */
        CMsgClientRequestFreeLicense.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestFreeLicense)
                return object;
            var message = new $root.CMsgClientRequestFreeLicense();
            if (object.appids) {
                if (!Array.isArray(object.appids))
                    throw TypeError(".CMsgClientRequestFreeLicense.appids: array expected");
                message.appids = [];
                for (var i = 0; i < object.appids.length; ++i)
                    message.appids[i] = object.appids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestFreeLicense message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestFreeLicense
         * @static
         * @param {CMsgClientRequestFreeLicense} message CMsgClientRequestFreeLicense
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestFreeLicense.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.appids = [];
            if (message.appids && message.appids.length) {
                object.appids = [];
                for (var j = 0; j < message.appids.length; ++j)
                    object.appids[j] = message.appids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestFreeLicense to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestFreeLicense
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestFreeLicense.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestFreeLicense;
    })();
    
    $root.CMsgClientRequestFreeLicenseResponse = (function() {
    
        /**
         * Properties of a CMsgClientRequestFreeLicenseResponse.
         * @exports ICMsgClientRequestFreeLicenseResponse
         * @interface ICMsgClientRequestFreeLicenseResponse
         * @property {number|null} [eresult] CMsgClientRequestFreeLicenseResponse eresult
         * @property {Array.<number>|null} [granted_packageids] CMsgClientRequestFreeLicenseResponse granted_packageids
         * @property {Array.<number>|null} [granted_appids] CMsgClientRequestFreeLicenseResponse granted_appids
         */
    
        /**
         * Constructs a new CMsgClientRequestFreeLicenseResponse.
         * @exports CMsgClientRequestFreeLicenseResponse
         * @classdesc Represents a CMsgClientRequestFreeLicenseResponse.
         * @implements ICMsgClientRequestFreeLicenseResponse
         * @constructor
         * @param {ICMsgClientRequestFreeLicenseResponse=} [properties] Properties to set
         */
        function CMsgClientRequestFreeLicenseResponse(properties) {
            this.granted_packageids = [];
            this.granted_appids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestFreeLicenseResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @instance
         */
        CMsgClientRequestFreeLicenseResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientRequestFreeLicenseResponse granted_packageids.
         * @member {Array.<number>} granted_packageids
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @instance
         */
        CMsgClientRequestFreeLicenseResponse.prototype.granted_packageids = $util.emptyArray;
    
        /**
         * CMsgClientRequestFreeLicenseResponse granted_appids.
         * @member {Array.<number>} granted_appids
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @instance
         */
        CMsgClientRequestFreeLicenseResponse.prototype.granted_appids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRequestFreeLicenseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {ICMsgClientRequestFreeLicenseResponse=} [properties] Properties to set
         * @returns {CMsgClientRequestFreeLicenseResponse} CMsgClientRequestFreeLicenseResponse instance
         */
        CMsgClientRequestFreeLicenseResponse.create = function create(properties) {
            return new CMsgClientRequestFreeLicenseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestFreeLicenseResponse message. Does not implicitly {@link CMsgClientRequestFreeLicenseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {ICMsgClientRequestFreeLicenseResponse} message CMsgClientRequestFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFreeLicenseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.granted_packageids != null && message.granted_packageids.length)
                for (var i = 0; i < message.granted_packageids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.granted_packageids[i]);
            if (message.granted_appids != null && message.granted_appids.length)
                for (var i = 0; i < message.granted_appids.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.granted_appids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestFreeLicenseResponse message, length delimited. Does not implicitly {@link CMsgClientRequestFreeLicenseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {ICMsgClientRequestFreeLicenseResponse} message CMsgClientRequestFreeLicenseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestFreeLicenseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestFreeLicenseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestFreeLicenseResponse} CMsgClientRequestFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFreeLicenseResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestFreeLicenseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    if (!(message.granted_packageids && message.granted_packageids.length))
                        message.granted_packageids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.granted_packageids.push(reader.uint32());
                    } else
                        message.granted_packageids.push(reader.uint32());
                    break;
                case 3:
                    if (!(message.granted_appids && message.granted_appids.length))
                        message.granted_appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.granted_appids.push(reader.uint32());
                    } else
                        message.granted_appids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestFreeLicenseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestFreeLicenseResponse} CMsgClientRequestFreeLicenseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestFreeLicenseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestFreeLicenseResponse message.
         * @function verify
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestFreeLicenseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.granted_packageids != null && message.hasOwnProperty("granted_packageids")) {
                if (!Array.isArray(message.granted_packageids))
                    return "granted_packageids: array expected";
                for (var i = 0; i < message.granted_packageids.length; ++i)
                    if (!$util.isInteger(message.granted_packageids[i]))
                        return "granted_packageids: integer[] expected";
            }
            if (message.granted_appids != null && message.hasOwnProperty("granted_appids")) {
                if (!Array.isArray(message.granted_appids))
                    return "granted_appids: array expected";
                for (var i = 0; i < message.granted_appids.length; ++i)
                    if (!$util.isInteger(message.granted_appids[i]))
                        return "granted_appids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestFreeLicenseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestFreeLicenseResponse} CMsgClientRequestFreeLicenseResponse
         */
        CMsgClientRequestFreeLicenseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestFreeLicenseResponse)
                return object;
            var message = new $root.CMsgClientRequestFreeLicenseResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.granted_packageids) {
                if (!Array.isArray(object.granted_packageids))
                    throw TypeError(".CMsgClientRequestFreeLicenseResponse.granted_packageids: array expected");
                message.granted_packageids = [];
                for (var i = 0; i < object.granted_packageids.length; ++i)
                    message.granted_packageids[i] = object.granted_packageids[i] >>> 0;
            }
            if (object.granted_appids) {
                if (!Array.isArray(object.granted_appids))
                    throw TypeError(".CMsgClientRequestFreeLicenseResponse.granted_appids: array expected");
                message.granted_appids = [];
                for (var i = 0; i < object.granted_appids.length; ++i)
                    message.granted_appids[i] = object.granted_appids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestFreeLicenseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @static
         * @param {CMsgClientRequestFreeLicenseResponse} message CMsgClientRequestFreeLicenseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestFreeLicenseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.granted_packageids = [];
                object.granted_appids = [];
            }
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.granted_packageids && message.granted_packageids.length) {
                object.granted_packageids = [];
                for (var j = 0; j < message.granted_packageids.length; ++j)
                    object.granted_packageids[j] = message.granted_packageids[j];
            }
            if (message.granted_appids && message.granted_appids.length) {
                object.granted_appids = [];
                for (var j = 0; j < message.granted_appids.length; ++j)
                    object.granted_appids[j] = message.granted_appids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestFreeLicenseResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestFreeLicenseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestFreeLicenseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestFreeLicenseResponse;
    })();
    
    $root.CMsgDRMDownloadRequestWithCrashData = (function() {
    
        /**
         * Properties of a CMsgDRMDownloadRequestWithCrashData.
         * @exports ICMsgDRMDownloadRequestWithCrashData
         * @interface ICMsgDRMDownloadRequestWithCrashData
         * @property {number|null} [download_flags] CMsgDRMDownloadRequestWithCrashData download_flags
         * @property {number|null} [download_types_known] CMsgDRMDownloadRequestWithCrashData download_types_known
         * @property {Uint8Array|null} [guid_drm] CMsgDRMDownloadRequestWithCrashData guid_drm
         * @property {Uint8Array|null} [guid_split] CMsgDRMDownloadRequestWithCrashData guid_split
         * @property {Uint8Array|null} [guid_merge] CMsgDRMDownloadRequestWithCrashData guid_merge
         * @property {string|null} [module_name] CMsgDRMDownloadRequestWithCrashData module_name
         * @property {string|null} [module_path] CMsgDRMDownloadRequestWithCrashData module_path
         * @property {Uint8Array|null} [crash_data] CMsgDRMDownloadRequestWithCrashData crash_data
         */
    
        /**
         * Constructs a new CMsgDRMDownloadRequestWithCrashData.
         * @exports CMsgDRMDownloadRequestWithCrashData
         * @classdesc Represents a CMsgDRMDownloadRequestWithCrashData.
         * @implements ICMsgDRMDownloadRequestWithCrashData
         * @constructor
         * @param {ICMsgDRMDownloadRequestWithCrashData=} [properties] Properties to set
         */
        function CMsgDRMDownloadRequestWithCrashData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDRMDownloadRequestWithCrashData download_flags.
         * @member {number} download_flags
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.download_flags = 0;
    
        /**
         * CMsgDRMDownloadRequestWithCrashData download_types_known.
         * @member {number} download_types_known
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.download_types_known = 0;
    
        /**
         * CMsgDRMDownloadRequestWithCrashData guid_drm.
         * @member {Uint8Array} guid_drm
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.guid_drm = $util.newBuffer([]);
    
        /**
         * CMsgDRMDownloadRequestWithCrashData guid_split.
         * @member {Uint8Array} guid_split
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.guid_split = $util.newBuffer([]);
    
        /**
         * CMsgDRMDownloadRequestWithCrashData guid_merge.
         * @member {Uint8Array} guid_merge
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.guid_merge = $util.newBuffer([]);
    
        /**
         * CMsgDRMDownloadRequestWithCrashData module_name.
         * @member {string} module_name
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.module_name = "";
    
        /**
         * CMsgDRMDownloadRequestWithCrashData module_path.
         * @member {string} module_path
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.module_path = "";
    
        /**
         * CMsgDRMDownloadRequestWithCrashData crash_data.
         * @member {Uint8Array} crash_data
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.crash_data = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgDRMDownloadRequestWithCrashData instance using the specified properties.
         * @function create
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {ICMsgDRMDownloadRequestWithCrashData=} [properties] Properties to set
         * @returns {CMsgDRMDownloadRequestWithCrashData} CMsgDRMDownloadRequestWithCrashData instance
         */
        CMsgDRMDownloadRequestWithCrashData.create = function create(properties) {
            return new CMsgDRMDownloadRequestWithCrashData(properties);
        };
    
        /**
         * Encodes the specified CMsgDRMDownloadRequestWithCrashData message. Does not implicitly {@link CMsgDRMDownloadRequestWithCrashData.verify|verify} messages.
         * @function encode
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {ICMsgDRMDownloadRequestWithCrashData} message CMsgDRMDownloadRequestWithCrashData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMDownloadRequestWithCrashData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.download_flags != null && message.hasOwnProperty("download_flags"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.download_flags);
            if (message.download_types_known != null && message.hasOwnProperty("download_types_known"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.download_types_known);
            if (message.guid_drm != null && message.hasOwnProperty("guid_drm"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.guid_drm);
            if (message.guid_split != null && message.hasOwnProperty("guid_split"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.guid_split);
            if (message.guid_merge != null && message.hasOwnProperty("guid_merge"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.guid_merge);
            if (message.module_name != null && message.hasOwnProperty("module_name"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.module_name);
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.module_path);
            if (message.crash_data != null && message.hasOwnProperty("crash_data"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.crash_data);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDRMDownloadRequestWithCrashData message, length delimited. Does not implicitly {@link CMsgDRMDownloadRequestWithCrashData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {ICMsgDRMDownloadRequestWithCrashData} message CMsgDRMDownloadRequestWithCrashData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMDownloadRequestWithCrashData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDRMDownloadRequestWithCrashData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDRMDownloadRequestWithCrashData} CMsgDRMDownloadRequestWithCrashData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMDownloadRequestWithCrashData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDRMDownloadRequestWithCrashData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.download_flags = reader.uint32();
                    break;
                case 2:
                    message.download_types_known = reader.uint32();
                    break;
                case 3:
                    message.guid_drm = reader.bytes();
                    break;
                case 4:
                    message.guid_split = reader.bytes();
                    break;
                case 5:
                    message.guid_merge = reader.bytes();
                    break;
                case 6:
                    message.module_name = reader.string();
                    break;
                case 7:
                    message.module_path = reader.string();
                    break;
                case 8:
                    message.crash_data = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDRMDownloadRequestWithCrashData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDRMDownloadRequestWithCrashData} CMsgDRMDownloadRequestWithCrashData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMDownloadRequestWithCrashData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDRMDownloadRequestWithCrashData message.
         * @function verify
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDRMDownloadRequestWithCrashData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.download_flags != null && message.hasOwnProperty("download_flags"))
                if (!$util.isInteger(message.download_flags))
                    return "download_flags: integer expected";
            if (message.download_types_known != null && message.hasOwnProperty("download_types_known"))
                if (!$util.isInteger(message.download_types_known))
                    return "download_types_known: integer expected";
            if (message.guid_drm != null && message.hasOwnProperty("guid_drm"))
                if (!(message.guid_drm && typeof message.guid_drm.length === "number" || $util.isString(message.guid_drm)))
                    return "guid_drm: buffer expected";
            if (message.guid_split != null && message.hasOwnProperty("guid_split"))
                if (!(message.guid_split && typeof message.guid_split.length === "number" || $util.isString(message.guid_split)))
                    return "guid_split: buffer expected";
            if (message.guid_merge != null && message.hasOwnProperty("guid_merge"))
                if (!(message.guid_merge && typeof message.guid_merge.length === "number" || $util.isString(message.guid_merge)))
                    return "guid_merge: buffer expected";
            if (message.module_name != null && message.hasOwnProperty("module_name"))
                if (!$util.isString(message.module_name))
                    return "module_name: string expected";
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                if (!$util.isString(message.module_path))
                    return "module_path: string expected";
            if (message.crash_data != null && message.hasOwnProperty("crash_data"))
                if (!(message.crash_data && typeof message.crash_data.length === "number" || $util.isString(message.crash_data)))
                    return "crash_data: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgDRMDownloadRequestWithCrashData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDRMDownloadRequestWithCrashData} CMsgDRMDownloadRequestWithCrashData
         */
        CMsgDRMDownloadRequestWithCrashData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDRMDownloadRequestWithCrashData)
                return object;
            var message = new $root.CMsgDRMDownloadRequestWithCrashData();
            if (object.download_flags != null)
                message.download_flags = object.download_flags >>> 0;
            if (object.download_types_known != null)
                message.download_types_known = object.download_types_known >>> 0;
            if (object.guid_drm != null)
                if (typeof object.guid_drm === "string")
                    $util.base64.decode(object.guid_drm, message.guid_drm = $util.newBuffer($util.base64.length(object.guid_drm)), 0);
                else if (object.guid_drm.length)
                    message.guid_drm = object.guid_drm;
            if (object.guid_split != null)
                if (typeof object.guid_split === "string")
                    $util.base64.decode(object.guid_split, message.guid_split = $util.newBuffer($util.base64.length(object.guid_split)), 0);
                else if (object.guid_split.length)
                    message.guid_split = object.guid_split;
            if (object.guid_merge != null)
                if (typeof object.guid_merge === "string")
                    $util.base64.decode(object.guid_merge, message.guid_merge = $util.newBuffer($util.base64.length(object.guid_merge)), 0);
                else if (object.guid_merge.length)
                    message.guid_merge = object.guid_merge;
            if (object.module_name != null)
                message.module_name = String(object.module_name);
            if (object.module_path != null)
                message.module_path = String(object.module_path);
            if (object.crash_data != null)
                if (typeof object.crash_data === "string")
                    $util.base64.decode(object.crash_data, message.crash_data = $util.newBuffer($util.base64.length(object.crash_data)), 0);
                else if (object.crash_data.length)
                    message.crash_data = object.crash_data;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDRMDownloadRequestWithCrashData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @static
         * @param {CMsgDRMDownloadRequestWithCrashData} message CMsgDRMDownloadRequestWithCrashData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDRMDownloadRequestWithCrashData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.download_flags = 0;
                object.download_types_known = 0;
                if (options.bytes === String)
                    object.guid_drm = "";
                else {
                    object.guid_drm = [];
                    if (options.bytes !== Array)
                        object.guid_drm = $util.newBuffer(object.guid_drm);
                }
                if (options.bytes === String)
                    object.guid_split = "";
                else {
                    object.guid_split = [];
                    if (options.bytes !== Array)
                        object.guid_split = $util.newBuffer(object.guid_split);
                }
                if (options.bytes === String)
                    object.guid_merge = "";
                else {
                    object.guid_merge = [];
                    if (options.bytes !== Array)
                        object.guid_merge = $util.newBuffer(object.guid_merge);
                }
                object.module_name = "";
                object.module_path = "";
                if (options.bytes === String)
                    object.crash_data = "";
                else {
                    object.crash_data = [];
                    if (options.bytes !== Array)
                        object.crash_data = $util.newBuffer(object.crash_data);
                }
            }
            if (message.download_flags != null && message.hasOwnProperty("download_flags"))
                object.download_flags = message.download_flags;
            if (message.download_types_known != null && message.hasOwnProperty("download_types_known"))
                object.download_types_known = message.download_types_known;
            if (message.guid_drm != null && message.hasOwnProperty("guid_drm"))
                object.guid_drm = options.bytes === String ? $util.base64.encode(message.guid_drm, 0, message.guid_drm.length) : options.bytes === Array ? Array.prototype.slice.call(message.guid_drm) : message.guid_drm;
            if (message.guid_split != null && message.hasOwnProperty("guid_split"))
                object.guid_split = options.bytes === String ? $util.base64.encode(message.guid_split, 0, message.guid_split.length) : options.bytes === Array ? Array.prototype.slice.call(message.guid_split) : message.guid_split;
            if (message.guid_merge != null && message.hasOwnProperty("guid_merge"))
                object.guid_merge = options.bytes === String ? $util.base64.encode(message.guid_merge, 0, message.guid_merge.length) : options.bytes === Array ? Array.prototype.slice.call(message.guid_merge) : message.guid_merge;
            if (message.module_name != null && message.hasOwnProperty("module_name"))
                object.module_name = message.module_name;
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                object.module_path = message.module_path;
            if (message.crash_data != null && message.hasOwnProperty("crash_data"))
                object.crash_data = options.bytes === String ? $util.base64.encode(message.crash_data, 0, message.crash_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.crash_data) : message.crash_data;
            return object;
        };
    
        /**
         * Converts this CMsgDRMDownloadRequestWithCrashData to JSON.
         * @function toJSON
         * @memberof CMsgDRMDownloadRequestWithCrashData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDRMDownloadRequestWithCrashData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgDRMDownloadRequestWithCrashData;
    })();
    
    $root.CMsgDRMDownloadResponse = (function() {
    
        /**
         * Properties of a CMsgDRMDownloadResponse.
         * @exports ICMsgDRMDownloadResponse
         * @interface ICMsgDRMDownloadResponse
         * @property {number|null} [eresult] CMsgDRMDownloadResponse eresult
         * @property {number|null} [app_id] CMsgDRMDownloadResponse app_id
         * @property {number|null} [blob_download_type] CMsgDRMDownloadResponse blob_download_type
         * @property {Uint8Array|null} [merge_guid] CMsgDRMDownloadResponse merge_guid
         * @property {number|null} [download_file_dfs_ip] CMsgDRMDownloadResponse download_file_dfs_ip
         * @property {number|null} [download_file_dfs_port] CMsgDRMDownloadResponse download_file_dfs_port
         * @property {string|null} [download_file_url] CMsgDRMDownloadResponse download_file_url
         * @property {string|null} [module_path] CMsgDRMDownloadResponse module_path
         */
    
        /**
         * Constructs a new CMsgDRMDownloadResponse.
         * @exports CMsgDRMDownloadResponse
         * @classdesc Represents a CMsgDRMDownloadResponse.
         * @implements ICMsgDRMDownloadResponse
         * @constructor
         * @param {ICMsgDRMDownloadResponse=} [properties] Properties to set
         */
        function CMsgDRMDownloadResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDRMDownloadResponse eresult.
         * @member {number} eresult
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.eresult = 2;
    
        /**
         * CMsgDRMDownloadResponse app_id.
         * @member {number} app_id
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.app_id = 0;
    
        /**
         * CMsgDRMDownloadResponse blob_download_type.
         * @member {number} blob_download_type
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.blob_download_type = 0;
    
        /**
         * CMsgDRMDownloadResponse merge_guid.
         * @member {Uint8Array} merge_guid
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.merge_guid = $util.newBuffer([]);
    
        /**
         * CMsgDRMDownloadResponse download_file_dfs_ip.
         * @member {number} download_file_dfs_ip
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.download_file_dfs_ip = 0;
    
        /**
         * CMsgDRMDownloadResponse download_file_dfs_port.
         * @member {number} download_file_dfs_port
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.download_file_dfs_port = 0;
    
        /**
         * CMsgDRMDownloadResponse download_file_url.
         * @member {string} download_file_url
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.download_file_url = "";
    
        /**
         * CMsgDRMDownloadResponse module_path.
         * @member {string} module_path
         * @memberof CMsgDRMDownloadResponse
         * @instance
         */
        CMsgDRMDownloadResponse.prototype.module_path = "";
    
        /**
         * Creates a new CMsgDRMDownloadResponse instance using the specified properties.
         * @function create
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {ICMsgDRMDownloadResponse=} [properties] Properties to set
         * @returns {CMsgDRMDownloadResponse} CMsgDRMDownloadResponse instance
         */
        CMsgDRMDownloadResponse.create = function create(properties) {
            return new CMsgDRMDownloadResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgDRMDownloadResponse message. Does not implicitly {@link CMsgDRMDownloadResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {ICMsgDRMDownloadResponse} message CMsgDRMDownloadResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMDownloadResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.blob_download_type);
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.merge_guid);
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.download_file_dfs_ip);
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.download_file_dfs_port);
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.download_file_url);
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.module_path);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDRMDownloadResponse message, length delimited. Does not implicitly {@link CMsgDRMDownloadResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {ICMsgDRMDownloadResponse} message CMsgDRMDownloadResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMDownloadResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDRMDownloadResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDRMDownloadResponse} CMsgDRMDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMDownloadResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDRMDownloadResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.blob_download_type = reader.uint32();
                    break;
                case 4:
                    message.merge_guid = reader.bytes();
                    break;
                case 5:
                    message.download_file_dfs_ip = reader.uint32();
                    break;
                case 6:
                    message.download_file_dfs_port = reader.uint32();
                    break;
                case 7:
                    message.download_file_url = reader.string();
                    break;
                case 8:
                    message.module_path = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDRMDownloadResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDRMDownloadResponse} CMsgDRMDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMDownloadResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDRMDownloadResponse message.
         * @function verify
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDRMDownloadResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                if (!$util.isInteger(message.blob_download_type))
                    return "blob_download_type: integer expected";
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                if (!(message.merge_guid && typeof message.merge_guid.length === "number" || $util.isString(message.merge_guid)))
                    return "merge_guid: buffer expected";
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                if (!$util.isInteger(message.download_file_dfs_ip))
                    return "download_file_dfs_ip: integer expected";
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                if (!$util.isInteger(message.download_file_dfs_port))
                    return "download_file_dfs_port: integer expected";
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                if (!$util.isString(message.download_file_url))
                    return "download_file_url: string expected";
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                if (!$util.isString(message.module_path))
                    return "module_path: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgDRMDownloadResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDRMDownloadResponse} CMsgDRMDownloadResponse
         */
        CMsgDRMDownloadResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDRMDownloadResponse)
                return object;
            var message = new $root.CMsgDRMDownloadResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.blob_download_type != null)
                message.blob_download_type = object.blob_download_type >>> 0;
            if (object.merge_guid != null)
                if (typeof object.merge_guid === "string")
                    $util.base64.decode(object.merge_guid, message.merge_guid = $util.newBuffer($util.base64.length(object.merge_guid)), 0);
                else if (object.merge_guid.length)
                    message.merge_guid = object.merge_guid;
            if (object.download_file_dfs_ip != null)
                message.download_file_dfs_ip = object.download_file_dfs_ip >>> 0;
            if (object.download_file_dfs_port != null)
                message.download_file_dfs_port = object.download_file_dfs_port >>> 0;
            if (object.download_file_url != null)
                message.download_file_url = String(object.download_file_url);
            if (object.module_path != null)
                message.module_path = String(object.module_path);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDRMDownloadResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDRMDownloadResponse
         * @static
         * @param {CMsgDRMDownloadResponse} message CMsgDRMDownloadResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDRMDownloadResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.app_id = 0;
                object.blob_download_type = 0;
                if (options.bytes === String)
                    object.merge_guid = "";
                else {
                    object.merge_guid = [];
                    if (options.bytes !== Array)
                        object.merge_guid = $util.newBuffer(object.merge_guid);
                }
                object.download_file_dfs_ip = 0;
                object.download_file_dfs_port = 0;
                object.download_file_url = "";
                object.module_path = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                object.blob_download_type = message.blob_download_type;
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                object.merge_guid = options.bytes === String ? $util.base64.encode(message.merge_guid, 0, message.merge_guid.length) : options.bytes === Array ? Array.prototype.slice.call(message.merge_guid) : message.merge_guid;
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                object.download_file_dfs_ip = message.download_file_dfs_ip;
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                object.download_file_dfs_port = message.download_file_dfs_port;
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                object.download_file_url = message.download_file_url;
            if (message.module_path != null && message.hasOwnProperty("module_path"))
                object.module_path = message.module_path;
            return object;
        };
    
        /**
         * Converts this CMsgDRMDownloadResponse to JSON.
         * @function toJSON
         * @memberof CMsgDRMDownloadResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDRMDownloadResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgDRMDownloadResponse;
    })();
    
    $root.CMsgDRMFinalResult = (function() {
    
        /**
         * Properties of a CMsgDRMFinalResult.
         * @exports ICMsgDRMFinalResult
         * @interface ICMsgDRMFinalResult
         * @property {number|null} [eResult] CMsgDRMFinalResult eResult
         * @property {number|null} [app_id] CMsgDRMFinalResult app_id
         * @property {number|null} [blob_download_type] CMsgDRMFinalResult blob_download_type
         * @property {number|null} [error_detail] CMsgDRMFinalResult error_detail
         * @property {Uint8Array|null} [merge_guid] CMsgDRMFinalResult merge_guid
         * @property {number|null} [download_file_dfs_ip] CMsgDRMFinalResult download_file_dfs_ip
         * @property {number|null} [download_file_dfs_port] CMsgDRMFinalResult download_file_dfs_port
         * @property {string|null} [download_file_url] CMsgDRMFinalResult download_file_url
         */
    
        /**
         * Constructs a new CMsgDRMFinalResult.
         * @exports CMsgDRMFinalResult
         * @classdesc Represents a CMsgDRMFinalResult.
         * @implements ICMsgDRMFinalResult
         * @constructor
         * @param {ICMsgDRMFinalResult=} [properties] Properties to set
         */
        function CMsgDRMFinalResult(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDRMFinalResult eResult.
         * @member {number} eResult
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.eResult = 2;
    
        /**
         * CMsgDRMFinalResult app_id.
         * @member {number} app_id
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.app_id = 0;
    
        /**
         * CMsgDRMFinalResult blob_download_type.
         * @member {number} blob_download_type
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.blob_download_type = 0;
    
        /**
         * CMsgDRMFinalResult error_detail.
         * @member {number} error_detail
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.error_detail = 0;
    
        /**
         * CMsgDRMFinalResult merge_guid.
         * @member {Uint8Array} merge_guid
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.merge_guid = $util.newBuffer([]);
    
        /**
         * CMsgDRMFinalResult download_file_dfs_ip.
         * @member {number} download_file_dfs_ip
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.download_file_dfs_ip = 0;
    
        /**
         * CMsgDRMFinalResult download_file_dfs_port.
         * @member {number} download_file_dfs_port
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.download_file_dfs_port = 0;
    
        /**
         * CMsgDRMFinalResult download_file_url.
         * @member {string} download_file_url
         * @memberof CMsgDRMFinalResult
         * @instance
         */
        CMsgDRMFinalResult.prototype.download_file_url = "";
    
        /**
         * Creates a new CMsgDRMFinalResult instance using the specified properties.
         * @function create
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {ICMsgDRMFinalResult=} [properties] Properties to set
         * @returns {CMsgDRMFinalResult} CMsgDRMFinalResult instance
         */
        CMsgDRMFinalResult.create = function create(properties) {
            return new CMsgDRMFinalResult(properties);
        };
    
        /**
         * Encodes the specified CMsgDRMFinalResult message. Does not implicitly {@link CMsgDRMFinalResult.verify|verify} messages.
         * @function encode
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {ICMsgDRMFinalResult} message CMsgDRMFinalResult message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMFinalResult.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eResult);
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.blob_download_type);
            if (message.error_detail != null && message.hasOwnProperty("error_detail"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.error_detail);
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.merge_guid);
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.download_file_dfs_ip);
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.download_file_dfs_port);
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.download_file_url);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDRMFinalResult message, length delimited. Does not implicitly {@link CMsgDRMFinalResult.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {ICMsgDRMFinalResult} message CMsgDRMFinalResult message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDRMFinalResult.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDRMFinalResult message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDRMFinalResult} CMsgDRMFinalResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMFinalResult.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDRMFinalResult();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eResult = reader.uint32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.blob_download_type = reader.uint32();
                    break;
                case 4:
                    message.error_detail = reader.uint32();
                    break;
                case 5:
                    message.merge_guid = reader.bytes();
                    break;
                case 6:
                    message.download_file_dfs_ip = reader.uint32();
                    break;
                case 7:
                    message.download_file_dfs_port = reader.uint32();
                    break;
                case 8:
                    message.download_file_url = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDRMFinalResult message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDRMFinalResult} CMsgDRMFinalResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDRMFinalResult.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDRMFinalResult message.
         * @function verify
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDRMFinalResult.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                if (!$util.isInteger(message.eResult))
                    return "eResult: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                if (!$util.isInteger(message.blob_download_type))
                    return "blob_download_type: integer expected";
            if (message.error_detail != null && message.hasOwnProperty("error_detail"))
                if (!$util.isInteger(message.error_detail))
                    return "error_detail: integer expected";
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                if (!(message.merge_guid && typeof message.merge_guid.length === "number" || $util.isString(message.merge_guid)))
                    return "merge_guid: buffer expected";
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                if (!$util.isInteger(message.download_file_dfs_ip))
                    return "download_file_dfs_ip: integer expected";
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                if (!$util.isInteger(message.download_file_dfs_port))
                    return "download_file_dfs_port: integer expected";
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                if (!$util.isString(message.download_file_url))
                    return "download_file_url: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgDRMFinalResult message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDRMFinalResult} CMsgDRMFinalResult
         */
        CMsgDRMFinalResult.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDRMFinalResult)
                return object;
            var message = new $root.CMsgDRMFinalResult();
            if (object.eResult != null)
                message.eResult = object.eResult >>> 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.blob_download_type != null)
                message.blob_download_type = object.blob_download_type >>> 0;
            if (object.error_detail != null)
                message.error_detail = object.error_detail >>> 0;
            if (object.merge_guid != null)
                if (typeof object.merge_guid === "string")
                    $util.base64.decode(object.merge_guid, message.merge_guid = $util.newBuffer($util.base64.length(object.merge_guid)), 0);
                else if (object.merge_guid.length)
                    message.merge_guid = object.merge_guid;
            if (object.download_file_dfs_ip != null)
                message.download_file_dfs_ip = object.download_file_dfs_ip >>> 0;
            if (object.download_file_dfs_port != null)
                message.download_file_dfs_port = object.download_file_dfs_port >>> 0;
            if (object.download_file_url != null)
                message.download_file_url = String(object.download_file_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDRMFinalResult message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDRMFinalResult
         * @static
         * @param {CMsgDRMFinalResult} message CMsgDRMFinalResult
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDRMFinalResult.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eResult = 2;
                object.app_id = 0;
                object.blob_download_type = 0;
                object.error_detail = 0;
                if (options.bytes === String)
                    object.merge_guid = "";
                else {
                    object.merge_guid = [];
                    if (options.bytes !== Array)
                        object.merge_guid = $util.newBuffer(object.merge_guid);
                }
                object.download_file_dfs_ip = 0;
                object.download_file_dfs_port = 0;
                object.download_file_url = "";
            }
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                object.eResult = message.eResult;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.blob_download_type != null && message.hasOwnProperty("blob_download_type"))
                object.blob_download_type = message.blob_download_type;
            if (message.error_detail != null && message.hasOwnProperty("error_detail"))
                object.error_detail = message.error_detail;
            if (message.merge_guid != null && message.hasOwnProperty("merge_guid"))
                object.merge_guid = options.bytes === String ? $util.base64.encode(message.merge_guid, 0, message.merge_guid.length) : options.bytes === Array ? Array.prototype.slice.call(message.merge_guid) : message.merge_guid;
            if (message.download_file_dfs_ip != null && message.hasOwnProperty("download_file_dfs_ip"))
                object.download_file_dfs_ip = message.download_file_dfs_ip;
            if (message.download_file_dfs_port != null && message.hasOwnProperty("download_file_dfs_port"))
                object.download_file_dfs_port = message.download_file_dfs_port;
            if (message.download_file_url != null && message.hasOwnProperty("download_file_url"))
                object.download_file_url = message.download_file_url;
            return object;
        };
    
        /**
         * Converts this CMsgDRMFinalResult to JSON.
         * @function toJSON
         * @memberof CMsgDRMFinalResult
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDRMFinalResult.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgDRMFinalResult;
    })();
    
    $root.CMsgClientDPCheckSpecialSurvey = (function() {
    
        /**
         * Properties of a CMsgClientDPCheckSpecialSurvey.
         * @exports ICMsgClientDPCheckSpecialSurvey
         * @interface ICMsgClientDPCheckSpecialSurvey
         * @property {number|null} [survey_id] CMsgClientDPCheckSpecialSurvey survey_id
         */
    
        /**
         * Constructs a new CMsgClientDPCheckSpecialSurvey.
         * @exports CMsgClientDPCheckSpecialSurvey
         * @classdesc Represents a CMsgClientDPCheckSpecialSurvey.
         * @implements ICMsgClientDPCheckSpecialSurvey
         * @constructor
         * @param {ICMsgClientDPCheckSpecialSurvey=} [properties] Properties to set
         */
        function CMsgClientDPCheckSpecialSurvey(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDPCheckSpecialSurvey survey_id.
         * @member {number} survey_id
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @instance
         */
        CMsgClientDPCheckSpecialSurvey.prototype.survey_id = 0;
    
        /**
         * Creates a new CMsgClientDPCheckSpecialSurvey instance using the specified properties.
         * @function create
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {ICMsgClientDPCheckSpecialSurvey=} [properties] Properties to set
         * @returns {CMsgClientDPCheckSpecialSurvey} CMsgClientDPCheckSpecialSurvey instance
         */
        CMsgClientDPCheckSpecialSurvey.create = function create(properties) {
            return new CMsgClientDPCheckSpecialSurvey(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDPCheckSpecialSurvey message. Does not implicitly {@link CMsgClientDPCheckSpecialSurvey.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {ICMsgClientDPCheckSpecialSurvey} message CMsgClientDPCheckSpecialSurvey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPCheckSpecialSurvey.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.survey_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDPCheckSpecialSurvey message, length delimited. Does not implicitly {@link CMsgClientDPCheckSpecialSurvey.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {ICMsgClientDPCheckSpecialSurvey} message CMsgClientDPCheckSpecialSurvey message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPCheckSpecialSurvey.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDPCheckSpecialSurvey message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDPCheckSpecialSurvey} CMsgClientDPCheckSpecialSurvey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPCheckSpecialSurvey.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDPCheckSpecialSurvey();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.survey_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDPCheckSpecialSurvey message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDPCheckSpecialSurvey} CMsgClientDPCheckSpecialSurvey
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPCheckSpecialSurvey.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDPCheckSpecialSurvey message.
         * @function verify
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDPCheckSpecialSurvey.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                if (!$util.isInteger(message.survey_id))
                    return "survey_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDPCheckSpecialSurvey message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDPCheckSpecialSurvey} CMsgClientDPCheckSpecialSurvey
         */
        CMsgClientDPCheckSpecialSurvey.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDPCheckSpecialSurvey)
                return object;
            var message = new $root.CMsgClientDPCheckSpecialSurvey();
            if (object.survey_id != null)
                message.survey_id = object.survey_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDPCheckSpecialSurvey message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @static
         * @param {CMsgClientDPCheckSpecialSurvey} message CMsgClientDPCheckSpecialSurvey
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDPCheckSpecialSurvey.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.survey_id = 0;
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                object.survey_id = message.survey_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientDPCheckSpecialSurvey to JSON.
         * @function toJSON
         * @memberof CMsgClientDPCheckSpecialSurvey
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDPCheckSpecialSurvey.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDPCheckSpecialSurvey;
    })();
    
    $root.CMsgClientDPCheckSpecialSurveyResponse = (function() {
    
        /**
         * Properties of a CMsgClientDPCheckSpecialSurveyResponse.
         * @exports ICMsgClientDPCheckSpecialSurveyResponse
         * @interface ICMsgClientDPCheckSpecialSurveyResponse
         * @property {number|null} [eResult] CMsgClientDPCheckSpecialSurveyResponse eResult
         * @property {number|null} [state] CMsgClientDPCheckSpecialSurveyResponse state
         * @property {string|null} [name] CMsgClientDPCheckSpecialSurveyResponse name
         * @property {string|null} [custom_url] CMsgClientDPCheckSpecialSurveyResponse custom_url
         * @property {boolean|null} [include_software] CMsgClientDPCheckSpecialSurveyResponse include_software
         * @property {Uint8Array|null} [token] CMsgClientDPCheckSpecialSurveyResponse token
         */
    
        /**
         * Constructs a new CMsgClientDPCheckSpecialSurveyResponse.
         * @exports CMsgClientDPCheckSpecialSurveyResponse
         * @classdesc Represents a CMsgClientDPCheckSpecialSurveyResponse.
         * @implements ICMsgClientDPCheckSpecialSurveyResponse
         * @constructor
         * @param {ICMsgClientDPCheckSpecialSurveyResponse=} [properties] Properties to set
         */
        function CMsgClientDPCheckSpecialSurveyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse eResult.
         * @member {number} eResult
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.eResult = 2;
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse state.
         * @member {number} state
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.state = 0;
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse name.
         * @member {string} name
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.name = "";
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse custom_url.
         * @member {string} custom_url
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.custom_url = "";
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse include_software.
         * @member {boolean} include_software
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.include_software = false;
    
        /**
         * CMsgClientDPCheckSpecialSurveyResponse token.
         * @member {Uint8Array} token
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.token = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientDPCheckSpecialSurveyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPCheckSpecialSurveyResponse=} [properties] Properties to set
         * @returns {CMsgClientDPCheckSpecialSurveyResponse} CMsgClientDPCheckSpecialSurveyResponse instance
         */
        CMsgClientDPCheckSpecialSurveyResponse.create = function create(properties) {
            return new CMsgClientDPCheckSpecialSurveyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDPCheckSpecialSurveyResponse message. Does not implicitly {@link CMsgClientDPCheckSpecialSurveyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPCheckSpecialSurveyResponse} message CMsgClientDPCheckSpecialSurveyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPCheckSpecialSurveyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eResult);
            if (message.state != null && message.hasOwnProperty("state"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.state);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
            if (message.custom_url != null && message.hasOwnProperty("custom_url"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.custom_url);
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.include_software);
            if (message.token != null && message.hasOwnProperty("token"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDPCheckSpecialSurveyResponse message, length delimited. Does not implicitly {@link CMsgClientDPCheckSpecialSurveyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPCheckSpecialSurveyResponse} message CMsgClientDPCheckSpecialSurveyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPCheckSpecialSurveyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDPCheckSpecialSurveyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDPCheckSpecialSurveyResponse} CMsgClientDPCheckSpecialSurveyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPCheckSpecialSurveyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDPCheckSpecialSurveyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eResult = reader.uint32();
                    break;
                case 2:
                    message.state = reader.uint32();
                    break;
                case 3:
                    message.name = reader.string();
                    break;
                case 4:
                    message.custom_url = reader.string();
                    break;
                case 5:
                    message.include_software = reader.bool();
                    break;
                case 6:
                    message.token = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDPCheckSpecialSurveyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDPCheckSpecialSurveyResponse} CMsgClientDPCheckSpecialSurveyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPCheckSpecialSurveyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDPCheckSpecialSurveyResponse message.
         * @function verify
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDPCheckSpecialSurveyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                if (!$util.isInteger(message.eResult))
                    return "eResult: integer expected";
            if (message.state != null && message.hasOwnProperty("state"))
                if (!$util.isInteger(message.state))
                    return "state: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.custom_url != null && message.hasOwnProperty("custom_url"))
                if (!$util.isString(message.custom_url))
                    return "custom_url: string expected";
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                if (typeof message.include_software !== "boolean")
                    return "include_software: boolean expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                    return "token: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDPCheckSpecialSurveyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDPCheckSpecialSurveyResponse} CMsgClientDPCheckSpecialSurveyResponse
         */
        CMsgClientDPCheckSpecialSurveyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDPCheckSpecialSurveyResponse)
                return object;
            var message = new $root.CMsgClientDPCheckSpecialSurveyResponse();
            if (object.eResult != null)
                message.eResult = object.eResult >>> 0;
            if (object.state != null)
                message.state = object.state >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            if (object.custom_url != null)
                message.custom_url = String(object.custom_url);
            if (object.include_software != null)
                message.include_software = Boolean(object.include_software);
            if (object.token != null)
                if (typeof object.token === "string")
                    $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                else if (object.token.length)
                    message.token = object.token;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDPCheckSpecialSurveyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @static
         * @param {CMsgClientDPCheckSpecialSurveyResponse} message CMsgClientDPCheckSpecialSurveyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDPCheckSpecialSurveyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eResult = 2;
                object.state = 0;
                object.name = "";
                object.custom_url = "";
                object.include_software = false;
                if (options.bytes === String)
                    object.token = "";
                else {
                    object.token = [];
                    if (options.bytes !== Array)
                        object.token = $util.newBuffer(object.token);
                }
            }
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                object.eResult = message.eResult;
            if (message.state != null && message.hasOwnProperty("state"))
                object.state = message.state;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.custom_url != null && message.hasOwnProperty("custom_url"))
                object.custom_url = message.custom_url;
            if (message.include_software != null && message.hasOwnProperty("include_software"))
                object.include_software = message.include_software;
            if (message.token != null && message.hasOwnProperty("token"))
                object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
            return object;
        };
    
        /**
         * Converts this CMsgClientDPCheckSpecialSurveyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientDPCheckSpecialSurveyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDPCheckSpecialSurveyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDPCheckSpecialSurveyResponse;
    })();
    
    $root.CMsgClientDPSendSpecialSurveyResponse = (function() {
    
        /**
         * Properties of a CMsgClientDPSendSpecialSurveyResponse.
         * @exports ICMsgClientDPSendSpecialSurveyResponse
         * @interface ICMsgClientDPSendSpecialSurveyResponse
         * @property {number|null} [survey_id] CMsgClientDPSendSpecialSurveyResponse survey_id
         * @property {Uint8Array|null} [data] CMsgClientDPSendSpecialSurveyResponse data
         */
    
        /**
         * Constructs a new CMsgClientDPSendSpecialSurveyResponse.
         * @exports CMsgClientDPSendSpecialSurveyResponse
         * @classdesc Represents a CMsgClientDPSendSpecialSurveyResponse.
         * @implements ICMsgClientDPSendSpecialSurveyResponse
         * @constructor
         * @param {ICMsgClientDPSendSpecialSurveyResponse=} [properties] Properties to set
         */
        function CMsgClientDPSendSpecialSurveyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDPSendSpecialSurveyResponse survey_id.
         * @member {number} survey_id
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPSendSpecialSurveyResponse.prototype.survey_id = 0;
    
        /**
         * CMsgClientDPSendSpecialSurveyResponse data.
         * @member {Uint8Array} data
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @instance
         */
        CMsgClientDPSendSpecialSurveyResponse.prototype.data = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientDPSendSpecialSurveyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponse=} [properties] Properties to set
         * @returns {CMsgClientDPSendSpecialSurveyResponse} CMsgClientDPSendSpecialSurveyResponse instance
         */
        CMsgClientDPSendSpecialSurveyResponse.create = function create(properties) {
            return new CMsgClientDPSendSpecialSurveyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDPSendSpecialSurveyResponse message. Does not implicitly {@link CMsgClientDPSendSpecialSurveyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponse} message CMsgClientDPSendSpecialSurveyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPSendSpecialSurveyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.survey_id);
            if (message.data != null && message.hasOwnProperty("data"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDPSendSpecialSurveyResponse message, length delimited. Does not implicitly {@link CMsgClientDPSendSpecialSurveyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponse} message CMsgClientDPSendSpecialSurveyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPSendSpecialSurveyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDPSendSpecialSurveyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDPSendSpecialSurveyResponse} CMsgClientDPSendSpecialSurveyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPSendSpecialSurveyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDPSendSpecialSurveyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.survey_id = reader.uint32();
                    break;
                case 2:
                    message.data = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDPSendSpecialSurveyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDPSendSpecialSurveyResponse} CMsgClientDPSendSpecialSurveyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPSendSpecialSurveyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDPSendSpecialSurveyResponse message.
         * @function verify
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDPSendSpecialSurveyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                if (!$util.isInteger(message.survey_id))
                    return "survey_id: integer expected";
            if (message.data != null && message.hasOwnProperty("data"))
                if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                    return "data: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDPSendSpecialSurveyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDPSendSpecialSurveyResponse} CMsgClientDPSendSpecialSurveyResponse
         */
        CMsgClientDPSendSpecialSurveyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDPSendSpecialSurveyResponse)
                return object;
            var message = new $root.CMsgClientDPSendSpecialSurveyResponse();
            if (object.survey_id != null)
                message.survey_id = object.survey_id >>> 0;
            if (object.data != null)
                if (typeof object.data === "string")
                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                else if (object.data.length)
                    message.data = object.data;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDPSendSpecialSurveyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @static
         * @param {CMsgClientDPSendSpecialSurveyResponse} message CMsgClientDPSendSpecialSurveyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDPSendSpecialSurveyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.survey_id = 0;
                if (options.bytes === String)
                    object.data = "";
                else {
                    object.data = [];
                    if (options.bytes !== Array)
                        object.data = $util.newBuffer(object.data);
                }
            }
            if (message.survey_id != null && message.hasOwnProperty("survey_id"))
                object.survey_id = message.survey_id;
            if (message.data != null && message.hasOwnProperty("data"))
                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
            return object;
        };
    
        /**
         * Converts this CMsgClientDPSendSpecialSurveyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientDPSendSpecialSurveyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDPSendSpecialSurveyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDPSendSpecialSurveyResponse;
    })();
    
    $root.CMsgClientDPSendSpecialSurveyResponseReply = (function() {
    
        /**
         * Properties of a CMsgClientDPSendSpecialSurveyResponseReply.
         * @exports ICMsgClientDPSendSpecialSurveyResponseReply
         * @interface ICMsgClientDPSendSpecialSurveyResponseReply
         * @property {number|null} [eResult] CMsgClientDPSendSpecialSurveyResponseReply eResult
         * @property {Uint8Array|null} [token] CMsgClientDPSendSpecialSurveyResponseReply token
         */
    
        /**
         * Constructs a new CMsgClientDPSendSpecialSurveyResponseReply.
         * @exports CMsgClientDPSendSpecialSurveyResponseReply
         * @classdesc Represents a CMsgClientDPSendSpecialSurveyResponseReply.
         * @implements ICMsgClientDPSendSpecialSurveyResponseReply
         * @constructor
         * @param {ICMsgClientDPSendSpecialSurveyResponseReply=} [properties] Properties to set
         */
        function CMsgClientDPSendSpecialSurveyResponseReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDPSendSpecialSurveyResponseReply eResult.
         * @member {number} eResult
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @instance
         */
        CMsgClientDPSendSpecialSurveyResponseReply.prototype.eResult = 2;
    
        /**
         * CMsgClientDPSendSpecialSurveyResponseReply token.
         * @member {Uint8Array} token
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @instance
         */
        CMsgClientDPSendSpecialSurveyResponseReply.prototype.token = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientDPSendSpecialSurveyResponseReply instance using the specified properties.
         * @function create
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponseReply=} [properties] Properties to set
         * @returns {CMsgClientDPSendSpecialSurveyResponseReply} CMsgClientDPSendSpecialSurveyResponseReply instance
         */
        CMsgClientDPSendSpecialSurveyResponseReply.create = function create(properties) {
            return new CMsgClientDPSendSpecialSurveyResponseReply(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDPSendSpecialSurveyResponseReply message. Does not implicitly {@link CMsgClientDPSendSpecialSurveyResponseReply.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponseReply} message CMsgClientDPSendSpecialSurveyResponseReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPSendSpecialSurveyResponseReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eResult);
            if (message.token != null && message.hasOwnProperty("token"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDPSendSpecialSurveyResponseReply message, length delimited. Does not implicitly {@link CMsgClientDPSendSpecialSurveyResponseReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {ICMsgClientDPSendSpecialSurveyResponseReply} message CMsgClientDPSendSpecialSurveyResponseReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDPSendSpecialSurveyResponseReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDPSendSpecialSurveyResponseReply message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDPSendSpecialSurveyResponseReply} CMsgClientDPSendSpecialSurveyResponseReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPSendSpecialSurveyResponseReply.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDPSendSpecialSurveyResponseReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eResult = reader.uint32();
                    break;
                case 2:
                    message.token = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDPSendSpecialSurveyResponseReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDPSendSpecialSurveyResponseReply} CMsgClientDPSendSpecialSurveyResponseReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDPSendSpecialSurveyResponseReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDPSendSpecialSurveyResponseReply message.
         * @function verify
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDPSendSpecialSurveyResponseReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                if (!$util.isInteger(message.eResult))
                    return "eResult: integer expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                    return "token: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDPSendSpecialSurveyResponseReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDPSendSpecialSurveyResponseReply} CMsgClientDPSendSpecialSurveyResponseReply
         */
        CMsgClientDPSendSpecialSurveyResponseReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDPSendSpecialSurveyResponseReply)
                return object;
            var message = new $root.CMsgClientDPSendSpecialSurveyResponseReply();
            if (object.eResult != null)
                message.eResult = object.eResult >>> 0;
            if (object.token != null)
                if (typeof object.token === "string")
                    $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                else if (object.token.length)
                    message.token = object.token;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDPSendSpecialSurveyResponseReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @static
         * @param {CMsgClientDPSendSpecialSurveyResponseReply} message CMsgClientDPSendSpecialSurveyResponseReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDPSendSpecialSurveyResponseReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eResult = 2;
                if (options.bytes === String)
                    object.token = "";
                else {
                    object.token = [];
                    if (options.bytes !== Array)
                        object.token = $util.newBuffer(object.token);
                }
            }
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                object.eResult = message.eResult;
            if (message.token != null && message.hasOwnProperty("token"))
                object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
            return object;
        };
    
        /**
         * Converts this CMsgClientDPSendSpecialSurveyResponseReply to JSON.
         * @function toJSON
         * @memberof CMsgClientDPSendSpecialSurveyResponseReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDPSendSpecialSurveyResponseReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDPSendSpecialSurveyResponseReply;
    })();
    
    $root.CMsgClientRequestForgottenPasswordEmail = (function() {
    
        /**
         * Properties of a CMsgClientRequestForgottenPasswordEmail.
         * @exports ICMsgClientRequestForgottenPasswordEmail
         * @interface ICMsgClientRequestForgottenPasswordEmail
         * @property {string|null} [account_name] CMsgClientRequestForgottenPasswordEmail account_name
         * @property {string|null} [password_tried] CMsgClientRequestForgottenPasswordEmail password_tried
         */
    
        /**
         * Constructs a new CMsgClientRequestForgottenPasswordEmail.
         * @exports CMsgClientRequestForgottenPasswordEmail
         * @classdesc Represents a CMsgClientRequestForgottenPasswordEmail.
         * @implements ICMsgClientRequestForgottenPasswordEmail
         * @constructor
         * @param {ICMsgClientRequestForgottenPasswordEmail=} [properties] Properties to set
         */
        function CMsgClientRequestForgottenPasswordEmail(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestForgottenPasswordEmail account_name.
         * @member {string} account_name
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @instance
         */
        CMsgClientRequestForgottenPasswordEmail.prototype.account_name = "";
    
        /**
         * CMsgClientRequestForgottenPasswordEmail password_tried.
         * @member {string} password_tried
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @instance
         */
        CMsgClientRequestForgottenPasswordEmail.prototype.password_tried = "";
    
        /**
         * Creates a new CMsgClientRequestForgottenPasswordEmail instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmail=} [properties] Properties to set
         * @returns {CMsgClientRequestForgottenPasswordEmail} CMsgClientRequestForgottenPasswordEmail instance
         */
        CMsgClientRequestForgottenPasswordEmail.create = function create(properties) {
            return new CMsgClientRequestForgottenPasswordEmail(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestForgottenPasswordEmail message. Does not implicitly {@link CMsgClientRequestForgottenPasswordEmail.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmail} message CMsgClientRequestForgottenPasswordEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestForgottenPasswordEmail.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.account_name);
            if (message.password_tried != null && message.hasOwnProperty("password_tried"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.password_tried);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestForgottenPasswordEmail message, length delimited. Does not implicitly {@link CMsgClientRequestForgottenPasswordEmail.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmail} message CMsgClientRequestForgottenPasswordEmail message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestForgottenPasswordEmail.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestForgottenPasswordEmail message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestForgottenPasswordEmail} CMsgClientRequestForgottenPasswordEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestForgottenPasswordEmail.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestForgottenPasswordEmail();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.account_name = reader.string();
                    break;
                case 2:
                    message.password_tried = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestForgottenPasswordEmail message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestForgottenPasswordEmail} CMsgClientRequestForgottenPasswordEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestForgottenPasswordEmail.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestForgottenPasswordEmail message.
         * @function verify
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestForgottenPasswordEmail.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                if (!$util.isString(message.account_name))
                    return "account_name: string expected";
            if (message.password_tried != null && message.hasOwnProperty("password_tried"))
                if (!$util.isString(message.password_tried))
                    return "password_tried: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestForgottenPasswordEmail message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestForgottenPasswordEmail} CMsgClientRequestForgottenPasswordEmail
         */
        CMsgClientRequestForgottenPasswordEmail.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestForgottenPasswordEmail)
                return object;
            var message = new $root.CMsgClientRequestForgottenPasswordEmail();
            if (object.account_name != null)
                message.account_name = String(object.account_name);
            if (object.password_tried != null)
                message.password_tried = String(object.password_tried);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestForgottenPasswordEmail message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @static
         * @param {CMsgClientRequestForgottenPasswordEmail} message CMsgClientRequestForgottenPasswordEmail
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestForgottenPasswordEmail.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_name = "";
                object.password_tried = "";
            }
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                object.account_name = message.account_name;
            if (message.password_tried != null && message.hasOwnProperty("password_tried"))
                object.password_tried = message.password_tried;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestForgottenPasswordEmail to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestForgottenPasswordEmail
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestForgottenPasswordEmail.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestForgottenPasswordEmail;
    })();
    
    $root.CMsgClientRequestForgottenPasswordEmailResponse = (function() {
    
        /**
         * Properties of a CMsgClientRequestForgottenPasswordEmailResponse.
         * @exports ICMsgClientRequestForgottenPasswordEmailResponse
         * @interface ICMsgClientRequestForgottenPasswordEmailResponse
         * @property {number|null} [eResult] CMsgClientRequestForgottenPasswordEmailResponse eResult
         * @property {boolean|null} [use_secret_question] CMsgClientRequestForgottenPasswordEmailResponse use_secret_question
         */
    
        /**
         * Constructs a new CMsgClientRequestForgottenPasswordEmailResponse.
         * @exports CMsgClientRequestForgottenPasswordEmailResponse
         * @classdesc Represents a CMsgClientRequestForgottenPasswordEmailResponse.
         * @implements ICMsgClientRequestForgottenPasswordEmailResponse
         * @constructor
         * @param {ICMsgClientRequestForgottenPasswordEmailResponse=} [properties] Properties to set
         */
        function CMsgClientRequestForgottenPasswordEmailResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestForgottenPasswordEmailResponse eResult.
         * @member {number} eResult
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @instance
         */
        CMsgClientRequestForgottenPasswordEmailResponse.prototype.eResult = 0;
    
        /**
         * CMsgClientRequestForgottenPasswordEmailResponse use_secret_question.
         * @member {boolean} use_secret_question
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @instance
         */
        CMsgClientRequestForgottenPasswordEmailResponse.prototype.use_secret_question = false;
    
        /**
         * Creates a new CMsgClientRequestForgottenPasswordEmailResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmailResponse=} [properties] Properties to set
         * @returns {CMsgClientRequestForgottenPasswordEmailResponse} CMsgClientRequestForgottenPasswordEmailResponse instance
         */
        CMsgClientRequestForgottenPasswordEmailResponse.create = function create(properties) {
            return new CMsgClientRequestForgottenPasswordEmailResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestForgottenPasswordEmailResponse message. Does not implicitly {@link CMsgClientRequestForgottenPasswordEmailResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmailResponse} message CMsgClientRequestForgottenPasswordEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestForgottenPasswordEmailResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eResult);
            if (message.use_secret_question != null && message.hasOwnProperty("use_secret_question"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.use_secret_question);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestForgottenPasswordEmailResponse message, length delimited. Does not implicitly {@link CMsgClientRequestForgottenPasswordEmailResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {ICMsgClientRequestForgottenPasswordEmailResponse} message CMsgClientRequestForgottenPasswordEmailResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestForgottenPasswordEmailResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestForgottenPasswordEmailResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestForgottenPasswordEmailResponse} CMsgClientRequestForgottenPasswordEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestForgottenPasswordEmailResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestForgottenPasswordEmailResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eResult = reader.uint32();
                    break;
                case 2:
                    message.use_secret_question = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestForgottenPasswordEmailResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestForgottenPasswordEmailResponse} CMsgClientRequestForgottenPasswordEmailResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestForgottenPasswordEmailResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestForgottenPasswordEmailResponse message.
         * @function verify
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestForgottenPasswordEmailResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                if (!$util.isInteger(message.eResult))
                    return "eResult: integer expected";
            if (message.use_secret_question != null && message.hasOwnProperty("use_secret_question"))
                if (typeof message.use_secret_question !== "boolean")
                    return "use_secret_question: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestForgottenPasswordEmailResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestForgottenPasswordEmailResponse} CMsgClientRequestForgottenPasswordEmailResponse
         */
        CMsgClientRequestForgottenPasswordEmailResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestForgottenPasswordEmailResponse)
                return object;
            var message = new $root.CMsgClientRequestForgottenPasswordEmailResponse();
            if (object.eResult != null)
                message.eResult = object.eResult >>> 0;
            if (object.use_secret_question != null)
                message.use_secret_question = Boolean(object.use_secret_question);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestForgottenPasswordEmailResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @static
         * @param {CMsgClientRequestForgottenPasswordEmailResponse} message CMsgClientRequestForgottenPasswordEmailResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestForgottenPasswordEmailResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eResult = 0;
                object.use_secret_question = false;
            }
            if (message.eResult != null && message.hasOwnProperty("eResult"))
                object.eResult = message.eResult;
            if (message.use_secret_question != null && message.hasOwnProperty("use_secret_question"))
                object.use_secret_question = message.use_secret_question;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestForgottenPasswordEmailResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestForgottenPasswordEmailResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestForgottenPasswordEmailResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestForgottenPasswordEmailResponse;
    })();
    
    $root.CMsgClientItemAnnouncements = (function() {
    
        /**
         * Properties of a CMsgClientItemAnnouncements.
         * @exports ICMsgClientItemAnnouncements
         * @interface ICMsgClientItemAnnouncements
         * @property {number|null} [count_new_items] CMsgClientItemAnnouncements count_new_items
         * @property {Array.<CMsgClientItemAnnouncements.IUnseenItem>|null} [unseen_items] CMsgClientItemAnnouncements unseen_items
         */
    
        /**
         * Constructs a new CMsgClientItemAnnouncements.
         * @exports CMsgClientItemAnnouncements
         * @classdesc Represents a CMsgClientItemAnnouncements.
         * @implements ICMsgClientItemAnnouncements
         * @constructor
         * @param {ICMsgClientItemAnnouncements=} [properties] Properties to set
         */
        function CMsgClientItemAnnouncements(properties) {
            this.unseen_items = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientItemAnnouncements count_new_items.
         * @member {number} count_new_items
         * @memberof CMsgClientItemAnnouncements
         * @instance
         */
        CMsgClientItemAnnouncements.prototype.count_new_items = 0;
    
        /**
         * CMsgClientItemAnnouncements unseen_items.
         * @member {Array.<CMsgClientItemAnnouncements.IUnseenItem>} unseen_items
         * @memberof CMsgClientItemAnnouncements
         * @instance
         */
        CMsgClientItemAnnouncements.prototype.unseen_items = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientItemAnnouncements instance using the specified properties.
         * @function create
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {ICMsgClientItemAnnouncements=} [properties] Properties to set
         * @returns {CMsgClientItemAnnouncements} CMsgClientItemAnnouncements instance
         */
        CMsgClientItemAnnouncements.create = function create(properties) {
            return new CMsgClientItemAnnouncements(properties);
        };
    
        /**
         * Encodes the specified CMsgClientItemAnnouncements message. Does not implicitly {@link CMsgClientItemAnnouncements.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {ICMsgClientItemAnnouncements} message CMsgClientItemAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientItemAnnouncements.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.count_new_items != null && message.hasOwnProperty("count_new_items"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.count_new_items);
            if (message.unseen_items != null && message.unseen_items.length)
                for (var i = 0; i < message.unseen_items.length; ++i)
                    $root.CMsgClientItemAnnouncements.UnseenItem.encode(message.unseen_items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientItemAnnouncements message, length delimited. Does not implicitly {@link CMsgClientItemAnnouncements.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {ICMsgClientItemAnnouncements} message CMsgClientItemAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientItemAnnouncements.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientItemAnnouncements message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientItemAnnouncements} CMsgClientItemAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientItemAnnouncements.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientItemAnnouncements();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.count_new_items = reader.uint32();
                    break;
                case 2:
                    if (!(message.unseen_items && message.unseen_items.length))
                        message.unseen_items = [];
                    message.unseen_items.push($root.CMsgClientItemAnnouncements.UnseenItem.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientItemAnnouncements message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientItemAnnouncements} CMsgClientItemAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientItemAnnouncements.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientItemAnnouncements message.
         * @function verify
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientItemAnnouncements.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.count_new_items != null && message.hasOwnProperty("count_new_items"))
                if (!$util.isInteger(message.count_new_items))
                    return "count_new_items: integer expected";
            if (message.unseen_items != null && message.hasOwnProperty("unseen_items")) {
                if (!Array.isArray(message.unseen_items))
                    return "unseen_items: array expected";
                for (var i = 0; i < message.unseen_items.length; ++i) {
                    var error = $root.CMsgClientItemAnnouncements.UnseenItem.verify(message.unseen_items[i]);
                    if (error)
                        return "unseen_items." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientItemAnnouncements message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientItemAnnouncements} CMsgClientItemAnnouncements
         */
        CMsgClientItemAnnouncements.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientItemAnnouncements)
                return object;
            var message = new $root.CMsgClientItemAnnouncements();
            if (object.count_new_items != null)
                message.count_new_items = object.count_new_items >>> 0;
            if (object.unseen_items) {
                if (!Array.isArray(object.unseen_items))
                    throw TypeError(".CMsgClientItemAnnouncements.unseen_items: array expected");
                message.unseen_items = [];
                for (var i = 0; i < object.unseen_items.length; ++i) {
                    if (typeof object.unseen_items[i] !== "object")
                        throw TypeError(".CMsgClientItemAnnouncements.unseen_items: object expected");
                    message.unseen_items[i] = $root.CMsgClientItemAnnouncements.UnseenItem.fromObject(object.unseen_items[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientItemAnnouncements message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientItemAnnouncements
         * @static
         * @param {CMsgClientItemAnnouncements} message CMsgClientItemAnnouncements
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientItemAnnouncements.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.unseen_items = [];
            if (options.defaults)
                object.count_new_items = 0;
            if (message.count_new_items != null && message.hasOwnProperty("count_new_items"))
                object.count_new_items = message.count_new_items;
            if (message.unseen_items && message.unseen_items.length) {
                object.unseen_items = [];
                for (var j = 0; j < message.unseen_items.length; ++j)
                    object.unseen_items[j] = $root.CMsgClientItemAnnouncements.UnseenItem.toObject(message.unseen_items[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientItemAnnouncements to JSON.
         * @function toJSON
         * @memberof CMsgClientItemAnnouncements
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientItemAnnouncements.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientItemAnnouncements.UnseenItem = (function() {
    
            /**
             * Properties of an UnseenItem.
             * @memberof CMsgClientItemAnnouncements
             * @interface IUnseenItem
             * @property {number|null} [appid] UnseenItem appid
             * @property {number|Long|null} [context_id] UnseenItem context_id
             * @property {number|Long|null} [asset_id] UnseenItem asset_id
             * @property {number|Long|null} [amount] UnseenItem amount
             * @property {number|null} [rtime32_gained] UnseenItem rtime32_gained
             * @property {number|null} [source_appid] UnseenItem source_appid
             */
    
            /**
             * Constructs a new UnseenItem.
             * @memberof CMsgClientItemAnnouncements
             * @classdesc Represents an UnseenItem.
             * @implements IUnseenItem
             * @constructor
             * @param {CMsgClientItemAnnouncements.IUnseenItem=} [properties] Properties to set
             */
            function UnseenItem(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * UnseenItem appid.
             * @member {number} appid
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.appid = 0;
    
            /**
             * UnseenItem context_id.
             * @member {number|Long} context_id
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.context_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * UnseenItem asset_id.
             * @member {number|Long} asset_id
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.asset_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * UnseenItem amount.
             * @member {number|Long} amount
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.amount = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * UnseenItem rtime32_gained.
             * @member {number} rtime32_gained
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.rtime32_gained = 0;
    
            /**
             * UnseenItem source_appid.
             * @member {number} source_appid
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             */
            UnseenItem.prototype.source_appid = 0;
    
            /**
             * Creates a new UnseenItem instance using the specified properties.
             * @function create
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {CMsgClientItemAnnouncements.IUnseenItem=} [properties] Properties to set
             * @returns {CMsgClientItemAnnouncements.UnseenItem} UnseenItem instance
             */
            UnseenItem.create = function create(properties) {
                return new UnseenItem(properties);
            };
    
            /**
             * Encodes the specified UnseenItem message. Does not implicitly {@link CMsgClientItemAnnouncements.UnseenItem.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {CMsgClientItemAnnouncements.IUnseenItem} message UnseenItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UnseenItem.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && message.hasOwnProperty("appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.context_id != null && message.hasOwnProperty("context_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.context_id);
                if (message.asset_id != null && message.hasOwnProperty("asset_id"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.asset_id);
                if (message.amount != null && message.hasOwnProperty("amount"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.amount);
                if (message.rtime32_gained != null && message.hasOwnProperty("rtime32_gained"))
                    writer.uint32(/* id 5, wireType 5 =*/45).fixed32(message.rtime32_gained);
                if (message.source_appid != null && message.hasOwnProperty("source_appid"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.source_appid);
                return writer;
            };
    
            /**
             * Encodes the specified UnseenItem message, length delimited. Does not implicitly {@link CMsgClientItemAnnouncements.UnseenItem.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {CMsgClientItemAnnouncements.IUnseenItem} message UnseenItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UnseenItem.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an UnseenItem message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientItemAnnouncements.UnseenItem} UnseenItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UnseenItem.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientItemAnnouncements.UnseenItem();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.context_id = reader.uint64();
                        break;
                    case 3:
                        message.asset_id = reader.uint64();
                        break;
                    case 4:
                        message.amount = reader.uint64();
                        break;
                    case 5:
                        message.rtime32_gained = reader.fixed32();
                        break;
                    case 6:
                        message.source_appid = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an UnseenItem message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientItemAnnouncements.UnseenItem} UnseenItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UnseenItem.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an UnseenItem message.
             * @function verify
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UnseenItem.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.context_id != null && message.hasOwnProperty("context_id"))
                    if (!$util.isInteger(message.context_id) && !(message.context_id && $util.isInteger(message.context_id.low) && $util.isInteger(message.context_id.high)))
                        return "context_id: integer|Long expected";
                if (message.asset_id != null && message.hasOwnProperty("asset_id"))
                    if (!$util.isInteger(message.asset_id) && !(message.asset_id && $util.isInteger(message.asset_id.low) && $util.isInteger(message.asset_id.high)))
                        return "asset_id: integer|Long expected";
                if (message.amount != null && message.hasOwnProperty("amount"))
                    if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high)))
                        return "amount: integer|Long expected";
                if (message.rtime32_gained != null && message.hasOwnProperty("rtime32_gained"))
                    if (!$util.isInteger(message.rtime32_gained))
                        return "rtime32_gained: integer expected";
                if (message.source_appid != null && message.hasOwnProperty("source_appid"))
                    if (!$util.isInteger(message.source_appid))
                        return "source_appid: integer expected";
                return null;
            };
    
            /**
             * Creates an UnseenItem message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientItemAnnouncements.UnseenItem} UnseenItem
             */
            UnseenItem.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientItemAnnouncements.UnseenItem)
                    return object;
                var message = new $root.CMsgClientItemAnnouncements.UnseenItem();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.context_id != null)
                    if ($util.Long)
                        (message.context_id = $util.Long.fromValue(object.context_id)).unsigned = true;
                    else if (typeof object.context_id === "string")
                        message.context_id = parseInt(object.context_id, 10);
                    else if (typeof object.context_id === "number")
                        message.context_id = object.context_id;
                    else if (typeof object.context_id === "object")
                        message.context_id = new $util.LongBits(object.context_id.low >>> 0, object.context_id.high >>> 0).toNumber(true);
                if (object.asset_id != null)
                    if ($util.Long)
                        (message.asset_id = $util.Long.fromValue(object.asset_id)).unsigned = true;
                    else if (typeof object.asset_id === "string")
                        message.asset_id = parseInt(object.asset_id, 10);
                    else if (typeof object.asset_id === "number")
                        message.asset_id = object.asset_id;
                    else if (typeof object.asset_id === "object")
                        message.asset_id = new $util.LongBits(object.asset_id.low >>> 0, object.asset_id.high >>> 0).toNumber(true);
                if (object.amount != null)
                    if ($util.Long)
                        (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;
                    else if (typeof object.amount === "string")
                        message.amount = parseInt(object.amount, 10);
                    else if (typeof object.amount === "number")
                        message.amount = object.amount;
                    else if (typeof object.amount === "object")
                        message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);
                if (object.rtime32_gained != null)
                    message.rtime32_gained = object.rtime32_gained >>> 0;
                if (object.source_appid != null)
                    message.source_appid = object.source_appid >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an UnseenItem message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @static
             * @param {CMsgClientItemAnnouncements.UnseenItem} message UnseenItem
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UnseenItem.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.context_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.context_id = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.asset_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.asset_id = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.amount = options.longs === String ? "0" : 0;
                    object.rtime32_gained = 0;
                    object.source_appid = 0;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.context_id != null && message.hasOwnProperty("context_id"))
                    if (typeof message.context_id === "number")
                        object.context_id = options.longs === String ? String(message.context_id) : message.context_id;
                    else
                        object.context_id = options.longs === String ? $util.Long.prototype.toString.call(message.context_id) : options.longs === Number ? new $util.LongBits(message.context_id.low >>> 0, message.context_id.high >>> 0).toNumber(true) : message.context_id;
                if (message.asset_id != null && message.hasOwnProperty("asset_id"))
                    if (typeof message.asset_id === "number")
                        object.asset_id = options.longs === String ? String(message.asset_id) : message.asset_id;
                    else
                        object.asset_id = options.longs === String ? $util.Long.prototype.toString.call(message.asset_id) : options.longs === Number ? new $util.LongBits(message.asset_id.low >>> 0, message.asset_id.high >>> 0).toNumber(true) : message.asset_id;
                if (message.amount != null && message.hasOwnProperty("amount"))
                    if (typeof message.amount === "number")
                        object.amount = options.longs === String ? String(message.amount) : message.amount;
                    else
                        object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;
                if (message.rtime32_gained != null && message.hasOwnProperty("rtime32_gained"))
                    object.rtime32_gained = message.rtime32_gained;
                if (message.source_appid != null && message.hasOwnProperty("source_appid"))
                    object.source_appid = message.source_appid;
                return object;
            };
    
            /**
             * Converts this UnseenItem to JSON.
             * @function toJSON
             * @memberof CMsgClientItemAnnouncements.UnseenItem
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UnseenItem.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return UnseenItem;
        })();
    
        return CMsgClientItemAnnouncements;
    })();
    
    $root.CMsgClientRequestItemAnnouncements = (function() {
    
        /**
         * Properties of a CMsgClientRequestItemAnnouncements.
         * @exports ICMsgClientRequestItemAnnouncements
         * @interface ICMsgClientRequestItemAnnouncements
         */
    
        /**
         * Constructs a new CMsgClientRequestItemAnnouncements.
         * @exports CMsgClientRequestItemAnnouncements
         * @classdesc Represents a CMsgClientRequestItemAnnouncements.
         * @implements ICMsgClientRequestItemAnnouncements
         * @constructor
         * @param {ICMsgClientRequestItemAnnouncements=} [properties] Properties to set
         */
        function CMsgClientRequestItemAnnouncements(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientRequestItemAnnouncements instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {ICMsgClientRequestItemAnnouncements=} [properties] Properties to set
         * @returns {CMsgClientRequestItemAnnouncements} CMsgClientRequestItemAnnouncements instance
         */
        CMsgClientRequestItemAnnouncements.create = function create(properties) {
            return new CMsgClientRequestItemAnnouncements(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestItemAnnouncements message. Does not implicitly {@link CMsgClientRequestItemAnnouncements.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {ICMsgClientRequestItemAnnouncements} message CMsgClientRequestItemAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestItemAnnouncements.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestItemAnnouncements message, length delimited. Does not implicitly {@link CMsgClientRequestItemAnnouncements.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {ICMsgClientRequestItemAnnouncements} message CMsgClientRequestItemAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestItemAnnouncements.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestItemAnnouncements message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestItemAnnouncements} CMsgClientRequestItemAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestItemAnnouncements.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestItemAnnouncements();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestItemAnnouncements message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestItemAnnouncements} CMsgClientRequestItemAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestItemAnnouncements.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestItemAnnouncements message.
         * @function verify
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestItemAnnouncements.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestItemAnnouncements message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestItemAnnouncements} CMsgClientRequestItemAnnouncements
         */
        CMsgClientRequestItemAnnouncements.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestItemAnnouncements)
                return object;
            return new $root.CMsgClientRequestItemAnnouncements();
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestItemAnnouncements message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestItemAnnouncements
         * @static
         * @param {CMsgClientRequestItemAnnouncements} message CMsgClientRequestItemAnnouncements
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestItemAnnouncements.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientRequestItemAnnouncements to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestItemAnnouncements
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestItemAnnouncements.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestItemAnnouncements;
    })();
    
    $root.CMsgClientUserNotifications = (function() {
    
        /**
         * Properties of a CMsgClientUserNotifications.
         * @exports ICMsgClientUserNotifications
         * @interface ICMsgClientUserNotifications
         * @property {Array.<CMsgClientUserNotifications.INotification>|null} [notifications] CMsgClientUserNotifications notifications
         */
    
        /**
         * Constructs a new CMsgClientUserNotifications.
         * @exports CMsgClientUserNotifications
         * @classdesc Represents a CMsgClientUserNotifications.
         * @implements ICMsgClientUserNotifications
         * @constructor
         * @param {ICMsgClientUserNotifications=} [properties] Properties to set
         */
        function CMsgClientUserNotifications(properties) {
            this.notifications = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUserNotifications notifications.
         * @member {Array.<CMsgClientUserNotifications.INotification>} notifications
         * @memberof CMsgClientUserNotifications
         * @instance
         */
        CMsgClientUserNotifications.prototype.notifications = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUserNotifications instance using the specified properties.
         * @function create
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {ICMsgClientUserNotifications=} [properties] Properties to set
         * @returns {CMsgClientUserNotifications} CMsgClientUserNotifications instance
         */
        CMsgClientUserNotifications.create = function create(properties) {
            return new CMsgClientUserNotifications(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUserNotifications message. Does not implicitly {@link CMsgClientUserNotifications.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {ICMsgClientUserNotifications} message CMsgClientUserNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUserNotifications.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.notifications != null && message.notifications.length)
                for (var i = 0; i < message.notifications.length; ++i)
                    $root.CMsgClientUserNotifications.Notification.encode(message.notifications[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUserNotifications message, length delimited. Does not implicitly {@link CMsgClientUserNotifications.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {ICMsgClientUserNotifications} message CMsgClientUserNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUserNotifications.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUserNotifications message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUserNotifications} CMsgClientUserNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUserNotifications.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUserNotifications();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.notifications && message.notifications.length))
                        message.notifications = [];
                    message.notifications.push($root.CMsgClientUserNotifications.Notification.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUserNotifications message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUserNotifications} CMsgClientUserNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUserNotifications.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUserNotifications message.
         * @function verify
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUserNotifications.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.notifications != null && message.hasOwnProperty("notifications")) {
                if (!Array.isArray(message.notifications))
                    return "notifications: array expected";
                for (var i = 0; i < message.notifications.length; ++i) {
                    var error = $root.CMsgClientUserNotifications.Notification.verify(message.notifications[i]);
                    if (error)
                        return "notifications." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUserNotifications message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUserNotifications} CMsgClientUserNotifications
         */
        CMsgClientUserNotifications.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUserNotifications)
                return object;
            var message = new $root.CMsgClientUserNotifications();
            if (object.notifications) {
                if (!Array.isArray(object.notifications))
                    throw TypeError(".CMsgClientUserNotifications.notifications: array expected");
                message.notifications = [];
                for (var i = 0; i < object.notifications.length; ++i) {
                    if (typeof object.notifications[i] !== "object")
                        throw TypeError(".CMsgClientUserNotifications.notifications: object expected");
                    message.notifications[i] = $root.CMsgClientUserNotifications.Notification.fromObject(object.notifications[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUserNotifications message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUserNotifications
         * @static
         * @param {CMsgClientUserNotifications} message CMsgClientUserNotifications
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUserNotifications.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.notifications = [];
            if (message.notifications && message.notifications.length) {
                object.notifications = [];
                for (var j = 0; j < message.notifications.length; ++j)
                    object.notifications[j] = $root.CMsgClientUserNotifications.Notification.toObject(message.notifications[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUserNotifications to JSON.
         * @function toJSON
         * @memberof CMsgClientUserNotifications
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUserNotifications.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUserNotifications.Notification = (function() {
    
            /**
             * Properties of a Notification.
             * @memberof CMsgClientUserNotifications
             * @interface INotification
             * @property {number|null} [user_notification_type] Notification user_notification_type
             * @property {number|null} [count] Notification count
             */
    
            /**
             * Constructs a new Notification.
             * @memberof CMsgClientUserNotifications
             * @classdesc Represents a Notification.
             * @implements INotification
             * @constructor
             * @param {CMsgClientUserNotifications.INotification=} [properties] Properties to set
             */
            function Notification(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Notification user_notification_type.
             * @member {number} user_notification_type
             * @memberof CMsgClientUserNotifications.Notification
             * @instance
             */
            Notification.prototype.user_notification_type = 0;
    
            /**
             * Notification count.
             * @member {number} count
             * @memberof CMsgClientUserNotifications.Notification
             * @instance
             */
            Notification.prototype.count = 0;
    
            /**
             * Creates a new Notification instance using the specified properties.
             * @function create
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {CMsgClientUserNotifications.INotification=} [properties] Properties to set
             * @returns {CMsgClientUserNotifications.Notification} Notification instance
             */
            Notification.create = function create(properties) {
                return new Notification(properties);
            };
    
            /**
             * Encodes the specified Notification message. Does not implicitly {@link CMsgClientUserNotifications.Notification.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {CMsgClientUserNotifications.INotification} message Notification message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Notification.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.user_notification_type != null && message.hasOwnProperty("user_notification_type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.user_notification_type);
                if (message.count != null && message.hasOwnProperty("count"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.count);
                return writer;
            };
    
            /**
             * Encodes the specified Notification message, length delimited. Does not implicitly {@link CMsgClientUserNotifications.Notification.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {CMsgClientUserNotifications.INotification} message Notification message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Notification.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Notification message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUserNotifications.Notification} Notification
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Notification.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUserNotifications.Notification();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.user_notification_type = reader.uint32();
                        break;
                    case 2:
                        message.count = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Notification message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUserNotifications.Notification} Notification
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Notification.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Notification message.
             * @function verify
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Notification.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.user_notification_type != null && message.hasOwnProperty("user_notification_type"))
                    if (!$util.isInteger(message.user_notification_type))
                        return "user_notification_type: integer expected";
                if (message.count != null && message.hasOwnProperty("count"))
                    if (!$util.isInteger(message.count))
                        return "count: integer expected";
                return null;
            };
    
            /**
             * Creates a Notification message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUserNotifications.Notification} Notification
             */
            Notification.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUserNotifications.Notification)
                    return object;
                var message = new $root.CMsgClientUserNotifications.Notification();
                if (object.user_notification_type != null)
                    message.user_notification_type = object.user_notification_type >>> 0;
                if (object.count != null)
                    message.count = object.count >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Notification message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUserNotifications.Notification
             * @static
             * @param {CMsgClientUserNotifications.Notification} message Notification
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Notification.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.user_notification_type = 0;
                    object.count = 0;
                }
                if (message.user_notification_type != null && message.hasOwnProperty("user_notification_type"))
                    object.user_notification_type = message.user_notification_type;
                if (message.count != null && message.hasOwnProperty("count"))
                    object.count = message.count;
                return object;
            };
    
            /**
             * Converts this Notification to JSON.
             * @function toJSON
             * @memberof CMsgClientUserNotifications.Notification
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Notification.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Notification;
        })();
    
        return CMsgClientUserNotifications;
    })();
    
    $root.CMsgClientCommentNotifications = (function() {
    
        /**
         * Properties of a CMsgClientCommentNotifications.
         * @exports ICMsgClientCommentNotifications
         * @interface ICMsgClientCommentNotifications
         * @property {number|null} [count_new_comments] CMsgClientCommentNotifications count_new_comments
         * @property {number|null} [count_new_comments_owner] CMsgClientCommentNotifications count_new_comments_owner
         * @property {number|null} [count_new_comments_subscriptions] CMsgClientCommentNotifications count_new_comments_subscriptions
         */
    
        /**
         * Constructs a new CMsgClientCommentNotifications.
         * @exports CMsgClientCommentNotifications
         * @classdesc Represents a CMsgClientCommentNotifications.
         * @implements ICMsgClientCommentNotifications
         * @constructor
         * @param {ICMsgClientCommentNotifications=} [properties] Properties to set
         */
        function CMsgClientCommentNotifications(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCommentNotifications count_new_comments.
         * @member {number} count_new_comments
         * @memberof CMsgClientCommentNotifications
         * @instance
         */
        CMsgClientCommentNotifications.prototype.count_new_comments = 0;
    
        /**
         * CMsgClientCommentNotifications count_new_comments_owner.
         * @member {number} count_new_comments_owner
         * @memberof CMsgClientCommentNotifications
         * @instance
         */
        CMsgClientCommentNotifications.prototype.count_new_comments_owner = 0;
    
        /**
         * CMsgClientCommentNotifications count_new_comments_subscriptions.
         * @member {number} count_new_comments_subscriptions
         * @memberof CMsgClientCommentNotifications
         * @instance
         */
        CMsgClientCommentNotifications.prototype.count_new_comments_subscriptions = 0;
    
        /**
         * Creates a new CMsgClientCommentNotifications instance using the specified properties.
         * @function create
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {ICMsgClientCommentNotifications=} [properties] Properties to set
         * @returns {CMsgClientCommentNotifications} CMsgClientCommentNotifications instance
         */
        CMsgClientCommentNotifications.create = function create(properties) {
            return new CMsgClientCommentNotifications(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCommentNotifications message. Does not implicitly {@link CMsgClientCommentNotifications.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {ICMsgClientCommentNotifications} message CMsgClientCommentNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCommentNotifications.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.count_new_comments != null && message.hasOwnProperty("count_new_comments"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.count_new_comments);
            if (message.count_new_comments_owner != null && message.hasOwnProperty("count_new_comments_owner"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.count_new_comments_owner);
            if (message.count_new_comments_subscriptions != null && message.hasOwnProperty("count_new_comments_subscriptions"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.count_new_comments_subscriptions);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCommentNotifications message, length delimited. Does not implicitly {@link CMsgClientCommentNotifications.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {ICMsgClientCommentNotifications} message CMsgClientCommentNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCommentNotifications.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCommentNotifications message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCommentNotifications} CMsgClientCommentNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCommentNotifications.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCommentNotifications();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.count_new_comments = reader.uint32();
                    break;
                case 2:
                    message.count_new_comments_owner = reader.uint32();
                    break;
                case 3:
                    message.count_new_comments_subscriptions = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCommentNotifications message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCommentNotifications} CMsgClientCommentNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCommentNotifications.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCommentNotifications message.
         * @function verify
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCommentNotifications.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.count_new_comments != null && message.hasOwnProperty("count_new_comments"))
                if (!$util.isInteger(message.count_new_comments))
                    return "count_new_comments: integer expected";
            if (message.count_new_comments_owner != null && message.hasOwnProperty("count_new_comments_owner"))
                if (!$util.isInteger(message.count_new_comments_owner))
                    return "count_new_comments_owner: integer expected";
            if (message.count_new_comments_subscriptions != null && message.hasOwnProperty("count_new_comments_subscriptions"))
                if (!$util.isInteger(message.count_new_comments_subscriptions))
                    return "count_new_comments_subscriptions: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCommentNotifications message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCommentNotifications} CMsgClientCommentNotifications
         */
        CMsgClientCommentNotifications.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCommentNotifications)
                return object;
            var message = new $root.CMsgClientCommentNotifications();
            if (object.count_new_comments != null)
                message.count_new_comments = object.count_new_comments >>> 0;
            if (object.count_new_comments_owner != null)
                message.count_new_comments_owner = object.count_new_comments_owner >>> 0;
            if (object.count_new_comments_subscriptions != null)
                message.count_new_comments_subscriptions = object.count_new_comments_subscriptions >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCommentNotifications message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCommentNotifications
         * @static
         * @param {CMsgClientCommentNotifications} message CMsgClientCommentNotifications
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCommentNotifications.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.count_new_comments = 0;
                object.count_new_comments_owner = 0;
                object.count_new_comments_subscriptions = 0;
            }
            if (message.count_new_comments != null && message.hasOwnProperty("count_new_comments"))
                object.count_new_comments = message.count_new_comments;
            if (message.count_new_comments_owner != null && message.hasOwnProperty("count_new_comments_owner"))
                object.count_new_comments_owner = message.count_new_comments_owner;
            if (message.count_new_comments_subscriptions != null && message.hasOwnProperty("count_new_comments_subscriptions"))
                object.count_new_comments_subscriptions = message.count_new_comments_subscriptions;
            return object;
        };
    
        /**
         * Converts this CMsgClientCommentNotifications to JSON.
         * @function toJSON
         * @memberof CMsgClientCommentNotifications
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCommentNotifications.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCommentNotifications;
    })();
    
    $root.CMsgClientRequestCommentNotifications = (function() {
    
        /**
         * Properties of a CMsgClientRequestCommentNotifications.
         * @exports ICMsgClientRequestCommentNotifications
         * @interface ICMsgClientRequestCommentNotifications
         */
    
        /**
         * Constructs a new CMsgClientRequestCommentNotifications.
         * @exports CMsgClientRequestCommentNotifications
         * @classdesc Represents a CMsgClientRequestCommentNotifications.
         * @implements ICMsgClientRequestCommentNotifications
         * @constructor
         * @param {ICMsgClientRequestCommentNotifications=} [properties] Properties to set
         */
        function CMsgClientRequestCommentNotifications(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientRequestCommentNotifications instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {ICMsgClientRequestCommentNotifications=} [properties] Properties to set
         * @returns {CMsgClientRequestCommentNotifications} CMsgClientRequestCommentNotifications instance
         */
        CMsgClientRequestCommentNotifications.create = function create(properties) {
            return new CMsgClientRequestCommentNotifications(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestCommentNotifications message. Does not implicitly {@link CMsgClientRequestCommentNotifications.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {ICMsgClientRequestCommentNotifications} message CMsgClientRequestCommentNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestCommentNotifications.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestCommentNotifications message, length delimited. Does not implicitly {@link CMsgClientRequestCommentNotifications.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {ICMsgClientRequestCommentNotifications} message CMsgClientRequestCommentNotifications message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestCommentNotifications.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestCommentNotifications message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestCommentNotifications} CMsgClientRequestCommentNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestCommentNotifications.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestCommentNotifications();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestCommentNotifications message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestCommentNotifications} CMsgClientRequestCommentNotifications
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestCommentNotifications.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestCommentNotifications message.
         * @function verify
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestCommentNotifications.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestCommentNotifications message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestCommentNotifications} CMsgClientRequestCommentNotifications
         */
        CMsgClientRequestCommentNotifications.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestCommentNotifications)
                return object;
            return new $root.CMsgClientRequestCommentNotifications();
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestCommentNotifications message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestCommentNotifications
         * @static
         * @param {CMsgClientRequestCommentNotifications} message CMsgClientRequestCommentNotifications
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestCommentNotifications.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientRequestCommentNotifications to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestCommentNotifications
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestCommentNotifications.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestCommentNotifications;
    })();
    
    $root.CMsgClientOfflineMessageNotification = (function() {
    
        /**
         * Properties of a CMsgClientOfflineMessageNotification.
         * @exports ICMsgClientOfflineMessageNotification
         * @interface ICMsgClientOfflineMessageNotification
         * @property {number|null} [offline_messages] CMsgClientOfflineMessageNotification offline_messages
         * @property {Array.<number>|null} [friends_with_offline_messages] CMsgClientOfflineMessageNotification friends_with_offline_messages
         */
    
        /**
         * Constructs a new CMsgClientOfflineMessageNotification.
         * @exports CMsgClientOfflineMessageNotification
         * @classdesc Represents a CMsgClientOfflineMessageNotification.
         * @implements ICMsgClientOfflineMessageNotification
         * @constructor
         * @param {ICMsgClientOfflineMessageNotification=} [properties] Properties to set
         */
        function CMsgClientOfflineMessageNotification(properties) {
            this.friends_with_offline_messages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientOfflineMessageNotification offline_messages.
         * @member {number} offline_messages
         * @memberof CMsgClientOfflineMessageNotification
         * @instance
         */
        CMsgClientOfflineMessageNotification.prototype.offline_messages = 0;
    
        /**
         * CMsgClientOfflineMessageNotification friends_with_offline_messages.
         * @member {Array.<number>} friends_with_offline_messages
         * @memberof CMsgClientOfflineMessageNotification
         * @instance
         */
        CMsgClientOfflineMessageNotification.prototype.friends_with_offline_messages = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientOfflineMessageNotification instance using the specified properties.
         * @function create
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {ICMsgClientOfflineMessageNotification=} [properties] Properties to set
         * @returns {CMsgClientOfflineMessageNotification} CMsgClientOfflineMessageNotification instance
         */
        CMsgClientOfflineMessageNotification.create = function create(properties) {
            return new CMsgClientOfflineMessageNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgClientOfflineMessageNotification message. Does not implicitly {@link CMsgClientOfflineMessageNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {ICMsgClientOfflineMessageNotification} message CMsgClientOfflineMessageNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOfflineMessageNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.offline_messages != null && message.hasOwnProperty("offline_messages"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.offline_messages);
            if (message.friends_with_offline_messages != null && message.friends_with_offline_messages.length)
                for (var i = 0; i < message.friends_with_offline_messages.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.friends_with_offline_messages[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientOfflineMessageNotification message, length delimited. Does not implicitly {@link CMsgClientOfflineMessageNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {ICMsgClientOfflineMessageNotification} message CMsgClientOfflineMessageNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientOfflineMessageNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientOfflineMessageNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientOfflineMessageNotification} CMsgClientOfflineMessageNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOfflineMessageNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientOfflineMessageNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.offline_messages = reader.uint32();
                    break;
                case 2:
                    if (!(message.friends_with_offline_messages && message.friends_with_offline_messages.length))
                        message.friends_with_offline_messages = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.friends_with_offline_messages.push(reader.uint32());
                    } else
                        message.friends_with_offline_messages.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientOfflineMessageNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientOfflineMessageNotification} CMsgClientOfflineMessageNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientOfflineMessageNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientOfflineMessageNotification message.
         * @function verify
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientOfflineMessageNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.offline_messages != null && message.hasOwnProperty("offline_messages"))
                if (!$util.isInteger(message.offline_messages))
                    return "offline_messages: integer expected";
            if (message.friends_with_offline_messages != null && message.hasOwnProperty("friends_with_offline_messages")) {
                if (!Array.isArray(message.friends_with_offline_messages))
                    return "friends_with_offline_messages: array expected";
                for (var i = 0; i < message.friends_with_offline_messages.length; ++i)
                    if (!$util.isInteger(message.friends_with_offline_messages[i]))
                        return "friends_with_offline_messages: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientOfflineMessageNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientOfflineMessageNotification} CMsgClientOfflineMessageNotification
         */
        CMsgClientOfflineMessageNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientOfflineMessageNotification)
                return object;
            var message = new $root.CMsgClientOfflineMessageNotification();
            if (object.offline_messages != null)
                message.offline_messages = object.offline_messages >>> 0;
            if (object.friends_with_offline_messages) {
                if (!Array.isArray(object.friends_with_offline_messages))
                    throw TypeError(".CMsgClientOfflineMessageNotification.friends_with_offline_messages: array expected");
                message.friends_with_offline_messages = [];
                for (var i = 0; i < object.friends_with_offline_messages.length; ++i)
                    message.friends_with_offline_messages[i] = object.friends_with_offline_messages[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientOfflineMessageNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientOfflineMessageNotification
         * @static
         * @param {CMsgClientOfflineMessageNotification} message CMsgClientOfflineMessageNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientOfflineMessageNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.friends_with_offline_messages = [];
            if (options.defaults)
                object.offline_messages = 0;
            if (message.offline_messages != null && message.hasOwnProperty("offline_messages"))
                object.offline_messages = message.offline_messages;
            if (message.friends_with_offline_messages && message.friends_with_offline_messages.length) {
                object.friends_with_offline_messages = [];
                for (var j = 0; j < message.friends_with_offline_messages.length; ++j)
                    object.friends_with_offline_messages[j] = message.friends_with_offline_messages[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientOfflineMessageNotification to JSON.
         * @function toJSON
         * @memberof CMsgClientOfflineMessageNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientOfflineMessageNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientOfflineMessageNotification;
    })();
    
    $root.CMsgClientRequestOfflineMessageCount = (function() {
    
        /**
         * Properties of a CMsgClientRequestOfflineMessageCount.
         * @exports ICMsgClientRequestOfflineMessageCount
         * @interface ICMsgClientRequestOfflineMessageCount
         */
    
        /**
         * Constructs a new CMsgClientRequestOfflineMessageCount.
         * @exports CMsgClientRequestOfflineMessageCount
         * @classdesc Represents a CMsgClientRequestOfflineMessageCount.
         * @implements ICMsgClientRequestOfflineMessageCount
         * @constructor
         * @param {ICMsgClientRequestOfflineMessageCount=} [properties] Properties to set
         */
        function CMsgClientRequestOfflineMessageCount(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientRequestOfflineMessageCount instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {ICMsgClientRequestOfflineMessageCount=} [properties] Properties to set
         * @returns {CMsgClientRequestOfflineMessageCount} CMsgClientRequestOfflineMessageCount instance
         */
        CMsgClientRequestOfflineMessageCount.create = function create(properties) {
            return new CMsgClientRequestOfflineMessageCount(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestOfflineMessageCount message. Does not implicitly {@link CMsgClientRequestOfflineMessageCount.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {ICMsgClientRequestOfflineMessageCount} message CMsgClientRequestOfflineMessageCount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestOfflineMessageCount.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestOfflineMessageCount message, length delimited. Does not implicitly {@link CMsgClientRequestOfflineMessageCount.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {ICMsgClientRequestOfflineMessageCount} message CMsgClientRequestOfflineMessageCount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestOfflineMessageCount.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestOfflineMessageCount message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestOfflineMessageCount} CMsgClientRequestOfflineMessageCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestOfflineMessageCount.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestOfflineMessageCount();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestOfflineMessageCount message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestOfflineMessageCount} CMsgClientRequestOfflineMessageCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestOfflineMessageCount.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestOfflineMessageCount message.
         * @function verify
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestOfflineMessageCount.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestOfflineMessageCount message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestOfflineMessageCount} CMsgClientRequestOfflineMessageCount
         */
        CMsgClientRequestOfflineMessageCount.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestOfflineMessageCount)
                return object;
            return new $root.CMsgClientRequestOfflineMessageCount();
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestOfflineMessageCount message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestOfflineMessageCount
         * @static
         * @param {CMsgClientRequestOfflineMessageCount} message CMsgClientRequestOfflineMessageCount
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestOfflineMessageCount.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientRequestOfflineMessageCount to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestOfflineMessageCount
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestOfflineMessageCount.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestOfflineMessageCount;
    })();
    
    $root.CMsgClientChatGetFriendMessageHistory = (function() {
    
        /**
         * Properties of a CMsgClientChatGetFriendMessageHistory.
         * @exports ICMsgClientChatGetFriendMessageHistory
         * @interface ICMsgClientChatGetFriendMessageHistory
         * @property {number|Long|null} [steamid] CMsgClientChatGetFriendMessageHistory steamid
         */
    
        /**
         * Constructs a new CMsgClientChatGetFriendMessageHistory.
         * @exports CMsgClientChatGetFriendMessageHistory
         * @classdesc Represents a CMsgClientChatGetFriendMessageHistory.
         * @implements ICMsgClientChatGetFriendMessageHistory
         * @constructor
         * @param {ICMsgClientChatGetFriendMessageHistory=} [properties] Properties to set
         */
        function CMsgClientChatGetFriendMessageHistory(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientChatGetFriendMessageHistory steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @instance
         */
        CMsgClientChatGetFriendMessageHistory.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientChatGetFriendMessageHistory instance using the specified properties.
         * @function create
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistory=} [properties] Properties to set
         * @returns {CMsgClientChatGetFriendMessageHistory} CMsgClientChatGetFriendMessageHistory instance
         */
        CMsgClientChatGetFriendMessageHistory.create = function create(properties) {
            return new CMsgClientChatGetFriendMessageHistory(properties);
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistory message. Does not implicitly {@link CMsgClientChatGetFriendMessageHistory.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistory} message CMsgClientChatGetFriendMessageHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistory message, length delimited. Does not implicitly {@link CMsgClientChatGetFriendMessageHistory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistory} message CMsgClientChatGetFriendMessageHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistory message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientChatGetFriendMessageHistory} CMsgClientChatGetFriendMessageHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistory.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChatGetFriendMessageHistory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientChatGetFriendMessageHistory} CMsgClientChatGetFriendMessageHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientChatGetFriendMessageHistory message.
         * @function verify
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientChatGetFriendMessageHistory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientChatGetFriendMessageHistory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientChatGetFriendMessageHistory} CMsgClientChatGetFriendMessageHistory
         */
        CMsgClientChatGetFriendMessageHistory.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientChatGetFriendMessageHistory)
                return object;
            var message = new $root.CMsgClientChatGetFriendMessageHistory();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientChatGetFriendMessageHistory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @static
         * @param {CMsgClientChatGetFriendMessageHistory} message CMsgClientChatGetFriendMessageHistory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientChatGetFriendMessageHistory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgClientChatGetFriendMessageHistory to JSON.
         * @function toJSON
         * @memberof CMsgClientChatGetFriendMessageHistory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientChatGetFriendMessageHistory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientChatGetFriendMessageHistory;
    })();
    
    $root.CMsgClientChatGetFriendMessageHistoryResponse = (function() {
    
        /**
         * Properties of a CMsgClientChatGetFriendMessageHistoryResponse.
         * @exports ICMsgClientChatGetFriendMessageHistoryResponse
         * @interface ICMsgClientChatGetFriendMessageHistoryResponse
         * @property {number|Long|null} [steamid] CMsgClientChatGetFriendMessageHistoryResponse steamid
         * @property {number|null} [success] CMsgClientChatGetFriendMessageHistoryResponse success
         * @property {Array.<CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage>|null} [messages] CMsgClientChatGetFriendMessageHistoryResponse messages
         */
    
        /**
         * Constructs a new CMsgClientChatGetFriendMessageHistoryResponse.
         * @exports CMsgClientChatGetFriendMessageHistoryResponse
         * @classdesc Represents a CMsgClientChatGetFriendMessageHistoryResponse.
         * @implements ICMsgClientChatGetFriendMessageHistoryResponse
         * @constructor
         * @param {ICMsgClientChatGetFriendMessageHistoryResponse=} [properties] Properties to set
         */
        function CMsgClientChatGetFriendMessageHistoryResponse(properties) {
            this.messages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientChatGetFriendMessageHistoryResponse steamid.
         * @member {number|Long} steamid
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @instance
         */
        CMsgClientChatGetFriendMessageHistoryResponse.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientChatGetFriendMessageHistoryResponse success.
         * @member {number} success
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @instance
         */
        CMsgClientChatGetFriendMessageHistoryResponse.prototype.success = 0;
    
        /**
         * CMsgClientChatGetFriendMessageHistoryResponse messages.
         * @member {Array.<CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage>} messages
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @instance
         */
        CMsgClientChatGetFriendMessageHistoryResponse.prototype.messages = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientChatGetFriendMessageHistoryResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryResponse=} [properties] Properties to set
         * @returns {CMsgClientChatGetFriendMessageHistoryResponse} CMsgClientChatGetFriendMessageHistoryResponse instance
         */
        CMsgClientChatGetFriendMessageHistoryResponse.create = function create(properties) {
            return new CMsgClientChatGetFriendMessageHistoryResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistoryResponse message. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryResponse} message CMsgClientChatGetFriendMessageHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistoryResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.success != null && message.hasOwnProperty("success"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.success);
            if (message.messages != null && message.messages.length)
                for (var i = 0; i < message.messages.length; ++i)
                    $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.encode(message.messages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistoryResponse message, length delimited. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryResponse} message CMsgClientChatGetFriendMessageHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistoryResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistoryResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientChatGetFriendMessageHistoryResponse} CMsgClientChatGetFriendMessageHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistoryResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChatGetFriendMessageHistoryResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.success = reader.uint32();
                    break;
                case 3:
                    if (!(message.messages && message.messages.length))
                        message.messages = [];
                    message.messages.push($root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistoryResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientChatGetFriendMessageHistoryResponse} CMsgClientChatGetFriendMessageHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistoryResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientChatGetFriendMessageHistoryResponse message.
         * @function verify
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientChatGetFriendMessageHistoryResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.success != null && message.hasOwnProperty("success"))
                if (!$util.isInteger(message.success))
                    return "success: integer expected";
            if (message.messages != null && message.hasOwnProperty("messages")) {
                if (!Array.isArray(message.messages))
                    return "messages: array expected";
                for (var i = 0; i < message.messages.length; ++i) {
                    var error = $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.verify(message.messages[i]);
                    if (error)
                        return "messages." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientChatGetFriendMessageHistoryResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientChatGetFriendMessageHistoryResponse} CMsgClientChatGetFriendMessageHistoryResponse
         */
        CMsgClientChatGetFriendMessageHistoryResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientChatGetFriendMessageHistoryResponse)
                return object;
            var message = new $root.CMsgClientChatGetFriendMessageHistoryResponse();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.success != null)
                message.success = object.success >>> 0;
            if (object.messages) {
                if (!Array.isArray(object.messages))
                    throw TypeError(".CMsgClientChatGetFriendMessageHistoryResponse.messages: array expected");
                message.messages = [];
                for (var i = 0; i < object.messages.length; ++i) {
                    if (typeof object.messages[i] !== "object")
                        throw TypeError(".CMsgClientChatGetFriendMessageHistoryResponse.messages: object expected");
                    message.messages[i] = $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.fromObject(object.messages[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientChatGetFriendMessageHistoryResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @static
         * @param {CMsgClientChatGetFriendMessageHistoryResponse} message CMsgClientChatGetFriendMessageHistoryResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientChatGetFriendMessageHistoryResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.messages = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.success = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.success != null && message.hasOwnProperty("success"))
                object.success = message.success;
            if (message.messages && message.messages.length) {
                object.messages = [];
                for (var j = 0; j < message.messages.length; ++j)
                    object.messages[j] = $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.toObject(message.messages[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientChatGetFriendMessageHistoryResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientChatGetFriendMessageHistoryResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientChatGetFriendMessageHistoryResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage = (function() {
    
            /**
             * Properties of a FriendMessage.
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse
             * @interface IFriendMessage
             * @property {number|null} [accountid] FriendMessage accountid
             * @property {number|null} [timestamp] FriendMessage timestamp
             * @property {string|null} [message] FriendMessage message
             * @property {boolean|null} [unread] FriendMessage unread
             */
    
            /**
             * Constructs a new FriendMessage.
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse
             * @classdesc Represents a FriendMessage.
             * @implements IFriendMessage
             * @constructor
             * @param {CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage=} [properties] Properties to set
             */
            function FriendMessage(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * FriendMessage accountid.
             * @member {number} accountid
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @instance
             */
            FriendMessage.prototype.accountid = 0;
    
            /**
             * FriendMessage timestamp.
             * @member {number} timestamp
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @instance
             */
            FriendMessage.prototype.timestamp = 0;
    
            /**
             * FriendMessage message.
             * @member {string} message
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @instance
             */
            FriendMessage.prototype.message = "";
    
            /**
             * FriendMessage unread.
             * @member {boolean} unread
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @instance
             */
            FriendMessage.prototype.unread = false;
    
            /**
             * Creates a new FriendMessage instance using the specified properties.
             * @function create
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage=} [properties] Properties to set
             * @returns {CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage} FriendMessage instance
             */
            FriendMessage.create = function create(properties) {
                return new FriendMessage(properties);
            };
    
            /**
             * Encodes the specified FriendMessage message. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage} message FriendMessage message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FriendMessage.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountid);
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timestamp);
                if (message.message != null && message.hasOwnProperty("message"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                if (message.unread != null && message.hasOwnProperty("unread"))
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.unread);
                return writer;
            };
    
            /**
             * Encodes the specified FriendMessage message, length delimited. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {CMsgClientChatGetFriendMessageHistoryResponse.IFriendMessage} message FriendMessage message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FriendMessage.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a FriendMessage message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage} FriendMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FriendMessage.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.accountid = reader.uint32();
                        break;
                    case 2:
                        message.timestamp = reader.uint32();
                        break;
                    case 3:
                        message.message = reader.string();
                        break;
                    case 4:
                        message.unread = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a FriendMessage message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage} FriendMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FriendMessage.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a FriendMessage message.
             * @function verify
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FriendMessage.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    if (!$util.isInteger(message.accountid))
                        return "accountid: integer expected";
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    if (!$util.isInteger(message.timestamp))
                        return "timestamp: integer expected";
                if (message.message != null && message.hasOwnProperty("message"))
                    if (!$util.isString(message.message))
                        return "message: string expected";
                if (message.unread != null && message.hasOwnProperty("unread"))
                    if (typeof message.unread !== "boolean")
                        return "unread: boolean expected";
                return null;
            };
    
            /**
             * Creates a FriendMessage message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage} FriendMessage
             */
            FriendMessage.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
                    return object;
                var message = new $root.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage();
                if (object.accountid != null)
                    message.accountid = object.accountid >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                if (object.message != null)
                    message.message = String(object.message);
                if (object.unread != null)
                    message.unread = Boolean(object.unread);
                return message;
            };
    
            /**
             * Creates a plain object from a FriendMessage message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @static
             * @param {CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage} message FriendMessage
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FriendMessage.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.accountid = 0;
                    object.timestamp = 0;
                    object.message = "";
                    object.unread = false;
                }
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    object.accountid = message.accountid;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                if (message.message != null && message.hasOwnProperty("message"))
                    object.message = message.message;
                if (message.unread != null && message.hasOwnProperty("unread"))
                    object.unread = message.unread;
                return object;
            };
    
            /**
             * Converts this FriendMessage to JSON.
             * @function toJSON
             * @memberof CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FriendMessage.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return FriendMessage;
        })();
    
        return CMsgClientChatGetFriendMessageHistoryResponse;
    })();
    
    $root.CMsgClientChatGetFriendMessageHistoryForOfflineMessages = (function() {
    
        /**
         * Properties of a CMsgClientChatGetFriendMessageHistoryForOfflineMessages.
         * @exports ICMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @interface ICMsgClientChatGetFriendMessageHistoryForOfflineMessages
         */
    
        /**
         * Constructs a new CMsgClientChatGetFriendMessageHistoryForOfflineMessages.
         * @exports CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @classdesc Represents a CMsgClientChatGetFriendMessageHistoryForOfflineMessages.
         * @implements ICMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @constructor
         * @param {ICMsgClientChatGetFriendMessageHistoryForOfflineMessages=} [properties] Properties to set
         */
        function CMsgClientChatGetFriendMessageHistoryForOfflineMessages(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientChatGetFriendMessageHistoryForOfflineMessages instance using the specified properties.
         * @function create
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryForOfflineMessages=} [properties] Properties to set
         * @returns {CMsgClientChatGetFriendMessageHistoryForOfflineMessages} CMsgClientChatGetFriendMessageHistoryForOfflineMessages instance
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.create = function create(properties) {
            return new CMsgClientChatGetFriendMessageHistoryForOfflineMessages(properties);
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistoryForOfflineMessages message. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryForOfflineMessages.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryForOfflineMessages} message CMsgClientChatGetFriendMessageHistoryForOfflineMessages message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientChatGetFriendMessageHistoryForOfflineMessages message, length delimited. Does not implicitly {@link CMsgClientChatGetFriendMessageHistoryForOfflineMessages.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {ICMsgClientChatGetFriendMessageHistoryForOfflineMessages} message CMsgClientChatGetFriendMessageHistoryForOfflineMessages message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistoryForOfflineMessages message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientChatGetFriendMessageHistoryForOfflineMessages} CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientChatGetFriendMessageHistoryForOfflineMessages message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientChatGetFriendMessageHistoryForOfflineMessages} CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientChatGetFriendMessageHistoryForOfflineMessages message.
         * @function verify
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientChatGetFriendMessageHistoryForOfflineMessages message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientChatGetFriendMessageHistoryForOfflineMessages} CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
                return object;
            return new $root.CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
        };
    
        /**
         * Creates a plain object from a CMsgClientChatGetFriendMessageHistoryForOfflineMessages message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @static
         * @param {CMsgClientChatGetFriendMessageHistoryForOfflineMessages} message CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientChatGetFriendMessageHistoryForOfflineMessages to JSON.
         * @function toJSON
         * @memberof CMsgClientChatGetFriendMessageHistoryForOfflineMessages
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientChatGetFriendMessageHistoryForOfflineMessages.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientChatGetFriendMessageHistoryForOfflineMessages;
    })();
    
    $root.CMsgClientFSGetFriendsSteamLevels = (function() {
    
        /**
         * Properties of a CMsgClientFSGetFriendsSteamLevels.
         * @exports ICMsgClientFSGetFriendsSteamLevels
         * @interface ICMsgClientFSGetFriendsSteamLevels
         * @property {Array.<number>|null} [accountids] CMsgClientFSGetFriendsSteamLevels accountids
         */
    
        /**
         * Constructs a new CMsgClientFSGetFriendsSteamLevels.
         * @exports CMsgClientFSGetFriendsSteamLevels
         * @classdesc Represents a CMsgClientFSGetFriendsSteamLevels.
         * @implements ICMsgClientFSGetFriendsSteamLevels
         * @constructor
         * @param {ICMsgClientFSGetFriendsSteamLevels=} [properties] Properties to set
         */
        function CMsgClientFSGetFriendsSteamLevels(properties) {
            this.accountids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientFSGetFriendsSteamLevels accountids.
         * @member {Array.<number>} accountids
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @instance
         */
        CMsgClientFSGetFriendsSteamLevels.prototype.accountids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientFSGetFriendsSteamLevels instance using the specified properties.
         * @function create
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevels=} [properties] Properties to set
         * @returns {CMsgClientFSGetFriendsSteamLevels} CMsgClientFSGetFriendsSteamLevels instance
         */
        CMsgClientFSGetFriendsSteamLevels.create = function create(properties) {
            return new CMsgClientFSGetFriendsSteamLevels(properties);
        };
    
        /**
         * Encodes the specified CMsgClientFSGetFriendsSteamLevels message. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevels.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevels} message CMsgClientFSGetFriendsSteamLevels message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFSGetFriendsSteamLevels.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.accountids != null && message.accountids.length)
                for (var i = 0; i < message.accountids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientFSGetFriendsSteamLevels message, length delimited. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevels.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevels} message CMsgClientFSGetFriendsSteamLevels message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFSGetFriendsSteamLevels.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientFSGetFriendsSteamLevels message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientFSGetFriendsSteamLevels} CMsgClientFSGetFriendsSteamLevels
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFSGetFriendsSteamLevels.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientFSGetFriendsSteamLevels();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.accountids && message.accountids.length))
                        message.accountids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.accountids.push(reader.uint32());
                    } else
                        message.accountids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientFSGetFriendsSteamLevels message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientFSGetFriendsSteamLevels} CMsgClientFSGetFriendsSteamLevels
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFSGetFriendsSteamLevels.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientFSGetFriendsSteamLevels message.
         * @function verify
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientFSGetFriendsSteamLevels.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.accountids != null && message.hasOwnProperty("accountids")) {
                if (!Array.isArray(message.accountids))
                    return "accountids: array expected";
                for (var i = 0; i < message.accountids.length; ++i)
                    if (!$util.isInteger(message.accountids[i]))
                        return "accountids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientFSGetFriendsSteamLevels message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientFSGetFriendsSteamLevels} CMsgClientFSGetFriendsSteamLevels
         */
        CMsgClientFSGetFriendsSteamLevels.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientFSGetFriendsSteamLevels)
                return object;
            var message = new $root.CMsgClientFSGetFriendsSteamLevels();
            if (object.accountids) {
                if (!Array.isArray(object.accountids))
                    throw TypeError(".CMsgClientFSGetFriendsSteamLevels.accountids: array expected");
                message.accountids = [];
                for (var i = 0; i < object.accountids.length; ++i)
                    message.accountids[i] = object.accountids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientFSGetFriendsSteamLevels message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @static
         * @param {CMsgClientFSGetFriendsSteamLevels} message CMsgClientFSGetFriendsSteamLevels
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientFSGetFriendsSteamLevels.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.accountids = [];
            if (message.accountids && message.accountids.length) {
                object.accountids = [];
                for (var j = 0; j < message.accountids.length; ++j)
                    object.accountids[j] = message.accountids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientFSGetFriendsSteamLevels to JSON.
         * @function toJSON
         * @memberof CMsgClientFSGetFriendsSteamLevels
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientFSGetFriendsSteamLevels.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientFSGetFriendsSteamLevels;
    })();
    
    $root.CMsgClientFSGetFriendsSteamLevelsResponse = (function() {
    
        /**
         * Properties of a CMsgClientFSGetFriendsSteamLevelsResponse.
         * @exports ICMsgClientFSGetFriendsSteamLevelsResponse
         * @interface ICMsgClientFSGetFriendsSteamLevelsResponse
         * @property {Array.<CMsgClientFSGetFriendsSteamLevelsResponse.IFriend>|null} [friends] CMsgClientFSGetFriendsSteamLevelsResponse friends
         */
    
        /**
         * Constructs a new CMsgClientFSGetFriendsSteamLevelsResponse.
         * @exports CMsgClientFSGetFriendsSteamLevelsResponse
         * @classdesc Represents a CMsgClientFSGetFriendsSteamLevelsResponse.
         * @implements ICMsgClientFSGetFriendsSteamLevelsResponse
         * @constructor
         * @param {ICMsgClientFSGetFriendsSteamLevelsResponse=} [properties] Properties to set
         */
        function CMsgClientFSGetFriendsSteamLevelsResponse(properties) {
            this.friends = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientFSGetFriendsSteamLevelsResponse friends.
         * @member {Array.<CMsgClientFSGetFriendsSteamLevelsResponse.IFriend>} friends
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @instance
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.prototype.friends = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientFSGetFriendsSteamLevelsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevelsResponse=} [properties] Properties to set
         * @returns {CMsgClientFSGetFriendsSteamLevelsResponse} CMsgClientFSGetFriendsSteamLevelsResponse instance
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.create = function create(properties) {
            return new CMsgClientFSGetFriendsSteamLevelsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientFSGetFriendsSteamLevelsResponse message. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevelsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevelsResponse} message CMsgClientFSGetFriendsSteamLevelsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.friends != null && message.friends.length)
                for (var i = 0; i < message.friends.length; ++i)
                    $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.encode(message.friends[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientFSGetFriendsSteamLevelsResponse message, length delimited. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevelsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {ICMsgClientFSGetFriendsSteamLevelsResponse} message CMsgClientFSGetFriendsSteamLevelsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientFSGetFriendsSteamLevelsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientFSGetFriendsSteamLevelsResponse} CMsgClientFSGetFriendsSteamLevelsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientFSGetFriendsSteamLevelsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.friends && message.friends.length))
                        message.friends = [];
                    message.friends.push($root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientFSGetFriendsSteamLevelsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientFSGetFriendsSteamLevelsResponse} CMsgClientFSGetFriendsSteamLevelsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientFSGetFriendsSteamLevelsResponse message.
         * @function verify
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.friends != null && message.hasOwnProperty("friends")) {
                if (!Array.isArray(message.friends))
                    return "friends: array expected";
                for (var i = 0; i < message.friends.length; ++i) {
                    var error = $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.verify(message.friends[i]);
                    if (error)
                        return "friends." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientFSGetFriendsSteamLevelsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientFSGetFriendsSteamLevelsResponse} CMsgClientFSGetFriendsSteamLevelsResponse
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientFSGetFriendsSteamLevelsResponse)
                return object;
            var message = new $root.CMsgClientFSGetFriendsSteamLevelsResponse();
            if (object.friends) {
                if (!Array.isArray(object.friends))
                    throw TypeError(".CMsgClientFSGetFriendsSteamLevelsResponse.friends: array expected");
                message.friends = [];
                for (var i = 0; i < object.friends.length; ++i) {
                    if (typeof object.friends[i] !== "object")
                        throw TypeError(".CMsgClientFSGetFriendsSteamLevelsResponse.friends: object expected");
                    message.friends[i] = $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.fromObject(object.friends[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientFSGetFriendsSteamLevelsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @static
         * @param {CMsgClientFSGetFriendsSteamLevelsResponse} message CMsgClientFSGetFriendsSteamLevelsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.friends = [];
            if (message.friends && message.friends.length) {
                object.friends = [];
                for (var j = 0; j < message.friends.length; ++j)
                    object.friends[j] = $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.toObject(message.friends[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientFSGetFriendsSteamLevelsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientFSGetFriendsSteamLevelsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientFSGetFriendsSteamLevelsResponse.Friend = (function() {
    
            /**
             * Properties of a Friend.
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
             * @interface IFriend
             * @property {number|null} [accountid] Friend accountid
             * @property {number|null} [level] Friend level
             */
    
            /**
             * Constructs a new Friend.
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse
             * @classdesc Represents a Friend.
             * @implements IFriend
             * @constructor
             * @param {CMsgClientFSGetFriendsSteamLevelsResponse.IFriend=} [properties] Properties to set
             */
            function Friend(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Friend accountid.
             * @member {number} accountid
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @instance
             */
            Friend.prototype.accountid = 0;
    
            /**
             * Friend level.
             * @member {number} level
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @instance
             */
            Friend.prototype.level = 0;
    
            /**
             * Creates a new Friend instance using the specified properties.
             * @function create
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {CMsgClientFSGetFriendsSteamLevelsResponse.IFriend=} [properties] Properties to set
             * @returns {CMsgClientFSGetFriendsSteamLevelsResponse.Friend} Friend instance
             */
            Friend.create = function create(properties) {
                return new Friend(properties);
            };
    
            /**
             * Encodes the specified Friend message. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevelsResponse.Friend.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {CMsgClientFSGetFriendsSteamLevelsResponse.IFriend} message Friend message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Friend.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.accountid);
                if (message.level != null && message.hasOwnProperty("level"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.level);
                return writer;
            };
    
            /**
             * Encodes the specified Friend message, length delimited. Does not implicitly {@link CMsgClientFSGetFriendsSteamLevelsResponse.Friend.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {CMsgClientFSGetFriendsSteamLevelsResponse.IFriend} message Friend message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Friend.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Friend message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientFSGetFriendsSteamLevelsResponse.Friend} Friend
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Friend.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.accountid = reader.uint32();
                        break;
                    case 2:
                        message.level = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Friend message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientFSGetFriendsSteamLevelsResponse.Friend} Friend
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Friend.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Friend message.
             * @function verify
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Friend.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    if (!$util.isInteger(message.accountid))
                        return "accountid: integer expected";
                if (message.level != null && message.hasOwnProperty("level"))
                    if (!$util.isInteger(message.level))
                        return "level: integer expected";
                return null;
            };
    
            /**
             * Creates a Friend message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientFSGetFriendsSteamLevelsResponse.Friend} Friend
             */
            Friend.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
                    return object;
                var message = new $root.CMsgClientFSGetFriendsSteamLevelsResponse.Friend();
                if (object.accountid != null)
                    message.accountid = object.accountid >>> 0;
                if (object.level != null)
                    message.level = object.level >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Friend message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @static
             * @param {CMsgClientFSGetFriendsSteamLevelsResponse.Friend} message Friend
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Friend.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.accountid = 0;
                    object.level = 0;
                }
                if (message.accountid != null && message.hasOwnProperty("accountid"))
                    object.accountid = message.accountid;
                if (message.level != null && message.hasOwnProperty("level"))
                    object.level = message.level;
                return object;
            };
    
            /**
             * Converts this Friend to JSON.
             * @function toJSON
             * @memberof CMsgClientFSGetFriendsSteamLevelsResponse.Friend
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Friend.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Friend;
        })();
    
        return CMsgClientFSGetFriendsSteamLevelsResponse;
    })();
    
    $root.CMsgClientEmailAddrInfo = (function() {
    
        /**
         * Properties of a CMsgClientEmailAddrInfo.
         * @exports ICMsgClientEmailAddrInfo
         * @interface ICMsgClientEmailAddrInfo
         * @property {string|null} [email_address] CMsgClientEmailAddrInfo email_address
         * @property {boolean|null} [email_is_validated] CMsgClientEmailAddrInfo email_is_validated
         * @property {boolean|null} [email_validation_changed] CMsgClientEmailAddrInfo email_validation_changed
         * @property {boolean|null} [credential_change_requires_code] CMsgClientEmailAddrInfo credential_change_requires_code
         * @property {boolean|null} [password_or_secretqa_change_requires_code] CMsgClientEmailAddrInfo password_or_secretqa_change_requires_code
         * @property {boolean|null} [remind_user_about_email] CMsgClientEmailAddrInfo remind_user_about_email
         */
    
        /**
         * Constructs a new CMsgClientEmailAddrInfo.
         * @exports CMsgClientEmailAddrInfo
         * @classdesc Represents a CMsgClientEmailAddrInfo.
         * @implements ICMsgClientEmailAddrInfo
         * @constructor
         * @param {ICMsgClientEmailAddrInfo=} [properties] Properties to set
         */
        function CMsgClientEmailAddrInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientEmailAddrInfo email_address.
         * @member {string} email_address
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.email_address = "";
    
        /**
         * CMsgClientEmailAddrInfo email_is_validated.
         * @member {boolean} email_is_validated
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.email_is_validated = false;
    
        /**
         * CMsgClientEmailAddrInfo email_validation_changed.
         * @member {boolean} email_validation_changed
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.email_validation_changed = false;
    
        /**
         * CMsgClientEmailAddrInfo credential_change_requires_code.
         * @member {boolean} credential_change_requires_code
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.credential_change_requires_code = false;
    
        /**
         * CMsgClientEmailAddrInfo password_or_secretqa_change_requires_code.
         * @member {boolean} password_or_secretqa_change_requires_code
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.password_or_secretqa_change_requires_code = false;
    
        /**
         * CMsgClientEmailAddrInfo remind_user_about_email.
         * @member {boolean} remind_user_about_email
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         */
        CMsgClientEmailAddrInfo.prototype.remind_user_about_email = false;
    
        /**
         * Creates a new CMsgClientEmailAddrInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {ICMsgClientEmailAddrInfo=} [properties] Properties to set
         * @returns {CMsgClientEmailAddrInfo} CMsgClientEmailAddrInfo instance
         */
        CMsgClientEmailAddrInfo.create = function create(properties) {
            return new CMsgClientEmailAddrInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientEmailAddrInfo message. Does not implicitly {@link CMsgClientEmailAddrInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {ICMsgClientEmailAddrInfo} message CMsgClientEmailAddrInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmailAddrInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.email_address);
            if (message.email_is_validated != null && message.hasOwnProperty("email_is_validated"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.email_is_validated);
            if (message.email_validation_changed != null && message.hasOwnProperty("email_validation_changed"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.email_validation_changed);
            if (message.credential_change_requires_code != null && message.hasOwnProperty("credential_change_requires_code"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.credential_change_requires_code);
            if (message.password_or_secretqa_change_requires_code != null && message.hasOwnProperty("password_or_secretqa_change_requires_code"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.password_or_secretqa_change_requires_code);
            if (message.remind_user_about_email != null && message.hasOwnProperty("remind_user_about_email"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.remind_user_about_email);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientEmailAddrInfo message, length delimited. Does not implicitly {@link CMsgClientEmailAddrInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {ICMsgClientEmailAddrInfo} message CMsgClientEmailAddrInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientEmailAddrInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientEmailAddrInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientEmailAddrInfo} CMsgClientEmailAddrInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmailAddrInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientEmailAddrInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.email_address = reader.string();
                    break;
                case 2:
                    message.email_is_validated = reader.bool();
                    break;
                case 3:
                    message.email_validation_changed = reader.bool();
                    break;
                case 4:
                    message.credential_change_requires_code = reader.bool();
                    break;
                case 5:
                    message.password_or_secretqa_change_requires_code = reader.bool();
                    break;
                case 6:
                    message.remind_user_about_email = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientEmailAddrInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientEmailAddrInfo} CMsgClientEmailAddrInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientEmailAddrInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientEmailAddrInfo message.
         * @function verify
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientEmailAddrInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                if (!$util.isString(message.email_address))
                    return "email_address: string expected";
            if (message.email_is_validated != null && message.hasOwnProperty("email_is_validated"))
                if (typeof message.email_is_validated !== "boolean")
                    return "email_is_validated: boolean expected";
            if (message.email_validation_changed != null && message.hasOwnProperty("email_validation_changed"))
                if (typeof message.email_validation_changed !== "boolean")
                    return "email_validation_changed: boolean expected";
            if (message.credential_change_requires_code != null && message.hasOwnProperty("credential_change_requires_code"))
                if (typeof message.credential_change_requires_code !== "boolean")
                    return "credential_change_requires_code: boolean expected";
            if (message.password_or_secretqa_change_requires_code != null && message.hasOwnProperty("password_or_secretqa_change_requires_code"))
                if (typeof message.password_or_secretqa_change_requires_code !== "boolean")
                    return "password_or_secretqa_change_requires_code: boolean expected";
            if (message.remind_user_about_email != null && message.hasOwnProperty("remind_user_about_email"))
                if (typeof message.remind_user_about_email !== "boolean")
                    return "remind_user_about_email: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientEmailAddrInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientEmailAddrInfo} CMsgClientEmailAddrInfo
         */
        CMsgClientEmailAddrInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientEmailAddrInfo)
                return object;
            var message = new $root.CMsgClientEmailAddrInfo();
            if (object.email_address != null)
                message.email_address = String(object.email_address);
            if (object.email_is_validated != null)
                message.email_is_validated = Boolean(object.email_is_validated);
            if (object.email_validation_changed != null)
                message.email_validation_changed = Boolean(object.email_validation_changed);
            if (object.credential_change_requires_code != null)
                message.credential_change_requires_code = Boolean(object.credential_change_requires_code);
            if (object.password_or_secretqa_change_requires_code != null)
                message.password_or_secretqa_change_requires_code = Boolean(object.password_or_secretqa_change_requires_code);
            if (object.remind_user_about_email != null)
                message.remind_user_about_email = Boolean(object.remind_user_about_email);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientEmailAddrInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientEmailAddrInfo
         * @static
         * @param {CMsgClientEmailAddrInfo} message CMsgClientEmailAddrInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientEmailAddrInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.email_address = "";
                object.email_is_validated = false;
                object.email_validation_changed = false;
                object.credential_change_requires_code = false;
                object.password_or_secretqa_change_requires_code = false;
                object.remind_user_about_email = false;
            }
            if (message.email_address != null && message.hasOwnProperty("email_address"))
                object.email_address = message.email_address;
            if (message.email_is_validated != null && message.hasOwnProperty("email_is_validated"))
                object.email_is_validated = message.email_is_validated;
            if (message.email_validation_changed != null && message.hasOwnProperty("email_validation_changed"))
                object.email_validation_changed = message.email_validation_changed;
            if (message.credential_change_requires_code != null && message.hasOwnProperty("credential_change_requires_code"))
                object.credential_change_requires_code = message.credential_change_requires_code;
            if (message.password_or_secretqa_change_requires_code != null && message.hasOwnProperty("password_or_secretqa_change_requires_code"))
                object.password_or_secretqa_change_requires_code = message.password_or_secretqa_change_requires_code;
            if (message.remind_user_about_email != null && message.hasOwnProperty("remind_user_about_email"))
                object.remind_user_about_email = message.remind_user_about_email;
            return object;
        };
    
        /**
         * Converts this CMsgClientEmailAddrInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientEmailAddrInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientEmailAddrInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientEmailAddrInfo;
    })();
    
    $root.CMsgCREItemVoteSummary = (function() {
    
        /**
         * Properties of a CMsgCREItemVoteSummary.
         * @exports ICMsgCREItemVoteSummary
         * @interface ICMsgCREItemVoteSummary
         * @property {Array.<CMsgCREItemVoteSummary.IPublishedFileId>|null} [published_file_ids] CMsgCREItemVoteSummary published_file_ids
         */
    
        /**
         * Constructs a new CMsgCREItemVoteSummary.
         * @exports CMsgCREItemVoteSummary
         * @classdesc Represents a CMsgCREItemVoteSummary.
         * @implements ICMsgCREItemVoteSummary
         * @constructor
         * @param {ICMsgCREItemVoteSummary=} [properties] Properties to set
         */
        function CMsgCREItemVoteSummary(properties) {
            this.published_file_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREItemVoteSummary published_file_ids.
         * @member {Array.<CMsgCREItemVoteSummary.IPublishedFileId>} published_file_ids
         * @memberof CMsgCREItemVoteSummary
         * @instance
         */
        CMsgCREItemVoteSummary.prototype.published_file_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREItemVoteSummary instance using the specified properties.
         * @function create
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {ICMsgCREItemVoteSummary=} [properties] Properties to set
         * @returns {CMsgCREItemVoteSummary} CMsgCREItemVoteSummary instance
         */
        CMsgCREItemVoteSummary.create = function create(properties) {
            return new CMsgCREItemVoteSummary(properties);
        };
    
        /**
         * Encodes the specified CMsgCREItemVoteSummary message. Does not implicitly {@link CMsgCREItemVoteSummary.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {ICMsgCREItemVoteSummary} message CMsgCREItemVoteSummary message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREItemVoteSummary.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_ids != null && message.published_file_ids.length)
                for (var i = 0; i < message.published_file_ids.length; ++i)
                    $root.CMsgCREItemVoteSummary.PublishedFileId.encode(message.published_file_ids[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREItemVoteSummary message, length delimited. Does not implicitly {@link CMsgCREItemVoteSummary.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {ICMsgCREItemVoteSummary} message CMsgCREItemVoteSummary message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREItemVoteSummary.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREItemVoteSummary message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREItemVoteSummary} CMsgCREItemVoteSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREItemVoteSummary.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREItemVoteSummary();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.published_file_ids && message.published_file_ids.length))
                        message.published_file_ids = [];
                    message.published_file_ids.push($root.CMsgCREItemVoteSummary.PublishedFileId.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREItemVoteSummary message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREItemVoteSummary} CMsgCREItemVoteSummary
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREItemVoteSummary.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREItemVoteSummary message.
         * @function verify
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREItemVoteSummary.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_ids != null && message.hasOwnProperty("published_file_ids")) {
                if (!Array.isArray(message.published_file_ids))
                    return "published_file_ids: array expected";
                for (var i = 0; i < message.published_file_ids.length; ++i) {
                    var error = $root.CMsgCREItemVoteSummary.PublishedFileId.verify(message.published_file_ids[i]);
                    if (error)
                        return "published_file_ids." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREItemVoteSummary message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREItemVoteSummary} CMsgCREItemVoteSummary
         */
        CMsgCREItemVoteSummary.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREItemVoteSummary)
                return object;
            var message = new $root.CMsgCREItemVoteSummary();
            if (object.published_file_ids) {
                if (!Array.isArray(object.published_file_ids))
                    throw TypeError(".CMsgCREItemVoteSummary.published_file_ids: array expected");
                message.published_file_ids = [];
                for (var i = 0; i < object.published_file_ids.length; ++i) {
                    if (typeof object.published_file_ids[i] !== "object")
                        throw TypeError(".CMsgCREItemVoteSummary.published_file_ids: object expected");
                    message.published_file_ids[i] = $root.CMsgCREItemVoteSummary.PublishedFileId.fromObject(object.published_file_ids[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREItemVoteSummary message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREItemVoteSummary
         * @static
         * @param {CMsgCREItemVoteSummary} message CMsgCREItemVoteSummary
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREItemVoteSummary.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.published_file_ids = [];
            if (message.published_file_ids && message.published_file_ids.length) {
                object.published_file_ids = [];
                for (var j = 0; j < message.published_file_ids.length; ++j)
                    object.published_file_ids[j] = $root.CMsgCREItemVoteSummary.PublishedFileId.toObject(message.published_file_ids[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREItemVoteSummary to JSON.
         * @function toJSON
         * @memberof CMsgCREItemVoteSummary
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREItemVoteSummary.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgCREItemVoteSummary.PublishedFileId = (function() {
    
            /**
             * Properties of a PublishedFileId.
             * @memberof CMsgCREItemVoteSummary
             * @interface IPublishedFileId
             * @property {number|Long|null} [published_file_id] PublishedFileId published_file_id
             */
    
            /**
             * Constructs a new PublishedFileId.
             * @memberof CMsgCREItemVoteSummary
             * @classdesc Represents a PublishedFileId.
             * @implements IPublishedFileId
             * @constructor
             * @param {CMsgCREItemVoteSummary.IPublishedFileId=} [properties] Properties to set
             */
            function PublishedFileId(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PublishedFileId published_file_id.
             * @member {number|Long} published_file_id
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @instance
             */
            PublishedFileId.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Creates a new PublishedFileId instance using the specified properties.
             * @function create
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {CMsgCREItemVoteSummary.IPublishedFileId=} [properties] Properties to set
             * @returns {CMsgCREItemVoteSummary.PublishedFileId} PublishedFileId instance
             */
            PublishedFileId.create = function create(properties) {
                return new PublishedFileId(properties);
            };
    
            /**
             * Encodes the specified PublishedFileId message. Does not implicitly {@link CMsgCREItemVoteSummary.PublishedFileId.verify|verify} messages.
             * @function encode
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {CMsgCREItemVoteSummary.IPublishedFileId} message PublishedFileId message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PublishedFileId.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
                return writer;
            };
    
            /**
             * Encodes the specified PublishedFileId message, length delimited. Does not implicitly {@link CMsgCREItemVoteSummary.PublishedFileId.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {CMsgCREItemVoteSummary.IPublishedFileId} message PublishedFileId message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PublishedFileId.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PublishedFileId message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgCREItemVoteSummary.PublishedFileId} PublishedFileId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PublishedFileId.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREItemVoteSummary.PublishedFileId();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.published_file_id = reader.fixed64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PublishedFileId message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgCREItemVoteSummary.PublishedFileId} PublishedFileId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PublishedFileId.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PublishedFileId message.
             * @function verify
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PublishedFileId.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                        return "published_file_id: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PublishedFileId message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgCREItemVoteSummary.PublishedFileId} PublishedFileId
             */
            PublishedFileId.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgCREItemVoteSummary.PublishedFileId)
                    return object;
                var message = new $root.CMsgCREItemVoteSummary.PublishedFileId();
                if (object.published_file_id != null)
                    if ($util.Long)
                        (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                    else if (typeof object.published_file_id === "string")
                        message.published_file_id = parseInt(object.published_file_id, 10);
                    else if (typeof object.published_file_id === "number")
                        message.published_file_id = object.published_file_id;
                    else if (typeof object.published_file_id === "object")
                        message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
                return message;
            };
    
            /**
             * Creates a plain object from a PublishedFileId message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @static
             * @param {CMsgCREItemVoteSummary.PublishedFileId} message PublishedFileId
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PublishedFileId.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.published_file_id = options.longs === String ? "0" : 0;
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (typeof message.published_file_id === "number")
                        object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                    else
                        object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
                return object;
            };
    
            /**
             * Converts this PublishedFileId to JSON.
             * @function toJSON
             * @memberof CMsgCREItemVoteSummary.PublishedFileId
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PublishedFileId.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PublishedFileId;
        })();
    
        return CMsgCREItemVoteSummary;
    })();
    
    $root.CMsgCREItemVoteSummaryResponse = (function() {
    
        /**
         * Properties of a CMsgCREItemVoteSummaryResponse.
         * @exports ICMsgCREItemVoteSummaryResponse
         * @interface ICMsgCREItemVoteSummaryResponse
         * @property {number|null} [eresult] CMsgCREItemVoteSummaryResponse eresult
         * @property {Array.<CMsgCREItemVoteSummaryResponse.IItemVoteSummary>|null} [item_vote_summaries] CMsgCREItemVoteSummaryResponse item_vote_summaries
         */
    
        /**
         * Constructs a new CMsgCREItemVoteSummaryResponse.
         * @exports CMsgCREItemVoteSummaryResponse
         * @classdesc Represents a CMsgCREItemVoteSummaryResponse.
         * @implements ICMsgCREItemVoteSummaryResponse
         * @constructor
         * @param {ICMsgCREItemVoteSummaryResponse=} [properties] Properties to set
         */
        function CMsgCREItemVoteSummaryResponse(properties) {
            this.item_vote_summaries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREItemVoteSummaryResponse eresult.
         * @member {number} eresult
         * @memberof CMsgCREItemVoteSummaryResponse
         * @instance
         */
        CMsgCREItemVoteSummaryResponse.prototype.eresult = 2;
    
        /**
         * CMsgCREItemVoteSummaryResponse item_vote_summaries.
         * @member {Array.<CMsgCREItemVoteSummaryResponse.IItemVoteSummary>} item_vote_summaries
         * @memberof CMsgCREItemVoteSummaryResponse
         * @instance
         */
        CMsgCREItemVoteSummaryResponse.prototype.item_vote_summaries = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREItemVoteSummaryResponse instance using the specified properties.
         * @function create
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {ICMsgCREItemVoteSummaryResponse=} [properties] Properties to set
         * @returns {CMsgCREItemVoteSummaryResponse} CMsgCREItemVoteSummaryResponse instance
         */
        CMsgCREItemVoteSummaryResponse.create = function create(properties) {
            return new CMsgCREItemVoteSummaryResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgCREItemVoteSummaryResponse message. Does not implicitly {@link CMsgCREItemVoteSummaryResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {ICMsgCREItemVoteSummaryResponse} message CMsgCREItemVoteSummaryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREItemVoteSummaryResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.item_vote_summaries != null && message.item_vote_summaries.length)
                for (var i = 0; i < message.item_vote_summaries.length; ++i)
                    $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.encode(message.item_vote_summaries[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREItemVoteSummaryResponse message, length delimited. Does not implicitly {@link CMsgCREItemVoteSummaryResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {ICMsgCREItemVoteSummaryResponse} message CMsgCREItemVoteSummaryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREItemVoteSummaryResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREItemVoteSummaryResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREItemVoteSummaryResponse} CMsgCREItemVoteSummaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREItemVoteSummaryResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREItemVoteSummaryResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    if (!(message.item_vote_summaries && message.item_vote_summaries.length))
                        message.item_vote_summaries = [];
                    message.item_vote_summaries.push($root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREItemVoteSummaryResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREItemVoteSummaryResponse} CMsgCREItemVoteSummaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREItemVoteSummaryResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREItemVoteSummaryResponse message.
         * @function verify
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREItemVoteSummaryResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.item_vote_summaries != null && message.hasOwnProperty("item_vote_summaries")) {
                if (!Array.isArray(message.item_vote_summaries))
                    return "item_vote_summaries: array expected";
                for (var i = 0; i < message.item_vote_summaries.length; ++i) {
                    var error = $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.verify(message.item_vote_summaries[i]);
                    if (error)
                        return "item_vote_summaries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREItemVoteSummaryResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREItemVoteSummaryResponse} CMsgCREItemVoteSummaryResponse
         */
        CMsgCREItemVoteSummaryResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREItemVoteSummaryResponse)
                return object;
            var message = new $root.CMsgCREItemVoteSummaryResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.item_vote_summaries) {
                if (!Array.isArray(object.item_vote_summaries))
                    throw TypeError(".CMsgCREItemVoteSummaryResponse.item_vote_summaries: array expected");
                message.item_vote_summaries = [];
                for (var i = 0; i < object.item_vote_summaries.length; ++i) {
                    if (typeof object.item_vote_summaries[i] !== "object")
                        throw TypeError(".CMsgCREItemVoteSummaryResponse.item_vote_summaries: object expected");
                    message.item_vote_summaries[i] = $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.fromObject(object.item_vote_summaries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREItemVoteSummaryResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREItemVoteSummaryResponse
         * @static
         * @param {CMsgCREItemVoteSummaryResponse} message CMsgCREItemVoteSummaryResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREItemVoteSummaryResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.item_vote_summaries = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.item_vote_summaries && message.item_vote_summaries.length) {
                object.item_vote_summaries = [];
                for (var j = 0; j < message.item_vote_summaries.length; ++j)
                    object.item_vote_summaries[j] = $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.toObject(message.item_vote_summaries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREItemVoteSummaryResponse to JSON.
         * @function toJSON
         * @memberof CMsgCREItemVoteSummaryResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREItemVoteSummaryResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgCREItemVoteSummaryResponse.ItemVoteSummary = (function() {
    
            /**
             * Properties of an ItemVoteSummary.
             * @memberof CMsgCREItemVoteSummaryResponse
             * @interface IItemVoteSummary
             * @property {number|Long|null} [published_file_id] ItemVoteSummary published_file_id
             * @property {number|null} [votes_for] ItemVoteSummary votes_for
             * @property {number|null} [votes_against] ItemVoteSummary votes_against
             * @property {number|null} [reports] ItemVoteSummary reports
             * @property {number|null} [score] ItemVoteSummary score
             */
    
            /**
             * Constructs a new ItemVoteSummary.
             * @memberof CMsgCREItemVoteSummaryResponse
             * @classdesc Represents an ItemVoteSummary.
             * @implements IItemVoteSummary
             * @constructor
             * @param {CMsgCREItemVoteSummaryResponse.IItemVoteSummary=} [properties] Properties to set
             */
            function ItemVoteSummary(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ItemVoteSummary published_file_id.
             * @member {number|Long} published_file_id
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             */
            ItemVoteSummary.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * ItemVoteSummary votes_for.
             * @member {number} votes_for
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             */
            ItemVoteSummary.prototype.votes_for = 0;
    
            /**
             * ItemVoteSummary votes_against.
             * @member {number} votes_against
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             */
            ItemVoteSummary.prototype.votes_against = 0;
    
            /**
             * ItemVoteSummary reports.
             * @member {number} reports
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             */
            ItemVoteSummary.prototype.reports = 0;
    
            /**
             * ItemVoteSummary score.
             * @member {number} score
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             */
            ItemVoteSummary.prototype.score = 0;
    
            /**
             * Creates a new ItemVoteSummary instance using the specified properties.
             * @function create
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {CMsgCREItemVoteSummaryResponse.IItemVoteSummary=} [properties] Properties to set
             * @returns {CMsgCREItemVoteSummaryResponse.ItemVoteSummary} ItemVoteSummary instance
             */
            ItemVoteSummary.create = function create(properties) {
                return new ItemVoteSummary(properties);
            };
    
            /**
             * Encodes the specified ItemVoteSummary message. Does not implicitly {@link CMsgCREItemVoteSummaryResponse.ItemVoteSummary.verify|verify} messages.
             * @function encode
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {CMsgCREItemVoteSummaryResponse.IItemVoteSummary} message ItemVoteSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemVoteSummary.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
                if (message.votes_for != null && message.hasOwnProperty("votes_for"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.votes_for);
                if (message.votes_against != null && message.hasOwnProperty("votes_against"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.votes_against);
                if (message.reports != null && message.hasOwnProperty("reports"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.reports);
                if (message.score != null && message.hasOwnProperty("score"))
                    writer.uint32(/* id 5, wireType 5 =*/45).float(message.score);
                return writer;
            };
    
            /**
             * Encodes the specified ItemVoteSummary message, length delimited. Does not implicitly {@link CMsgCREItemVoteSummaryResponse.ItemVoteSummary.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {CMsgCREItemVoteSummaryResponse.IItemVoteSummary} message ItemVoteSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemVoteSummary.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ItemVoteSummary message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgCREItemVoteSummaryResponse.ItemVoteSummary} ItemVoteSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemVoteSummary.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.published_file_id = reader.fixed64();
                        break;
                    case 2:
                        message.votes_for = reader.int32();
                        break;
                    case 3:
                        message.votes_against = reader.int32();
                        break;
                    case 4:
                        message.reports = reader.int32();
                        break;
                    case 5:
                        message.score = reader.float();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ItemVoteSummary message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgCREItemVoteSummaryResponse.ItemVoteSummary} ItemVoteSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemVoteSummary.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ItemVoteSummary message.
             * @function verify
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ItemVoteSummary.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                        return "published_file_id: integer|Long expected";
                if (message.votes_for != null && message.hasOwnProperty("votes_for"))
                    if (!$util.isInteger(message.votes_for))
                        return "votes_for: integer expected";
                if (message.votes_against != null && message.hasOwnProperty("votes_against"))
                    if (!$util.isInteger(message.votes_against))
                        return "votes_against: integer expected";
                if (message.reports != null && message.hasOwnProperty("reports"))
                    if (!$util.isInteger(message.reports))
                        return "reports: integer expected";
                if (message.score != null && message.hasOwnProperty("score"))
                    if (typeof message.score !== "number")
                        return "score: number expected";
                return null;
            };
    
            /**
             * Creates an ItemVoteSummary message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgCREItemVoteSummaryResponse.ItemVoteSummary} ItemVoteSummary
             */
            ItemVoteSummary.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
                    return object;
                var message = new $root.CMsgCREItemVoteSummaryResponse.ItemVoteSummary();
                if (object.published_file_id != null)
                    if ($util.Long)
                        (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                    else if (typeof object.published_file_id === "string")
                        message.published_file_id = parseInt(object.published_file_id, 10);
                    else if (typeof object.published_file_id === "number")
                        message.published_file_id = object.published_file_id;
                    else if (typeof object.published_file_id === "object")
                        message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
                if (object.votes_for != null)
                    message.votes_for = object.votes_for | 0;
                if (object.votes_against != null)
                    message.votes_against = object.votes_against | 0;
                if (object.reports != null)
                    message.reports = object.reports | 0;
                if (object.score != null)
                    message.score = Number(object.score);
                return message;
            };
    
            /**
             * Creates a plain object from an ItemVoteSummary message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @static
             * @param {CMsgCREItemVoteSummaryResponse.ItemVoteSummary} message ItemVoteSummary
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ItemVoteSummary.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.published_file_id = options.longs === String ? "0" : 0;
                    object.votes_for = 0;
                    object.votes_against = 0;
                    object.reports = 0;
                    object.score = 0;
                }
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (typeof message.published_file_id === "number")
                        object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                    else
                        object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
                if (message.votes_for != null && message.hasOwnProperty("votes_for"))
                    object.votes_for = message.votes_for;
                if (message.votes_against != null && message.hasOwnProperty("votes_against"))
                    object.votes_against = message.votes_against;
                if (message.reports != null && message.hasOwnProperty("reports"))
                    object.reports = message.reports;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;
                return object;
            };
    
            /**
             * Converts this ItemVoteSummary to JSON.
             * @function toJSON
             * @memberof CMsgCREItemVoteSummaryResponse.ItemVoteSummary
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ItemVoteSummary.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return ItemVoteSummary;
        })();
    
        return CMsgCREItemVoteSummaryResponse;
    })();
    
    $root.CMsgCREUpdateUserPublishedItemVote = (function() {
    
        /**
         * Properties of a CMsgCREUpdateUserPublishedItemVote.
         * @exports ICMsgCREUpdateUserPublishedItemVote
         * @interface ICMsgCREUpdateUserPublishedItemVote
         * @property {number|Long|null} [published_file_id] CMsgCREUpdateUserPublishedItemVote published_file_id
         * @property {boolean|null} [vote_up] CMsgCREUpdateUserPublishedItemVote vote_up
         */
    
        /**
         * Constructs a new CMsgCREUpdateUserPublishedItemVote.
         * @exports CMsgCREUpdateUserPublishedItemVote
         * @classdesc Represents a CMsgCREUpdateUserPublishedItemVote.
         * @implements ICMsgCREUpdateUserPublishedItemVote
         * @constructor
         * @param {ICMsgCREUpdateUserPublishedItemVote=} [properties] Properties to set
         */
        function CMsgCREUpdateUserPublishedItemVote(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREUpdateUserPublishedItemVote published_file_id.
         * @member {number|Long} published_file_id
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgCREUpdateUserPublishedItemVote vote_up.
         * @member {boolean} vote_up
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.vote_up = false;
    
        /**
         * Creates a new CMsgCREUpdateUserPublishedItemVote instance using the specified properties.
         * @function create
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote=} [properties] Properties to set
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote instance
         */
        CMsgCREUpdateUserPublishedItemVote.create = function create(properties) {
            return new CMsgCREUpdateUserPublishedItemVote(properties);
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVote message. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVote.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVote.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.vote_up);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVote message, length delimited. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVote.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVote.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVote message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVote.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREUpdateUserPublishedItemVote();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.published_file_id = reader.fixed64();
                    break;
                case 2:
                    message.vote_up = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVote message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVote.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREUpdateUserPublishedItemVote message.
         * @function verify
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREUpdateUserPublishedItemVote.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                    return "published_file_id: integer|Long expected";
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                if (typeof message.vote_up !== "boolean")
                    return "vote_up: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREUpdateUserPublishedItemVote message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREUpdateUserPublishedItemVote} CMsgCREUpdateUserPublishedItemVote
         */
        CMsgCREUpdateUserPublishedItemVote.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREUpdateUserPublishedItemVote)
                return object;
            var message = new $root.CMsgCREUpdateUserPublishedItemVote();
            if (object.published_file_id != null)
                if ($util.Long)
                    (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                else if (typeof object.published_file_id === "string")
                    message.published_file_id = parseInt(object.published_file_id, 10);
                else if (typeof object.published_file_id === "number")
                    message.published_file_id = object.published_file_id;
                else if (typeof object.published_file_id === "object")
                    message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
            if (object.vote_up != null)
                message.vote_up = Boolean(object.vote_up);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREUpdateUserPublishedItemVote message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @static
         * @param {CMsgCREUpdateUserPublishedItemVote} message CMsgCREUpdateUserPublishedItemVote
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREUpdateUserPublishedItemVote.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.published_file_id = options.longs === String ? "0" : 0;
                object.vote_up = false;
            }
            if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                if (typeof message.published_file_id === "number")
                    object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                else
                    object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
            if (message.vote_up != null && message.hasOwnProperty("vote_up"))
                object.vote_up = message.vote_up;
            return object;
        };
    
        /**
         * Converts this CMsgCREUpdateUserPublishedItemVote to JSON.
         * @function toJSON
         * @memberof CMsgCREUpdateUserPublishedItemVote
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREUpdateUserPublishedItemVote.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREUpdateUserPublishedItemVote;
    })();
    
    $root.CMsgCREUpdateUserPublishedItemVoteResponse = (function() {
    
        /**
         * Properties of a CMsgCREUpdateUserPublishedItemVoteResponse.
         * @exports ICMsgCREUpdateUserPublishedItemVoteResponse
         * @interface ICMsgCREUpdateUserPublishedItemVoteResponse
         * @property {number|null} [eresult] CMsgCREUpdateUserPublishedItemVoteResponse eresult
         */
    
        /**
         * Constructs a new CMsgCREUpdateUserPublishedItemVoteResponse.
         * @exports CMsgCREUpdateUserPublishedItemVoteResponse
         * @classdesc Represents a CMsgCREUpdateUserPublishedItemVoteResponse.
         * @implements ICMsgCREUpdateUserPublishedItemVoteResponse
         * @constructor
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse=} [properties] Properties to set
         */
        function CMsgCREUpdateUserPublishedItemVoteResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREUpdateUserPublishedItemVoteResponse eresult.
         * @member {number} eresult
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @instance
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgCREUpdateUserPublishedItemVoteResponse instance using the specified properties.
         * @function create
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse=} [properties] Properties to set
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse instance
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.create = function create(properties) {
            return new CMsgCREUpdateUserPublishedItemVoteResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVoteResponse message. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVoteResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREUpdateUserPublishedItemVoteResponse message, length delimited. Does not implicitly {@link CMsgCREUpdateUserPublishedItemVoteResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {ICMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVoteResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREUpdateUserPublishedItemVoteResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREUpdateUserPublishedItemVoteResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREUpdateUserPublishedItemVoteResponse message.
         * @function verify
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgCREUpdateUserPublishedItemVoteResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREUpdateUserPublishedItemVoteResponse} CMsgCREUpdateUserPublishedItemVoteResponse
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREUpdateUserPublishedItemVoteResponse)
                return object;
            var message = new $root.CMsgCREUpdateUserPublishedItemVoteResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREUpdateUserPublishedItemVoteResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @static
         * @param {CMsgCREUpdateUserPublishedItemVoteResponse} message CMsgCREUpdateUserPublishedItemVoteResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgCREUpdateUserPublishedItemVoteResponse to JSON.
         * @function toJSON
         * @memberof CMsgCREUpdateUserPublishedItemVoteResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREUpdateUserPublishedItemVoteResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgCREUpdateUserPublishedItemVoteResponse;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetails = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetails.
         * @exports ICMsgCREGetUserPublishedItemVoteDetails
         * @interface ICMsgCREGetUserPublishedItemVoteDetails
         * @property {Array.<CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId>|null} [published_file_ids] CMsgCREGetUserPublishedItemVoteDetails published_file_ids
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetails.
         * @exports CMsgCREGetUserPublishedItemVoteDetails
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetails.
         * @implements ICMsgCREGetUserPublishedItemVoteDetails
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetails=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetails(properties) {
            this.published_file_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetails published_file_ids.
         * @member {Array.<CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId>} published_file_ids
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetails.prototype.published_file_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetails instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails instance
         */
        CMsgCREGetUserPublishedItemVoteDetails.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.published_file_ids != null && message.published_file_ids.length)
                for (var i = 0; i < message.published_file_ids.length; ++i)
                    $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.encode(message.published_file_ids[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetails message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.published_file_ids && message.published_file_ids.length))
                        message.published_file_ids = [];
                    message.published_file_ids.push($root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetails message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.published_file_ids != null && message.hasOwnProperty("published_file_ids")) {
                if (!Array.isArray(message.published_file_ids))
                    return "published_file_ids: array expected";
                for (var i = 0; i < message.published_file_ids.length; ++i) {
                    var error = $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.verify(message.published_file_ids[i]);
                    if (error)
                        return "published_file_ids." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetails} CMsgCREGetUserPublishedItemVoteDetails
         */
        CMsgCREGetUserPublishedItemVoteDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetails)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetails();
            if (object.published_file_ids) {
                if (!Array.isArray(object.published_file_ids))
                    throw TypeError(".CMsgCREGetUserPublishedItemVoteDetails.published_file_ids: array expected");
                message.published_file_ids = [];
                for (var i = 0; i < object.published_file_ids.length; ++i) {
                    if (typeof object.published_file_ids[i] !== "object")
                        throw TypeError(".CMsgCREGetUserPublishedItemVoteDetails.published_file_ids: object expected");
                    message.published_file_ids[i] = $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.fromObject(object.published_file_ids[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetails} message CMsgCREGetUserPublishedItemVoteDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.published_file_ids = [];
            if (message.published_file_ids && message.published_file_ids.length) {
                object.published_file_ids = [];
                for (var j = 0; j < message.published_file_ids.length; ++j)
                    object.published_file_ids[j] = $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.toObject(message.published_file_ids[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetails to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId = (function() {
    
            /**
             * Properties of a PublishedFileId.
             * @memberof CMsgCREGetUserPublishedItemVoteDetails
             * @interface IPublishedFileId
             * @property {number|Long|null} [published_file_id] PublishedFileId published_file_id
             */
    
            /**
             * Constructs a new PublishedFileId.
             * @memberof CMsgCREGetUserPublishedItemVoteDetails
             * @classdesc Represents a PublishedFileId.
             * @implements IPublishedFileId
             * @constructor
             * @param {CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId=} [properties] Properties to set
             */
            function PublishedFileId(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PublishedFileId published_file_id.
             * @member {number|Long} published_file_id
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @instance
             */
            PublishedFileId.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Creates a new PublishedFileId instance using the specified properties.
             * @function create
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId=} [properties] Properties to set
             * @returns {CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId} PublishedFileId instance
             */
            PublishedFileId.create = function create(properties) {
                return new PublishedFileId(properties);
            };
    
            /**
             * Encodes the specified PublishedFileId message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.verify|verify} messages.
             * @function encode
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId} message PublishedFileId message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PublishedFileId.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
                return writer;
            };
    
            /**
             * Encodes the specified PublishedFileId message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetails.IPublishedFileId} message PublishedFileId message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PublishedFileId.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PublishedFileId message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId} PublishedFileId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PublishedFileId.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.published_file_id = reader.fixed64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PublishedFileId message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId} PublishedFileId
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PublishedFileId.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PublishedFileId message.
             * @function verify
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PublishedFileId.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                        return "published_file_id: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PublishedFileId message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId} PublishedFileId
             */
            PublishedFileId.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
                    return object;
                var message = new $root.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId();
                if (object.published_file_id != null)
                    if ($util.Long)
                        (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                    else if (typeof object.published_file_id === "string")
                        message.published_file_id = parseInt(object.published_file_id, 10);
                    else if (typeof object.published_file_id === "number")
                        message.published_file_id = object.published_file_id;
                    else if (typeof object.published_file_id === "object")
                        message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
                return message;
            };
    
            /**
             * Creates a plain object from a PublishedFileId message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId} message PublishedFileId
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PublishedFileId.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.published_file_id = options.longs === String ? "0" : 0;
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (typeof message.published_file_id === "number")
                        object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                    else
                        object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
                return object;
            };
    
            /**
             * Converts this PublishedFileId to JSON.
             * @function toJSON
             * @memberof CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PublishedFileId.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PublishedFileId;
        })();
    
        return CMsgCREGetUserPublishedItemVoteDetails;
    })();
    
    $root.CMsgCREGetUserPublishedItemVoteDetailsResponse = (function() {
    
        /**
         * Properties of a CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @exports ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @interface ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @property {number|null} [eresult] CMsgCREGetUserPublishedItemVoteDetailsResponse eresult
         * @property {Array.<CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail>|null} [user_item_vote_details] CMsgCREGetUserPublishedItemVoteDetailsResponse user_item_vote_details
         */
    
        /**
         * Constructs a new CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @exports CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @classdesc Represents a CMsgCREGetUserPublishedItemVoteDetailsResponse.
         * @implements ICMsgCREGetUserPublishedItemVoteDetailsResponse
         * @constructor
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse=} [properties] Properties to set
         */
        function CMsgCREGetUserPublishedItemVoteDetailsResponse(properties) {
            this.user_item_vote_details = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.eresult = 2;
    
        /**
         * CMsgCREGetUserPublishedItemVoteDetailsResponse user_item_vote_details.
         * @member {Array.<CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail>} user_item_vote_details
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.user_item_vote_details = $util.emptyArray;
    
        /**
         * Creates a new CMsgCREGetUserPublishedItemVoteDetailsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse=} [properties] Properties to set
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse instance
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.create = function create(properties) {
            return new CMsgCREGetUserPublishedItemVoteDetailsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.user_item_vote_details != null && message.user_item_vote_details.length)
                for (var i = 0; i < message.user_item_vote_details.length; ++i)
                    $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.encode(message.user_item_vote_details[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgCREGetUserPublishedItemVoteDetailsResponse message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {ICMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    if (!(message.user_item_vote_details && message.user_item_vote_details.length))
                        message.user_item_vote_details = [];
                    message.user_item_vote_details.push($root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgCREGetUserPublishedItemVoteDetailsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgCREGetUserPublishedItemVoteDetailsResponse message.
         * @function verify
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.user_item_vote_details != null && message.hasOwnProperty("user_item_vote_details")) {
                if (!Array.isArray(message.user_item_vote_details))
                    return "user_item_vote_details: array expected";
                for (var i = 0; i < message.user_item_vote_details.length; ++i) {
                    var error = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.verify(message.user_item_vote_details[i]);
                    if (error)
                        return "user_item_vote_details." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgCREGetUserPublishedItemVoteDetailsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse} CMsgCREGetUserPublishedItemVoteDetailsResponse
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetailsResponse)
                return object;
            var message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.user_item_vote_details) {
                if (!Array.isArray(object.user_item_vote_details))
                    throw TypeError(".CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details: array expected");
                message.user_item_vote_details = [];
                for (var i = 0; i < object.user_item_vote_details.length; ++i) {
                    if (typeof object.user_item_vote_details[i] !== "object")
                        throw TypeError(".CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details: object expected");
                    message.user_item_vote_details[i] = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.fromObject(object.user_item_vote_details[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgCREGetUserPublishedItemVoteDetailsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @static
         * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse} message CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.user_item_vote_details = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.user_item_vote_details && message.user_item_vote_details.length) {
                object.user_item_vote_details = [];
                for (var j = 0; j < message.user_item_vote_details.length; ++j)
                    object.user_item_vote_details[j] = $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.toObject(message.user_item_vote_details[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgCREGetUserPublishedItemVoteDetailsResponse to JSON.
         * @function toJSON
         * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgCREGetUserPublishedItemVoteDetailsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail = (function() {
    
            /**
             * Properties of a UserItemVoteDetail.
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
             * @interface IUserItemVoteDetail
             * @property {number|Long|null} [published_file_id] UserItemVoteDetail published_file_id
             * @property {number|null} [vote] UserItemVoteDetail vote
             */
    
            /**
             * Constructs a new UserItemVoteDetail.
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse
             * @classdesc Represents a UserItemVoteDetail.
             * @implements IUserItemVoteDetail
             * @constructor
             * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail=} [properties] Properties to set
             */
            function UserItemVoteDetail(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * UserItemVoteDetail published_file_id.
             * @member {number|Long} published_file_id
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @instance
             */
            UserItemVoteDetail.prototype.published_file_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * UserItemVoteDetail vote.
             * @member {number} vote
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @instance
             */
            UserItemVoteDetail.prototype.vote = 0;
    
            /**
             * Creates a new UserItemVoteDetail instance using the specified properties.
             * @function create
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail=} [properties] Properties to set
             * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail} UserItemVoteDetail instance
             */
            UserItemVoteDetail.create = function create(properties) {
                return new UserItemVoteDetail(properties);
            };
    
            /**
             * Encodes the specified UserItemVoteDetail message. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.verify|verify} messages.
             * @function encode
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail} message UserItemVoteDetail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserItemVoteDetail.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.published_file_id);
                if (message.vote != null && message.hasOwnProperty("vote"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.vote);
                return writer;
            };
    
            /**
             * Encodes the specified UserItemVoteDetail message, length delimited. Does not implicitly {@link CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse.IUserItemVoteDetail} message UserItemVoteDetail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserItemVoteDetail.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a UserItemVoteDetail message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail} UserItemVoteDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserItemVoteDetail.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.published_file_id = reader.fixed64();
                        break;
                    case 2:
                        message.vote = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a UserItemVoteDetail message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail} UserItemVoteDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserItemVoteDetail.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a UserItemVoteDetail message.
             * @function verify
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UserItemVoteDetail.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (!$util.isInteger(message.published_file_id) && !(message.published_file_id && $util.isInteger(message.published_file_id.low) && $util.isInteger(message.published_file_id.high)))
                        return "published_file_id: integer|Long expected";
                if (message.vote != null && message.hasOwnProperty("vote"))
                    if (!$util.isInteger(message.vote))
                        return "vote: integer expected";
                return null;
            };
    
            /**
             * Creates a UserItemVoteDetail message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail} UserItemVoteDetail
             */
            UserItemVoteDetail.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
                    return object;
                var message = new $root.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail();
                if (object.published_file_id != null)
                    if ($util.Long)
                        (message.published_file_id = $util.Long.fromValue(object.published_file_id)).unsigned = false;
                    else if (typeof object.published_file_id === "string")
                        message.published_file_id = parseInt(object.published_file_id, 10);
                    else if (typeof object.published_file_id === "number")
                        message.published_file_id = object.published_file_id;
                    else if (typeof object.published_file_id === "object")
                        message.published_file_id = new $util.LongBits(object.published_file_id.low >>> 0, object.published_file_id.high >>> 0).toNumber();
                if (object.vote != null)
                    message.vote = object.vote | 0;
                return message;
            };
    
            /**
             * Creates a plain object from a UserItemVoteDetail message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @static
             * @param {CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail} message UserItemVoteDetail
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UserItemVoteDetail.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.published_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.published_file_id = options.longs === String ? "0" : 0;
                    object.vote = 0;
                }
                if (message.published_file_id != null && message.hasOwnProperty("published_file_id"))
                    if (typeof message.published_file_id === "number")
                        object.published_file_id = options.longs === String ? String(message.published_file_id) : message.published_file_id;
                    else
                        object.published_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.published_file_id) : options.longs === Number ? new $util.LongBits(message.published_file_id.low >>> 0, message.published_file_id.high >>> 0).toNumber() : message.published_file_id;
                if (message.vote != null && message.hasOwnProperty("vote"))
                    object.vote = message.vote;
                return object;
            };
    
            /**
             * Converts this UserItemVoteDetail to JSON.
             * @function toJSON
             * @memberof CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UserItemVoteDetail.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return UserItemVoteDetail;
        })();
    
        return CMsgCREGetUserPublishedItemVoteDetailsResponse;
    })();
    
    $root.CMsgFSGetFollowerCount = (function() {
    
        /**
         * Properties of a CMsgFSGetFollowerCount.
         * @exports ICMsgFSGetFollowerCount
         * @interface ICMsgFSGetFollowerCount
         * @property {number|Long|null} [steam_id] CMsgFSGetFollowerCount steam_id
         */
    
        /**
         * Constructs a new CMsgFSGetFollowerCount.
         * @exports CMsgFSGetFollowerCount
         * @classdesc Represents a CMsgFSGetFollowerCount.
         * @implements ICMsgFSGetFollowerCount
         * @constructor
         * @param {ICMsgFSGetFollowerCount=} [properties] Properties to set
         */
        function CMsgFSGetFollowerCount(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSGetFollowerCount steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgFSGetFollowerCount
         * @instance
         */
        CMsgFSGetFollowerCount.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgFSGetFollowerCount instance using the specified properties.
         * @function create
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {ICMsgFSGetFollowerCount=} [properties] Properties to set
         * @returns {CMsgFSGetFollowerCount} CMsgFSGetFollowerCount instance
         */
        CMsgFSGetFollowerCount.create = function create(properties) {
            return new CMsgFSGetFollowerCount(properties);
        };
    
        /**
         * Encodes the specified CMsgFSGetFollowerCount message. Does not implicitly {@link CMsgFSGetFollowerCount.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {ICMsgFSGetFollowerCount} message CMsgFSGetFollowerCount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetFollowerCount.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSGetFollowerCount message, length delimited. Does not implicitly {@link CMsgFSGetFollowerCount.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {ICMsgFSGetFollowerCount} message CMsgFSGetFollowerCount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetFollowerCount.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSGetFollowerCount message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSGetFollowerCount} CMsgFSGetFollowerCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetFollowerCount.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSGetFollowerCount();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSGetFollowerCount message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSGetFollowerCount} CMsgFSGetFollowerCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetFollowerCount.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSGetFollowerCount message.
         * @function verify
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSGetFollowerCount.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgFSGetFollowerCount message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSGetFollowerCount} CMsgFSGetFollowerCount
         */
        CMsgFSGetFollowerCount.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSGetFollowerCount)
                return object;
            var message = new $root.CMsgFSGetFollowerCount();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSGetFollowerCount message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSGetFollowerCount
         * @static
         * @param {CMsgFSGetFollowerCount} message CMsgFSGetFollowerCount
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSGetFollowerCount.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgFSGetFollowerCount to JSON.
         * @function toJSON
         * @memberof CMsgFSGetFollowerCount
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSGetFollowerCount.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSGetFollowerCount;
    })();
    
    $root.CMsgFSGetFollowerCountResponse = (function() {
    
        /**
         * Properties of a CMsgFSGetFollowerCountResponse.
         * @exports ICMsgFSGetFollowerCountResponse
         * @interface ICMsgFSGetFollowerCountResponse
         * @property {number|null} [eresult] CMsgFSGetFollowerCountResponse eresult
         * @property {number|null} [count] CMsgFSGetFollowerCountResponse count
         */
    
        /**
         * Constructs a new CMsgFSGetFollowerCountResponse.
         * @exports CMsgFSGetFollowerCountResponse
         * @classdesc Represents a CMsgFSGetFollowerCountResponse.
         * @implements ICMsgFSGetFollowerCountResponse
         * @constructor
         * @param {ICMsgFSGetFollowerCountResponse=} [properties] Properties to set
         */
        function CMsgFSGetFollowerCountResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSGetFollowerCountResponse eresult.
         * @member {number} eresult
         * @memberof CMsgFSGetFollowerCountResponse
         * @instance
         */
        CMsgFSGetFollowerCountResponse.prototype.eresult = 2;
    
        /**
         * CMsgFSGetFollowerCountResponse count.
         * @member {number} count
         * @memberof CMsgFSGetFollowerCountResponse
         * @instance
         */
        CMsgFSGetFollowerCountResponse.prototype.count = 0;
    
        /**
         * Creates a new CMsgFSGetFollowerCountResponse instance using the specified properties.
         * @function create
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {ICMsgFSGetFollowerCountResponse=} [properties] Properties to set
         * @returns {CMsgFSGetFollowerCountResponse} CMsgFSGetFollowerCountResponse instance
         */
        CMsgFSGetFollowerCountResponse.create = function create(properties) {
            return new CMsgFSGetFollowerCountResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgFSGetFollowerCountResponse message. Does not implicitly {@link CMsgFSGetFollowerCountResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {ICMsgFSGetFollowerCountResponse} message CMsgFSGetFollowerCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetFollowerCountResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.count != null && message.hasOwnProperty("count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.count);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSGetFollowerCountResponse message, length delimited. Does not implicitly {@link CMsgFSGetFollowerCountResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {ICMsgFSGetFollowerCountResponse} message CMsgFSGetFollowerCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetFollowerCountResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSGetFollowerCountResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSGetFollowerCountResponse} CMsgFSGetFollowerCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetFollowerCountResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSGetFollowerCountResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.count = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSGetFollowerCountResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSGetFollowerCountResponse} CMsgFSGetFollowerCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetFollowerCountResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSGetFollowerCountResponse message.
         * @function verify
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSGetFollowerCountResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.count != null && message.hasOwnProperty("count"))
                if (!$util.isInteger(message.count))
                    return "count: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgFSGetFollowerCountResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSGetFollowerCountResponse} CMsgFSGetFollowerCountResponse
         */
        CMsgFSGetFollowerCountResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSGetFollowerCountResponse)
                return object;
            var message = new $root.CMsgFSGetFollowerCountResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.count != null)
                message.count = object.count | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSGetFollowerCountResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSGetFollowerCountResponse
         * @static
         * @param {CMsgFSGetFollowerCountResponse} message CMsgFSGetFollowerCountResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSGetFollowerCountResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.count = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.count != null && message.hasOwnProperty("count"))
                object.count = message.count;
            return object;
        };
    
        /**
         * Converts this CMsgFSGetFollowerCountResponse to JSON.
         * @function toJSON
         * @memberof CMsgFSGetFollowerCountResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSGetFollowerCountResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSGetFollowerCountResponse;
    })();
    
    $root.CMsgFSGetIsFollowing = (function() {
    
        /**
         * Properties of a CMsgFSGetIsFollowing.
         * @exports ICMsgFSGetIsFollowing
         * @interface ICMsgFSGetIsFollowing
         * @property {number|Long|null} [steam_id] CMsgFSGetIsFollowing steam_id
         */
    
        /**
         * Constructs a new CMsgFSGetIsFollowing.
         * @exports CMsgFSGetIsFollowing
         * @classdesc Represents a CMsgFSGetIsFollowing.
         * @implements ICMsgFSGetIsFollowing
         * @constructor
         * @param {ICMsgFSGetIsFollowing=} [properties] Properties to set
         */
        function CMsgFSGetIsFollowing(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSGetIsFollowing steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgFSGetIsFollowing
         * @instance
         */
        CMsgFSGetIsFollowing.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgFSGetIsFollowing instance using the specified properties.
         * @function create
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {ICMsgFSGetIsFollowing=} [properties] Properties to set
         * @returns {CMsgFSGetIsFollowing} CMsgFSGetIsFollowing instance
         */
        CMsgFSGetIsFollowing.create = function create(properties) {
            return new CMsgFSGetIsFollowing(properties);
        };
    
        /**
         * Encodes the specified CMsgFSGetIsFollowing message. Does not implicitly {@link CMsgFSGetIsFollowing.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {ICMsgFSGetIsFollowing} message CMsgFSGetIsFollowing message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetIsFollowing.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSGetIsFollowing message, length delimited. Does not implicitly {@link CMsgFSGetIsFollowing.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {ICMsgFSGetIsFollowing} message CMsgFSGetIsFollowing message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetIsFollowing.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSGetIsFollowing message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSGetIsFollowing} CMsgFSGetIsFollowing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetIsFollowing.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSGetIsFollowing();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSGetIsFollowing message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSGetIsFollowing} CMsgFSGetIsFollowing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetIsFollowing.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSGetIsFollowing message.
         * @function verify
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSGetIsFollowing.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgFSGetIsFollowing message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSGetIsFollowing} CMsgFSGetIsFollowing
         */
        CMsgFSGetIsFollowing.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSGetIsFollowing)
                return object;
            var message = new $root.CMsgFSGetIsFollowing();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSGetIsFollowing message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSGetIsFollowing
         * @static
         * @param {CMsgFSGetIsFollowing} message CMsgFSGetIsFollowing
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSGetIsFollowing.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgFSGetIsFollowing to JSON.
         * @function toJSON
         * @memberof CMsgFSGetIsFollowing
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSGetIsFollowing.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSGetIsFollowing;
    })();
    
    $root.CMsgFSGetIsFollowingResponse = (function() {
    
        /**
         * Properties of a CMsgFSGetIsFollowingResponse.
         * @exports ICMsgFSGetIsFollowingResponse
         * @interface ICMsgFSGetIsFollowingResponse
         * @property {number|null} [eresult] CMsgFSGetIsFollowingResponse eresult
         * @property {boolean|null} [is_following] CMsgFSGetIsFollowingResponse is_following
         */
    
        /**
         * Constructs a new CMsgFSGetIsFollowingResponse.
         * @exports CMsgFSGetIsFollowingResponse
         * @classdesc Represents a CMsgFSGetIsFollowingResponse.
         * @implements ICMsgFSGetIsFollowingResponse
         * @constructor
         * @param {ICMsgFSGetIsFollowingResponse=} [properties] Properties to set
         */
        function CMsgFSGetIsFollowingResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSGetIsFollowingResponse eresult.
         * @member {number} eresult
         * @memberof CMsgFSGetIsFollowingResponse
         * @instance
         */
        CMsgFSGetIsFollowingResponse.prototype.eresult = 2;
    
        /**
         * CMsgFSGetIsFollowingResponse is_following.
         * @member {boolean} is_following
         * @memberof CMsgFSGetIsFollowingResponse
         * @instance
         */
        CMsgFSGetIsFollowingResponse.prototype.is_following = false;
    
        /**
         * Creates a new CMsgFSGetIsFollowingResponse instance using the specified properties.
         * @function create
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {ICMsgFSGetIsFollowingResponse=} [properties] Properties to set
         * @returns {CMsgFSGetIsFollowingResponse} CMsgFSGetIsFollowingResponse instance
         */
        CMsgFSGetIsFollowingResponse.create = function create(properties) {
            return new CMsgFSGetIsFollowingResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgFSGetIsFollowingResponse message. Does not implicitly {@link CMsgFSGetIsFollowingResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {ICMsgFSGetIsFollowingResponse} message CMsgFSGetIsFollowingResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetIsFollowingResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.is_following != null && message.hasOwnProperty("is_following"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_following);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSGetIsFollowingResponse message, length delimited. Does not implicitly {@link CMsgFSGetIsFollowingResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {ICMsgFSGetIsFollowingResponse} message CMsgFSGetIsFollowingResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSGetIsFollowingResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSGetIsFollowingResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSGetIsFollowingResponse} CMsgFSGetIsFollowingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetIsFollowingResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSGetIsFollowingResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.is_following = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSGetIsFollowingResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSGetIsFollowingResponse} CMsgFSGetIsFollowingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSGetIsFollowingResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSGetIsFollowingResponse message.
         * @function verify
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSGetIsFollowingResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.is_following != null && message.hasOwnProperty("is_following"))
                if (typeof message.is_following !== "boolean")
                    return "is_following: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgFSGetIsFollowingResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSGetIsFollowingResponse} CMsgFSGetIsFollowingResponse
         */
        CMsgFSGetIsFollowingResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSGetIsFollowingResponse)
                return object;
            var message = new $root.CMsgFSGetIsFollowingResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.is_following != null)
                message.is_following = Boolean(object.is_following);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSGetIsFollowingResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSGetIsFollowingResponse
         * @static
         * @param {CMsgFSGetIsFollowingResponse} message CMsgFSGetIsFollowingResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSGetIsFollowingResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.is_following = false;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.is_following != null && message.hasOwnProperty("is_following"))
                object.is_following = message.is_following;
            return object;
        };
    
        /**
         * Converts this CMsgFSGetIsFollowingResponse to JSON.
         * @function toJSON
         * @memberof CMsgFSGetIsFollowingResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSGetIsFollowingResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSGetIsFollowingResponse;
    })();
    
    $root.CMsgFSEnumerateFollowingList = (function() {
    
        /**
         * Properties of a CMsgFSEnumerateFollowingList.
         * @exports ICMsgFSEnumerateFollowingList
         * @interface ICMsgFSEnumerateFollowingList
         * @property {number|null} [start_index] CMsgFSEnumerateFollowingList start_index
         */
    
        /**
         * Constructs a new CMsgFSEnumerateFollowingList.
         * @exports CMsgFSEnumerateFollowingList
         * @classdesc Represents a CMsgFSEnumerateFollowingList.
         * @implements ICMsgFSEnumerateFollowingList
         * @constructor
         * @param {ICMsgFSEnumerateFollowingList=} [properties] Properties to set
         */
        function CMsgFSEnumerateFollowingList(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSEnumerateFollowingList start_index.
         * @member {number} start_index
         * @memberof CMsgFSEnumerateFollowingList
         * @instance
         */
        CMsgFSEnumerateFollowingList.prototype.start_index = 0;
    
        /**
         * Creates a new CMsgFSEnumerateFollowingList instance using the specified properties.
         * @function create
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {ICMsgFSEnumerateFollowingList=} [properties] Properties to set
         * @returns {CMsgFSEnumerateFollowingList} CMsgFSEnumerateFollowingList instance
         */
        CMsgFSEnumerateFollowingList.create = function create(properties) {
            return new CMsgFSEnumerateFollowingList(properties);
        };
    
        /**
         * Encodes the specified CMsgFSEnumerateFollowingList message. Does not implicitly {@link CMsgFSEnumerateFollowingList.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {ICMsgFSEnumerateFollowingList} message CMsgFSEnumerateFollowingList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSEnumerateFollowingList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.start_index != null && message.hasOwnProperty("start_index"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.start_index);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSEnumerateFollowingList message, length delimited. Does not implicitly {@link CMsgFSEnumerateFollowingList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {ICMsgFSEnumerateFollowingList} message CMsgFSEnumerateFollowingList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSEnumerateFollowingList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSEnumerateFollowingList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSEnumerateFollowingList} CMsgFSEnumerateFollowingList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSEnumerateFollowingList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSEnumerateFollowingList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.start_index = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSEnumerateFollowingList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSEnumerateFollowingList} CMsgFSEnumerateFollowingList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSEnumerateFollowingList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSEnumerateFollowingList message.
         * @function verify
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSEnumerateFollowingList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.start_index != null && message.hasOwnProperty("start_index"))
                if (!$util.isInteger(message.start_index))
                    return "start_index: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgFSEnumerateFollowingList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSEnumerateFollowingList} CMsgFSEnumerateFollowingList
         */
        CMsgFSEnumerateFollowingList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSEnumerateFollowingList)
                return object;
            var message = new $root.CMsgFSEnumerateFollowingList();
            if (object.start_index != null)
                message.start_index = object.start_index >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSEnumerateFollowingList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSEnumerateFollowingList
         * @static
         * @param {CMsgFSEnumerateFollowingList} message CMsgFSEnumerateFollowingList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSEnumerateFollowingList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.start_index = 0;
            if (message.start_index != null && message.hasOwnProperty("start_index"))
                object.start_index = message.start_index;
            return object;
        };
    
        /**
         * Converts this CMsgFSEnumerateFollowingList to JSON.
         * @function toJSON
         * @memberof CMsgFSEnumerateFollowingList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSEnumerateFollowingList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSEnumerateFollowingList;
    })();
    
    $root.CMsgFSEnumerateFollowingListResponse = (function() {
    
        /**
         * Properties of a CMsgFSEnumerateFollowingListResponse.
         * @exports ICMsgFSEnumerateFollowingListResponse
         * @interface ICMsgFSEnumerateFollowingListResponse
         * @property {number|null} [eresult] CMsgFSEnumerateFollowingListResponse eresult
         * @property {number|null} [total_results] CMsgFSEnumerateFollowingListResponse total_results
         * @property {Array.<number|Long>|null} [steam_ids] CMsgFSEnumerateFollowingListResponse steam_ids
         */
    
        /**
         * Constructs a new CMsgFSEnumerateFollowingListResponse.
         * @exports CMsgFSEnumerateFollowingListResponse
         * @classdesc Represents a CMsgFSEnumerateFollowingListResponse.
         * @implements ICMsgFSEnumerateFollowingListResponse
         * @constructor
         * @param {ICMsgFSEnumerateFollowingListResponse=} [properties] Properties to set
         */
        function CMsgFSEnumerateFollowingListResponse(properties) {
            this.steam_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgFSEnumerateFollowingListResponse eresult.
         * @member {number} eresult
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @instance
         */
        CMsgFSEnumerateFollowingListResponse.prototype.eresult = 2;
    
        /**
         * CMsgFSEnumerateFollowingListResponse total_results.
         * @member {number} total_results
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @instance
         */
        CMsgFSEnumerateFollowingListResponse.prototype.total_results = 0;
    
        /**
         * CMsgFSEnumerateFollowingListResponse steam_ids.
         * @member {Array.<number|Long>} steam_ids
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @instance
         */
        CMsgFSEnumerateFollowingListResponse.prototype.steam_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgFSEnumerateFollowingListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {ICMsgFSEnumerateFollowingListResponse=} [properties] Properties to set
         * @returns {CMsgFSEnumerateFollowingListResponse} CMsgFSEnumerateFollowingListResponse instance
         */
        CMsgFSEnumerateFollowingListResponse.create = function create(properties) {
            return new CMsgFSEnumerateFollowingListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgFSEnumerateFollowingListResponse message. Does not implicitly {@link CMsgFSEnumerateFollowingListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {ICMsgFSEnumerateFollowingListResponse} message CMsgFSEnumerateFollowingListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSEnumerateFollowingListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.total_results != null && message.hasOwnProperty("total_results"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.total_results);
            if (message.steam_ids != null && message.steam_ids.length)
                for (var i = 0; i < message.steam_ids.length; ++i)
                    writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgFSEnumerateFollowingListResponse message, length delimited. Does not implicitly {@link CMsgFSEnumerateFollowingListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {ICMsgFSEnumerateFollowingListResponse} message CMsgFSEnumerateFollowingListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgFSEnumerateFollowingListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgFSEnumerateFollowingListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgFSEnumerateFollowingListResponse} CMsgFSEnumerateFollowingListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSEnumerateFollowingListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgFSEnumerateFollowingListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.total_results = reader.int32();
                    break;
                case 3:
                    if (!(message.steam_ids && message.steam_ids.length))
                        message.steam_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steam_ids.push(reader.fixed64());
                    } else
                        message.steam_ids.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgFSEnumerateFollowingListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgFSEnumerateFollowingListResponse} CMsgFSEnumerateFollowingListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgFSEnumerateFollowingListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgFSEnumerateFollowingListResponse message.
         * @function verify
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgFSEnumerateFollowingListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.total_results != null && message.hasOwnProperty("total_results"))
                if (!$util.isInteger(message.total_results))
                    return "total_results: integer expected";
            if (message.steam_ids != null && message.hasOwnProperty("steam_ids")) {
                if (!Array.isArray(message.steam_ids))
                    return "steam_ids: array expected";
                for (var i = 0; i < message.steam_ids.length; ++i)
                    if (!$util.isInteger(message.steam_ids[i]) && !(message.steam_ids[i] && $util.isInteger(message.steam_ids[i].low) && $util.isInteger(message.steam_ids[i].high)))
                        return "steam_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgFSEnumerateFollowingListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgFSEnumerateFollowingListResponse} CMsgFSEnumerateFollowingListResponse
         */
        CMsgFSEnumerateFollowingListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgFSEnumerateFollowingListResponse)
                return object;
            var message = new $root.CMsgFSEnumerateFollowingListResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.total_results != null)
                message.total_results = object.total_results | 0;
            if (object.steam_ids) {
                if (!Array.isArray(object.steam_ids))
                    throw TypeError(".CMsgFSEnumerateFollowingListResponse.steam_ids: array expected");
                message.steam_ids = [];
                for (var i = 0; i < object.steam_ids.length; ++i)
                    if ($util.Long)
                        (message.steam_ids[i] = $util.Long.fromValue(object.steam_ids[i])).unsigned = false;
                    else if (typeof object.steam_ids[i] === "string")
                        message.steam_ids[i] = parseInt(object.steam_ids[i], 10);
                    else if (typeof object.steam_ids[i] === "number")
                        message.steam_ids[i] = object.steam_ids[i];
                    else if (typeof object.steam_ids[i] === "object")
                        message.steam_ids[i] = new $util.LongBits(object.steam_ids[i].low >>> 0, object.steam_ids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgFSEnumerateFollowingListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @static
         * @param {CMsgFSEnumerateFollowingListResponse} message CMsgFSEnumerateFollowingListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgFSEnumerateFollowingListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steam_ids = [];
            if (options.defaults) {
                object.eresult = 2;
                object.total_results = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.total_results != null && message.hasOwnProperty("total_results"))
                object.total_results = message.total_results;
            if (message.steam_ids && message.steam_ids.length) {
                object.steam_ids = [];
                for (var j = 0; j < message.steam_ids.length; ++j)
                    if (typeof message.steam_ids[j] === "number")
                        object.steam_ids[j] = options.longs === String ? String(message.steam_ids[j]) : message.steam_ids[j];
                    else
                        object.steam_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steam_ids[j]) : options.longs === Number ? new $util.LongBits(message.steam_ids[j].low >>> 0, message.steam_ids[j].high >>> 0).toNumber() : message.steam_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgFSEnumerateFollowingListResponse to JSON.
         * @function toJSON
         * @memberof CMsgFSEnumerateFollowingListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgFSEnumerateFollowingListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgFSEnumerateFollowingListResponse;
    })();
    
    $root.CMsgDPGetNumberOfCurrentPlayers = (function() {
    
        /**
         * Properties of a CMsgDPGetNumberOfCurrentPlayers.
         * @exports ICMsgDPGetNumberOfCurrentPlayers
         * @interface ICMsgDPGetNumberOfCurrentPlayers
         * @property {number|null} [appid] CMsgDPGetNumberOfCurrentPlayers appid
         */
    
        /**
         * Constructs a new CMsgDPGetNumberOfCurrentPlayers.
         * @exports CMsgDPGetNumberOfCurrentPlayers
         * @classdesc Represents a CMsgDPGetNumberOfCurrentPlayers.
         * @implements ICMsgDPGetNumberOfCurrentPlayers
         * @constructor
         * @param {ICMsgDPGetNumberOfCurrentPlayers=} [properties] Properties to set
         */
        function CMsgDPGetNumberOfCurrentPlayers(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPGetNumberOfCurrentPlayers appid.
         * @member {number} appid
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @instance
         */
        CMsgDPGetNumberOfCurrentPlayers.prototype.appid = 0;
    
        /**
         * Creates a new CMsgDPGetNumberOfCurrentPlayers instance using the specified properties.
         * @function create
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayers=} [properties] Properties to set
         * @returns {CMsgDPGetNumberOfCurrentPlayers} CMsgDPGetNumberOfCurrentPlayers instance
         */
        CMsgDPGetNumberOfCurrentPlayers.create = function create(properties) {
            return new CMsgDPGetNumberOfCurrentPlayers(properties);
        };
    
        /**
         * Encodes the specified CMsgDPGetNumberOfCurrentPlayers message. Does not implicitly {@link CMsgDPGetNumberOfCurrentPlayers.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayers} message CMsgDPGetNumberOfCurrentPlayers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPGetNumberOfCurrentPlayers.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPGetNumberOfCurrentPlayers message, length delimited. Does not implicitly {@link CMsgDPGetNumberOfCurrentPlayers.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayers} message CMsgDPGetNumberOfCurrentPlayers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPGetNumberOfCurrentPlayers.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPGetNumberOfCurrentPlayers message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPGetNumberOfCurrentPlayers} CMsgDPGetNumberOfCurrentPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPGetNumberOfCurrentPlayers.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPGetNumberOfCurrentPlayers();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPGetNumberOfCurrentPlayers message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPGetNumberOfCurrentPlayers} CMsgDPGetNumberOfCurrentPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPGetNumberOfCurrentPlayers.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPGetNumberOfCurrentPlayers message.
         * @function verify
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPGetNumberOfCurrentPlayers.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgDPGetNumberOfCurrentPlayers message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPGetNumberOfCurrentPlayers} CMsgDPGetNumberOfCurrentPlayers
         */
        CMsgDPGetNumberOfCurrentPlayers.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPGetNumberOfCurrentPlayers)
                return object;
            var message = new $root.CMsgDPGetNumberOfCurrentPlayers();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPGetNumberOfCurrentPlayers message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @static
         * @param {CMsgDPGetNumberOfCurrentPlayers} message CMsgDPGetNumberOfCurrentPlayers
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPGetNumberOfCurrentPlayers.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.appid = 0;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgDPGetNumberOfCurrentPlayers to JSON.
         * @function toJSON
         * @memberof CMsgDPGetNumberOfCurrentPlayers
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPGetNumberOfCurrentPlayers.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgDPGetNumberOfCurrentPlayers;
    })();
    
    $root.CMsgDPGetNumberOfCurrentPlayersResponse = (function() {
    
        /**
         * Properties of a CMsgDPGetNumberOfCurrentPlayersResponse.
         * @exports ICMsgDPGetNumberOfCurrentPlayersResponse
         * @interface ICMsgDPGetNumberOfCurrentPlayersResponse
         * @property {number|null} [eresult] CMsgDPGetNumberOfCurrentPlayersResponse eresult
         * @property {number|null} [player_count] CMsgDPGetNumberOfCurrentPlayersResponse player_count
         */
    
        /**
         * Constructs a new CMsgDPGetNumberOfCurrentPlayersResponse.
         * @exports CMsgDPGetNumberOfCurrentPlayersResponse
         * @classdesc Represents a CMsgDPGetNumberOfCurrentPlayersResponse.
         * @implements ICMsgDPGetNumberOfCurrentPlayersResponse
         * @constructor
         * @param {ICMsgDPGetNumberOfCurrentPlayersResponse=} [properties] Properties to set
         */
        function CMsgDPGetNumberOfCurrentPlayersResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDPGetNumberOfCurrentPlayersResponse eresult.
         * @member {number} eresult
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @instance
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.prototype.eresult = 2;
    
        /**
         * CMsgDPGetNumberOfCurrentPlayersResponse player_count.
         * @member {number} player_count
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @instance
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.prototype.player_count = 0;
    
        /**
         * Creates a new CMsgDPGetNumberOfCurrentPlayersResponse instance using the specified properties.
         * @function create
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayersResponse=} [properties] Properties to set
         * @returns {CMsgDPGetNumberOfCurrentPlayersResponse} CMsgDPGetNumberOfCurrentPlayersResponse instance
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.create = function create(properties) {
            return new CMsgDPGetNumberOfCurrentPlayersResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgDPGetNumberOfCurrentPlayersResponse message. Does not implicitly {@link CMsgDPGetNumberOfCurrentPlayersResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayersResponse} message CMsgDPGetNumberOfCurrentPlayersResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.player_count != null && message.hasOwnProperty("player_count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.player_count);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDPGetNumberOfCurrentPlayersResponse message, length delimited. Does not implicitly {@link CMsgDPGetNumberOfCurrentPlayersResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {ICMsgDPGetNumberOfCurrentPlayersResponse} message CMsgDPGetNumberOfCurrentPlayersResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDPGetNumberOfCurrentPlayersResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDPGetNumberOfCurrentPlayersResponse} CMsgDPGetNumberOfCurrentPlayersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDPGetNumberOfCurrentPlayersResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.player_count = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDPGetNumberOfCurrentPlayersResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDPGetNumberOfCurrentPlayersResponse} CMsgDPGetNumberOfCurrentPlayersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDPGetNumberOfCurrentPlayersResponse message.
         * @function verify
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.player_count != null && message.hasOwnProperty("player_count"))
                if (!$util.isInteger(message.player_count))
                    return "player_count: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgDPGetNumberOfCurrentPlayersResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDPGetNumberOfCurrentPlayersResponse} CMsgDPGetNumberOfCurrentPlayersResponse
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDPGetNumberOfCurrentPlayersResponse)
                return object;
            var message = new $root.CMsgDPGetNumberOfCurrentPlayersResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.player_count != null)
                message.player_count = object.player_count | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDPGetNumberOfCurrentPlayersResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @static
         * @param {CMsgDPGetNumberOfCurrentPlayersResponse} message CMsgDPGetNumberOfCurrentPlayersResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.player_count = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.player_count != null && message.hasOwnProperty("player_count"))
                object.player_count = message.player_count;
            return object;
        };
    
        /**
         * Converts this CMsgDPGetNumberOfCurrentPlayersResponse to JSON.
         * @function toJSON
         * @memberof CMsgDPGetNumberOfCurrentPlayersResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDPGetNumberOfCurrentPlayersResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgDPGetNumberOfCurrentPlayersResponse;
    })();
    
    $root.CMsgClientFriendUserStatusPublished = (function() {
    
        /**
         * Properties of a CMsgClientFriendUserStatusPublished.
         * @exports ICMsgClientFriendUserStatusPublished
         * @interface ICMsgClientFriendUserStatusPublished
         * @property {number|Long|null} [friend_steamid] CMsgClientFriendUserStatusPublished friend_steamid
         * @property {number|null} [appid] CMsgClientFriendUserStatusPublished appid
         * @property {string|null} [status_text] CMsgClientFriendUserStatusPublished status_text
         */
    
        /**
         * Constructs a new CMsgClientFriendUserStatusPublished.
         * @exports CMsgClientFriendUserStatusPublished
         * @classdesc Represents a CMsgClientFriendUserStatusPublished.
         * @implements ICMsgClientFriendUserStatusPublished
         * @constructor
         * @param {ICMsgClientFriendUserStatusPublished=} [properties] Properties to set
         */
        function CMsgClientFriendUserStatusPublished(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientFriendUserStatusPublished friend_steamid.
         * @member {number|Long} friend_steamid
         * @memberof CMsgClientFriendUserStatusPublished
         * @instance
         */
        CMsgClientFriendUserStatusPublished.prototype.friend_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientFriendUserStatusPublished appid.
         * @member {number} appid
         * @memberof CMsgClientFriendUserStatusPublished
         * @instance
         */
        CMsgClientFriendUserStatusPublished.prototype.appid = 0;
    
        /**
         * CMsgClientFriendUserStatusPublished status_text.
         * @member {string} status_text
         * @memberof CMsgClientFriendUserStatusPublished
         * @instance
         */
        CMsgClientFriendUserStatusPublished.prototype.status_text = "";
    
        /**
         * Creates a new CMsgClientFriendUserStatusPublished instance using the specified properties.
         * @function create
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {ICMsgClientFriendUserStatusPublished=} [properties] Properties to set
         * @returns {CMsgClientFriendUserStatusPublished} CMsgClientFriendUserStatusPublished instance
         */
        CMsgClientFriendUserStatusPublished.create = function create(properties) {
            return new CMsgClientFriendUserStatusPublished(properties);
        };
    
        /**
         * Encodes the specified CMsgClientFriendUserStatusPublished message. Does not implicitly {@link CMsgClientFriendUserStatusPublished.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {ICMsgClientFriendUserStatusPublished} message CMsgClientFriendUserStatusPublished message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFriendUserStatusPublished.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.friend_steamid != null && message.hasOwnProperty("friend_steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.friend_steamid);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appid);
            if (message.status_text != null && message.hasOwnProperty("status_text"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.status_text);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientFriendUserStatusPublished message, length delimited. Does not implicitly {@link CMsgClientFriendUserStatusPublished.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {ICMsgClientFriendUserStatusPublished} message CMsgClientFriendUserStatusPublished message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientFriendUserStatusPublished.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientFriendUserStatusPublished message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientFriendUserStatusPublished} CMsgClientFriendUserStatusPublished
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFriendUserStatusPublished.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientFriendUserStatusPublished();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.friend_steamid = reader.fixed64();
                    break;
                case 2:
                    message.appid = reader.uint32();
                    break;
                case 3:
                    message.status_text = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientFriendUserStatusPublished message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientFriendUserStatusPublished} CMsgClientFriendUserStatusPublished
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientFriendUserStatusPublished.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientFriendUserStatusPublished message.
         * @function verify
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientFriendUserStatusPublished.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.friend_steamid != null && message.hasOwnProperty("friend_steamid"))
                if (!$util.isInteger(message.friend_steamid) && !(message.friend_steamid && $util.isInteger(message.friend_steamid.low) && $util.isInteger(message.friend_steamid.high)))
                    return "friend_steamid: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.status_text != null && message.hasOwnProperty("status_text"))
                if (!$util.isString(message.status_text))
                    return "status_text: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientFriendUserStatusPublished message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientFriendUserStatusPublished} CMsgClientFriendUserStatusPublished
         */
        CMsgClientFriendUserStatusPublished.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientFriendUserStatusPublished)
                return object;
            var message = new $root.CMsgClientFriendUserStatusPublished();
            if (object.friend_steamid != null)
                if ($util.Long)
                    (message.friend_steamid = $util.Long.fromValue(object.friend_steamid)).unsigned = false;
                else if (typeof object.friend_steamid === "string")
                    message.friend_steamid = parseInt(object.friend_steamid, 10);
                else if (typeof object.friend_steamid === "number")
                    message.friend_steamid = object.friend_steamid;
                else if (typeof object.friend_steamid === "object")
                    message.friend_steamid = new $util.LongBits(object.friend_steamid.low >>> 0, object.friend_steamid.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.status_text != null)
                message.status_text = String(object.status_text);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientFriendUserStatusPublished message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientFriendUserStatusPublished
         * @static
         * @param {CMsgClientFriendUserStatusPublished} message CMsgClientFriendUserStatusPublished
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientFriendUserStatusPublished.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.friend_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.friend_steamid = options.longs === String ? "0" : 0;
                object.appid = 0;
                object.status_text = "";
            }
            if (message.friend_steamid != null && message.hasOwnProperty("friend_steamid"))
                if (typeof message.friend_steamid === "number")
                    object.friend_steamid = options.longs === String ? String(message.friend_steamid) : message.friend_steamid;
                else
                    object.friend_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.friend_steamid) : options.longs === Number ? new $util.LongBits(message.friend_steamid.low >>> 0, message.friend_steamid.high >>> 0).toNumber() : message.friend_steamid;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.status_text != null && message.hasOwnProperty("status_text"))
                object.status_text = message.status_text;
            return object;
        };
    
        /**
         * Converts this CMsgClientFriendUserStatusPublished to JSON.
         * @function toJSON
         * @memberof CMsgClientFriendUserStatusPublished
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientFriendUserStatusPublished.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientFriendUserStatusPublished;
    })();
    
    $root.CMsgClientServiceMethodLegacy = (function() {
    
        /**
         * Properties of a CMsgClientServiceMethodLegacy.
         * @exports ICMsgClientServiceMethodLegacy
         * @interface ICMsgClientServiceMethodLegacy
         * @property {string|null} [method_name] CMsgClientServiceMethodLegacy method_name
         * @property {Uint8Array|null} [serialized_method] CMsgClientServiceMethodLegacy serialized_method
         * @property {boolean|null} [is_notification] CMsgClientServiceMethodLegacy is_notification
         */
    
        /**
         * Constructs a new CMsgClientServiceMethodLegacy.
         * @exports CMsgClientServiceMethodLegacy
         * @classdesc Represents a CMsgClientServiceMethodLegacy.
         * @implements ICMsgClientServiceMethodLegacy
         * @constructor
         * @param {ICMsgClientServiceMethodLegacy=} [properties] Properties to set
         */
        function CMsgClientServiceMethodLegacy(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServiceMethodLegacy method_name.
         * @member {string} method_name
         * @memberof CMsgClientServiceMethodLegacy
         * @instance
         */
        CMsgClientServiceMethodLegacy.prototype.method_name = "";
    
        /**
         * CMsgClientServiceMethodLegacy serialized_method.
         * @member {Uint8Array} serialized_method
         * @memberof CMsgClientServiceMethodLegacy
         * @instance
         */
        CMsgClientServiceMethodLegacy.prototype.serialized_method = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceMethodLegacy is_notification.
         * @member {boolean} is_notification
         * @memberof CMsgClientServiceMethodLegacy
         * @instance
         */
        CMsgClientServiceMethodLegacy.prototype.is_notification = false;
    
        /**
         * Creates a new CMsgClientServiceMethodLegacy instance using the specified properties.
         * @function create
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {ICMsgClientServiceMethodLegacy=} [properties] Properties to set
         * @returns {CMsgClientServiceMethodLegacy} CMsgClientServiceMethodLegacy instance
         */
        CMsgClientServiceMethodLegacy.create = function create(properties) {
            return new CMsgClientServiceMethodLegacy(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServiceMethodLegacy message. Does not implicitly {@link CMsgClientServiceMethodLegacy.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {ICMsgClientServiceMethodLegacy} message CMsgClientServiceMethodLegacy message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceMethodLegacy.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.method_name);
            if (message.serialized_method != null && message.hasOwnProperty("serialized_method"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.serialized_method);
            if (message.is_notification != null && message.hasOwnProperty("is_notification"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.is_notification);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServiceMethodLegacy message, length delimited. Does not implicitly {@link CMsgClientServiceMethodLegacy.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {ICMsgClientServiceMethodLegacy} message CMsgClientServiceMethodLegacy message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceMethodLegacy.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServiceMethodLegacy message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServiceMethodLegacy} CMsgClientServiceMethodLegacy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceMethodLegacy.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServiceMethodLegacy();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.method_name = reader.string();
                    break;
                case 2:
                    message.serialized_method = reader.bytes();
                    break;
                case 3:
                    message.is_notification = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServiceMethodLegacy message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServiceMethodLegacy} CMsgClientServiceMethodLegacy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceMethodLegacy.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServiceMethodLegacy message.
         * @function verify
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServiceMethodLegacy.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                if (!$util.isString(message.method_name))
                    return "method_name: string expected";
            if (message.serialized_method != null && message.hasOwnProperty("serialized_method"))
                if (!(message.serialized_method && typeof message.serialized_method.length === "number" || $util.isString(message.serialized_method)))
                    return "serialized_method: buffer expected";
            if (message.is_notification != null && message.hasOwnProperty("is_notification"))
                if (typeof message.is_notification !== "boolean")
                    return "is_notification: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServiceMethodLegacy message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServiceMethodLegacy} CMsgClientServiceMethodLegacy
         */
        CMsgClientServiceMethodLegacy.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServiceMethodLegacy)
                return object;
            var message = new $root.CMsgClientServiceMethodLegacy();
            if (object.method_name != null)
                message.method_name = String(object.method_name);
            if (object.serialized_method != null)
                if (typeof object.serialized_method === "string")
                    $util.base64.decode(object.serialized_method, message.serialized_method = $util.newBuffer($util.base64.length(object.serialized_method)), 0);
                else if (object.serialized_method.length)
                    message.serialized_method = object.serialized_method;
            if (object.is_notification != null)
                message.is_notification = Boolean(object.is_notification);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServiceMethodLegacy message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServiceMethodLegacy
         * @static
         * @param {CMsgClientServiceMethodLegacy} message CMsgClientServiceMethodLegacy
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServiceMethodLegacy.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.method_name = "";
                if (options.bytes === String)
                    object.serialized_method = "";
                else {
                    object.serialized_method = [];
                    if (options.bytes !== Array)
                        object.serialized_method = $util.newBuffer(object.serialized_method);
                }
                object.is_notification = false;
            }
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                object.method_name = message.method_name;
            if (message.serialized_method != null && message.hasOwnProperty("serialized_method"))
                object.serialized_method = options.bytes === String ? $util.base64.encode(message.serialized_method, 0, message.serialized_method.length) : options.bytes === Array ? Array.prototype.slice.call(message.serialized_method) : message.serialized_method;
            if (message.is_notification != null && message.hasOwnProperty("is_notification"))
                object.is_notification = message.is_notification;
            return object;
        };
    
        /**
         * Converts this CMsgClientServiceMethodLegacy to JSON.
         * @function toJSON
         * @memberof CMsgClientServiceMethodLegacy
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServiceMethodLegacy.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServiceMethodLegacy;
    })();
    
    $root.CMsgClientServiceMethodLegacyResponse = (function() {
    
        /**
         * Properties of a CMsgClientServiceMethodLegacyResponse.
         * @exports ICMsgClientServiceMethodLegacyResponse
         * @interface ICMsgClientServiceMethodLegacyResponse
         * @property {string|null} [method_name] CMsgClientServiceMethodLegacyResponse method_name
         * @property {Uint8Array|null} [serialized_method_response] CMsgClientServiceMethodLegacyResponse serialized_method_response
         */
    
        /**
         * Constructs a new CMsgClientServiceMethodLegacyResponse.
         * @exports CMsgClientServiceMethodLegacyResponse
         * @classdesc Represents a CMsgClientServiceMethodLegacyResponse.
         * @implements ICMsgClientServiceMethodLegacyResponse
         * @constructor
         * @param {ICMsgClientServiceMethodLegacyResponse=} [properties] Properties to set
         */
        function CMsgClientServiceMethodLegacyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServiceMethodLegacyResponse method_name.
         * @member {string} method_name
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @instance
         */
        CMsgClientServiceMethodLegacyResponse.prototype.method_name = "";
    
        /**
         * CMsgClientServiceMethodLegacyResponse serialized_method_response.
         * @member {Uint8Array} serialized_method_response
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @instance
         */
        CMsgClientServiceMethodLegacyResponse.prototype.serialized_method_response = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientServiceMethodLegacyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {ICMsgClientServiceMethodLegacyResponse=} [properties] Properties to set
         * @returns {CMsgClientServiceMethodLegacyResponse} CMsgClientServiceMethodLegacyResponse instance
         */
        CMsgClientServiceMethodLegacyResponse.create = function create(properties) {
            return new CMsgClientServiceMethodLegacyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServiceMethodLegacyResponse message. Does not implicitly {@link CMsgClientServiceMethodLegacyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {ICMsgClientServiceMethodLegacyResponse} message CMsgClientServiceMethodLegacyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceMethodLegacyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.method_name);
            if (message.serialized_method_response != null && message.hasOwnProperty("serialized_method_response"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.serialized_method_response);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServiceMethodLegacyResponse message, length delimited. Does not implicitly {@link CMsgClientServiceMethodLegacyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {ICMsgClientServiceMethodLegacyResponse} message CMsgClientServiceMethodLegacyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceMethodLegacyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServiceMethodLegacyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServiceMethodLegacyResponse} CMsgClientServiceMethodLegacyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceMethodLegacyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServiceMethodLegacyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.method_name = reader.string();
                    break;
                case 2:
                    message.serialized_method_response = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServiceMethodLegacyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServiceMethodLegacyResponse} CMsgClientServiceMethodLegacyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceMethodLegacyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServiceMethodLegacyResponse message.
         * @function verify
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServiceMethodLegacyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                if (!$util.isString(message.method_name))
                    return "method_name: string expected";
            if (message.serialized_method_response != null && message.hasOwnProperty("serialized_method_response"))
                if (!(message.serialized_method_response && typeof message.serialized_method_response.length === "number" || $util.isString(message.serialized_method_response)))
                    return "serialized_method_response: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServiceMethodLegacyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServiceMethodLegacyResponse} CMsgClientServiceMethodLegacyResponse
         */
        CMsgClientServiceMethodLegacyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServiceMethodLegacyResponse)
                return object;
            var message = new $root.CMsgClientServiceMethodLegacyResponse();
            if (object.method_name != null)
                message.method_name = String(object.method_name);
            if (object.serialized_method_response != null)
                if (typeof object.serialized_method_response === "string")
                    $util.base64.decode(object.serialized_method_response, message.serialized_method_response = $util.newBuffer($util.base64.length(object.serialized_method_response)), 0);
                else if (object.serialized_method_response.length)
                    message.serialized_method_response = object.serialized_method_response;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServiceMethodLegacyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @static
         * @param {CMsgClientServiceMethodLegacyResponse} message CMsgClientServiceMethodLegacyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServiceMethodLegacyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.method_name = "";
                if (options.bytes === String)
                    object.serialized_method_response = "";
                else {
                    object.serialized_method_response = [];
                    if (options.bytes !== Array)
                        object.serialized_method_response = $util.newBuffer(object.serialized_method_response);
                }
            }
            if (message.method_name != null && message.hasOwnProperty("method_name"))
                object.method_name = message.method_name;
            if (message.serialized_method_response != null && message.hasOwnProperty("serialized_method_response"))
                object.serialized_method_response = options.bytes === String ? $util.base64.encode(message.serialized_method_response, 0, message.serialized_method_response.length) : options.bytes === Array ? Array.prototype.slice.call(message.serialized_method_response) : message.serialized_method_response;
            return object;
        };
    
        /**
         * Converts this CMsgClientServiceMethodLegacyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientServiceMethodLegacyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServiceMethodLegacyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServiceMethodLegacyResponse;
    })();
    
    $root.CMsgClientUIMode = (function() {
    
        /**
         * Properties of a CMsgClientUIMode.
         * @exports ICMsgClientUIMode
         * @interface ICMsgClientUIMode
         * @property {number|null} [uimode] CMsgClientUIMode uimode
         * @property {number|null} [chat_mode] CMsgClientUIMode chat_mode
         */
    
        /**
         * Constructs a new CMsgClientUIMode.
         * @exports CMsgClientUIMode
         * @classdesc Represents a CMsgClientUIMode.
         * @implements ICMsgClientUIMode
         * @constructor
         * @param {ICMsgClientUIMode=} [properties] Properties to set
         */
        function CMsgClientUIMode(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUIMode uimode.
         * @member {number} uimode
         * @memberof CMsgClientUIMode
         * @instance
         */
        CMsgClientUIMode.prototype.uimode = 0;
    
        /**
         * CMsgClientUIMode chat_mode.
         * @member {number} chat_mode
         * @memberof CMsgClientUIMode
         * @instance
         */
        CMsgClientUIMode.prototype.chat_mode = 0;
    
        /**
         * Creates a new CMsgClientUIMode instance using the specified properties.
         * @function create
         * @memberof CMsgClientUIMode
         * @static
         * @param {ICMsgClientUIMode=} [properties] Properties to set
         * @returns {CMsgClientUIMode} CMsgClientUIMode instance
         */
        CMsgClientUIMode.create = function create(properties) {
            return new CMsgClientUIMode(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUIMode message. Does not implicitly {@link CMsgClientUIMode.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUIMode
         * @static
         * @param {ICMsgClientUIMode} message CMsgClientUIMode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUIMode.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.uimode != null && message.hasOwnProperty("uimode"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.uimode);
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.chat_mode);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUIMode message, length delimited. Does not implicitly {@link CMsgClientUIMode.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUIMode
         * @static
         * @param {ICMsgClientUIMode} message CMsgClientUIMode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUIMode.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUIMode message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUIMode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUIMode} CMsgClientUIMode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUIMode.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUIMode();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.uimode = reader.uint32();
                    break;
                case 2:
                    message.chat_mode = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUIMode message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUIMode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUIMode} CMsgClientUIMode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUIMode.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUIMode message.
         * @function verify
         * @memberof CMsgClientUIMode
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUIMode.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.uimode != null && message.hasOwnProperty("uimode"))
                if (!$util.isInteger(message.uimode))
                    return "uimode: integer expected";
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                if (!$util.isInteger(message.chat_mode))
                    return "chat_mode: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUIMode message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUIMode
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUIMode} CMsgClientUIMode
         */
        CMsgClientUIMode.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUIMode)
                return object;
            var message = new $root.CMsgClientUIMode();
            if (object.uimode != null)
                message.uimode = object.uimode >>> 0;
            if (object.chat_mode != null)
                message.chat_mode = object.chat_mode >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUIMode message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUIMode
         * @static
         * @param {CMsgClientUIMode} message CMsgClientUIMode
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUIMode.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.uimode = 0;
                object.chat_mode = 0;
            }
            if (message.uimode != null && message.hasOwnProperty("uimode"))
                object.uimode = message.uimode;
            if (message.chat_mode != null && message.hasOwnProperty("chat_mode"))
                object.chat_mode = message.chat_mode;
            return object;
        };
    
        /**
         * Converts this CMsgClientUIMode to JSON.
         * @function toJSON
         * @memberof CMsgClientUIMode
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUIMode.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUIMode;
    })();
    
    $root.CMsgClientVanityURLChangedNotification = (function() {
    
        /**
         * Properties of a CMsgClientVanityURLChangedNotification.
         * @exports ICMsgClientVanityURLChangedNotification
         * @interface ICMsgClientVanityURLChangedNotification
         * @property {string|null} [vanity_url] CMsgClientVanityURLChangedNotification vanity_url
         */
    
        /**
         * Constructs a new CMsgClientVanityURLChangedNotification.
         * @exports CMsgClientVanityURLChangedNotification
         * @classdesc Represents a CMsgClientVanityURLChangedNotification.
         * @implements ICMsgClientVanityURLChangedNotification
         * @constructor
         * @param {ICMsgClientVanityURLChangedNotification=} [properties] Properties to set
         */
        function CMsgClientVanityURLChangedNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientVanityURLChangedNotification vanity_url.
         * @member {string} vanity_url
         * @memberof CMsgClientVanityURLChangedNotification
         * @instance
         */
        CMsgClientVanityURLChangedNotification.prototype.vanity_url = "";
    
        /**
         * Creates a new CMsgClientVanityURLChangedNotification instance using the specified properties.
         * @function create
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {ICMsgClientVanityURLChangedNotification=} [properties] Properties to set
         * @returns {CMsgClientVanityURLChangedNotification} CMsgClientVanityURLChangedNotification instance
         */
        CMsgClientVanityURLChangedNotification.create = function create(properties) {
            return new CMsgClientVanityURLChangedNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgClientVanityURLChangedNotification message. Does not implicitly {@link CMsgClientVanityURLChangedNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {ICMsgClientVanityURLChangedNotification} message CMsgClientVanityURLChangedNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVanityURLChangedNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.vanity_url);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientVanityURLChangedNotification message, length delimited. Does not implicitly {@link CMsgClientVanityURLChangedNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {ICMsgClientVanityURLChangedNotification} message CMsgClientVanityURLChangedNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVanityURLChangedNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientVanityURLChangedNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientVanityURLChangedNotification} CMsgClientVanityURLChangedNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVanityURLChangedNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientVanityURLChangedNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.vanity_url = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientVanityURLChangedNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientVanityURLChangedNotification} CMsgClientVanityURLChangedNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVanityURLChangedNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientVanityURLChangedNotification message.
         * @function verify
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientVanityURLChangedNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                if (!$util.isString(message.vanity_url))
                    return "vanity_url: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientVanityURLChangedNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientVanityURLChangedNotification} CMsgClientVanityURLChangedNotification
         */
        CMsgClientVanityURLChangedNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientVanityURLChangedNotification)
                return object;
            var message = new $root.CMsgClientVanityURLChangedNotification();
            if (object.vanity_url != null)
                message.vanity_url = String(object.vanity_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientVanityURLChangedNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientVanityURLChangedNotification
         * @static
         * @param {CMsgClientVanityURLChangedNotification} message CMsgClientVanityURLChangedNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientVanityURLChangedNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.vanity_url = "";
            if (message.vanity_url != null && message.hasOwnProperty("vanity_url"))
                object.vanity_url = message.vanity_url;
            return object;
        };
    
        /**
         * Converts this CMsgClientVanityURLChangedNotification to JSON.
         * @function toJSON
         * @memberof CMsgClientVanityURLChangedNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientVanityURLChangedNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientVanityURLChangedNotification;
    })();
    
    $root.CMsgClientAuthorizeLocalDeviceRequest = (function() {
    
        /**
         * Properties of a CMsgClientAuthorizeLocalDeviceRequest.
         * @exports ICMsgClientAuthorizeLocalDeviceRequest
         * @interface ICMsgClientAuthorizeLocalDeviceRequest
         * @property {string|null} [device_description] CMsgClientAuthorizeLocalDeviceRequest device_description
         * @property {number|null} [owner_account_id] CMsgClientAuthorizeLocalDeviceRequest owner_account_id
         * @property {number|Long|null} [local_device_token] CMsgClientAuthorizeLocalDeviceRequest local_device_token
         */
    
        /**
         * Constructs a new CMsgClientAuthorizeLocalDeviceRequest.
         * @exports CMsgClientAuthorizeLocalDeviceRequest
         * @classdesc Represents a CMsgClientAuthorizeLocalDeviceRequest.
         * @implements ICMsgClientAuthorizeLocalDeviceRequest
         * @constructor
         * @param {ICMsgClientAuthorizeLocalDeviceRequest=} [properties] Properties to set
         */
        function CMsgClientAuthorizeLocalDeviceRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAuthorizeLocalDeviceRequest device_description.
         * @member {string} device_description
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceRequest.prototype.device_description = "";
    
        /**
         * CMsgClientAuthorizeLocalDeviceRequest owner_account_id.
         * @member {number} owner_account_id
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceRequest.prototype.owner_account_id = 0;
    
        /**
         * CMsgClientAuthorizeLocalDeviceRequest local_device_token.
         * @member {number|Long} local_device_token
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceRequest.prototype.local_device_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientAuthorizeLocalDeviceRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceRequest=} [properties] Properties to set
         * @returns {CMsgClientAuthorizeLocalDeviceRequest} CMsgClientAuthorizeLocalDeviceRequest instance
         */
        CMsgClientAuthorizeLocalDeviceRequest.create = function create(properties) {
            return new CMsgClientAuthorizeLocalDeviceRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDeviceRequest message. Does not implicitly {@link CMsgClientAuthorizeLocalDeviceRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceRequest} message CMsgClientAuthorizeLocalDeviceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDeviceRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.device_description != null && message.hasOwnProperty("device_description"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.device_description);
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.owner_account_id);
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.local_device_token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDeviceRequest message, length delimited. Does not implicitly {@link CMsgClientAuthorizeLocalDeviceRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceRequest} message CMsgClientAuthorizeLocalDeviceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDeviceRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDeviceRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAuthorizeLocalDeviceRequest} CMsgClientAuthorizeLocalDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDeviceRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAuthorizeLocalDeviceRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.device_description = reader.string();
                    break;
                case 2:
                    message.owner_account_id = reader.uint32();
                    break;
                case 3:
                    message.local_device_token = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDeviceRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAuthorizeLocalDeviceRequest} CMsgClientAuthorizeLocalDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDeviceRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAuthorizeLocalDeviceRequest message.
         * @function verify
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAuthorizeLocalDeviceRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.device_description != null && message.hasOwnProperty("device_description"))
                if (!$util.isString(message.device_description))
                    return "device_description: string expected";
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                if (!$util.isInteger(message.owner_account_id))
                    return "owner_account_id: integer expected";
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                if (!$util.isInteger(message.local_device_token) && !(message.local_device_token && $util.isInteger(message.local_device_token.low) && $util.isInteger(message.local_device_token.high)))
                    return "local_device_token: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAuthorizeLocalDeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAuthorizeLocalDeviceRequest} CMsgClientAuthorizeLocalDeviceRequest
         */
        CMsgClientAuthorizeLocalDeviceRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAuthorizeLocalDeviceRequest)
                return object;
            var message = new $root.CMsgClientAuthorizeLocalDeviceRequest();
            if (object.device_description != null)
                message.device_description = String(object.device_description);
            if (object.owner_account_id != null)
                message.owner_account_id = object.owner_account_id >>> 0;
            if (object.local_device_token != null)
                if ($util.Long)
                    (message.local_device_token = $util.Long.fromValue(object.local_device_token)).unsigned = true;
                else if (typeof object.local_device_token === "string")
                    message.local_device_token = parseInt(object.local_device_token, 10);
                else if (typeof object.local_device_token === "number")
                    message.local_device_token = object.local_device_token;
                else if (typeof object.local_device_token === "object")
                    message.local_device_token = new $util.LongBits(object.local_device_token.low >>> 0, object.local_device_token.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAuthorizeLocalDeviceRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @static
         * @param {CMsgClientAuthorizeLocalDeviceRequest} message CMsgClientAuthorizeLocalDeviceRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAuthorizeLocalDeviceRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.device_description = "";
                object.owner_account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.local_device_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.local_device_token = options.longs === String ? "0" : 0;
            }
            if (message.device_description != null && message.hasOwnProperty("device_description"))
                object.device_description = message.device_description;
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                object.owner_account_id = message.owner_account_id;
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                if (typeof message.local_device_token === "number")
                    object.local_device_token = options.longs === String ? String(message.local_device_token) : message.local_device_token;
                else
                    object.local_device_token = options.longs === String ? $util.Long.prototype.toString.call(message.local_device_token) : options.longs === Number ? new $util.LongBits(message.local_device_token.low >>> 0, message.local_device_token.high >>> 0).toNumber(true) : message.local_device_token;
            return object;
        };
    
        /**
         * Converts this CMsgClientAuthorizeLocalDeviceRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientAuthorizeLocalDeviceRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAuthorizeLocalDeviceRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAuthorizeLocalDeviceRequest;
    })();
    
    $root.CMsgClientAuthorizeLocalDevice = (function() {
    
        /**
         * Properties of a CMsgClientAuthorizeLocalDevice.
         * @exports ICMsgClientAuthorizeLocalDevice
         * @interface ICMsgClientAuthorizeLocalDevice
         * @property {number|null} [eresult] CMsgClientAuthorizeLocalDevice eresult
         * @property {number|null} [owner_account_id] CMsgClientAuthorizeLocalDevice owner_account_id
         * @property {number|Long|null} [authed_device_token] CMsgClientAuthorizeLocalDevice authed_device_token
         */
    
        /**
         * Constructs a new CMsgClientAuthorizeLocalDevice.
         * @exports CMsgClientAuthorizeLocalDevice
         * @classdesc Represents a CMsgClientAuthorizeLocalDevice.
         * @implements ICMsgClientAuthorizeLocalDevice
         * @constructor
         * @param {ICMsgClientAuthorizeLocalDevice=} [properties] Properties to set
         */
        function CMsgClientAuthorizeLocalDevice(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAuthorizeLocalDevice eresult.
         * @member {number} eresult
         * @memberof CMsgClientAuthorizeLocalDevice
         * @instance
         */
        CMsgClientAuthorizeLocalDevice.prototype.eresult = 2;
    
        /**
         * CMsgClientAuthorizeLocalDevice owner_account_id.
         * @member {number} owner_account_id
         * @memberof CMsgClientAuthorizeLocalDevice
         * @instance
         */
        CMsgClientAuthorizeLocalDevice.prototype.owner_account_id = 0;
    
        /**
         * CMsgClientAuthorizeLocalDevice authed_device_token.
         * @member {number|Long} authed_device_token
         * @memberof CMsgClientAuthorizeLocalDevice
         * @instance
         */
        CMsgClientAuthorizeLocalDevice.prototype.authed_device_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientAuthorizeLocalDevice instance using the specified properties.
         * @function create
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {ICMsgClientAuthorizeLocalDevice=} [properties] Properties to set
         * @returns {CMsgClientAuthorizeLocalDevice} CMsgClientAuthorizeLocalDevice instance
         */
        CMsgClientAuthorizeLocalDevice.create = function create(properties) {
            return new CMsgClientAuthorizeLocalDevice(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDevice message. Does not implicitly {@link CMsgClientAuthorizeLocalDevice.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {ICMsgClientAuthorizeLocalDevice} message CMsgClientAuthorizeLocalDevice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDevice.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.owner_account_id);
            if (message.authed_device_token != null && message.hasOwnProperty("authed_device_token"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.authed_device_token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDevice message, length delimited. Does not implicitly {@link CMsgClientAuthorizeLocalDevice.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {ICMsgClientAuthorizeLocalDevice} message CMsgClientAuthorizeLocalDevice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDevice.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDevice message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAuthorizeLocalDevice} CMsgClientAuthorizeLocalDevice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDevice.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAuthorizeLocalDevice();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.owner_account_id = reader.uint32();
                    break;
                case 3:
                    message.authed_device_token = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDevice message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAuthorizeLocalDevice} CMsgClientAuthorizeLocalDevice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDevice.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAuthorizeLocalDevice message.
         * @function verify
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAuthorizeLocalDevice.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                if (!$util.isInteger(message.owner_account_id))
                    return "owner_account_id: integer expected";
            if (message.authed_device_token != null && message.hasOwnProperty("authed_device_token"))
                if (!$util.isInteger(message.authed_device_token) && !(message.authed_device_token && $util.isInteger(message.authed_device_token.low) && $util.isInteger(message.authed_device_token.high)))
                    return "authed_device_token: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAuthorizeLocalDevice message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAuthorizeLocalDevice} CMsgClientAuthorizeLocalDevice
         */
        CMsgClientAuthorizeLocalDevice.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAuthorizeLocalDevice)
                return object;
            var message = new $root.CMsgClientAuthorizeLocalDevice();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.owner_account_id != null)
                message.owner_account_id = object.owner_account_id >>> 0;
            if (object.authed_device_token != null)
                if ($util.Long)
                    (message.authed_device_token = $util.Long.fromValue(object.authed_device_token)).unsigned = true;
                else if (typeof object.authed_device_token === "string")
                    message.authed_device_token = parseInt(object.authed_device_token, 10);
                else if (typeof object.authed_device_token === "number")
                    message.authed_device_token = object.authed_device_token;
                else if (typeof object.authed_device_token === "object")
                    message.authed_device_token = new $util.LongBits(object.authed_device_token.low >>> 0, object.authed_device_token.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAuthorizeLocalDevice message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAuthorizeLocalDevice
         * @static
         * @param {CMsgClientAuthorizeLocalDevice} message CMsgClientAuthorizeLocalDevice
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAuthorizeLocalDevice.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.owner_account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.authed_device_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.authed_device_token = options.longs === String ? "0" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                object.owner_account_id = message.owner_account_id;
            if (message.authed_device_token != null && message.hasOwnProperty("authed_device_token"))
                if (typeof message.authed_device_token === "number")
                    object.authed_device_token = options.longs === String ? String(message.authed_device_token) : message.authed_device_token;
                else
                    object.authed_device_token = options.longs === String ? $util.Long.prototype.toString.call(message.authed_device_token) : options.longs === Number ? new $util.LongBits(message.authed_device_token.low >>> 0, message.authed_device_token.high >>> 0).toNumber(true) : message.authed_device_token;
            return object;
        };
    
        /**
         * Converts this CMsgClientAuthorizeLocalDevice to JSON.
         * @function toJSON
         * @memberof CMsgClientAuthorizeLocalDevice
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAuthorizeLocalDevice.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAuthorizeLocalDevice;
    })();
    
    $root.CMsgClientAuthorizeLocalDeviceNotification = (function() {
    
        /**
         * Properties of a CMsgClientAuthorizeLocalDeviceNotification.
         * @exports ICMsgClientAuthorizeLocalDeviceNotification
         * @interface ICMsgClientAuthorizeLocalDeviceNotification
         * @property {number|null} [eresult] CMsgClientAuthorizeLocalDeviceNotification eresult
         * @property {number|null} [owner_account_id] CMsgClientAuthorizeLocalDeviceNotification owner_account_id
         * @property {number|Long|null} [local_device_token] CMsgClientAuthorizeLocalDeviceNotification local_device_token
         */
    
        /**
         * Constructs a new CMsgClientAuthorizeLocalDeviceNotification.
         * @exports CMsgClientAuthorizeLocalDeviceNotification
         * @classdesc Represents a CMsgClientAuthorizeLocalDeviceNotification.
         * @implements ICMsgClientAuthorizeLocalDeviceNotification
         * @constructor
         * @param {ICMsgClientAuthorizeLocalDeviceNotification=} [properties] Properties to set
         */
        function CMsgClientAuthorizeLocalDeviceNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAuthorizeLocalDeviceNotification eresult.
         * @member {number} eresult
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceNotification.prototype.eresult = 2;
    
        /**
         * CMsgClientAuthorizeLocalDeviceNotification owner_account_id.
         * @member {number} owner_account_id
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceNotification.prototype.owner_account_id = 0;
    
        /**
         * CMsgClientAuthorizeLocalDeviceNotification local_device_token.
         * @member {number|Long} local_device_token
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @instance
         */
        CMsgClientAuthorizeLocalDeviceNotification.prototype.local_device_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientAuthorizeLocalDeviceNotification instance using the specified properties.
         * @function create
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceNotification=} [properties] Properties to set
         * @returns {CMsgClientAuthorizeLocalDeviceNotification} CMsgClientAuthorizeLocalDeviceNotification instance
         */
        CMsgClientAuthorizeLocalDeviceNotification.create = function create(properties) {
            return new CMsgClientAuthorizeLocalDeviceNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDeviceNotification message. Does not implicitly {@link CMsgClientAuthorizeLocalDeviceNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceNotification} message CMsgClientAuthorizeLocalDeviceNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDeviceNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.owner_account_id);
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.local_device_token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAuthorizeLocalDeviceNotification message, length delimited. Does not implicitly {@link CMsgClientAuthorizeLocalDeviceNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {ICMsgClientAuthorizeLocalDeviceNotification} message CMsgClientAuthorizeLocalDeviceNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthorizeLocalDeviceNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDeviceNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAuthorizeLocalDeviceNotification} CMsgClientAuthorizeLocalDeviceNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDeviceNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAuthorizeLocalDeviceNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.owner_account_id = reader.uint32();
                    break;
                case 3:
                    message.local_device_token = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAuthorizeLocalDeviceNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAuthorizeLocalDeviceNotification} CMsgClientAuthorizeLocalDeviceNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthorizeLocalDeviceNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAuthorizeLocalDeviceNotification message.
         * @function verify
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAuthorizeLocalDeviceNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                if (!$util.isInteger(message.owner_account_id))
                    return "owner_account_id: integer expected";
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                if (!$util.isInteger(message.local_device_token) && !(message.local_device_token && $util.isInteger(message.local_device_token.low) && $util.isInteger(message.local_device_token.high)))
                    return "local_device_token: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAuthorizeLocalDeviceNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAuthorizeLocalDeviceNotification} CMsgClientAuthorizeLocalDeviceNotification
         */
        CMsgClientAuthorizeLocalDeviceNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAuthorizeLocalDeviceNotification)
                return object;
            var message = new $root.CMsgClientAuthorizeLocalDeviceNotification();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.owner_account_id != null)
                message.owner_account_id = object.owner_account_id >>> 0;
            if (object.local_device_token != null)
                if ($util.Long)
                    (message.local_device_token = $util.Long.fromValue(object.local_device_token)).unsigned = true;
                else if (typeof object.local_device_token === "string")
                    message.local_device_token = parseInt(object.local_device_token, 10);
                else if (typeof object.local_device_token === "number")
                    message.local_device_token = object.local_device_token;
                else if (typeof object.local_device_token === "object")
                    message.local_device_token = new $util.LongBits(object.local_device_token.low >>> 0, object.local_device_token.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAuthorizeLocalDeviceNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @static
         * @param {CMsgClientAuthorizeLocalDeviceNotification} message CMsgClientAuthorizeLocalDeviceNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAuthorizeLocalDeviceNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.owner_account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.local_device_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.local_device_token = options.longs === String ? "0" : 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                object.owner_account_id = message.owner_account_id;
            if (message.local_device_token != null && message.hasOwnProperty("local_device_token"))
                if (typeof message.local_device_token === "number")
                    object.local_device_token = options.longs === String ? String(message.local_device_token) : message.local_device_token;
                else
                    object.local_device_token = options.longs === String ? $util.Long.prototype.toString.call(message.local_device_token) : options.longs === Number ? new $util.LongBits(message.local_device_token.low >>> 0, message.local_device_token.high >>> 0).toNumber(true) : message.local_device_token;
            return object;
        };
    
        /**
         * Converts this CMsgClientAuthorizeLocalDeviceNotification to JSON.
         * @function toJSON
         * @memberof CMsgClientAuthorizeLocalDeviceNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAuthorizeLocalDeviceNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAuthorizeLocalDeviceNotification;
    })();
    
    $root.CMsgClientDeauthorizeDeviceRequest = (function() {
    
        /**
         * Properties of a CMsgClientDeauthorizeDeviceRequest.
         * @exports ICMsgClientDeauthorizeDeviceRequest
         * @interface ICMsgClientDeauthorizeDeviceRequest
         * @property {number|null} [deauthorization_account_id] CMsgClientDeauthorizeDeviceRequest deauthorization_account_id
         * @property {number|Long|null} [deauthorization_device_token] CMsgClientDeauthorizeDeviceRequest deauthorization_device_token
         */
    
        /**
         * Constructs a new CMsgClientDeauthorizeDeviceRequest.
         * @exports CMsgClientDeauthorizeDeviceRequest
         * @classdesc Represents a CMsgClientDeauthorizeDeviceRequest.
         * @implements ICMsgClientDeauthorizeDeviceRequest
         * @constructor
         * @param {ICMsgClientDeauthorizeDeviceRequest=} [properties] Properties to set
         */
        function CMsgClientDeauthorizeDeviceRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDeauthorizeDeviceRequest deauthorization_account_id.
         * @member {number} deauthorization_account_id
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @instance
         */
        CMsgClientDeauthorizeDeviceRequest.prototype.deauthorization_account_id = 0;
    
        /**
         * CMsgClientDeauthorizeDeviceRequest deauthorization_device_token.
         * @member {number|Long} deauthorization_device_token
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @instance
         */
        CMsgClientDeauthorizeDeviceRequest.prototype.deauthorization_device_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientDeauthorizeDeviceRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {ICMsgClientDeauthorizeDeviceRequest=} [properties] Properties to set
         * @returns {CMsgClientDeauthorizeDeviceRequest} CMsgClientDeauthorizeDeviceRequest instance
         */
        CMsgClientDeauthorizeDeviceRequest.create = function create(properties) {
            return new CMsgClientDeauthorizeDeviceRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDeauthorizeDeviceRequest message. Does not implicitly {@link CMsgClientDeauthorizeDeviceRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {ICMsgClientDeauthorizeDeviceRequest} message CMsgClientDeauthorizeDeviceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeauthorizeDeviceRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.deauthorization_account_id);
            if (message.deauthorization_device_token != null && message.hasOwnProperty("deauthorization_device_token"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.deauthorization_device_token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDeauthorizeDeviceRequest message, length delimited. Does not implicitly {@link CMsgClientDeauthorizeDeviceRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {ICMsgClientDeauthorizeDeviceRequest} message CMsgClientDeauthorizeDeviceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeauthorizeDeviceRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDeauthorizeDeviceRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDeauthorizeDeviceRequest} CMsgClientDeauthorizeDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeauthorizeDeviceRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDeauthorizeDeviceRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.deauthorization_account_id = reader.uint32();
                    break;
                case 2:
                    message.deauthorization_device_token = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDeauthorizeDeviceRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDeauthorizeDeviceRequest} CMsgClientDeauthorizeDeviceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeauthorizeDeviceRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDeauthorizeDeviceRequest message.
         * @function verify
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDeauthorizeDeviceRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                if (!$util.isInteger(message.deauthorization_account_id))
                    return "deauthorization_account_id: integer expected";
            if (message.deauthorization_device_token != null && message.hasOwnProperty("deauthorization_device_token"))
                if (!$util.isInteger(message.deauthorization_device_token) && !(message.deauthorization_device_token && $util.isInteger(message.deauthorization_device_token.low) && $util.isInteger(message.deauthorization_device_token.high)))
                    return "deauthorization_device_token: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDeauthorizeDeviceRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDeauthorizeDeviceRequest} CMsgClientDeauthorizeDeviceRequest
         */
        CMsgClientDeauthorizeDeviceRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDeauthorizeDeviceRequest)
                return object;
            var message = new $root.CMsgClientDeauthorizeDeviceRequest();
            if (object.deauthorization_account_id != null)
                message.deauthorization_account_id = object.deauthorization_account_id >>> 0;
            if (object.deauthorization_device_token != null)
                if ($util.Long)
                    (message.deauthorization_device_token = $util.Long.fromValue(object.deauthorization_device_token)).unsigned = true;
                else if (typeof object.deauthorization_device_token === "string")
                    message.deauthorization_device_token = parseInt(object.deauthorization_device_token, 10);
                else if (typeof object.deauthorization_device_token === "number")
                    message.deauthorization_device_token = object.deauthorization_device_token;
                else if (typeof object.deauthorization_device_token === "object")
                    message.deauthorization_device_token = new $util.LongBits(object.deauthorization_device_token.low >>> 0, object.deauthorization_device_token.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDeauthorizeDeviceRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @static
         * @param {CMsgClientDeauthorizeDeviceRequest} message CMsgClientDeauthorizeDeviceRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDeauthorizeDeviceRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.deauthorization_account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.deauthorization_device_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.deauthorization_device_token = options.longs === String ? "0" : 0;
            }
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                object.deauthorization_account_id = message.deauthorization_account_id;
            if (message.deauthorization_device_token != null && message.hasOwnProperty("deauthorization_device_token"))
                if (typeof message.deauthorization_device_token === "number")
                    object.deauthorization_device_token = options.longs === String ? String(message.deauthorization_device_token) : message.deauthorization_device_token;
                else
                    object.deauthorization_device_token = options.longs === String ? $util.Long.prototype.toString.call(message.deauthorization_device_token) : options.longs === Number ? new $util.LongBits(message.deauthorization_device_token.low >>> 0, message.deauthorization_device_token.high >>> 0).toNumber(true) : message.deauthorization_device_token;
            return object;
        };
    
        /**
         * Converts this CMsgClientDeauthorizeDeviceRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientDeauthorizeDeviceRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDeauthorizeDeviceRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDeauthorizeDeviceRequest;
    })();
    
    $root.CMsgClientDeauthorizeDevice = (function() {
    
        /**
         * Properties of a CMsgClientDeauthorizeDevice.
         * @exports ICMsgClientDeauthorizeDevice
         * @interface ICMsgClientDeauthorizeDevice
         * @property {number|null} [eresult] CMsgClientDeauthorizeDevice eresult
         * @property {number|null} [deauthorization_account_id] CMsgClientDeauthorizeDevice deauthorization_account_id
         */
    
        /**
         * Constructs a new CMsgClientDeauthorizeDevice.
         * @exports CMsgClientDeauthorizeDevice
         * @classdesc Represents a CMsgClientDeauthorizeDevice.
         * @implements ICMsgClientDeauthorizeDevice
         * @constructor
         * @param {ICMsgClientDeauthorizeDevice=} [properties] Properties to set
         */
        function CMsgClientDeauthorizeDevice(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDeauthorizeDevice eresult.
         * @member {number} eresult
         * @memberof CMsgClientDeauthorizeDevice
         * @instance
         */
        CMsgClientDeauthorizeDevice.prototype.eresult = 2;
    
        /**
         * CMsgClientDeauthorizeDevice deauthorization_account_id.
         * @member {number} deauthorization_account_id
         * @memberof CMsgClientDeauthorizeDevice
         * @instance
         */
        CMsgClientDeauthorizeDevice.prototype.deauthorization_account_id = 0;
    
        /**
         * Creates a new CMsgClientDeauthorizeDevice instance using the specified properties.
         * @function create
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {ICMsgClientDeauthorizeDevice=} [properties] Properties to set
         * @returns {CMsgClientDeauthorizeDevice} CMsgClientDeauthorizeDevice instance
         */
        CMsgClientDeauthorizeDevice.create = function create(properties) {
            return new CMsgClientDeauthorizeDevice(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDeauthorizeDevice message. Does not implicitly {@link CMsgClientDeauthorizeDevice.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {ICMsgClientDeauthorizeDevice} message CMsgClientDeauthorizeDevice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeauthorizeDevice.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.deauthorization_account_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDeauthorizeDevice message, length delimited. Does not implicitly {@link CMsgClientDeauthorizeDevice.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {ICMsgClientDeauthorizeDevice} message CMsgClientDeauthorizeDevice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeauthorizeDevice.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDeauthorizeDevice message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDeauthorizeDevice} CMsgClientDeauthorizeDevice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeauthorizeDevice.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDeauthorizeDevice();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.deauthorization_account_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDeauthorizeDevice message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDeauthorizeDevice} CMsgClientDeauthorizeDevice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeauthorizeDevice.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDeauthorizeDevice message.
         * @function verify
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDeauthorizeDevice.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                if (!$util.isInteger(message.deauthorization_account_id))
                    return "deauthorization_account_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDeauthorizeDevice message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDeauthorizeDevice} CMsgClientDeauthorizeDevice
         */
        CMsgClientDeauthorizeDevice.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDeauthorizeDevice)
                return object;
            var message = new $root.CMsgClientDeauthorizeDevice();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.deauthorization_account_id != null)
                message.deauthorization_account_id = object.deauthorization_account_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDeauthorizeDevice message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDeauthorizeDevice
         * @static
         * @param {CMsgClientDeauthorizeDevice} message CMsgClientDeauthorizeDevice
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDeauthorizeDevice.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.deauthorization_account_id = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.deauthorization_account_id != null && message.hasOwnProperty("deauthorization_account_id"))
                object.deauthorization_account_id = message.deauthorization_account_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientDeauthorizeDevice to JSON.
         * @function toJSON
         * @memberof CMsgClientDeauthorizeDevice
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDeauthorizeDevice.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDeauthorizeDevice;
    })();
    
    $root.CMsgClientUseLocalDeviceAuthorizations = (function() {
    
        /**
         * Properties of a CMsgClientUseLocalDeviceAuthorizations.
         * @exports ICMsgClientUseLocalDeviceAuthorizations
         * @interface ICMsgClientUseLocalDeviceAuthorizations
         * @property {Array.<number>|null} [authorization_account_id] CMsgClientUseLocalDeviceAuthorizations authorization_account_id
         * @property {Array.<CMsgClientUseLocalDeviceAuthorizations.IDeviceToken>|null} [device_tokens] CMsgClientUseLocalDeviceAuthorizations device_tokens
         */
    
        /**
         * Constructs a new CMsgClientUseLocalDeviceAuthorizations.
         * @exports CMsgClientUseLocalDeviceAuthorizations
         * @classdesc Represents a CMsgClientUseLocalDeviceAuthorizations.
         * @implements ICMsgClientUseLocalDeviceAuthorizations
         * @constructor
         * @param {ICMsgClientUseLocalDeviceAuthorizations=} [properties] Properties to set
         */
        function CMsgClientUseLocalDeviceAuthorizations(properties) {
            this.authorization_account_id = [];
            this.device_tokens = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUseLocalDeviceAuthorizations authorization_account_id.
         * @member {Array.<number>} authorization_account_id
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @instance
         */
        CMsgClientUseLocalDeviceAuthorizations.prototype.authorization_account_id = $util.emptyArray;
    
        /**
         * CMsgClientUseLocalDeviceAuthorizations device_tokens.
         * @member {Array.<CMsgClientUseLocalDeviceAuthorizations.IDeviceToken>} device_tokens
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @instance
         */
        CMsgClientUseLocalDeviceAuthorizations.prototype.device_tokens = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUseLocalDeviceAuthorizations instance using the specified properties.
         * @function create
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {ICMsgClientUseLocalDeviceAuthorizations=} [properties] Properties to set
         * @returns {CMsgClientUseLocalDeviceAuthorizations} CMsgClientUseLocalDeviceAuthorizations instance
         */
        CMsgClientUseLocalDeviceAuthorizations.create = function create(properties) {
            return new CMsgClientUseLocalDeviceAuthorizations(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUseLocalDeviceAuthorizations message. Does not implicitly {@link CMsgClientUseLocalDeviceAuthorizations.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {ICMsgClientUseLocalDeviceAuthorizations} message CMsgClientUseLocalDeviceAuthorizations message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUseLocalDeviceAuthorizations.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.authorization_account_id != null && message.authorization_account_id.length)
                for (var i = 0; i < message.authorization_account_id.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.authorization_account_id[i]);
            if (message.device_tokens != null && message.device_tokens.length)
                for (var i = 0; i < message.device_tokens.length; ++i)
                    $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.encode(message.device_tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUseLocalDeviceAuthorizations message, length delimited. Does not implicitly {@link CMsgClientUseLocalDeviceAuthorizations.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {ICMsgClientUseLocalDeviceAuthorizations} message CMsgClientUseLocalDeviceAuthorizations message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUseLocalDeviceAuthorizations.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUseLocalDeviceAuthorizations message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUseLocalDeviceAuthorizations} CMsgClientUseLocalDeviceAuthorizations
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUseLocalDeviceAuthorizations.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUseLocalDeviceAuthorizations();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.authorization_account_id && message.authorization_account_id.length))
                        message.authorization_account_id = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.authorization_account_id.push(reader.uint32());
                    } else
                        message.authorization_account_id.push(reader.uint32());
                    break;
                case 2:
                    if (!(message.device_tokens && message.device_tokens.length))
                        message.device_tokens = [];
                    message.device_tokens.push($root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUseLocalDeviceAuthorizations message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUseLocalDeviceAuthorizations} CMsgClientUseLocalDeviceAuthorizations
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUseLocalDeviceAuthorizations.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUseLocalDeviceAuthorizations message.
         * @function verify
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUseLocalDeviceAuthorizations.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.authorization_account_id != null && message.hasOwnProperty("authorization_account_id")) {
                if (!Array.isArray(message.authorization_account_id))
                    return "authorization_account_id: array expected";
                for (var i = 0; i < message.authorization_account_id.length; ++i)
                    if (!$util.isInteger(message.authorization_account_id[i]))
                        return "authorization_account_id: integer[] expected";
            }
            if (message.device_tokens != null && message.hasOwnProperty("device_tokens")) {
                if (!Array.isArray(message.device_tokens))
                    return "device_tokens: array expected";
                for (var i = 0; i < message.device_tokens.length; ++i) {
                    var error = $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.verify(message.device_tokens[i]);
                    if (error)
                        return "device_tokens." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUseLocalDeviceAuthorizations message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUseLocalDeviceAuthorizations} CMsgClientUseLocalDeviceAuthorizations
         */
        CMsgClientUseLocalDeviceAuthorizations.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUseLocalDeviceAuthorizations)
                return object;
            var message = new $root.CMsgClientUseLocalDeviceAuthorizations();
            if (object.authorization_account_id) {
                if (!Array.isArray(object.authorization_account_id))
                    throw TypeError(".CMsgClientUseLocalDeviceAuthorizations.authorization_account_id: array expected");
                message.authorization_account_id = [];
                for (var i = 0; i < object.authorization_account_id.length; ++i)
                    message.authorization_account_id[i] = object.authorization_account_id[i] >>> 0;
            }
            if (object.device_tokens) {
                if (!Array.isArray(object.device_tokens))
                    throw TypeError(".CMsgClientUseLocalDeviceAuthorizations.device_tokens: array expected");
                message.device_tokens = [];
                for (var i = 0; i < object.device_tokens.length; ++i) {
                    if (typeof object.device_tokens[i] !== "object")
                        throw TypeError(".CMsgClientUseLocalDeviceAuthorizations.device_tokens: object expected");
                    message.device_tokens[i] = $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.fromObject(object.device_tokens[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUseLocalDeviceAuthorizations message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @static
         * @param {CMsgClientUseLocalDeviceAuthorizations} message CMsgClientUseLocalDeviceAuthorizations
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUseLocalDeviceAuthorizations.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.authorization_account_id = [];
                object.device_tokens = [];
            }
            if (message.authorization_account_id && message.authorization_account_id.length) {
                object.authorization_account_id = [];
                for (var j = 0; j < message.authorization_account_id.length; ++j)
                    object.authorization_account_id[j] = message.authorization_account_id[j];
            }
            if (message.device_tokens && message.device_tokens.length) {
                object.device_tokens = [];
                for (var j = 0; j < message.device_tokens.length; ++j)
                    object.device_tokens[j] = $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.toObject(message.device_tokens[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUseLocalDeviceAuthorizations to JSON.
         * @function toJSON
         * @memberof CMsgClientUseLocalDeviceAuthorizations
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUseLocalDeviceAuthorizations.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUseLocalDeviceAuthorizations.DeviceToken = (function() {
    
            /**
             * Properties of a DeviceToken.
             * @memberof CMsgClientUseLocalDeviceAuthorizations
             * @interface IDeviceToken
             * @property {number|null} [owner_account_id] DeviceToken owner_account_id
             * @property {number|Long|null} [token_id] DeviceToken token_id
             */
    
            /**
             * Constructs a new DeviceToken.
             * @memberof CMsgClientUseLocalDeviceAuthorizations
             * @classdesc Represents a DeviceToken.
             * @implements IDeviceToken
             * @constructor
             * @param {CMsgClientUseLocalDeviceAuthorizations.IDeviceToken=} [properties] Properties to set
             */
            function DeviceToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * DeviceToken owner_account_id.
             * @member {number} owner_account_id
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @instance
             */
            DeviceToken.prototype.owner_account_id = 0;
    
            /**
             * DeviceToken token_id.
             * @member {number|Long} token_id
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @instance
             */
            DeviceToken.prototype.token_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new DeviceToken instance using the specified properties.
             * @function create
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {CMsgClientUseLocalDeviceAuthorizations.IDeviceToken=} [properties] Properties to set
             * @returns {CMsgClientUseLocalDeviceAuthorizations.DeviceToken} DeviceToken instance
             */
            DeviceToken.create = function create(properties) {
                return new DeviceToken(properties);
            };
    
            /**
             * Encodes the specified DeviceToken message. Does not implicitly {@link CMsgClientUseLocalDeviceAuthorizations.DeviceToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {CMsgClientUseLocalDeviceAuthorizations.IDeviceToken} message DeviceToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.owner_account_id);
                if (message.token_id != null && message.hasOwnProperty("token_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.token_id);
                return writer;
            };
    
            /**
             * Encodes the specified DeviceToken message, length delimited. Does not implicitly {@link CMsgClientUseLocalDeviceAuthorizations.DeviceToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {CMsgClientUseLocalDeviceAuthorizations.IDeviceToken} message DeviceToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeviceToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a DeviceToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUseLocalDeviceAuthorizations.DeviceToken} DeviceToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner_account_id = reader.uint32();
                        break;
                    case 2:
                        message.token_id = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a DeviceToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUseLocalDeviceAuthorizations.DeviceToken} DeviceToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeviceToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a DeviceToken message.
             * @function verify
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeviceToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                    if (!$util.isInteger(message.owner_account_id))
                        return "owner_account_id: integer expected";
                if (message.token_id != null && message.hasOwnProperty("token_id"))
                    if (!$util.isInteger(message.token_id) && !(message.token_id && $util.isInteger(message.token_id.low) && $util.isInteger(message.token_id.high)))
                        return "token_id: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a DeviceToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUseLocalDeviceAuthorizations.DeviceToken} DeviceToken
             */
            DeviceToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
                    return object;
                var message = new $root.CMsgClientUseLocalDeviceAuthorizations.DeviceToken();
                if (object.owner_account_id != null)
                    message.owner_account_id = object.owner_account_id >>> 0;
                if (object.token_id != null)
                    if ($util.Long)
                        (message.token_id = $util.Long.fromValue(object.token_id)).unsigned = true;
                    else if (typeof object.token_id === "string")
                        message.token_id = parseInt(object.token_id, 10);
                    else if (typeof object.token_id === "number")
                        message.token_id = object.token_id;
                    else if (typeof object.token_id === "object")
                        message.token_id = new $util.LongBits(object.token_id.low >>> 0, object.token_id.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a DeviceToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @static
             * @param {CMsgClientUseLocalDeviceAuthorizations.DeviceToken} message DeviceToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeviceToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.owner_account_id = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.token_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.token_id = options.longs === String ? "0" : 0;
                }
                if (message.owner_account_id != null && message.hasOwnProperty("owner_account_id"))
                    object.owner_account_id = message.owner_account_id;
                if (message.token_id != null && message.hasOwnProperty("token_id"))
                    if (typeof message.token_id === "number")
                        object.token_id = options.longs === String ? String(message.token_id) : message.token_id;
                    else
                        object.token_id = options.longs === String ? $util.Long.prototype.toString.call(message.token_id) : options.longs === Number ? new $util.LongBits(message.token_id.low >>> 0, message.token_id.high >>> 0).toNumber(true) : message.token_id;
                return object;
            };
    
            /**
             * Converts this DeviceToken to JSON.
             * @function toJSON
             * @memberof CMsgClientUseLocalDeviceAuthorizations.DeviceToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeviceToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return DeviceToken;
        })();
    
        return CMsgClientUseLocalDeviceAuthorizations;
    })();
    
    $root.CMsgClientGetAuthorizedDevices = (function() {
    
        /**
         * Properties of a CMsgClientGetAuthorizedDevices.
         * @exports ICMsgClientGetAuthorizedDevices
         * @interface ICMsgClientGetAuthorizedDevices
         */
    
        /**
         * Constructs a new CMsgClientGetAuthorizedDevices.
         * @exports CMsgClientGetAuthorizedDevices
         * @classdesc Represents a CMsgClientGetAuthorizedDevices.
         * @implements ICMsgClientGetAuthorizedDevices
         * @constructor
         * @param {ICMsgClientGetAuthorizedDevices=} [properties] Properties to set
         */
        function CMsgClientGetAuthorizedDevices(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientGetAuthorizedDevices instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {ICMsgClientGetAuthorizedDevices=} [properties] Properties to set
         * @returns {CMsgClientGetAuthorizedDevices} CMsgClientGetAuthorizedDevices instance
         */
        CMsgClientGetAuthorizedDevices.create = function create(properties) {
            return new CMsgClientGetAuthorizedDevices(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetAuthorizedDevices message. Does not implicitly {@link CMsgClientGetAuthorizedDevices.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {ICMsgClientGetAuthorizedDevices} message CMsgClientGetAuthorizedDevices message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAuthorizedDevices.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetAuthorizedDevices message, length delimited. Does not implicitly {@link CMsgClientGetAuthorizedDevices.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {ICMsgClientGetAuthorizedDevices} message CMsgClientGetAuthorizedDevices message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAuthorizedDevices.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetAuthorizedDevices message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetAuthorizedDevices} CMsgClientGetAuthorizedDevices
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAuthorizedDevices.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetAuthorizedDevices();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetAuthorizedDevices message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetAuthorizedDevices} CMsgClientGetAuthorizedDevices
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAuthorizedDevices.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetAuthorizedDevices message.
         * @function verify
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetAuthorizedDevices.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetAuthorizedDevices message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetAuthorizedDevices} CMsgClientGetAuthorizedDevices
         */
        CMsgClientGetAuthorizedDevices.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetAuthorizedDevices)
                return object;
            return new $root.CMsgClientGetAuthorizedDevices();
        };
    
        /**
         * Creates a plain object from a CMsgClientGetAuthorizedDevices message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetAuthorizedDevices
         * @static
         * @param {CMsgClientGetAuthorizedDevices} message CMsgClientGetAuthorizedDevices
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetAuthorizedDevices.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientGetAuthorizedDevices to JSON.
         * @function toJSON
         * @memberof CMsgClientGetAuthorizedDevices
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetAuthorizedDevices.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetAuthorizedDevices;
    })();
    
    $root.CMsgClientGetAuthorizedDevicesResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetAuthorizedDevicesResponse.
         * @exports ICMsgClientGetAuthorizedDevicesResponse
         * @interface ICMsgClientGetAuthorizedDevicesResponse
         * @property {number|null} [eresult] CMsgClientGetAuthorizedDevicesResponse eresult
         * @property {Array.<CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice>|null} [authorized_device] CMsgClientGetAuthorizedDevicesResponse authorized_device
         */
    
        /**
         * Constructs a new CMsgClientGetAuthorizedDevicesResponse.
         * @exports CMsgClientGetAuthorizedDevicesResponse
         * @classdesc Represents a CMsgClientGetAuthorizedDevicesResponse.
         * @implements ICMsgClientGetAuthorizedDevicesResponse
         * @constructor
         * @param {ICMsgClientGetAuthorizedDevicesResponse=} [properties] Properties to set
         */
        function CMsgClientGetAuthorizedDevicesResponse(properties) {
            this.authorized_device = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetAuthorizedDevicesResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @instance
         */
        CMsgClientGetAuthorizedDevicesResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientGetAuthorizedDevicesResponse authorized_device.
         * @member {Array.<CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice>} authorized_device
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @instance
         */
        CMsgClientGetAuthorizedDevicesResponse.prototype.authorized_device = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGetAuthorizedDevicesResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {ICMsgClientGetAuthorizedDevicesResponse=} [properties] Properties to set
         * @returns {CMsgClientGetAuthorizedDevicesResponse} CMsgClientGetAuthorizedDevicesResponse instance
         */
        CMsgClientGetAuthorizedDevicesResponse.create = function create(properties) {
            return new CMsgClientGetAuthorizedDevicesResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetAuthorizedDevicesResponse message. Does not implicitly {@link CMsgClientGetAuthorizedDevicesResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {ICMsgClientGetAuthorizedDevicesResponse} message CMsgClientGetAuthorizedDevicesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAuthorizedDevicesResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.authorized_device != null && message.authorized_device.length)
                for (var i = 0; i < message.authorized_device.length; ++i)
                    $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.encode(message.authorized_device[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetAuthorizedDevicesResponse message, length delimited. Does not implicitly {@link CMsgClientGetAuthorizedDevicesResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {ICMsgClientGetAuthorizedDevicesResponse} message CMsgClientGetAuthorizedDevicesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAuthorizedDevicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetAuthorizedDevicesResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetAuthorizedDevicesResponse} CMsgClientGetAuthorizedDevicesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAuthorizedDevicesResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetAuthorizedDevicesResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    if (!(message.authorized_device && message.authorized_device.length))
                        message.authorized_device = [];
                    message.authorized_device.push($root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetAuthorizedDevicesResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetAuthorizedDevicesResponse} CMsgClientGetAuthorizedDevicesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAuthorizedDevicesResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetAuthorizedDevicesResponse message.
         * @function verify
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetAuthorizedDevicesResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.authorized_device != null && message.hasOwnProperty("authorized_device")) {
                if (!Array.isArray(message.authorized_device))
                    return "authorized_device: array expected";
                for (var i = 0; i < message.authorized_device.length; ++i) {
                    var error = $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.verify(message.authorized_device[i]);
                    if (error)
                        return "authorized_device." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGetAuthorizedDevicesResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetAuthorizedDevicesResponse} CMsgClientGetAuthorizedDevicesResponse
         */
        CMsgClientGetAuthorizedDevicesResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetAuthorizedDevicesResponse)
                return object;
            var message = new $root.CMsgClientGetAuthorizedDevicesResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.authorized_device) {
                if (!Array.isArray(object.authorized_device))
                    throw TypeError(".CMsgClientGetAuthorizedDevicesResponse.authorized_device: array expected");
                message.authorized_device = [];
                for (var i = 0; i < object.authorized_device.length; ++i) {
                    if (typeof object.authorized_device[i] !== "object")
                        throw TypeError(".CMsgClientGetAuthorizedDevicesResponse.authorized_device: object expected");
                    message.authorized_device[i] = $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.fromObject(object.authorized_device[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetAuthorizedDevicesResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @static
         * @param {CMsgClientGetAuthorizedDevicesResponse} message CMsgClientGetAuthorizedDevicesResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetAuthorizedDevicesResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.authorized_device = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.authorized_device && message.authorized_device.length) {
                object.authorized_device = [];
                for (var j = 0; j < message.authorized_device.length; ++j)
                    object.authorized_device[j] = $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.toObject(message.authorized_device[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientGetAuthorizedDevicesResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetAuthorizedDevicesResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetAuthorizedDevicesResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice = (function() {
    
            /**
             * Properties of an AuthorizedDevice.
             * @memberof CMsgClientGetAuthorizedDevicesResponse
             * @interface IAuthorizedDevice
             * @property {number|Long|null} [auth_device_token] AuthorizedDevice auth_device_token
             * @property {string|null} [device_name] AuthorizedDevice device_name
             * @property {number|null} [last_access_time] AuthorizedDevice last_access_time
             * @property {number|null} [borrower_id] AuthorizedDevice borrower_id
             * @property {boolean|null} [is_pending] AuthorizedDevice is_pending
             * @property {number|null} [app_played] AuthorizedDevice app_played
             */
    
            /**
             * Constructs a new AuthorizedDevice.
             * @memberof CMsgClientGetAuthorizedDevicesResponse
             * @classdesc Represents an AuthorizedDevice.
             * @implements IAuthorizedDevice
             * @constructor
             * @param {CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice=} [properties] Properties to set
             */
            function AuthorizedDevice(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AuthorizedDevice auth_device_token.
             * @member {number|Long} auth_device_token
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.auth_device_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * AuthorizedDevice device_name.
             * @member {string} device_name
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.device_name = "";
    
            /**
             * AuthorizedDevice last_access_time.
             * @member {number} last_access_time
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.last_access_time = 0;
    
            /**
             * AuthorizedDevice borrower_id.
             * @member {number} borrower_id
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.borrower_id = 0;
    
            /**
             * AuthorizedDevice is_pending.
             * @member {boolean} is_pending
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.is_pending = false;
    
            /**
             * AuthorizedDevice app_played.
             * @member {number} app_played
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             */
            AuthorizedDevice.prototype.app_played = 0;
    
            /**
             * Creates a new AuthorizedDevice instance using the specified properties.
             * @function create
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice=} [properties] Properties to set
             * @returns {CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice} AuthorizedDevice instance
             */
            AuthorizedDevice.create = function create(properties) {
                return new AuthorizedDevice(properties);
            };
    
            /**
             * Encodes the specified AuthorizedDevice message. Does not implicitly {@link CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice} message AuthorizedDevice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AuthorizedDevice.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.auth_device_token != null && message.hasOwnProperty("auth_device_token"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.auth_device_token);
                if (message.device_name != null && message.hasOwnProperty("device_name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.device_name);
                if (message.last_access_time != null && message.hasOwnProperty("last_access_time"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.last_access_time);
                if (message.borrower_id != null && message.hasOwnProperty("borrower_id"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.borrower_id);
                if (message.is_pending != null && message.hasOwnProperty("is_pending"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.is_pending);
                if (message.app_played != null && message.hasOwnProperty("app_played"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.app_played);
                return writer;
            };
    
            /**
             * Encodes the specified AuthorizedDevice message, length delimited. Does not implicitly {@link CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {CMsgClientGetAuthorizedDevicesResponse.IAuthorizedDevice} message AuthorizedDevice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AuthorizedDevice.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AuthorizedDevice message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice} AuthorizedDevice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AuthorizedDevice.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.auth_device_token = reader.uint64();
                        break;
                    case 2:
                        message.device_name = reader.string();
                        break;
                    case 3:
                        message.last_access_time = reader.uint32();
                        break;
                    case 4:
                        message.borrower_id = reader.uint32();
                        break;
                    case 5:
                        message.is_pending = reader.bool();
                        break;
                    case 6:
                        message.app_played = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AuthorizedDevice message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice} AuthorizedDevice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AuthorizedDevice.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AuthorizedDevice message.
             * @function verify
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AuthorizedDevice.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.auth_device_token != null && message.hasOwnProperty("auth_device_token"))
                    if (!$util.isInteger(message.auth_device_token) && !(message.auth_device_token && $util.isInteger(message.auth_device_token.low) && $util.isInteger(message.auth_device_token.high)))
                        return "auth_device_token: integer|Long expected";
                if (message.device_name != null && message.hasOwnProperty("device_name"))
                    if (!$util.isString(message.device_name))
                        return "device_name: string expected";
                if (message.last_access_time != null && message.hasOwnProperty("last_access_time"))
                    if (!$util.isInteger(message.last_access_time))
                        return "last_access_time: integer expected";
                if (message.borrower_id != null && message.hasOwnProperty("borrower_id"))
                    if (!$util.isInteger(message.borrower_id))
                        return "borrower_id: integer expected";
                if (message.is_pending != null && message.hasOwnProperty("is_pending"))
                    if (typeof message.is_pending !== "boolean")
                        return "is_pending: boolean expected";
                if (message.app_played != null && message.hasOwnProperty("app_played"))
                    if (!$util.isInteger(message.app_played))
                        return "app_played: integer expected";
                return null;
            };
    
            /**
             * Creates an AuthorizedDevice message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice} AuthorizedDevice
             */
            AuthorizedDevice.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
                    return object;
                var message = new $root.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice();
                if (object.auth_device_token != null)
                    if ($util.Long)
                        (message.auth_device_token = $util.Long.fromValue(object.auth_device_token)).unsigned = true;
                    else if (typeof object.auth_device_token === "string")
                        message.auth_device_token = parseInt(object.auth_device_token, 10);
                    else if (typeof object.auth_device_token === "number")
                        message.auth_device_token = object.auth_device_token;
                    else if (typeof object.auth_device_token === "object")
                        message.auth_device_token = new $util.LongBits(object.auth_device_token.low >>> 0, object.auth_device_token.high >>> 0).toNumber(true);
                if (object.device_name != null)
                    message.device_name = String(object.device_name);
                if (object.last_access_time != null)
                    message.last_access_time = object.last_access_time >>> 0;
                if (object.borrower_id != null)
                    message.borrower_id = object.borrower_id >>> 0;
                if (object.is_pending != null)
                    message.is_pending = Boolean(object.is_pending);
                if (object.app_played != null)
                    message.app_played = object.app_played >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an AuthorizedDevice message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @static
             * @param {CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice} message AuthorizedDevice
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AuthorizedDevice.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.auth_device_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.auth_device_token = options.longs === String ? "0" : 0;
                    object.device_name = "";
                    object.last_access_time = 0;
                    object.borrower_id = 0;
                    object.is_pending = false;
                    object.app_played = 0;
                }
                if (message.auth_device_token != null && message.hasOwnProperty("auth_device_token"))
                    if (typeof message.auth_device_token === "number")
                        object.auth_device_token = options.longs === String ? String(message.auth_device_token) : message.auth_device_token;
                    else
                        object.auth_device_token = options.longs === String ? $util.Long.prototype.toString.call(message.auth_device_token) : options.longs === Number ? new $util.LongBits(message.auth_device_token.low >>> 0, message.auth_device_token.high >>> 0).toNumber(true) : message.auth_device_token;
                if (message.device_name != null && message.hasOwnProperty("device_name"))
                    object.device_name = message.device_name;
                if (message.last_access_time != null && message.hasOwnProperty("last_access_time"))
                    object.last_access_time = message.last_access_time;
                if (message.borrower_id != null && message.hasOwnProperty("borrower_id"))
                    object.borrower_id = message.borrower_id;
                if (message.is_pending != null && message.hasOwnProperty("is_pending"))
                    object.is_pending = message.is_pending;
                if (message.app_played != null && message.hasOwnProperty("app_played"))
                    object.app_played = message.app_played;
                return object;
            };
    
            /**
             * Converts this AuthorizedDevice to JSON.
             * @function toJSON
             * @memberof CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AuthorizedDevice.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return AuthorizedDevice;
        })();
    
        return CMsgClientGetAuthorizedDevicesResponse;
    })();
    
    $root.CMsgClientSharedLibraryLockStatus = (function() {
    
        /**
         * Properties of a CMsgClientSharedLibraryLockStatus.
         * @exports ICMsgClientSharedLibraryLockStatus
         * @interface ICMsgClientSharedLibraryLockStatus
         * @property {Array.<CMsgClientSharedLibraryLockStatus.ILockedLibrary>|null} [locked_library] CMsgClientSharedLibraryLockStatus locked_library
         * @property {number|null} [own_library_locked_by] CMsgClientSharedLibraryLockStatus own_library_locked_by
         */
    
        /**
         * Constructs a new CMsgClientSharedLibraryLockStatus.
         * @exports CMsgClientSharedLibraryLockStatus
         * @classdesc Represents a CMsgClientSharedLibraryLockStatus.
         * @implements ICMsgClientSharedLibraryLockStatus
         * @constructor
         * @param {ICMsgClientSharedLibraryLockStatus=} [properties] Properties to set
         */
        function CMsgClientSharedLibraryLockStatus(properties) {
            this.locked_library = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSharedLibraryLockStatus locked_library.
         * @member {Array.<CMsgClientSharedLibraryLockStatus.ILockedLibrary>} locked_library
         * @memberof CMsgClientSharedLibraryLockStatus
         * @instance
         */
        CMsgClientSharedLibraryLockStatus.prototype.locked_library = $util.emptyArray;
    
        /**
         * CMsgClientSharedLibraryLockStatus own_library_locked_by.
         * @member {number} own_library_locked_by
         * @memberof CMsgClientSharedLibraryLockStatus
         * @instance
         */
        CMsgClientSharedLibraryLockStatus.prototype.own_library_locked_by = 0;
    
        /**
         * Creates a new CMsgClientSharedLibraryLockStatus instance using the specified properties.
         * @function create
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {ICMsgClientSharedLibraryLockStatus=} [properties] Properties to set
         * @returns {CMsgClientSharedLibraryLockStatus} CMsgClientSharedLibraryLockStatus instance
         */
        CMsgClientSharedLibraryLockStatus.create = function create(properties) {
            return new CMsgClientSharedLibraryLockStatus(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSharedLibraryLockStatus message. Does not implicitly {@link CMsgClientSharedLibraryLockStatus.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {ICMsgClientSharedLibraryLockStatus} message CMsgClientSharedLibraryLockStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSharedLibraryLockStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.locked_library != null && message.locked_library.length)
                for (var i = 0; i < message.locked_library.length; ++i)
                    $root.CMsgClientSharedLibraryLockStatus.LockedLibrary.encode(message.locked_library[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.own_library_locked_by != null && message.hasOwnProperty("own_library_locked_by"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.own_library_locked_by);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSharedLibraryLockStatus message, length delimited. Does not implicitly {@link CMsgClientSharedLibraryLockStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {ICMsgClientSharedLibraryLockStatus} message CMsgClientSharedLibraryLockStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSharedLibraryLockStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSharedLibraryLockStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSharedLibraryLockStatus} CMsgClientSharedLibraryLockStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSharedLibraryLockStatus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSharedLibraryLockStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.locked_library && message.locked_library.length))
                        message.locked_library = [];
                    message.locked_library.push($root.CMsgClientSharedLibraryLockStatus.LockedLibrary.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.own_library_locked_by = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSharedLibraryLockStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSharedLibraryLockStatus} CMsgClientSharedLibraryLockStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSharedLibraryLockStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSharedLibraryLockStatus message.
         * @function verify
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSharedLibraryLockStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.locked_library != null && message.hasOwnProperty("locked_library")) {
                if (!Array.isArray(message.locked_library))
                    return "locked_library: array expected";
                for (var i = 0; i < message.locked_library.length; ++i) {
                    var error = $root.CMsgClientSharedLibraryLockStatus.LockedLibrary.verify(message.locked_library[i]);
                    if (error)
                        return "locked_library." + error;
                }
            }
            if (message.own_library_locked_by != null && message.hasOwnProperty("own_library_locked_by"))
                if (!$util.isInteger(message.own_library_locked_by))
                    return "own_library_locked_by: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSharedLibraryLockStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSharedLibraryLockStatus} CMsgClientSharedLibraryLockStatus
         */
        CMsgClientSharedLibraryLockStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSharedLibraryLockStatus)
                return object;
            var message = new $root.CMsgClientSharedLibraryLockStatus();
            if (object.locked_library) {
                if (!Array.isArray(object.locked_library))
                    throw TypeError(".CMsgClientSharedLibraryLockStatus.locked_library: array expected");
                message.locked_library = [];
                for (var i = 0; i < object.locked_library.length; ++i) {
                    if (typeof object.locked_library[i] !== "object")
                        throw TypeError(".CMsgClientSharedLibraryLockStatus.locked_library: object expected");
                    message.locked_library[i] = $root.CMsgClientSharedLibraryLockStatus.LockedLibrary.fromObject(object.locked_library[i]);
                }
            }
            if (object.own_library_locked_by != null)
                message.own_library_locked_by = object.own_library_locked_by >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSharedLibraryLockStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSharedLibraryLockStatus
         * @static
         * @param {CMsgClientSharedLibraryLockStatus} message CMsgClientSharedLibraryLockStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSharedLibraryLockStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.locked_library = [];
            if (options.defaults)
                object.own_library_locked_by = 0;
            if (message.locked_library && message.locked_library.length) {
                object.locked_library = [];
                for (var j = 0; j < message.locked_library.length; ++j)
                    object.locked_library[j] = $root.CMsgClientSharedLibraryLockStatus.LockedLibrary.toObject(message.locked_library[j], options);
            }
            if (message.own_library_locked_by != null && message.hasOwnProperty("own_library_locked_by"))
                object.own_library_locked_by = message.own_library_locked_by;
            return object;
        };
    
        /**
         * Converts this CMsgClientSharedLibraryLockStatus to JSON.
         * @function toJSON
         * @memberof CMsgClientSharedLibraryLockStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSharedLibraryLockStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientSharedLibraryLockStatus.LockedLibrary = (function() {
    
            /**
             * Properties of a LockedLibrary.
             * @memberof CMsgClientSharedLibraryLockStatus
             * @interface ILockedLibrary
             * @property {number|null} [owner_id] LockedLibrary owner_id
             * @property {number|null} [locked_by] LockedLibrary locked_by
             */
    
            /**
             * Constructs a new LockedLibrary.
             * @memberof CMsgClientSharedLibraryLockStatus
             * @classdesc Represents a LockedLibrary.
             * @implements ILockedLibrary
             * @constructor
             * @param {CMsgClientSharedLibraryLockStatus.ILockedLibrary=} [properties] Properties to set
             */
            function LockedLibrary(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * LockedLibrary owner_id.
             * @member {number} owner_id
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @instance
             */
            LockedLibrary.prototype.owner_id = 0;
    
            /**
             * LockedLibrary locked_by.
             * @member {number} locked_by
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @instance
             */
            LockedLibrary.prototype.locked_by = 0;
    
            /**
             * Creates a new LockedLibrary instance using the specified properties.
             * @function create
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {CMsgClientSharedLibraryLockStatus.ILockedLibrary=} [properties] Properties to set
             * @returns {CMsgClientSharedLibraryLockStatus.LockedLibrary} LockedLibrary instance
             */
            LockedLibrary.create = function create(properties) {
                return new LockedLibrary(properties);
            };
    
            /**
             * Encodes the specified LockedLibrary message. Does not implicitly {@link CMsgClientSharedLibraryLockStatus.LockedLibrary.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {CMsgClientSharedLibraryLockStatus.ILockedLibrary} message LockedLibrary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockedLibrary.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.owner_id);
                if (message.locked_by != null && message.hasOwnProperty("locked_by"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.locked_by);
                return writer;
            };
    
            /**
             * Encodes the specified LockedLibrary message, length delimited. Does not implicitly {@link CMsgClientSharedLibraryLockStatus.LockedLibrary.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {CMsgClientSharedLibraryLockStatus.ILockedLibrary} message LockedLibrary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockedLibrary.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a LockedLibrary message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientSharedLibraryLockStatus.LockedLibrary} LockedLibrary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockedLibrary.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSharedLibraryLockStatus.LockedLibrary();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.owner_id = reader.uint32();
                        break;
                    case 2:
                        message.locked_by = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a LockedLibrary message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientSharedLibraryLockStatus.LockedLibrary} LockedLibrary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockedLibrary.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a LockedLibrary message.
             * @function verify
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LockedLibrary.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    if (!$util.isInteger(message.owner_id))
                        return "owner_id: integer expected";
                if (message.locked_by != null && message.hasOwnProperty("locked_by"))
                    if (!$util.isInteger(message.locked_by))
                        return "locked_by: integer expected";
                return null;
            };
    
            /**
             * Creates a LockedLibrary message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientSharedLibraryLockStatus.LockedLibrary} LockedLibrary
             */
            LockedLibrary.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientSharedLibraryLockStatus.LockedLibrary)
                    return object;
                var message = new $root.CMsgClientSharedLibraryLockStatus.LockedLibrary();
                if (object.owner_id != null)
                    message.owner_id = object.owner_id >>> 0;
                if (object.locked_by != null)
                    message.locked_by = object.locked_by >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a LockedLibrary message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @static
             * @param {CMsgClientSharedLibraryLockStatus.LockedLibrary} message LockedLibrary
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LockedLibrary.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.owner_id = 0;
                    object.locked_by = 0;
                }
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    object.owner_id = message.owner_id;
                if (message.locked_by != null && message.hasOwnProperty("locked_by"))
                    object.locked_by = message.locked_by;
                return object;
            };
    
            /**
             * Converts this LockedLibrary to JSON.
             * @function toJSON
             * @memberof CMsgClientSharedLibraryLockStatus.LockedLibrary
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LockedLibrary.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return LockedLibrary;
        })();
    
        return CMsgClientSharedLibraryLockStatus;
    })();
    
    $root.CMsgClientSharedLibraryStopPlaying = (function() {
    
        /**
         * Properties of a CMsgClientSharedLibraryStopPlaying.
         * @exports ICMsgClientSharedLibraryStopPlaying
         * @interface ICMsgClientSharedLibraryStopPlaying
         * @property {number|null} [seconds_left] CMsgClientSharedLibraryStopPlaying seconds_left
         * @property {Array.<CMsgClientSharedLibraryStopPlaying.IStopApp>|null} [stop_apps] CMsgClientSharedLibraryStopPlaying stop_apps
         */
    
        /**
         * Constructs a new CMsgClientSharedLibraryStopPlaying.
         * @exports CMsgClientSharedLibraryStopPlaying
         * @classdesc Represents a CMsgClientSharedLibraryStopPlaying.
         * @implements ICMsgClientSharedLibraryStopPlaying
         * @constructor
         * @param {ICMsgClientSharedLibraryStopPlaying=} [properties] Properties to set
         */
        function CMsgClientSharedLibraryStopPlaying(properties) {
            this.stop_apps = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSharedLibraryStopPlaying seconds_left.
         * @member {number} seconds_left
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @instance
         */
        CMsgClientSharedLibraryStopPlaying.prototype.seconds_left = 0;
    
        /**
         * CMsgClientSharedLibraryStopPlaying stop_apps.
         * @member {Array.<CMsgClientSharedLibraryStopPlaying.IStopApp>} stop_apps
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @instance
         */
        CMsgClientSharedLibraryStopPlaying.prototype.stop_apps = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientSharedLibraryStopPlaying instance using the specified properties.
         * @function create
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {ICMsgClientSharedLibraryStopPlaying=} [properties] Properties to set
         * @returns {CMsgClientSharedLibraryStopPlaying} CMsgClientSharedLibraryStopPlaying instance
         */
        CMsgClientSharedLibraryStopPlaying.create = function create(properties) {
            return new CMsgClientSharedLibraryStopPlaying(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSharedLibraryStopPlaying message. Does not implicitly {@link CMsgClientSharedLibraryStopPlaying.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {ICMsgClientSharedLibraryStopPlaying} message CMsgClientSharedLibraryStopPlaying message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSharedLibraryStopPlaying.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.seconds_left != null && message.hasOwnProperty("seconds_left"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.seconds_left);
            if (message.stop_apps != null && message.stop_apps.length)
                for (var i = 0; i < message.stop_apps.length; ++i)
                    $root.CMsgClientSharedLibraryStopPlaying.StopApp.encode(message.stop_apps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSharedLibraryStopPlaying message, length delimited. Does not implicitly {@link CMsgClientSharedLibraryStopPlaying.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {ICMsgClientSharedLibraryStopPlaying} message CMsgClientSharedLibraryStopPlaying message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSharedLibraryStopPlaying.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSharedLibraryStopPlaying message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSharedLibraryStopPlaying} CMsgClientSharedLibraryStopPlaying
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSharedLibraryStopPlaying.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSharedLibraryStopPlaying();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.seconds_left = reader.int32();
                    break;
                case 2:
                    if (!(message.stop_apps && message.stop_apps.length))
                        message.stop_apps = [];
                    message.stop_apps.push($root.CMsgClientSharedLibraryStopPlaying.StopApp.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSharedLibraryStopPlaying message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSharedLibraryStopPlaying} CMsgClientSharedLibraryStopPlaying
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSharedLibraryStopPlaying.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSharedLibraryStopPlaying message.
         * @function verify
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSharedLibraryStopPlaying.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.seconds_left != null && message.hasOwnProperty("seconds_left"))
                if (!$util.isInteger(message.seconds_left))
                    return "seconds_left: integer expected";
            if (message.stop_apps != null && message.hasOwnProperty("stop_apps")) {
                if (!Array.isArray(message.stop_apps))
                    return "stop_apps: array expected";
                for (var i = 0; i < message.stop_apps.length; ++i) {
                    var error = $root.CMsgClientSharedLibraryStopPlaying.StopApp.verify(message.stop_apps[i]);
                    if (error)
                        return "stop_apps." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientSharedLibraryStopPlaying message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSharedLibraryStopPlaying} CMsgClientSharedLibraryStopPlaying
         */
        CMsgClientSharedLibraryStopPlaying.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSharedLibraryStopPlaying)
                return object;
            var message = new $root.CMsgClientSharedLibraryStopPlaying();
            if (object.seconds_left != null)
                message.seconds_left = object.seconds_left | 0;
            if (object.stop_apps) {
                if (!Array.isArray(object.stop_apps))
                    throw TypeError(".CMsgClientSharedLibraryStopPlaying.stop_apps: array expected");
                message.stop_apps = [];
                for (var i = 0; i < object.stop_apps.length; ++i) {
                    if (typeof object.stop_apps[i] !== "object")
                        throw TypeError(".CMsgClientSharedLibraryStopPlaying.stop_apps: object expected");
                    message.stop_apps[i] = $root.CMsgClientSharedLibraryStopPlaying.StopApp.fromObject(object.stop_apps[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSharedLibraryStopPlaying message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @static
         * @param {CMsgClientSharedLibraryStopPlaying} message CMsgClientSharedLibraryStopPlaying
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSharedLibraryStopPlaying.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stop_apps = [];
            if (options.defaults)
                object.seconds_left = 0;
            if (message.seconds_left != null && message.hasOwnProperty("seconds_left"))
                object.seconds_left = message.seconds_left;
            if (message.stop_apps && message.stop_apps.length) {
                object.stop_apps = [];
                for (var j = 0; j < message.stop_apps.length; ++j)
                    object.stop_apps[j] = $root.CMsgClientSharedLibraryStopPlaying.StopApp.toObject(message.stop_apps[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientSharedLibraryStopPlaying to JSON.
         * @function toJSON
         * @memberof CMsgClientSharedLibraryStopPlaying
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSharedLibraryStopPlaying.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientSharedLibraryStopPlaying.StopApp = (function() {
    
            /**
             * Properties of a StopApp.
             * @memberof CMsgClientSharedLibraryStopPlaying
             * @interface IStopApp
             * @property {number|null} [app_id] StopApp app_id
             * @property {number|null} [owner_id] StopApp owner_id
             */
    
            /**
             * Constructs a new StopApp.
             * @memberof CMsgClientSharedLibraryStopPlaying
             * @classdesc Represents a StopApp.
             * @implements IStopApp
             * @constructor
             * @param {CMsgClientSharedLibraryStopPlaying.IStopApp=} [properties] Properties to set
             */
            function StopApp(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StopApp app_id.
             * @member {number} app_id
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @instance
             */
            StopApp.prototype.app_id = 0;
    
            /**
             * StopApp owner_id.
             * @member {number} owner_id
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @instance
             */
            StopApp.prototype.owner_id = 0;
    
            /**
             * Creates a new StopApp instance using the specified properties.
             * @function create
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {CMsgClientSharedLibraryStopPlaying.IStopApp=} [properties] Properties to set
             * @returns {CMsgClientSharedLibraryStopPlaying.StopApp} StopApp instance
             */
            StopApp.create = function create(properties) {
                return new StopApp(properties);
            };
    
            /**
             * Encodes the specified StopApp message. Does not implicitly {@link CMsgClientSharedLibraryStopPlaying.StopApp.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {CMsgClientSharedLibraryStopPlaying.IStopApp} message StopApp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopApp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.owner_id);
                return writer;
            };
    
            /**
             * Encodes the specified StopApp message, length delimited. Does not implicitly {@link CMsgClientSharedLibraryStopPlaying.StopApp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {CMsgClientSharedLibraryStopPlaying.IStopApp} message StopApp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StopApp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StopApp message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientSharedLibraryStopPlaying.StopApp} StopApp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopApp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSharedLibraryStopPlaying.StopApp();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.app_id = reader.uint32();
                        break;
                    case 2:
                        message.owner_id = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StopApp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientSharedLibraryStopPlaying.StopApp} StopApp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StopApp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StopApp message.
             * @function verify
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StopApp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    if (!$util.isInteger(message.owner_id))
                        return "owner_id: integer expected";
                return null;
            };
    
            /**
             * Creates a StopApp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientSharedLibraryStopPlaying.StopApp} StopApp
             */
            StopApp.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientSharedLibraryStopPlaying.StopApp)
                    return object;
                var message = new $root.CMsgClientSharedLibraryStopPlaying.StopApp();
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.owner_id != null)
                    message.owner_id = object.owner_id >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a StopApp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @static
             * @param {CMsgClientSharedLibraryStopPlaying.StopApp} message StopApp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StopApp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.app_id = 0;
                    object.owner_id = 0;
                }
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    object.owner_id = message.owner_id;
                return object;
            };
    
            /**
             * Converts this StopApp to JSON.
             * @function toJSON
             * @memberof CMsgClientSharedLibraryStopPlaying.StopApp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StopApp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return StopApp;
        })();
    
        return CMsgClientSharedLibraryStopPlaying;
    })();
    
    $root.CMsgClientServiceCall = (function() {
    
        /**
         * Properties of a CMsgClientServiceCall.
         * @exports ICMsgClientServiceCall
         * @interface ICMsgClientServiceCall
         * @property {Uint8Array|null} [sysid_routing] CMsgClientServiceCall sysid_routing
         * @property {number|null} [call_handle] CMsgClientServiceCall call_handle
         * @property {number|null} [module_crc] CMsgClientServiceCall module_crc
         * @property {Uint8Array|null} [module_hash] CMsgClientServiceCall module_hash
         * @property {number|null} [function_id] CMsgClientServiceCall function_id
         * @property {number|null} [cub_output_max] CMsgClientServiceCall cub_output_max
         * @property {number|null} [flags] CMsgClientServiceCall flags
         * @property {Uint8Array|null} [callparameter] CMsgClientServiceCall callparameter
         * @property {boolean|null} [ping_only] CMsgClientServiceCall ping_only
         * @property {number|null} [max_outstanding_calls] CMsgClientServiceCall max_outstanding_calls
         */
    
        /**
         * Constructs a new CMsgClientServiceCall.
         * @exports CMsgClientServiceCall
         * @classdesc Represents a CMsgClientServiceCall.
         * @implements ICMsgClientServiceCall
         * @constructor
         * @param {ICMsgClientServiceCall=} [properties] Properties to set
         */
        function CMsgClientServiceCall(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServiceCall sysid_routing.
         * @member {Uint8Array} sysid_routing
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.sysid_routing = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCall call_handle.
         * @member {number} call_handle
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.call_handle = 0;
    
        /**
         * CMsgClientServiceCall module_crc.
         * @member {number} module_crc
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.module_crc = 0;
    
        /**
         * CMsgClientServiceCall module_hash.
         * @member {Uint8Array} module_hash
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.module_hash = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCall function_id.
         * @member {number} function_id
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.function_id = 0;
    
        /**
         * CMsgClientServiceCall cub_output_max.
         * @member {number} cub_output_max
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.cub_output_max = 0;
    
        /**
         * CMsgClientServiceCall flags.
         * @member {number} flags
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.flags = 0;
    
        /**
         * CMsgClientServiceCall callparameter.
         * @member {Uint8Array} callparameter
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.callparameter = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCall ping_only.
         * @member {boolean} ping_only
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.ping_only = false;
    
        /**
         * CMsgClientServiceCall max_outstanding_calls.
         * @member {number} max_outstanding_calls
         * @memberof CMsgClientServiceCall
         * @instance
         */
        CMsgClientServiceCall.prototype.max_outstanding_calls = 0;
    
        /**
         * Creates a new CMsgClientServiceCall instance using the specified properties.
         * @function create
         * @memberof CMsgClientServiceCall
         * @static
         * @param {ICMsgClientServiceCall=} [properties] Properties to set
         * @returns {CMsgClientServiceCall} CMsgClientServiceCall instance
         */
        CMsgClientServiceCall.create = function create(properties) {
            return new CMsgClientServiceCall(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServiceCall message. Does not implicitly {@link CMsgClientServiceCall.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServiceCall
         * @static
         * @param {ICMsgClientServiceCall} message CMsgClientServiceCall message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceCall.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.sysid_routing);
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.call_handle);
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.module_crc);
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.module_hash);
            if (message.function_id != null && message.hasOwnProperty("function_id"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.function_id);
            if (message.cub_output_max != null && message.hasOwnProperty("cub_output_max"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.cub_output_max);
            if (message.flags != null && message.hasOwnProperty("flags"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.flags);
            if (message.callparameter != null && message.hasOwnProperty("callparameter"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.callparameter);
            if (message.ping_only != null && message.hasOwnProperty("ping_only"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.ping_only);
            if (message.max_outstanding_calls != null && message.hasOwnProperty("max_outstanding_calls"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.max_outstanding_calls);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServiceCall message, length delimited. Does not implicitly {@link CMsgClientServiceCall.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServiceCall
         * @static
         * @param {ICMsgClientServiceCall} message CMsgClientServiceCall message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceCall.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServiceCall message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServiceCall
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServiceCall} CMsgClientServiceCall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceCall.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServiceCall();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.sysid_routing = reader.bytes();
                    break;
                case 2:
                    message.call_handle = reader.uint32();
                    break;
                case 3:
                    message.module_crc = reader.uint32();
                    break;
                case 4:
                    message.module_hash = reader.bytes();
                    break;
                case 5:
                    message.function_id = reader.uint32();
                    break;
                case 6:
                    message.cub_output_max = reader.uint32();
                    break;
                case 7:
                    message.flags = reader.uint32();
                    break;
                case 8:
                    message.callparameter = reader.bytes();
                    break;
                case 9:
                    message.ping_only = reader.bool();
                    break;
                case 10:
                    message.max_outstanding_calls = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServiceCall message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServiceCall
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServiceCall} CMsgClientServiceCall
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceCall.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServiceCall message.
         * @function verify
         * @memberof CMsgClientServiceCall
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServiceCall.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                if (!(message.sysid_routing && typeof message.sysid_routing.length === "number" || $util.isString(message.sysid_routing)))
                    return "sysid_routing: buffer expected";
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                if (!$util.isInteger(message.call_handle))
                    return "call_handle: integer expected";
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                if (!$util.isInteger(message.module_crc))
                    return "module_crc: integer expected";
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                if (!(message.module_hash && typeof message.module_hash.length === "number" || $util.isString(message.module_hash)))
                    return "module_hash: buffer expected";
            if (message.function_id != null && message.hasOwnProperty("function_id"))
                if (!$util.isInteger(message.function_id))
                    return "function_id: integer expected";
            if (message.cub_output_max != null && message.hasOwnProperty("cub_output_max"))
                if (!$util.isInteger(message.cub_output_max))
                    return "cub_output_max: integer expected";
            if (message.flags != null && message.hasOwnProperty("flags"))
                if (!$util.isInteger(message.flags))
                    return "flags: integer expected";
            if (message.callparameter != null && message.hasOwnProperty("callparameter"))
                if (!(message.callparameter && typeof message.callparameter.length === "number" || $util.isString(message.callparameter)))
                    return "callparameter: buffer expected";
            if (message.ping_only != null && message.hasOwnProperty("ping_only"))
                if (typeof message.ping_only !== "boolean")
                    return "ping_only: boolean expected";
            if (message.max_outstanding_calls != null && message.hasOwnProperty("max_outstanding_calls"))
                if (!$util.isInteger(message.max_outstanding_calls))
                    return "max_outstanding_calls: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServiceCall message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServiceCall
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServiceCall} CMsgClientServiceCall
         */
        CMsgClientServiceCall.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServiceCall)
                return object;
            var message = new $root.CMsgClientServiceCall();
            if (object.sysid_routing != null)
                if (typeof object.sysid_routing === "string")
                    $util.base64.decode(object.sysid_routing, message.sysid_routing = $util.newBuffer($util.base64.length(object.sysid_routing)), 0);
                else if (object.sysid_routing.length)
                    message.sysid_routing = object.sysid_routing;
            if (object.call_handle != null)
                message.call_handle = object.call_handle >>> 0;
            if (object.module_crc != null)
                message.module_crc = object.module_crc >>> 0;
            if (object.module_hash != null)
                if (typeof object.module_hash === "string")
                    $util.base64.decode(object.module_hash, message.module_hash = $util.newBuffer($util.base64.length(object.module_hash)), 0);
                else if (object.module_hash.length)
                    message.module_hash = object.module_hash;
            if (object.function_id != null)
                message.function_id = object.function_id >>> 0;
            if (object.cub_output_max != null)
                message.cub_output_max = object.cub_output_max >>> 0;
            if (object.flags != null)
                message.flags = object.flags >>> 0;
            if (object.callparameter != null)
                if (typeof object.callparameter === "string")
                    $util.base64.decode(object.callparameter, message.callparameter = $util.newBuffer($util.base64.length(object.callparameter)), 0);
                else if (object.callparameter.length)
                    message.callparameter = object.callparameter;
            if (object.ping_only != null)
                message.ping_only = Boolean(object.ping_only);
            if (object.max_outstanding_calls != null)
                message.max_outstanding_calls = object.max_outstanding_calls >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServiceCall message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServiceCall
         * @static
         * @param {CMsgClientServiceCall} message CMsgClientServiceCall
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServiceCall.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.sysid_routing = "";
                else {
                    object.sysid_routing = [];
                    if (options.bytes !== Array)
                        object.sysid_routing = $util.newBuffer(object.sysid_routing);
                }
                object.call_handle = 0;
                object.module_crc = 0;
                if (options.bytes === String)
                    object.module_hash = "";
                else {
                    object.module_hash = [];
                    if (options.bytes !== Array)
                        object.module_hash = $util.newBuffer(object.module_hash);
                }
                object.function_id = 0;
                object.cub_output_max = 0;
                object.flags = 0;
                if (options.bytes === String)
                    object.callparameter = "";
                else {
                    object.callparameter = [];
                    if (options.bytes !== Array)
                        object.callparameter = $util.newBuffer(object.callparameter);
                }
                object.ping_only = false;
                object.max_outstanding_calls = 0;
            }
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                object.sysid_routing = options.bytes === String ? $util.base64.encode(message.sysid_routing, 0, message.sysid_routing.length) : options.bytes === Array ? Array.prototype.slice.call(message.sysid_routing) : message.sysid_routing;
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                object.call_handle = message.call_handle;
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                object.module_crc = message.module_crc;
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                object.module_hash = options.bytes === String ? $util.base64.encode(message.module_hash, 0, message.module_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.module_hash) : message.module_hash;
            if (message.function_id != null && message.hasOwnProperty("function_id"))
                object.function_id = message.function_id;
            if (message.cub_output_max != null && message.hasOwnProperty("cub_output_max"))
                object.cub_output_max = message.cub_output_max;
            if (message.flags != null && message.hasOwnProperty("flags"))
                object.flags = message.flags;
            if (message.callparameter != null && message.hasOwnProperty("callparameter"))
                object.callparameter = options.bytes === String ? $util.base64.encode(message.callparameter, 0, message.callparameter.length) : options.bytes === Array ? Array.prototype.slice.call(message.callparameter) : message.callparameter;
            if (message.ping_only != null && message.hasOwnProperty("ping_only"))
                object.ping_only = message.ping_only;
            if (message.max_outstanding_calls != null && message.hasOwnProperty("max_outstanding_calls"))
                object.max_outstanding_calls = message.max_outstanding_calls;
            return object;
        };
    
        /**
         * Converts this CMsgClientServiceCall to JSON.
         * @function toJSON
         * @memberof CMsgClientServiceCall
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServiceCall.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServiceCall;
    })();
    
    $root.CMsgClientServiceModule = (function() {
    
        /**
         * Properties of a CMsgClientServiceModule.
         * @exports ICMsgClientServiceModule
         * @interface ICMsgClientServiceModule
         * @property {number|null} [module_crc] CMsgClientServiceModule module_crc
         * @property {Uint8Array|null} [module_hash] CMsgClientServiceModule module_hash
         * @property {Uint8Array|null} [module_content] CMsgClientServiceModule module_content
         */
    
        /**
         * Constructs a new CMsgClientServiceModule.
         * @exports CMsgClientServiceModule
         * @classdesc Represents a CMsgClientServiceModule.
         * @implements ICMsgClientServiceModule
         * @constructor
         * @param {ICMsgClientServiceModule=} [properties] Properties to set
         */
        function CMsgClientServiceModule(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServiceModule module_crc.
         * @member {number} module_crc
         * @memberof CMsgClientServiceModule
         * @instance
         */
        CMsgClientServiceModule.prototype.module_crc = 0;
    
        /**
         * CMsgClientServiceModule module_hash.
         * @member {Uint8Array} module_hash
         * @memberof CMsgClientServiceModule
         * @instance
         */
        CMsgClientServiceModule.prototype.module_hash = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceModule module_content.
         * @member {Uint8Array} module_content
         * @memberof CMsgClientServiceModule
         * @instance
         */
        CMsgClientServiceModule.prototype.module_content = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientServiceModule instance using the specified properties.
         * @function create
         * @memberof CMsgClientServiceModule
         * @static
         * @param {ICMsgClientServiceModule=} [properties] Properties to set
         * @returns {CMsgClientServiceModule} CMsgClientServiceModule instance
         */
        CMsgClientServiceModule.create = function create(properties) {
            return new CMsgClientServiceModule(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServiceModule message. Does not implicitly {@link CMsgClientServiceModule.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServiceModule
         * @static
         * @param {ICMsgClientServiceModule} message CMsgClientServiceModule message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceModule.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.module_crc);
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.module_hash);
            if (message.module_content != null && message.hasOwnProperty("module_content"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.module_content);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServiceModule message, length delimited. Does not implicitly {@link CMsgClientServiceModule.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServiceModule
         * @static
         * @param {ICMsgClientServiceModule} message CMsgClientServiceModule message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceModule.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServiceModule message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServiceModule
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServiceModule} CMsgClientServiceModule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceModule.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServiceModule();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.module_crc = reader.uint32();
                    break;
                case 2:
                    message.module_hash = reader.bytes();
                    break;
                case 3:
                    message.module_content = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServiceModule message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServiceModule
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServiceModule} CMsgClientServiceModule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceModule.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServiceModule message.
         * @function verify
         * @memberof CMsgClientServiceModule
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServiceModule.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                if (!$util.isInteger(message.module_crc))
                    return "module_crc: integer expected";
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                if (!(message.module_hash && typeof message.module_hash.length === "number" || $util.isString(message.module_hash)))
                    return "module_hash: buffer expected";
            if (message.module_content != null && message.hasOwnProperty("module_content"))
                if (!(message.module_content && typeof message.module_content.length === "number" || $util.isString(message.module_content)))
                    return "module_content: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServiceModule message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServiceModule
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServiceModule} CMsgClientServiceModule
         */
        CMsgClientServiceModule.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServiceModule)
                return object;
            var message = new $root.CMsgClientServiceModule();
            if (object.module_crc != null)
                message.module_crc = object.module_crc >>> 0;
            if (object.module_hash != null)
                if (typeof object.module_hash === "string")
                    $util.base64.decode(object.module_hash, message.module_hash = $util.newBuffer($util.base64.length(object.module_hash)), 0);
                else if (object.module_hash.length)
                    message.module_hash = object.module_hash;
            if (object.module_content != null)
                if (typeof object.module_content === "string")
                    $util.base64.decode(object.module_content, message.module_content = $util.newBuffer($util.base64.length(object.module_content)), 0);
                else if (object.module_content.length)
                    message.module_content = object.module_content;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServiceModule message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServiceModule
         * @static
         * @param {CMsgClientServiceModule} message CMsgClientServiceModule
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServiceModule.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.module_crc = 0;
                if (options.bytes === String)
                    object.module_hash = "";
                else {
                    object.module_hash = [];
                    if (options.bytes !== Array)
                        object.module_hash = $util.newBuffer(object.module_hash);
                }
                if (options.bytes === String)
                    object.module_content = "";
                else {
                    object.module_content = [];
                    if (options.bytes !== Array)
                        object.module_content = $util.newBuffer(object.module_content);
                }
            }
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                object.module_crc = message.module_crc;
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                object.module_hash = options.bytes === String ? $util.base64.encode(message.module_hash, 0, message.module_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.module_hash) : message.module_hash;
            if (message.module_content != null && message.hasOwnProperty("module_content"))
                object.module_content = options.bytes === String ? $util.base64.encode(message.module_content, 0, message.module_content.length) : options.bytes === Array ? Array.prototype.slice.call(message.module_content) : message.module_content;
            return object;
        };
    
        /**
         * Converts this CMsgClientServiceModule to JSON.
         * @function toJSON
         * @memberof CMsgClientServiceModule
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServiceModule.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServiceModule;
    })();
    
    $root.CMsgClientServiceCallResponse = (function() {
    
        /**
         * Properties of a CMsgClientServiceCallResponse.
         * @exports ICMsgClientServiceCallResponse
         * @interface ICMsgClientServiceCallResponse
         * @property {Uint8Array|null} [sysid_routing] CMsgClientServiceCallResponse sysid_routing
         * @property {number|null} [call_handle] CMsgClientServiceCallResponse call_handle
         * @property {number|null} [module_crc] CMsgClientServiceCallResponse module_crc
         * @property {Uint8Array|null} [module_hash] CMsgClientServiceCallResponse module_hash
         * @property {number|null} [ecallresult] CMsgClientServiceCallResponse ecallresult
         * @property {Uint8Array|null} [result_content] CMsgClientServiceCallResponse result_content
         * @property {Uint8Array|null} [os_version_info] CMsgClientServiceCallResponse os_version_info
         * @property {Uint8Array|null} [system_info] CMsgClientServiceCallResponse system_info
         * @property {number|Long|null} [load_address] CMsgClientServiceCallResponse load_address
         * @property {Uint8Array|null} [exception_record] CMsgClientServiceCallResponse exception_record
         * @property {Uint8Array|null} [portable_os_version_info] CMsgClientServiceCallResponse portable_os_version_info
         * @property {Uint8Array|null} [portable_system_info] CMsgClientServiceCallResponse portable_system_info
         * @property {boolean|null} [was_converted] CMsgClientServiceCallResponse was_converted
         * @property {number|null} [internal_result] CMsgClientServiceCallResponse internal_result
         * @property {number|null} [current_count] CMsgClientServiceCallResponse current_count
         * @property {number|null} [last_call_handle] CMsgClientServiceCallResponse last_call_handle
         * @property {number|null} [last_call_module_crc] CMsgClientServiceCallResponse last_call_module_crc
         * @property {Uint8Array|null} [last_call_sysid_routing] CMsgClientServiceCallResponse last_call_sysid_routing
         * @property {number|null} [last_ecallresult] CMsgClientServiceCallResponse last_ecallresult
         * @property {number|null} [last_callissue_delta] CMsgClientServiceCallResponse last_callissue_delta
         * @property {number|null} [last_callcomplete_delta] CMsgClientServiceCallResponse last_callcomplete_delta
         */
    
        /**
         * Constructs a new CMsgClientServiceCallResponse.
         * @exports CMsgClientServiceCallResponse
         * @classdesc Represents a CMsgClientServiceCallResponse.
         * @implements ICMsgClientServiceCallResponse
         * @constructor
         * @param {ICMsgClientServiceCallResponse=} [properties] Properties to set
         */
        function CMsgClientServiceCallResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServiceCallResponse sysid_routing.
         * @member {Uint8Array} sysid_routing
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.sysid_routing = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse call_handle.
         * @member {number} call_handle
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.call_handle = 0;
    
        /**
         * CMsgClientServiceCallResponse module_crc.
         * @member {number} module_crc
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.module_crc = 0;
    
        /**
         * CMsgClientServiceCallResponse module_hash.
         * @member {Uint8Array} module_hash
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.module_hash = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse ecallresult.
         * @member {number} ecallresult
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.ecallresult = 0;
    
        /**
         * CMsgClientServiceCallResponse result_content.
         * @member {Uint8Array} result_content
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.result_content = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse os_version_info.
         * @member {Uint8Array} os_version_info
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.os_version_info = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse system_info.
         * @member {Uint8Array} system_info
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.system_info = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse load_address.
         * @member {number|Long} load_address
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.load_address = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientServiceCallResponse exception_record.
         * @member {Uint8Array} exception_record
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.exception_record = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse portable_os_version_info.
         * @member {Uint8Array} portable_os_version_info
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.portable_os_version_info = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse portable_system_info.
         * @member {Uint8Array} portable_system_info
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.portable_system_info = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse was_converted.
         * @member {boolean} was_converted
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.was_converted = false;
    
        /**
         * CMsgClientServiceCallResponse internal_result.
         * @member {number} internal_result
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.internal_result = 0;
    
        /**
         * CMsgClientServiceCallResponse current_count.
         * @member {number} current_count
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.current_count = 0;
    
        /**
         * CMsgClientServiceCallResponse last_call_handle.
         * @member {number} last_call_handle
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_call_handle = 0;
    
        /**
         * CMsgClientServiceCallResponse last_call_module_crc.
         * @member {number} last_call_module_crc
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_call_module_crc = 0;
    
        /**
         * CMsgClientServiceCallResponse last_call_sysid_routing.
         * @member {Uint8Array} last_call_sysid_routing
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_call_sysid_routing = $util.newBuffer([]);
    
        /**
         * CMsgClientServiceCallResponse last_ecallresult.
         * @member {number} last_ecallresult
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_ecallresult = 0;
    
        /**
         * CMsgClientServiceCallResponse last_callissue_delta.
         * @member {number} last_callissue_delta
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_callissue_delta = 0;
    
        /**
         * CMsgClientServiceCallResponse last_callcomplete_delta.
         * @member {number} last_callcomplete_delta
         * @memberof CMsgClientServiceCallResponse
         * @instance
         */
        CMsgClientServiceCallResponse.prototype.last_callcomplete_delta = 0;
    
        /**
         * Creates a new CMsgClientServiceCallResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {ICMsgClientServiceCallResponse=} [properties] Properties to set
         * @returns {CMsgClientServiceCallResponse} CMsgClientServiceCallResponse instance
         */
        CMsgClientServiceCallResponse.create = function create(properties) {
            return new CMsgClientServiceCallResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServiceCallResponse message. Does not implicitly {@link CMsgClientServiceCallResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {ICMsgClientServiceCallResponse} message CMsgClientServiceCallResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceCallResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.sysid_routing);
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.call_handle);
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.module_crc);
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.module_hash);
            if (message.ecallresult != null && message.hasOwnProperty("ecallresult"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.ecallresult);
            if (message.result_content != null && message.hasOwnProperty("result_content"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.result_content);
            if (message.os_version_info != null && message.hasOwnProperty("os_version_info"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.os_version_info);
            if (message.system_info != null && message.hasOwnProperty("system_info"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.system_info);
            if (message.load_address != null && message.hasOwnProperty("load_address"))
                writer.uint32(/* id 9, wireType 1 =*/73).fixed64(message.load_address);
            if (message.exception_record != null && message.hasOwnProperty("exception_record"))
                writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.exception_record);
            if (message.portable_os_version_info != null && message.hasOwnProperty("portable_os_version_info"))
                writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.portable_os_version_info);
            if (message.portable_system_info != null && message.hasOwnProperty("portable_system_info"))
                writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.portable_system_info);
            if (message.was_converted != null && message.hasOwnProperty("was_converted"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.was_converted);
            if (message.internal_result != null && message.hasOwnProperty("internal_result"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.internal_result);
            if (message.current_count != null && message.hasOwnProperty("current_count"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.current_count);
            if (message.last_call_handle != null && message.hasOwnProperty("last_call_handle"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.last_call_handle);
            if (message.last_call_module_crc != null && message.hasOwnProperty("last_call_module_crc"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.last_call_module_crc);
            if (message.last_call_sysid_routing != null && message.hasOwnProperty("last_call_sysid_routing"))
                writer.uint32(/* id 18, wireType 2 =*/146).bytes(message.last_call_sysid_routing);
            if (message.last_ecallresult != null && message.hasOwnProperty("last_ecallresult"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.last_ecallresult);
            if (message.last_callissue_delta != null && message.hasOwnProperty("last_callissue_delta"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.last_callissue_delta);
            if (message.last_callcomplete_delta != null && message.hasOwnProperty("last_callcomplete_delta"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.last_callcomplete_delta);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServiceCallResponse message, length delimited. Does not implicitly {@link CMsgClientServiceCallResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {ICMsgClientServiceCallResponse} message CMsgClientServiceCallResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServiceCallResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServiceCallResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServiceCallResponse} CMsgClientServiceCallResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceCallResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServiceCallResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.sysid_routing = reader.bytes();
                    break;
                case 2:
                    message.call_handle = reader.uint32();
                    break;
                case 3:
                    message.module_crc = reader.uint32();
                    break;
                case 4:
                    message.module_hash = reader.bytes();
                    break;
                case 5:
                    message.ecallresult = reader.uint32();
                    break;
                case 6:
                    message.result_content = reader.bytes();
                    break;
                case 7:
                    message.os_version_info = reader.bytes();
                    break;
                case 8:
                    message.system_info = reader.bytes();
                    break;
                case 9:
                    message.load_address = reader.fixed64();
                    break;
                case 10:
                    message.exception_record = reader.bytes();
                    break;
                case 11:
                    message.portable_os_version_info = reader.bytes();
                    break;
                case 12:
                    message.portable_system_info = reader.bytes();
                    break;
                case 13:
                    message.was_converted = reader.bool();
                    break;
                case 14:
                    message.internal_result = reader.uint32();
                    break;
                case 15:
                    message.current_count = reader.uint32();
                    break;
                case 16:
                    message.last_call_handle = reader.uint32();
                    break;
                case 17:
                    message.last_call_module_crc = reader.uint32();
                    break;
                case 18:
                    message.last_call_sysid_routing = reader.bytes();
                    break;
                case 19:
                    message.last_ecallresult = reader.uint32();
                    break;
                case 20:
                    message.last_callissue_delta = reader.uint32();
                    break;
                case 21:
                    message.last_callcomplete_delta = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServiceCallResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServiceCallResponse} CMsgClientServiceCallResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServiceCallResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServiceCallResponse message.
         * @function verify
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServiceCallResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                if (!(message.sysid_routing && typeof message.sysid_routing.length === "number" || $util.isString(message.sysid_routing)))
                    return "sysid_routing: buffer expected";
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                if (!$util.isInteger(message.call_handle))
                    return "call_handle: integer expected";
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                if (!$util.isInteger(message.module_crc))
                    return "module_crc: integer expected";
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                if (!(message.module_hash && typeof message.module_hash.length === "number" || $util.isString(message.module_hash)))
                    return "module_hash: buffer expected";
            if (message.ecallresult != null && message.hasOwnProperty("ecallresult"))
                if (!$util.isInteger(message.ecallresult))
                    return "ecallresult: integer expected";
            if (message.result_content != null && message.hasOwnProperty("result_content"))
                if (!(message.result_content && typeof message.result_content.length === "number" || $util.isString(message.result_content)))
                    return "result_content: buffer expected";
            if (message.os_version_info != null && message.hasOwnProperty("os_version_info"))
                if (!(message.os_version_info && typeof message.os_version_info.length === "number" || $util.isString(message.os_version_info)))
                    return "os_version_info: buffer expected";
            if (message.system_info != null && message.hasOwnProperty("system_info"))
                if (!(message.system_info && typeof message.system_info.length === "number" || $util.isString(message.system_info)))
                    return "system_info: buffer expected";
            if (message.load_address != null && message.hasOwnProperty("load_address"))
                if (!$util.isInteger(message.load_address) && !(message.load_address && $util.isInteger(message.load_address.low) && $util.isInteger(message.load_address.high)))
                    return "load_address: integer|Long expected";
            if (message.exception_record != null && message.hasOwnProperty("exception_record"))
                if (!(message.exception_record && typeof message.exception_record.length === "number" || $util.isString(message.exception_record)))
                    return "exception_record: buffer expected";
            if (message.portable_os_version_info != null && message.hasOwnProperty("portable_os_version_info"))
                if (!(message.portable_os_version_info && typeof message.portable_os_version_info.length === "number" || $util.isString(message.portable_os_version_info)))
                    return "portable_os_version_info: buffer expected";
            if (message.portable_system_info != null && message.hasOwnProperty("portable_system_info"))
                if (!(message.portable_system_info && typeof message.portable_system_info.length === "number" || $util.isString(message.portable_system_info)))
                    return "portable_system_info: buffer expected";
            if (message.was_converted != null && message.hasOwnProperty("was_converted"))
                if (typeof message.was_converted !== "boolean")
                    return "was_converted: boolean expected";
            if (message.internal_result != null && message.hasOwnProperty("internal_result"))
                if (!$util.isInteger(message.internal_result))
                    return "internal_result: integer expected";
            if (message.current_count != null && message.hasOwnProperty("current_count"))
                if (!$util.isInteger(message.current_count))
                    return "current_count: integer expected";
            if (message.last_call_handle != null && message.hasOwnProperty("last_call_handle"))
                if (!$util.isInteger(message.last_call_handle))
                    return "last_call_handle: integer expected";
            if (message.last_call_module_crc != null && message.hasOwnProperty("last_call_module_crc"))
                if (!$util.isInteger(message.last_call_module_crc))
                    return "last_call_module_crc: integer expected";
            if (message.last_call_sysid_routing != null && message.hasOwnProperty("last_call_sysid_routing"))
                if (!(message.last_call_sysid_routing && typeof message.last_call_sysid_routing.length === "number" || $util.isString(message.last_call_sysid_routing)))
                    return "last_call_sysid_routing: buffer expected";
            if (message.last_ecallresult != null && message.hasOwnProperty("last_ecallresult"))
                if (!$util.isInteger(message.last_ecallresult))
                    return "last_ecallresult: integer expected";
            if (message.last_callissue_delta != null && message.hasOwnProperty("last_callissue_delta"))
                if (!$util.isInteger(message.last_callissue_delta))
                    return "last_callissue_delta: integer expected";
            if (message.last_callcomplete_delta != null && message.hasOwnProperty("last_callcomplete_delta"))
                if (!$util.isInteger(message.last_callcomplete_delta))
                    return "last_callcomplete_delta: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServiceCallResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServiceCallResponse} CMsgClientServiceCallResponse
         */
        CMsgClientServiceCallResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServiceCallResponse)
                return object;
            var message = new $root.CMsgClientServiceCallResponse();
            if (object.sysid_routing != null)
                if (typeof object.sysid_routing === "string")
                    $util.base64.decode(object.sysid_routing, message.sysid_routing = $util.newBuffer($util.base64.length(object.sysid_routing)), 0);
                else if (object.sysid_routing.length)
                    message.sysid_routing = object.sysid_routing;
            if (object.call_handle != null)
                message.call_handle = object.call_handle >>> 0;
            if (object.module_crc != null)
                message.module_crc = object.module_crc >>> 0;
            if (object.module_hash != null)
                if (typeof object.module_hash === "string")
                    $util.base64.decode(object.module_hash, message.module_hash = $util.newBuffer($util.base64.length(object.module_hash)), 0);
                else if (object.module_hash.length)
                    message.module_hash = object.module_hash;
            if (object.ecallresult != null)
                message.ecallresult = object.ecallresult >>> 0;
            if (object.result_content != null)
                if (typeof object.result_content === "string")
                    $util.base64.decode(object.result_content, message.result_content = $util.newBuffer($util.base64.length(object.result_content)), 0);
                else if (object.result_content.length)
                    message.result_content = object.result_content;
            if (object.os_version_info != null)
                if (typeof object.os_version_info === "string")
                    $util.base64.decode(object.os_version_info, message.os_version_info = $util.newBuffer($util.base64.length(object.os_version_info)), 0);
                else if (object.os_version_info.length)
                    message.os_version_info = object.os_version_info;
            if (object.system_info != null)
                if (typeof object.system_info === "string")
                    $util.base64.decode(object.system_info, message.system_info = $util.newBuffer($util.base64.length(object.system_info)), 0);
                else if (object.system_info.length)
                    message.system_info = object.system_info;
            if (object.load_address != null)
                if ($util.Long)
                    (message.load_address = $util.Long.fromValue(object.load_address)).unsigned = false;
                else if (typeof object.load_address === "string")
                    message.load_address = parseInt(object.load_address, 10);
                else if (typeof object.load_address === "number")
                    message.load_address = object.load_address;
                else if (typeof object.load_address === "object")
                    message.load_address = new $util.LongBits(object.load_address.low >>> 0, object.load_address.high >>> 0).toNumber();
            if (object.exception_record != null)
                if (typeof object.exception_record === "string")
                    $util.base64.decode(object.exception_record, message.exception_record = $util.newBuffer($util.base64.length(object.exception_record)), 0);
                else if (object.exception_record.length)
                    message.exception_record = object.exception_record;
            if (object.portable_os_version_info != null)
                if (typeof object.portable_os_version_info === "string")
                    $util.base64.decode(object.portable_os_version_info, message.portable_os_version_info = $util.newBuffer($util.base64.length(object.portable_os_version_info)), 0);
                else if (object.portable_os_version_info.length)
                    message.portable_os_version_info = object.portable_os_version_info;
            if (object.portable_system_info != null)
                if (typeof object.portable_system_info === "string")
                    $util.base64.decode(object.portable_system_info, message.portable_system_info = $util.newBuffer($util.base64.length(object.portable_system_info)), 0);
                else if (object.portable_system_info.length)
                    message.portable_system_info = object.portable_system_info;
            if (object.was_converted != null)
                message.was_converted = Boolean(object.was_converted);
            if (object.internal_result != null)
                message.internal_result = object.internal_result >>> 0;
            if (object.current_count != null)
                message.current_count = object.current_count >>> 0;
            if (object.last_call_handle != null)
                message.last_call_handle = object.last_call_handle >>> 0;
            if (object.last_call_module_crc != null)
                message.last_call_module_crc = object.last_call_module_crc >>> 0;
            if (object.last_call_sysid_routing != null)
                if (typeof object.last_call_sysid_routing === "string")
                    $util.base64.decode(object.last_call_sysid_routing, message.last_call_sysid_routing = $util.newBuffer($util.base64.length(object.last_call_sysid_routing)), 0);
                else if (object.last_call_sysid_routing.length)
                    message.last_call_sysid_routing = object.last_call_sysid_routing;
            if (object.last_ecallresult != null)
                message.last_ecallresult = object.last_ecallresult >>> 0;
            if (object.last_callissue_delta != null)
                message.last_callissue_delta = object.last_callissue_delta >>> 0;
            if (object.last_callcomplete_delta != null)
                message.last_callcomplete_delta = object.last_callcomplete_delta >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServiceCallResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServiceCallResponse
         * @static
         * @param {CMsgClientServiceCallResponse} message CMsgClientServiceCallResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServiceCallResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.sysid_routing = "";
                else {
                    object.sysid_routing = [];
                    if (options.bytes !== Array)
                        object.sysid_routing = $util.newBuffer(object.sysid_routing);
                }
                object.call_handle = 0;
                object.module_crc = 0;
                if (options.bytes === String)
                    object.module_hash = "";
                else {
                    object.module_hash = [];
                    if (options.bytes !== Array)
                        object.module_hash = $util.newBuffer(object.module_hash);
                }
                object.ecallresult = 0;
                if (options.bytes === String)
                    object.result_content = "";
                else {
                    object.result_content = [];
                    if (options.bytes !== Array)
                        object.result_content = $util.newBuffer(object.result_content);
                }
                if (options.bytes === String)
                    object.os_version_info = "";
                else {
                    object.os_version_info = [];
                    if (options.bytes !== Array)
                        object.os_version_info = $util.newBuffer(object.os_version_info);
                }
                if (options.bytes === String)
                    object.system_info = "";
                else {
                    object.system_info = [];
                    if (options.bytes !== Array)
                        object.system_info = $util.newBuffer(object.system_info);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.load_address = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.load_address = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.exception_record = "";
                else {
                    object.exception_record = [];
                    if (options.bytes !== Array)
                        object.exception_record = $util.newBuffer(object.exception_record);
                }
                if (options.bytes === String)
                    object.portable_os_version_info = "";
                else {
                    object.portable_os_version_info = [];
                    if (options.bytes !== Array)
                        object.portable_os_version_info = $util.newBuffer(object.portable_os_version_info);
                }
                if (options.bytes === String)
                    object.portable_system_info = "";
                else {
                    object.portable_system_info = [];
                    if (options.bytes !== Array)
                        object.portable_system_info = $util.newBuffer(object.portable_system_info);
                }
                object.was_converted = false;
                object.internal_result = 0;
                object.current_count = 0;
                object.last_call_handle = 0;
                object.last_call_module_crc = 0;
                if (options.bytes === String)
                    object.last_call_sysid_routing = "";
                else {
                    object.last_call_sysid_routing = [];
                    if (options.bytes !== Array)
                        object.last_call_sysid_routing = $util.newBuffer(object.last_call_sysid_routing);
                }
                object.last_ecallresult = 0;
                object.last_callissue_delta = 0;
                object.last_callcomplete_delta = 0;
            }
            if (message.sysid_routing != null && message.hasOwnProperty("sysid_routing"))
                object.sysid_routing = options.bytes === String ? $util.base64.encode(message.sysid_routing, 0, message.sysid_routing.length) : options.bytes === Array ? Array.prototype.slice.call(message.sysid_routing) : message.sysid_routing;
            if (message.call_handle != null && message.hasOwnProperty("call_handle"))
                object.call_handle = message.call_handle;
            if (message.module_crc != null && message.hasOwnProperty("module_crc"))
                object.module_crc = message.module_crc;
            if (message.module_hash != null && message.hasOwnProperty("module_hash"))
                object.module_hash = options.bytes === String ? $util.base64.encode(message.module_hash, 0, message.module_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.module_hash) : message.module_hash;
            if (message.ecallresult != null && message.hasOwnProperty("ecallresult"))
                object.ecallresult = message.ecallresult;
            if (message.result_content != null && message.hasOwnProperty("result_content"))
                object.result_content = options.bytes === String ? $util.base64.encode(message.result_content, 0, message.result_content.length) : options.bytes === Array ? Array.prototype.slice.call(message.result_content) : message.result_content;
            if (message.os_version_info != null && message.hasOwnProperty("os_version_info"))
                object.os_version_info = options.bytes === String ? $util.base64.encode(message.os_version_info, 0, message.os_version_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.os_version_info) : message.os_version_info;
            if (message.system_info != null && message.hasOwnProperty("system_info"))
                object.system_info = options.bytes === String ? $util.base64.encode(message.system_info, 0, message.system_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.system_info) : message.system_info;
            if (message.load_address != null && message.hasOwnProperty("load_address"))
                if (typeof message.load_address === "number")
                    object.load_address = options.longs === String ? String(message.load_address) : message.load_address;
                else
                    object.load_address = options.longs === String ? $util.Long.prototype.toString.call(message.load_address) : options.longs === Number ? new $util.LongBits(message.load_address.low >>> 0, message.load_address.high >>> 0).toNumber() : message.load_address;
            if (message.exception_record != null && message.hasOwnProperty("exception_record"))
                object.exception_record = options.bytes === String ? $util.base64.encode(message.exception_record, 0, message.exception_record.length) : options.bytes === Array ? Array.prototype.slice.call(message.exception_record) : message.exception_record;
            if (message.portable_os_version_info != null && message.hasOwnProperty("portable_os_version_info"))
                object.portable_os_version_info = options.bytes === String ? $util.base64.encode(message.portable_os_version_info, 0, message.portable_os_version_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.portable_os_version_info) : message.portable_os_version_info;
            if (message.portable_system_info != null && message.hasOwnProperty("portable_system_info"))
                object.portable_system_info = options.bytes === String ? $util.base64.encode(message.portable_system_info, 0, message.portable_system_info.length) : options.bytes === Array ? Array.prototype.slice.call(message.portable_system_info) : message.portable_system_info;
            if (message.was_converted != null && message.hasOwnProperty("was_converted"))
                object.was_converted = message.was_converted;
            if (message.internal_result != null && message.hasOwnProperty("internal_result"))
                object.internal_result = message.internal_result;
            if (message.current_count != null && message.hasOwnProperty("current_count"))
                object.current_count = message.current_count;
            if (message.last_call_handle != null && message.hasOwnProperty("last_call_handle"))
                object.last_call_handle = message.last_call_handle;
            if (message.last_call_module_crc != null && message.hasOwnProperty("last_call_module_crc"))
                object.last_call_module_crc = message.last_call_module_crc;
            if (message.last_call_sysid_routing != null && message.hasOwnProperty("last_call_sysid_routing"))
                object.last_call_sysid_routing = options.bytes === String ? $util.base64.encode(message.last_call_sysid_routing, 0, message.last_call_sysid_routing.length) : options.bytes === Array ? Array.prototype.slice.call(message.last_call_sysid_routing) : message.last_call_sysid_routing;
            if (message.last_ecallresult != null && message.hasOwnProperty("last_ecallresult"))
                object.last_ecallresult = message.last_ecallresult;
            if (message.last_callissue_delta != null && message.hasOwnProperty("last_callissue_delta"))
                object.last_callissue_delta = message.last_callissue_delta;
            if (message.last_callcomplete_delta != null && message.hasOwnProperty("last_callcomplete_delta"))
                object.last_callcomplete_delta = message.last_callcomplete_delta;
            return object;
        };
    
        /**
         * Converts this CMsgClientServiceCallResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientServiceCallResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServiceCallResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientServiceCallResponse;
    })();
    
    $root.CMsgAMUnlockStreaming = (function() {
    
        /**
         * Properties of a CMsgAMUnlockStreaming.
         * @exports ICMsgAMUnlockStreaming
         * @interface ICMsgAMUnlockStreaming
         */
    
        /**
         * Constructs a new CMsgAMUnlockStreaming.
         * @exports CMsgAMUnlockStreaming
         * @classdesc Represents a CMsgAMUnlockStreaming.
         * @implements ICMsgAMUnlockStreaming
         * @constructor
         * @param {ICMsgAMUnlockStreaming=} [properties] Properties to set
         */
        function CMsgAMUnlockStreaming(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgAMUnlockStreaming instance using the specified properties.
         * @function create
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {ICMsgAMUnlockStreaming=} [properties] Properties to set
         * @returns {CMsgAMUnlockStreaming} CMsgAMUnlockStreaming instance
         */
        CMsgAMUnlockStreaming.create = function create(properties) {
            return new CMsgAMUnlockStreaming(properties);
        };
    
        /**
         * Encodes the specified CMsgAMUnlockStreaming message. Does not implicitly {@link CMsgAMUnlockStreaming.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {ICMsgAMUnlockStreaming} message CMsgAMUnlockStreaming message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockStreaming.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMUnlockStreaming message, length delimited. Does not implicitly {@link CMsgAMUnlockStreaming.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {ICMsgAMUnlockStreaming} message CMsgAMUnlockStreaming message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockStreaming.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMUnlockStreaming message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMUnlockStreaming} CMsgAMUnlockStreaming
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockStreaming.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMUnlockStreaming();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMUnlockStreaming message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMUnlockStreaming} CMsgAMUnlockStreaming
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockStreaming.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMUnlockStreaming message.
         * @function verify
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMUnlockStreaming.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMUnlockStreaming message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMUnlockStreaming} CMsgAMUnlockStreaming
         */
        CMsgAMUnlockStreaming.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMUnlockStreaming)
                return object;
            return new $root.CMsgAMUnlockStreaming();
        };
    
        /**
         * Creates a plain object from a CMsgAMUnlockStreaming message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMUnlockStreaming
         * @static
         * @param {CMsgAMUnlockStreaming} message CMsgAMUnlockStreaming
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMUnlockStreaming.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgAMUnlockStreaming to JSON.
         * @function toJSON
         * @memberof CMsgAMUnlockStreaming
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMUnlockStreaming.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAMUnlockStreaming;
    })();
    
    $root.CMsgAMUnlockStreamingResponse = (function() {
    
        /**
         * Properties of a CMsgAMUnlockStreamingResponse.
         * @exports ICMsgAMUnlockStreamingResponse
         * @interface ICMsgAMUnlockStreamingResponse
         * @property {number|null} [eresult] CMsgAMUnlockStreamingResponse eresult
         * @property {Uint8Array|null} [encryption_key] CMsgAMUnlockStreamingResponse encryption_key
         */
    
        /**
         * Constructs a new CMsgAMUnlockStreamingResponse.
         * @exports CMsgAMUnlockStreamingResponse
         * @classdesc Represents a CMsgAMUnlockStreamingResponse.
         * @implements ICMsgAMUnlockStreamingResponse
         * @constructor
         * @param {ICMsgAMUnlockStreamingResponse=} [properties] Properties to set
         */
        function CMsgAMUnlockStreamingResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMUnlockStreamingResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMUnlockStreamingResponse
         * @instance
         */
        CMsgAMUnlockStreamingResponse.prototype.eresult = 2;
    
        /**
         * CMsgAMUnlockStreamingResponse encryption_key.
         * @member {Uint8Array} encryption_key
         * @memberof CMsgAMUnlockStreamingResponse
         * @instance
         */
        CMsgAMUnlockStreamingResponse.prototype.encryption_key = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgAMUnlockStreamingResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {ICMsgAMUnlockStreamingResponse=} [properties] Properties to set
         * @returns {CMsgAMUnlockStreamingResponse} CMsgAMUnlockStreamingResponse instance
         */
        CMsgAMUnlockStreamingResponse.create = function create(properties) {
            return new CMsgAMUnlockStreamingResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMUnlockStreamingResponse message. Does not implicitly {@link CMsgAMUnlockStreamingResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {ICMsgAMUnlockStreamingResponse} message CMsgAMUnlockStreamingResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockStreamingResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.encryption_key != null && message.hasOwnProperty("encryption_key"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.encryption_key);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMUnlockStreamingResponse message, length delimited. Does not implicitly {@link CMsgAMUnlockStreamingResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {ICMsgAMUnlockStreamingResponse} message CMsgAMUnlockStreamingResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockStreamingResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMUnlockStreamingResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMUnlockStreamingResponse} CMsgAMUnlockStreamingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockStreamingResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMUnlockStreamingResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.encryption_key = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMUnlockStreamingResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMUnlockStreamingResponse} CMsgAMUnlockStreamingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockStreamingResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMUnlockStreamingResponse message.
         * @function verify
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMUnlockStreamingResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.encryption_key != null && message.hasOwnProperty("encryption_key"))
                if (!(message.encryption_key && typeof message.encryption_key.length === "number" || $util.isString(message.encryption_key)))
                    return "encryption_key: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMUnlockStreamingResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMUnlockStreamingResponse} CMsgAMUnlockStreamingResponse
         */
        CMsgAMUnlockStreamingResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMUnlockStreamingResponse)
                return object;
            var message = new $root.CMsgAMUnlockStreamingResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.encryption_key != null)
                if (typeof object.encryption_key === "string")
                    $util.base64.decode(object.encryption_key, message.encryption_key = $util.newBuffer($util.base64.length(object.encryption_key)), 0);
                else if (object.encryption_key.length)
                    message.encryption_key = object.encryption_key;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMUnlockStreamingResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMUnlockStreamingResponse
         * @static
         * @param {CMsgAMUnlockStreamingResponse} message CMsgAMUnlockStreamingResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMUnlockStreamingResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                if (options.bytes === String)
                    object.encryption_key = "";
                else {
                    object.encryption_key = [];
                    if (options.bytes !== Array)
                        object.encryption_key = $util.newBuffer(object.encryption_key);
                }
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.encryption_key != null && message.hasOwnProperty("encryption_key"))
                object.encryption_key = options.bytes === String ? $util.base64.encode(message.encryption_key, 0, message.encryption_key.length) : options.bytes === Array ? Array.prototype.slice.call(message.encryption_key) : message.encryption_key;
            return object;
        };
    
        /**
         * Converts this CMsgAMUnlockStreamingResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMUnlockStreamingResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMUnlockStreamingResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAMUnlockStreamingResponse;
    })();
    
    $root.CMsgAMUnlockHEVC = (function() {
    
        /**
         * Properties of a CMsgAMUnlockHEVC.
         * @exports ICMsgAMUnlockHEVC
         * @interface ICMsgAMUnlockHEVC
         */
    
        /**
         * Constructs a new CMsgAMUnlockHEVC.
         * @exports CMsgAMUnlockHEVC
         * @classdesc Represents a CMsgAMUnlockHEVC.
         * @implements ICMsgAMUnlockHEVC
         * @constructor
         * @param {ICMsgAMUnlockHEVC=} [properties] Properties to set
         */
        function CMsgAMUnlockHEVC(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgAMUnlockHEVC instance using the specified properties.
         * @function create
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {ICMsgAMUnlockHEVC=} [properties] Properties to set
         * @returns {CMsgAMUnlockHEVC} CMsgAMUnlockHEVC instance
         */
        CMsgAMUnlockHEVC.create = function create(properties) {
            return new CMsgAMUnlockHEVC(properties);
        };
    
        /**
         * Encodes the specified CMsgAMUnlockHEVC message. Does not implicitly {@link CMsgAMUnlockHEVC.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {ICMsgAMUnlockHEVC} message CMsgAMUnlockHEVC message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockHEVC.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMUnlockHEVC message, length delimited. Does not implicitly {@link CMsgAMUnlockHEVC.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {ICMsgAMUnlockHEVC} message CMsgAMUnlockHEVC message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockHEVC.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMUnlockHEVC message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMUnlockHEVC} CMsgAMUnlockHEVC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockHEVC.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMUnlockHEVC();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMUnlockHEVC message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMUnlockHEVC} CMsgAMUnlockHEVC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockHEVC.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMUnlockHEVC message.
         * @function verify
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMUnlockHEVC.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMUnlockHEVC message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMUnlockHEVC} CMsgAMUnlockHEVC
         */
        CMsgAMUnlockHEVC.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMUnlockHEVC)
                return object;
            return new $root.CMsgAMUnlockHEVC();
        };
    
        /**
         * Creates a plain object from a CMsgAMUnlockHEVC message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMUnlockHEVC
         * @static
         * @param {CMsgAMUnlockHEVC} message CMsgAMUnlockHEVC
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMUnlockHEVC.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgAMUnlockHEVC to JSON.
         * @function toJSON
         * @memberof CMsgAMUnlockHEVC
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMUnlockHEVC.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAMUnlockHEVC;
    })();
    
    $root.CMsgAMUnlockHEVCResponse = (function() {
    
        /**
         * Properties of a CMsgAMUnlockHEVCResponse.
         * @exports ICMsgAMUnlockHEVCResponse
         * @interface ICMsgAMUnlockHEVCResponse
         * @property {number|null} [eresult] CMsgAMUnlockHEVCResponse eresult
         */
    
        /**
         * Constructs a new CMsgAMUnlockHEVCResponse.
         * @exports CMsgAMUnlockHEVCResponse
         * @classdesc Represents a CMsgAMUnlockHEVCResponse.
         * @implements ICMsgAMUnlockHEVCResponse
         * @constructor
         * @param {ICMsgAMUnlockHEVCResponse=} [properties] Properties to set
         */
        function CMsgAMUnlockHEVCResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAMUnlockHEVCResponse eresult.
         * @member {number} eresult
         * @memberof CMsgAMUnlockHEVCResponse
         * @instance
         */
        CMsgAMUnlockHEVCResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgAMUnlockHEVCResponse instance using the specified properties.
         * @function create
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {ICMsgAMUnlockHEVCResponse=} [properties] Properties to set
         * @returns {CMsgAMUnlockHEVCResponse} CMsgAMUnlockHEVCResponse instance
         */
        CMsgAMUnlockHEVCResponse.create = function create(properties) {
            return new CMsgAMUnlockHEVCResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgAMUnlockHEVCResponse message. Does not implicitly {@link CMsgAMUnlockHEVCResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {ICMsgAMUnlockHEVCResponse} message CMsgAMUnlockHEVCResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockHEVCResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAMUnlockHEVCResponse message, length delimited. Does not implicitly {@link CMsgAMUnlockHEVCResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {ICMsgAMUnlockHEVCResponse} message CMsgAMUnlockHEVCResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAMUnlockHEVCResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAMUnlockHEVCResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAMUnlockHEVCResponse} CMsgAMUnlockHEVCResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockHEVCResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAMUnlockHEVCResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAMUnlockHEVCResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAMUnlockHEVCResponse} CMsgAMUnlockHEVCResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAMUnlockHEVCResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAMUnlockHEVCResponse message.
         * @function verify
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAMUnlockHEVCResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAMUnlockHEVCResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAMUnlockHEVCResponse} CMsgAMUnlockHEVCResponse
         */
        CMsgAMUnlockHEVCResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAMUnlockHEVCResponse)
                return object;
            var message = new $root.CMsgAMUnlockHEVCResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAMUnlockHEVCResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAMUnlockHEVCResponse
         * @static
         * @param {CMsgAMUnlockHEVCResponse} message CMsgAMUnlockHEVCResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAMUnlockHEVCResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgAMUnlockHEVCResponse to JSON.
         * @function toJSON
         * @memberof CMsgAMUnlockHEVCResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAMUnlockHEVCResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAMUnlockHEVCResponse;
    })();
    
    $root.CMsgClientPlayingSessionState = (function() {
    
        /**
         * Properties of a CMsgClientPlayingSessionState.
         * @exports ICMsgClientPlayingSessionState
         * @interface ICMsgClientPlayingSessionState
         * @property {boolean|null} [playing_blocked] CMsgClientPlayingSessionState playing_blocked
         * @property {number|null} [playing_app] CMsgClientPlayingSessionState playing_app
         */
    
        /**
         * Constructs a new CMsgClientPlayingSessionState.
         * @exports CMsgClientPlayingSessionState
         * @classdesc Represents a CMsgClientPlayingSessionState.
         * @implements ICMsgClientPlayingSessionState
         * @constructor
         * @param {ICMsgClientPlayingSessionState=} [properties] Properties to set
         */
        function CMsgClientPlayingSessionState(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPlayingSessionState playing_blocked.
         * @member {boolean} playing_blocked
         * @memberof CMsgClientPlayingSessionState
         * @instance
         */
        CMsgClientPlayingSessionState.prototype.playing_blocked = false;
    
        /**
         * CMsgClientPlayingSessionState playing_app.
         * @member {number} playing_app
         * @memberof CMsgClientPlayingSessionState
         * @instance
         */
        CMsgClientPlayingSessionState.prototype.playing_app = 0;
    
        /**
         * Creates a new CMsgClientPlayingSessionState instance using the specified properties.
         * @function create
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {ICMsgClientPlayingSessionState=} [properties] Properties to set
         * @returns {CMsgClientPlayingSessionState} CMsgClientPlayingSessionState instance
         */
        CMsgClientPlayingSessionState.create = function create(properties) {
            return new CMsgClientPlayingSessionState(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPlayingSessionState message. Does not implicitly {@link CMsgClientPlayingSessionState.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {ICMsgClientPlayingSessionState} message CMsgClientPlayingSessionState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPlayingSessionState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.playing_blocked != null && message.hasOwnProperty("playing_blocked"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.playing_blocked);
            if (message.playing_app != null && message.hasOwnProperty("playing_app"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.playing_app);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPlayingSessionState message, length delimited. Does not implicitly {@link CMsgClientPlayingSessionState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {ICMsgClientPlayingSessionState} message CMsgClientPlayingSessionState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPlayingSessionState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPlayingSessionState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPlayingSessionState} CMsgClientPlayingSessionState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPlayingSessionState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPlayingSessionState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    message.playing_blocked = reader.bool();
                    break;
                case 3:
                    message.playing_app = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPlayingSessionState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPlayingSessionState} CMsgClientPlayingSessionState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPlayingSessionState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPlayingSessionState message.
         * @function verify
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPlayingSessionState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.playing_blocked != null && message.hasOwnProperty("playing_blocked"))
                if (typeof message.playing_blocked !== "boolean")
                    return "playing_blocked: boolean expected";
            if (message.playing_app != null && message.hasOwnProperty("playing_app"))
                if (!$util.isInteger(message.playing_app))
                    return "playing_app: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPlayingSessionState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPlayingSessionState} CMsgClientPlayingSessionState
         */
        CMsgClientPlayingSessionState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPlayingSessionState)
                return object;
            var message = new $root.CMsgClientPlayingSessionState();
            if (object.playing_blocked != null)
                message.playing_blocked = Boolean(object.playing_blocked);
            if (object.playing_app != null)
                message.playing_app = object.playing_app >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPlayingSessionState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPlayingSessionState
         * @static
         * @param {CMsgClientPlayingSessionState} message CMsgClientPlayingSessionState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPlayingSessionState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.playing_blocked = false;
                object.playing_app = 0;
            }
            if (message.playing_blocked != null && message.hasOwnProperty("playing_blocked"))
                object.playing_blocked = message.playing_blocked;
            if (message.playing_app != null && message.hasOwnProperty("playing_app"))
                object.playing_app = message.playing_app;
            return object;
        };
    
        /**
         * Converts this CMsgClientPlayingSessionState to JSON.
         * @function toJSON
         * @memberof CMsgClientPlayingSessionState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPlayingSessionState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPlayingSessionState;
    })();
    
    $root.CMsgClientKickPlayingSession = (function() {
    
        /**
         * Properties of a CMsgClientKickPlayingSession.
         * @exports ICMsgClientKickPlayingSession
         * @interface ICMsgClientKickPlayingSession
         * @property {boolean|null} [only_stop_game] CMsgClientKickPlayingSession only_stop_game
         */
    
        /**
         * Constructs a new CMsgClientKickPlayingSession.
         * @exports CMsgClientKickPlayingSession
         * @classdesc Represents a CMsgClientKickPlayingSession.
         * @implements ICMsgClientKickPlayingSession
         * @constructor
         * @param {ICMsgClientKickPlayingSession=} [properties] Properties to set
         */
        function CMsgClientKickPlayingSession(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientKickPlayingSession only_stop_game.
         * @member {boolean} only_stop_game
         * @memberof CMsgClientKickPlayingSession
         * @instance
         */
        CMsgClientKickPlayingSession.prototype.only_stop_game = false;
    
        /**
         * Creates a new CMsgClientKickPlayingSession instance using the specified properties.
         * @function create
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {ICMsgClientKickPlayingSession=} [properties] Properties to set
         * @returns {CMsgClientKickPlayingSession} CMsgClientKickPlayingSession instance
         */
        CMsgClientKickPlayingSession.create = function create(properties) {
            return new CMsgClientKickPlayingSession(properties);
        };
    
        /**
         * Encodes the specified CMsgClientKickPlayingSession message. Does not implicitly {@link CMsgClientKickPlayingSession.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {ICMsgClientKickPlayingSession} message CMsgClientKickPlayingSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientKickPlayingSession.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.only_stop_game != null && message.hasOwnProperty("only_stop_game"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.only_stop_game);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientKickPlayingSession message, length delimited. Does not implicitly {@link CMsgClientKickPlayingSession.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {ICMsgClientKickPlayingSession} message CMsgClientKickPlayingSession message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientKickPlayingSession.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientKickPlayingSession message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientKickPlayingSession} CMsgClientKickPlayingSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientKickPlayingSession.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientKickPlayingSession();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.only_stop_game = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientKickPlayingSession message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientKickPlayingSession} CMsgClientKickPlayingSession
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientKickPlayingSession.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientKickPlayingSession message.
         * @function verify
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientKickPlayingSession.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.only_stop_game != null && message.hasOwnProperty("only_stop_game"))
                if (typeof message.only_stop_game !== "boolean")
                    return "only_stop_game: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientKickPlayingSession message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientKickPlayingSession} CMsgClientKickPlayingSession
         */
        CMsgClientKickPlayingSession.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientKickPlayingSession)
                return object;
            var message = new $root.CMsgClientKickPlayingSession();
            if (object.only_stop_game != null)
                message.only_stop_game = Boolean(object.only_stop_game);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientKickPlayingSession message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientKickPlayingSession
         * @static
         * @param {CMsgClientKickPlayingSession} message CMsgClientKickPlayingSession
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientKickPlayingSession.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.only_stop_game = false;
            if (message.only_stop_game != null && message.hasOwnProperty("only_stop_game"))
                object.only_stop_game = message.only_stop_game;
            return object;
        };
    
        /**
         * Converts this CMsgClientKickPlayingSession to JSON.
         * @function toJSON
         * @memberof CMsgClientKickPlayingSession
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientKickPlayingSession.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientKickPlayingSession;
    })();
    
    $root.CMsgClientVoiceCallPreAuthorize = (function() {
    
        /**
         * Properties of a CMsgClientVoiceCallPreAuthorize.
         * @exports ICMsgClientVoiceCallPreAuthorize
         * @interface ICMsgClientVoiceCallPreAuthorize
         * @property {number|Long|null} [caller_steamid] CMsgClientVoiceCallPreAuthorize caller_steamid
         * @property {number|Long|null} [receiver_steamid] CMsgClientVoiceCallPreAuthorize receiver_steamid
         * @property {number|null} [caller_id] CMsgClientVoiceCallPreAuthorize caller_id
         * @property {boolean|null} [hangup] CMsgClientVoiceCallPreAuthorize hangup
         */
    
        /**
         * Constructs a new CMsgClientVoiceCallPreAuthorize.
         * @exports CMsgClientVoiceCallPreAuthorize
         * @classdesc Represents a CMsgClientVoiceCallPreAuthorize.
         * @implements ICMsgClientVoiceCallPreAuthorize
         * @constructor
         * @param {ICMsgClientVoiceCallPreAuthorize=} [properties] Properties to set
         */
        function CMsgClientVoiceCallPreAuthorize(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientVoiceCallPreAuthorize caller_steamid.
         * @member {number|Long} caller_steamid
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @instance
         */
        CMsgClientVoiceCallPreAuthorize.prototype.caller_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientVoiceCallPreAuthorize receiver_steamid.
         * @member {number|Long} receiver_steamid
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @instance
         */
        CMsgClientVoiceCallPreAuthorize.prototype.receiver_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientVoiceCallPreAuthorize caller_id.
         * @member {number} caller_id
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @instance
         */
        CMsgClientVoiceCallPreAuthorize.prototype.caller_id = 0;
    
        /**
         * CMsgClientVoiceCallPreAuthorize hangup.
         * @member {boolean} hangup
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @instance
         */
        CMsgClientVoiceCallPreAuthorize.prototype.hangup = false;
    
        /**
         * Creates a new CMsgClientVoiceCallPreAuthorize instance using the specified properties.
         * @function create
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorize=} [properties] Properties to set
         * @returns {CMsgClientVoiceCallPreAuthorize} CMsgClientVoiceCallPreAuthorize instance
         */
        CMsgClientVoiceCallPreAuthorize.create = function create(properties) {
            return new CMsgClientVoiceCallPreAuthorize(properties);
        };
    
        /**
         * Encodes the specified CMsgClientVoiceCallPreAuthorize message. Does not implicitly {@link CMsgClientVoiceCallPreAuthorize.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorize} message CMsgClientVoiceCallPreAuthorize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVoiceCallPreAuthorize.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.caller_steamid);
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.receiver_steamid);
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.caller_id);
            if (message.hangup != null && message.hasOwnProperty("hangup"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.hangup);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientVoiceCallPreAuthorize message, length delimited. Does not implicitly {@link CMsgClientVoiceCallPreAuthorize.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorize} message CMsgClientVoiceCallPreAuthorize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVoiceCallPreAuthorize.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientVoiceCallPreAuthorize message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientVoiceCallPreAuthorize} CMsgClientVoiceCallPreAuthorize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVoiceCallPreAuthorize.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientVoiceCallPreAuthorize();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.caller_steamid = reader.fixed64();
                    break;
                case 2:
                    message.receiver_steamid = reader.fixed64();
                    break;
                case 3:
                    message.caller_id = reader.int32();
                    break;
                case 4:
                    message.hangup = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientVoiceCallPreAuthorize message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientVoiceCallPreAuthorize} CMsgClientVoiceCallPreAuthorize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVoiceCallPreAuthorize.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientVoiceCallPreAuthorize message.
         * @function verify
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientVoiceCallPreAuthorize.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                if (!$util.isInteger(message.caller_steamid) && !(message.caller_steamid && $util.isInteger(message.caller_steamid.low) && $util.isInteger(message.caller_steamid.high)))
                    return "caller_steamid: integer|Long expected";
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                if (!$util.isInteger(message.receiver_steamid) && !(message.receiver_steamid && $util.isInteger(message.receiver_steamid.low) && $util.isInteger(message.receiver_steamid.high)))
                    return "receiver_steamid: integer|Long expected";
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                if (!$util.isInteger(message.caller_id))
                    return "caller_id: integer expected";
            if (message.hangup != null && message.hasOwnProperty("hangup"))
                if (typeof message.hangup !== "boolean")
                    return "hangup: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientVoiceCallPreAuthorize message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientVoiceCallPreAuthorize} CMsgClientVoiceCallPreAuthorize
         */
        CMsgClientVoiceCallPreAuthorize.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientVoiceCallPreAuthorize)
                return object;
            var message = new $root.CMsgClientVoiceCallPreAuthorize();
            if (object.caller_steamid != null)
                if ($util.Long)
                    (message.caller_steamid = $util.Long.fromValue(object.caller_steamid)).unsigned = false;
                else if (typeof object.caller_steamid === "string")
                    message.caller_steamid = parseInt(object.caller_steamid, 10);
                else if (typeof object.caller_steamid === "number")
                    message.caller_steamid = object.caller_steamid;
                else if (typeof object.caller_steamid === "object")
                    message.caller_steamid = new $util.LongBits(object.caller_steamid.low >>> 0, object.caller_steamid.high >>> 0).toNumber();
            if (object.receiver_steamid != null)
                if ($util.Long)
                    (message.receiver_steamid = $util.Long.fromValue(object.receiver_steamid)).unsigned = false;
                else if (typeof object.receiver_steamid === "string")
                    message.receiver_steamid = parseInt(object.receiver_steamid, 10);
                else if (typeof object.receiver_steamid === "number")
                    message.receiver_steamid = object.receiver_steamid;
                else if (typeof object.receiver_steamid === "object")
                    message.receiver_steamid = new $util.LongBits(object.receiver_steamid.low >>> 0, object.receiver_steamid.high >>> 0).toNumber();
            if (object.caller_id != null)
                message.caller_id = object.caller_id | 0;
            if (object.hangup != null)
                message.hangup = Boolean(object.hangup);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientVoiceCallPreAuthorize message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @static
         * @param {CMsgClientVoiceCallPreAuthorize} message CMsgClientVoiceCallPreAuthorize
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientVoiceCallPreAuthorize.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.caller_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.caller_steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.receiver_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.receiver_steamid = options.longs === String ? "0" : 0;
                object.caller_id = 0;
                object.hangup = false;
            }
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                if (typeof message.caller_steamid === "number")
                    object.caller_steamid = options.longs === String ? String(message.caller_steamid) : message.caller_steamid;
                else
                    object.caller_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.caller_steamid) : options.longs === Number ? new $util.LongBits(message.caller_steamid.low >>> 0, message.caller_steamid.high >>> 0).toNumber() : message.caller_steamid;
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                if (typeof message.receiver_steamid === "number")
                    object.receiver_steamid = options.longs === String ? String(message.receiver_steamid) : message.receiver_steamid;
                else
                    object.receiver_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.receiver_steamid) : options.longs === Number ? new $util.LongBits(message.receiver_steamid.low >>> 0, message.receiver_steamid.high >>> 0).toNumber() : message.receiver_steamid;
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                object.caller_id = message.caller_id;
            if (message.hangup != null && message.hasOwnProperty("hangup"))
                object.hangup = message.hangup;
            return object;
        };
    
        /**
         * Converts this CMsgClientVoiceCallPreAuthorize to JSON.
         * @function toJSON
         * @memberof CMsgClientVoiceCallPreAuthorize
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientVoiceCallPreAuthorize.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientVoiceCallPreAuthorize;
    })();
    
    $root.CMsgClientVoiceCallPreAuthorizeResponse = (function() {
    
        /**
         * Properties of a CMsgClientVoiceCallPreAuthorizeResponse.
         * @exports ICMsgClientVoiceCallPreAuthorizeResponse
         * @interface ICMsgClientVoiceCallPreAuthorizeResponse
         * @property {number|Long|null} [caller_steamid] CMsgClientVoiceCallPreAuthorizeResponse caller_steamid
         * @property {number|Long|null} [receiver_steamid] CMsgClientVoiceCallPreAuthorizeResponse receiver_steamid
         * @property {number|null} [eresult] CMsgClientVoiceCallPreAuthorizeResponse eresult
         * @property {number|null} [caller_id] CMsgClientVoiceCallPreAuthorizeResponse caller_id
         */
    
        /**
         * Constructs a new CMsgClientVoiceCallPreAuthorizeResponse.
         * @exports CMsgClientVoiceCallPreAuthorizeResponse
         * @classdesc Represents a CMsgClientVoiceCallPreAuthorizeResponse.
         * @implements ICMsgClientVoiceCallPreAuthorizeResponse
         * @constructor
         * @param {ICMsgClientVoiceCallPreAuthorizeResponse=} [properties] Properties to set
         */
        function CMsgClientVoiceCallPreAuthorizeResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientVoiceCallPreAuthorizeResponse caller_steamid.
         * @member {number|Long} caller_steamid
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @instance
         */
        CMsgClientVoiceCallPreAuthorizeResponse.prototype.caller_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientVoiceCallPreAuthorizeResponse receiver_steamid.
         * @member {number|Long} receiver_steamid
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @instance
         */
        CMsgClientVoiceCallPreAuthorizeResponse.prototype.receiver_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientVoiceCallPreAuthorizeResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @instance
         */
        CMsgClientVoiceCallPreAuthorizeResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientVoiceCallPreAuthorizeResponse caller_id.
         * @member {number} caller_id
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @instance
         */
        CMsgClientVoiceCallPreAuthorizeResponse.prototype.caller_id = 0;
    
        /**
         * Creates a new CMsgClientVoiceCallPreAuthorizeResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorizeResponse=} [properties] Properties to set
         * @returns {CMsgClientVoiceCallPreAuthorizeResponse} CMsgClientVoiceCallPreAuthorizeResponse instance
         */
        CMsgClientVoiceCallPreAuthorizeResponse.create = function create(properties) {
            return new CMsgClientVoiceCallPreAuthorizeResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientVoiceCallPreAuthorizeResponse message. Does not implicitly {@link CMsgClientVoiceCallPreAuthorizeResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorizeResponse} message CMsgClientVoiceCallPreAuthorizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVoiceCallPreAuthorizeResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.caller_steamid);
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.receiver_steamid);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.caller_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientVoiceCallPreAuthorizeResponse message, length delimited. Does not implicitly {@link CMsgClientVoiceCallPreAuthorizeResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {ICMsgClientVoiceCallPreAuthorizeResponse} message CMsgClientVoiceCallPreAuthorizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientVoiceCallPreAuthorizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientVoiceCallPreAuthorizeResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientVoiceCallPreAuthorizeResponse} CMsgClientVoiceCallPreAuthorizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVoiceCallPreAuthorizeResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientVoiceCallPreAuthorizeResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.caller_steamid = reader.fixed64();
                    break;
                case 2:
                    message.receiver_steamid = reader.fixed64();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                case 4:
                    message.caller_id = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientVoiceCallPreAuthorizeResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientVoiceCallPreAuthorizeResponse} CMsgClientVoiceCallPreAuthorizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientVoiceCallPreAuthorizeResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientVoiceCallPreAuthorizeResponse message.
         * @function verify
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientVoiceCallPreAuthorizeResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                if (!$util.isInteger(message.caller_steamid) && !(message.caller_steamid && $util.isInteger(message.caller_steamid.low) && $util.isInteger(message.caller_steamid.high)))
                    return "caller_steamid: integer|Long expected";
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                if (!$util.isInteger(message.receiver_steamid) && !(message.receiver_steamid && $util.isInteger(message.receiver_steamid.low) && $util.isInteger(message.receiver_steamid.high)))
                    return "receiver_steamid: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                if (!$util.isInteger(message.caller_id))
                    return "caller_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientVoiceCallPreAuthorizeResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientVoiceCallPreAuthorizeResponse} CMsgClientVoiceCallPreAuthorizeResponse
         */
        CMsgClientVoiceCallPreAuthorizeResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientVoiceCallPreAuthorizeResponse)
                return object;
            var message = new $root.CMsgClientVoiceCallPreAuthorizeResponse();
            if (object.caller_steamid != null)
                if ($util.Long)
                    (message.caller_steamid = $util.Long.fromValue(object.caller_steamid)).unsigned = false;
                else if (typeof object.caller_steamid === "string")
                    message.caller_steamid = parseInt(object.caller_steamid, 10);
                else if (typeof object.caller_steamid === "number")
                    message.caller_steamid = object.caller_steamid;
                else if (typeof object.caller_steamid === "object")
                    message.caller_steamid = new $util.LongBits(object.caller_steamid.low >>> 0, object.caller_steamid.high >>> 0).toNumber();
            if (object.receiver_steamid != null)
                if ($util.Long)
                    (message.receiver_steamid = $util.Long.fromValue(object.receiver_steamid)).unsigned = false;
                else if (typeof object.receiver_steamid === "string")
                    message.receiver_steamid = parseInt(object.receiver_steamid, 10);
                else if (typeof object.receiver_steamid === "number")
                    message.receiver_steamid = object.receiver_steamid;
                else if (typeof object.receiver_steamid === "object")
                    message.receiver_steamid = new $util.LongBits(object.receiver_steamid.low >>> 0, object.receiver_steamid.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.caller_id != null)
                message.caller_id = object.caller_id | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientVoiceCallPreAuthorizeResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @static
         * @param {CMsgClientVoiceCallPreAuthorizeResponse} message CMsgClientVoiceCallPreAuthorizeResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientVoiceCallPreAuthorizeResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.caller_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.caller_steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.receiver_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.receiver_steamid = options.longs === String ? "0" : 0;
                object.eresult = 2;
                object.caller_id = 0;
            }
            if (message.caller_steamid != null && message.hasOwnProperty("caller_steamid"))
                if (typeof message.caller_steamid === "number")
                    object.caller_steamid = options.longs === String ? String(message.caller_steamid) : message.caller_steamid;
                else
                    object.caller_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.caller_steamid) : options.longs === Number ? new $util.LongBits(message.caller_steamid.low >>> 0, message.caller_steamid.high >>> 0).toNumber() : message.caller_steamid;
            if (message.receiver_steamid != null && message.hasOwnProperty("receiver_steamid"))
                if (typeof message.receiver_steamid === "number")
                    object.receiver_steamid = options.longs === String ? String(message.receiver_steamid) : message.receiver_steamid;
                else
                    object.receiver_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.receiver_steamid) : options.longs === Number ? new $util.LongBits(message.receiver_steamid.low >>> 0, message.receiver_steamid.high >>> 0).toNumber() : message.receiver_steamid;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.caller_id != null && message.hasOwnProperty("caller_id"))
                object.caller_id = message.caller_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientVoiceCallPreAuthorizeResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientVoiceCallPreAuthorizeResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientVoiceCallPreAuthorizeResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientVoiceCallPreAuthorizeResponse;
    })();
    
    $root.CMsgBadgeCraftedNotification = (function() {
    
        /**
         * Properties of a CMsgBadgeCraftedNotification.
         * @exports ICMsgBadgeCraftedNotification
         * @interface ICMsgBadgeCraftedNotification
         * @property {number|null} [appid] CMsgBadgeCraftedNotification appid
         * @property {number|null} [badge_level] CMsgBadgeCraftedNotification badge_level
         */
    
        /**
         * Constructs a new CMsgBadgeCraftedNotification.
         * @exports CMsgBadgeCraftedNotification
         * @classdesc Represents a CMsgBadgeCraftedNotification.
         * @implements ICMsgBadgeCraftedNotification
         * @constructor
         * @param {ICMsgBadgeCraftedNotification=} [properties] Properties to set
         */
        function CMsgBadgeCraftedNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgBadgeCraftedNotification appid.
         * @member {number} appid
         * @memberof CMsgBadgeCraftedNotification
         * @instance
         */
        CMsgBadgeCraftedNotification.prototype.appid = 0;
    
        /**
         * CMsgBadgeCraftedNotification badge_level.
         * @member {number} badge_level
         * @memberof CMsgBadgeCraftedNotification
         * @instance
         */
        CMsgBadgeCraftedNotification.prototype.badge_level = 0;
    
        /**
         * Creates a new CMsgBadgeCraftedNotification instance using the specified properties.
         * @function create
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {ICMsgBadgeCraftedNotification=} [properties] Properties to set
         * @returns {CMsgBadgeCraftedNotification} CMsgBadgeCraftedNotification instance
         */
        CMsgBadgeCraftedNotification.create = function create(properties) {
            return new CMsgBadgeCraftedNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgBadgeCraftedNotification message. Does not implicitly {@link CMsgBadgeCraftedNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {ICMsgBadgeCraftedNotification} message CMsgBadgeCraftedNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgBadgeCraftedNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.badge_level != null && message.hasOwnProperty("badge_level"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.badge_level);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgBadgeCraftedNotification message, length delimited. Does not implicitly {@link CMsgBadgeCraftedNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {ICMsgBadgeCraftedNotification} message CMsgBadgeCraftedNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgBadgeCraftedNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgBadgeCraftedNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgBadgeCraftedNotification} CMsgBadgeCraftedNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgBadgeCraftedNotification.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgBadgeCraftedNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.badge_level = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgBadgeCraftedNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgBadgeCraftedNotification} CMsgBadgeCraftedNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgBadgeCraftedNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgBadgeCraftedNotification message.
         * @function verify
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgBadgeCraftedNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.badge_level != null && message.hasOwnProperty("badge_level"))
                if (!$util.isInteger(message.badge_level))
                    return "badge_level: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgBadgeCraftedNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgBadgeCraftedNotification} CMsgBadgeCraftedNotification
         */
        CMsgBadgeCraftedNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgBadgeCraftedNotification)
                return object;
            var message = new $root.CMsgBadgeCraftedNotification();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.badge_level != null)
                message.badge_level = object.badge_level >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgBadgeCraftedNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgBadgeCraftedNotification
         * @static
         * @param {CMsgBadgeCraftedNotification} message CMsgBadgeCraftedNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgBadgeCraftedNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.badge_level = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.badge_level != null && message.hasOwnProperty("badge_level"))
                object.badge_level = message.badge_level;
            return object;
        };
    
        /**
         * Converts this CMsgBadgeCraftedNotification to JSON.
         * @function toJSON
         * @memberof CMsgBadgeCraftedNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgBadgeCraftedNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgBadgeCraftedNotification;
    })();
    
    /**
     * EProtoClanEventType enum.
     * @exports EProtoClanEventType
     * @enum {string}
     * @property {number} k_EClanOtherEvent=1 k_EClanOtherEvent value
     * @property {number} k_EClanGameEvent=2 k_EClanGameEvent value
     * @property {number} k_EClanPartyEvent=3 k_EClanPartyEvent value
     * @property {number} k_EClanMeetingEvent=4 k_EClanMeetingEvent value
     * @property {number} k_EClanSpecialCauseEvent=5 k_EClanSpecialCauseEvent value
     * @property {number} k_EClanMusicAndArtsEvent=6 k_EClanMusicAndArtsEvent value
     * @property {number} k_EClanSportsEvent=7 k_EClanSportsEvent value
     * @property {number} k_EClanTripEvent=8 k_EClanTripEvent value
     * @property {number} k_EClanChatEvent=9 k_EClanChatEvent value
     * @property {number} k_EClanGameReleaseEvent=10 k_EClanGameReleaseEvent value
     * @property {number} k_EClanBroadcastEvent=11 k_EClanBroadcastEvent value
     * @property {number} k_EClanSmallUpdateEvent=12 k_EClanSmallUpdateEvent value
     * @property {number} k_EClanPreAnnounceMajorUpdateEvent=13 k_EClanPreAnnounceMajorUpdateEvent value
     * @property {number} k_EClanMajorUpdateEvent=14 k_EClanMajorUpdateEvent value
     * @property {number} k_EClanDLCReleaseEvent=15 k_EClanDLCReleaseEvent value
     * @property {number} k_EClanFutureReleaseEvent=16 k_EClanFutureReleaseEvent value
     * @property {number} k_EClanESportTournamentStreamEvent=17 k_EClanESportTournamentStreamEvent value
     * @property {number} k_EClanDevStreamEvent=18 k_EClanDevStreamEvent value
     * @property {number} k_EClanFamousStreamEvent=19 k_EClanFamousStreamEvent value
     * @property {number} k_EClanGameSalesEvent=20 k_EClanGameSalesEvent value
     * @property {number} k_EClanGameItemSalesEvent=21 k_EClanGameItemSalesEvent value
     * @property {number} k_EClanInGameBonusXPEvent=22 k_EClanInGameBonusXPEvent value
     * @property {number} k_EClanInGameLootEvent=23 k_EClanInGameLootEvent value
     * @property {number} k_EClanInGamePerksEvent=24 k_EClanInGamePerksEvent value
     * @property {number} k_EClanInGameChallengeEvent=25 k_EClanInGameChallengeEvent value
     * @property {number} k_EClanInGameContestEvent=26 k_EClanInGameContestEvent value
     * @property {number} k_EClanIRLEvent=27 k_EClanIRLEvent value
     * @property {number} k_EClanNewsEvent=28 k_EClanNewsEvent value
     * @property {number} k_EClanBetaReleaseEvent=29 k_EClanBetaReleaseEvent value
     * @property {number} k_EClanInGameContentReleaseEvent=30 k_EClanInGameContentReleaseEvent value
     * @property {number} k_EClanFreeTrial=31 k_EClanFreeTrial value
     * @property {number} k_EClanSeasonRelease=32 k_EClanSeasonRelease value
     * @property {number} k_EClanSeasonUpdate=33 k_EClanSeasonUpdate value
     * @property {number} k_EClanCrosspostEvent=34 k_EClanCrosspostEvent value
     * @property {number} k_EClanInGameEventGeneral=35 k_EClanInGameEventGeneral value
     */
    $root.EProtoClanEventType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[1] = "k_EClanOtherEvent"] = 1;
        values[valuesById[2] = "k_EClanGameEvent"] = 2;
        values[valuesById[3] = "k_EClanPartyEvent"] = 3;
        values[valuesById[4] = "k_EClanMeetingEvent"] = 4;
        values[valuesById[5] = "k_EClanSpecialCauseEvent"] = 5;
        values[valuesById[6] = "k_EClanMusicAndArtsEvent"] = 6;
        values[valuesById[7] = "k_EClanSportsEvent"] = 7;
        values[valuesById[8] = "k_EClanTripEvent"] = 8;
        values[valuesById[9] = "k_EClanChatEvent"] = 9;
        values[valuesById[10] = "k_EClanGameReleaseEvent"] = 10;
        values[valuesById[11] = "k_EClanBroadcastEvent"] = 11;
        values[valuesById[12] = "k_EClanSmallUpdateEvent"] = 12;
        values[valuesById[13] = "k_EClanPreAnnounceMajorUpdateEvent"] = 13;
        values[valuesById[14] = "k_EClanMajorUpdateEvent"] = 14;
        values[valuesById[15] = "k_EClanDLCReleaseEvent"] = 15;
        values[valuesById[16] = "k_EClanFutureReleaseEvent"] = 16;
        values[valuesById[17] = "k_EClanESportTournamentStreamEvent"] = 17;
        values[valuesById[18] = "k_EClanDevStreamEvent"] = 18;
        values[valuesById[19] = "k_EClanFamousStreamEvent"] = 19;
        values[valuesById[20] = "k_EClanGameSalesEvent"] = 20;
        values[valuesById[21] = "k_EClanGameItemSalesEvent"] = 21;
        values[valuesById[22] = "k_EClanInGameBonusXPEvent"] = 22;
        values[valuesById[23] = "k_EClanInGameLootEvent"] = 23;
        values[valuesById[24] = "k_EClanInGamePerksEvent"] = 24;
        values[valuesById[25] = "k_EClanInGameChallengeEvent"] = 25;
        values[valuesById[26] = "k_EClanInGameContestEvent"] = 26;
        values[valuesById[27] = "k_EClanIRLEvent"] = 27;
        values[valuesById[28] = "k_EClanNewsEvent"] = 28;
        values[valuesById[29] = "k_EClanBetaReleaseEvent"] = 29;
        values[valuesById[30] = "k_EClanInGameContentReleaseEvent"] = 30;
        values[valuesById[31] = "k_EClanFreeTrial"] = 31;
        values[valuesById[32] = "k_EClanSeasonRelease"] = 32;
        values[valuesById[33] = "k_EClanSeasonUpdate"] = 33;
        values[valuesById[34] = "k_EClanCrosspostEvent"] = 34;
        values[valuesById[35] = "k_EClanInGameEventGeneral"] = 35;
        return values;
    })();
    
    /**
     * PartnerEventNotificationType enum.
     * @exports PartnerEventNotificationType
     * @enum {string}
     * @property {number} k_EEventStart=0 k_EEventStart value
     * @property {number} k_EEventBroadcastStart=1 k_EEventBroadcastStart value
     * @property {number} k_EEventMatchStart=2 k_EEventMatchStart value
     * @property {number} k_EEventPartnerMaxType=3 k_EEventPartnerMaxType value
     */
    $root.PartnerEventNotificationType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "k_EEventStart"] = 0;
        values[valuesById[1] = "k_EEventBroadcastStart"] = 1;
        values[valuesById[2] = "k_EEventMatchStart"] = 2;
        values[valuesById[3] = "k_EEventPartnerMaxType"] = 3;
        return values;
    })();
    
    $root.CMsgIPAddress = (function() {
    
        /**
         * Properties of a CMsgIPAddress.
         * @exports ICMsgIPAddress
         * @interface ICMsgIPAddress
         * @property {number|null} [v4] CMsgIPAddress v4
         * @property {Uint8Array|null} [v6] CMsgIPAddress v6
         */
    
        /**
         * Constructs a new CMsgIPAddress.
         * @exports CMsgIPAddress
         * @classdesc Represents a CMsgIPAddress.
         * @implements ICMsgIPAddress
         * @constructor
         * @param {ICMsgIPAddress=} [properties] Properties to set
         */
        function CMsgIPAddress(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIPAddress v4.
         * @member {number} v4
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v4 = 0;
    
        /**
         * CMsgIPAddress v6.
         * @member {Uint8Array} v6
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v6 = $util.newBuffer([]);
    
        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;
    
        /**
         * CMsgIPAddress ip.
         * @member {"v4"|"v6"|undefined} ip
         * @memberof CMsgIPAddress
         * @instance
         */
        Object.defineProperty(CMsgIPAddress.prototype, "ip", {
            get: $util.oneOfGetter($oneOfFields = ["v4", "v6"]),
            set: $util.oneOfSetter($oneOfFields)
        });
    
        /**
         * Creates a new CMsgIPAddress instance using the specified properties.
         * @function create
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress=} [properties] Properties to set
         * @returns {CMsgIPAddress} CMsgIPAddress instance
         */
        CMsgIPAddress.create = function create(properties) {
            return new CMsgIPAddress(properties);
        };
    
        /**
         * Encodes the specified CMsgIPAddress message. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encode
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.v4 != null && message.hasOwnProperty("v4"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.v4);
            if (message.v6 != null && message.hasOwnProperty("v6"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.v6);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIPAddress message, length delimited. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIPAddress();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.v4 = reader.fixed32();
                    break;
                case 2:
                    message.v6 = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIPAddress message.
         * @function verify
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIPAddress.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            var properties = {};
            if (message.v4 != null && message.hasOwnProperty("v4")) {
                properties.ip = 1;
                if (!$util.isInteger(message.v4))
                    return "v4: integer expected";
            }
            if (message.v6 != null && message.hasOwnProperty("v6")) {
                if (properties.ip === 1)
                    return "ip: multiple values";
                properties.ip = 1;
                if (!(message.v6 && typeof message.v6.length === "number" || $util.isString(message.v6)))
                    return "v6: buffer expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgIPAddress message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIPAddress} CMsgIPAddress
         */
        CMsgIPAddress.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIPAddress)
                return object;
            var message = new $root.CMsgIPAddress();
            if (object.v4 != null)
                message.v4 = object.v4 >>> 0;
            if (object.v6 != null)
                if (typeof object.v6 === "string")
                    $util.base64.decode(object.v6, message.v6 = $util.newBuffer($util.base64.length(object.v6)), 0);
                else if (object.v6.length)
                    message.v6 = object.v6;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIPAddress message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIPAddress
         * @static
         * @param {CMsgIPAddress} message CMsgIPAddress
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIPAddress.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (message.v4 != null && message.hasOwnProperty("v4")) {
                object.v4 = message.v4;
                if (options.oneofs)
                    object.ip = "v4";
            }
            if (message.v6 != null && message.hasOwnProperty("v6")) {
                object.v6 = options.bytes === String ? $util.base64.encode(message.v6, 0, message.v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.v6) : message.v6;
                if (options.oneofs)
                    object.ip = "v6";
            }
            return object;
        };
    
        /**
         * Converts this CMsgIPAddress to JSON.
         * @function toJSON
         * @memberof CMsgIPAddress
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIPAddress.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgIPAddress;
    })();
    
    $root.CMsgIPAddressBucket = (function() {
    
        /**
         * Properties of a CMsgIPAddressBucket.
         * @exports ICMsgIPAddressBucket
         * @interface ICMsgIPAddressBucket
         * @property {ICMsgIPAddress|null} [original_ip_address] CMsgIPAddressBucket original_ip_address
         * @property {number|Long|null} [bucket] CMsgIPAddressBucket bucket
         */
    
        /**
         * Constructs a new CMsgIPAddressBucket.
         * @exports CMsgIPAddressBucket
         * @classdesc Represents a CMsgIPAddressBucket.
         * @implements ICMsgIPAddressBucket
         * @constructor
         * @param {ICMsgIPAddressBucket=} [properties] Properties to set
         */
        function CMsgIPAddressBucket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIPAddressBucket original_ip_address.
         * @member {ICMsgIPAddress|null|undefined} original_ip_address
         * @memberof CMsgIPAddressBucket
         * @instance
         */
        CMsgIPAddressBucket.prototype.original_ip_address = null;
    
        /**
         * CMsgIPAddressBucket bucket.
         * @member {number|Long} bucket
         * @memberof CMsgIPAddressBucket
         * @instance
         */
        CMsgIPAddressBucket.prototype.bucket = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgIPAddressBucket instance using the specified properties.
         * @function create
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket=} [properties] Properties to set
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket instance
         */
        CMsgIPAddressBucket.create = function create(properties) {
            return new CMsgIPAddressBucket(properties);
        };
    
        /**
         * Encodes the specified CMsgIPAddressBucket message. Does not implicitly {@link CMsgIPAddressBucket.verify|verify} messages.
         * @function encode
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket} message CMsgIPAddressBucket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddressBucket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.original_ip_address != null && message.hasOwnProperty("original_ip_address"))
                $root.CMsgIPAddress.encode(message.original_ip_address, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.bucket != null && message.hasOwnProperty("bucket"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.bucket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIPAddressBucket message, length delimited. Does not implicitly {@link CMsgIPAddressBucket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket} message CMsgIPAddressBucket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddressBucket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIPAddressBucket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddressBucket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIPAddressBucket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.original_ip_address = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.bucket = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIPAddressBucket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddressBucket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIPAddressBucket message.
         * @function verify
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIPAddressBucket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.original_ip_address != null && message.hasOwnProperty("original_ip_address")) {
                var error = $root.CMsgIPAddress.verify(message.original_ip_address);
                if (error)
                    return "original_ip_address." + error;
            }
            if (message.bucket != null && message.hasOwnProperty("bucket"))
                if (!$util.isInteger(message.bucket) && !(message.bucket && $util.isInteger(message.bucket.low) && $util.isInteger(message.bucket.high)))
                    return "bucket: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgIPAddressBucket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         */
        CMsgIPAddressBucket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIPAddressBucket)
                return object;
            var message = new $root.CMsgIPAddressBucket();
            if (object.original_ip_address != null) {
                if (typeof object.original_ip_address !== "object")
                    throw TypeError(".CMsgIPAddressBucket.original_ip_address: object expected");
                message.original_ip_address = $root.CMsgIPAddress.fromObject(object.original_ip_address);
            }
            if (object.bucket != null)
                if ($util.Long)
                    (message.bucket = $util.Long.fromValue(object.bucket)).unsigned = false;
                else if (typeof object.bucket === "string")
                    message.bucket = parseInt(object.bucket, 10);
                else if (typeof object.bucket === "number")
                    message.bucket = object.bucket;
                else if (typeof object.bucket === "object")
                    message.bucket = new $util.LongBits(object.bucket.low >>> 0, object.bucket.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIPAddressBucket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {CMsgIPAddressBucket} message CMsgIPAddressBucket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIPAddressBucket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.original_ip_address = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.bucket = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bucket = options.longs === String ? "0" : 0;
            }
            if (message.original_ip_address != null && message.hasOwnProperty("original_ip_address"))
                object.original_ip_address = $root.CMsgIPAddress.toObject(message.original_ip_address, options);
            if (message.bucket != null && message.hasOwnProperty("bucket"))
                if (typeof message.bucket === "number")
                    object.bucket = options.longs === String ? String(message.bucket) : message.bucket;
                else
                    object.bucket = options.longs === String ? $util.Long.prototype.toString.call(message.bucket) : options.longs === Number ? new $util.LongBits(message.bucket.low >>> 0, message.bucket.high >>> 0).toNumber() : message.bucket;
            return object;
        };
    
        /**
         * Converts this CMsgIPAddressBucket to JSON.
         * @function toJSON
         * @memberof CMsgIPAddressBucket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIPAddressBucket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgIPAddressBucket;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [steamid] CMsgProtoBufHeader steamid
         * @property {number|null} [client_sessionid] CMsgProtoBufHeader client_sessionid
         * @property {number|null} [routing_appid] CMsgProtoBufHeader routing_appid
         * @property {number|Long|null} [jobid_source] CMsgProtoBufHeader jobid_source
         * @property {number|Long|null} [jobid_target] CMsgProtoBufHeader jobid_target
         * @property {string|null} [target_job_name] CMsgProtoBufHeader target_job_name
         * @property {number|null} [seq_num] CMsgProtoBufHeader seq_num
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [error_message] CMsgProtoBufHeader error_message
         * @property {number|null} [auth_account_flags] CMsgProtoBufHeader auth_account_flags
         * @property {number|null} [token_source] CMsgProtoBufHeader token_source
         * @property {boolean|null} [admin_spoofing_user] CMsgProtoBufHeader admin_spoofing_user
         * @property {number|null} [transport_error] CMsgProtoBufHeader transport_error
         * @property {number|Long|null} [messageid] CMsgProtoBufHeader messageid
         * @property {number|null} [publisher_group_id] CMsgProtoBufHeader publisher_group_id
         * @property {number|null} [sysid] CMsgProtoBufHeader sysid
         * @property {number|Long|null} [trace_tag] CMsgProtoBufHeader trace_tag
         * @property {number|null} [webapi_key_id] CMsgProtoBufHeader webapi_key_id
         * @property {boolean|null} [is_from_external_source] CMsgProtoBufHeader is_from_external_source
         * @property {Array.<number>|null} [forward_to_sysid] CMsgProtoBufHeader forward_to_sysid
         * @property {number|null} [cm_sysid] CMsgProtoBufHeader cm_sysid
         * @property {string|null} [wg_token] CMsgProtoBufHeader wg_token
         * @property {number|null} [launcher_type] CMsgProtoBufHeader launcher_type
         * @property {number|null} [realm] CMsgProtoBufHeader realm
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {Uint8Array|null} [ip_v6] CMsgProtoBufHeader ip_v6
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            this.forward_to_sysid = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader steamid.
         * @member {number|Long} steamid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader client_sessionid.
         * @member {number} client_sessionid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_sessionid = 0;
    
        /**
         * CMsgProtoBufHeader routing_appid.
         * @member {number} routing_appid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.routing_appid = 0;
    
        /**
         * CMsgProtoBufHeader jobid_source.
         * @member {number|Long} jobid_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_source = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader jobid_target.
         * @member {number|Long} jobid_target
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_target = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader target_job_name.
         * @member {string} target_job_name
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.target_job_name = "";
    
        /**
         * CMsgProtoBufHeader seq_num.
         * @member {number} seq_num
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.seq_num = 0;
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader error_message.
         * @member {string} error_message
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.error_message = "";
    
        /**
         * CMsgProtoBufHeader auth_account_flags.
         * @member {number} auth_account_flags
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.auth_account_flags = 0;
    
        /**
         * CMsgProtoBufHeader token_source.
         * @member {number} token_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.token_source = 0;
    
        /**
         * CMsgProtoBufHeader admin_spoofing_user.
         * @member {boolean} admin_spoofing_user
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.admin_spoofing_user = false;
    
        /**
         * CMsgProtoBufHeader transport_error.
         * @member {number} transport_error
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.transport_error = 1;
    
        /**
         * CMsgProtoBufHeader messageid.
         * @member {number|Long} messageid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.messageid = $util.Long ? $util.Long.fromBits(-1,-1,true) : 18446744073709552000;
    
        /**
         * CMsgProtoBufHeader publisher_group_id.
         * @member {number} publisher_group_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.publisher_group_id = 0;
    
        /**
         * CMsgProtoBufHeader sysid.
         * @member {number} sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.sysid = 0;
    
        /**
         * CMsgProtoBufHeader trace_tag.
         * @member {number|Long} trace_tag
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.trace_tag = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgProtoBufHeader webapi_key_id.
         * @member {number} webapi_key_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.webapi_key_id = 0;
    
        /**
         * CMsgProtoBufHeader is_from_external_source.
         * @member {boolean} is_from_external_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.is_from_external_source = false;
    
        /**
         * CMsgProtoBufHeader forward_to_sysid.
         * @member {Array.<number>} forward_to_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.forward_to_sysid = $util.emptyArray;
    
        /**
         * CMsgProtoBufHeader cm_sysid.
         * @member {number} cm_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.cm_sysid = 0;
    
        /**
         * CMsgProtoBufHeader wg_token.
         * @member {string} wg_token
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.wg_token = "";
    
        /**
         * CMsgProtoBufHeader launcher_type.
         * @member {number} launcher_type
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.launcher_type = 0;
    
        /**
         * CMsgProtoBufHeader realm.
         * @member {number} realm
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.realm = 0;
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader ip_v6.
         * @member {Uint8Array} ip_v6
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip_v6 = $util.newBuffer([]);
    
        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;
    
        /**
         * CMsgProtoBufHeader ip_addr.
         * @member {"ip"|"ip_v6"|undefined} ip_addr
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        Object.defineProperty(CMsgProtoBufHeader.prototype, "ip_addr", {
            get: $util.oneOfGetter($oneOfFields = ["ip", "ip_v6"]),
            set: $util.oneOfSetter($oneOfFields)
        });
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.client_sessionid);
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.routing_appid);
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.jobid_source);
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.jobid_target);
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.target_job_name);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.error_message);
            if (message.ip != null && message.hasOwnProperty("ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.auth_account_flags);
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.transport_error);
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                writer.uint32(/* id 18, wireType 0 =*/144).uint64(message.messageid);
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.publisher_group_id);
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.sysid);
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint64(message.trace_tag);
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.token_source);
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.admin_spoofing_user);
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.seq_num);
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.webapi_key_id);
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                writer.uint32(/* id 26, wireType 0 =*/208).bool(message.is_from_external_source);
            if (message.forward_to_sysid != null && message.forward_to_sysid.length)
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.forward_to_sysid[i]);
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.cm_sysid);
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6"))
                writer.uint32(/* id 29, wireType 2 =*/234).bytes(message.ip_v6);
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                writer.uint32(/* id 30, wireType 2 =*/242).string(message.wg_token);
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.launcher_type);
            if (message.realm != null && message.hasOwnProperty("realm"))
                writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.realm);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.client_sessionid = reader.int32();
                    break;
                case 3:
                    message.routing_appid = reader.uint32();
                    break;
                case 10:
                    message.jobid_source = reader.fixed64();
                    break;
                case 11:
                    message.jobid_target = reader.fixed64();
                    break;
                case 12:
                    message.target_job_name = reader.string();
                    break;
                case 24:
                    message.seq_num = reader.int32();
                    break;
                case 13:
                    message.eresult = reader.int32();
                    break;
                case 14:
                    message.error_message = reader.string();
                    break;
                case 16:
                    message.auth_account_flags = reader.uint32();
                    break;
                case 22:
                    message.token_source = reader.uint32();
                    break;
                case 23:
                    message.admin_spoofing_user = reader.bool();
                    break;
                case 17:
                    message.transport_error = reader.int32();
                    break;
                case 18:
                    message.messageid = reader.uint64();
                    break;
                case 19:
                    message.publisher_group_id = reader.uint32();
                    break;
                case 20:
                    message.sysid = reader.uint32();
                    break;
                case 21:
                    message.trace_tag = reader.uint64();
                    break;
                case 25:
                    message.webapi_key_id = reader.uint32();
                    break;
                case 26:
                    message.is_from_external_source = reader.bool();
                    break;
                case 27:
                    if (!(message.forward_to_sysid && message.forward_to_sysid.length))
                        message.forward_to_sysid = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.forward_to_sysid.push(reader.uint32());
                    } else
                        message.forward_to_sysid.push(reader.uint32());
                    break;
                case 28:
                    message.cm_sysid = reader.uint32();
                    break;
                case 30:
                    message.wg_token = reader.string();
                    break;
                case 31:
                    message.launcher_type = reader.uint32();
                    break;
                case 32:
                    message.realm = reader.uint32();
                    break;
                case 15:
                    message.ip = reader.uint32();
                    break;
                case 29:
                    message.ip_v6 = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            var properties = {};
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                if (!$util.isInteger(message.client_sessionid))
                    return "client_sessionid: integer expected";
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                if (!$util.isInteger(message.routing_appid))
                    return "routing_appid: integer expected";
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (!$util.isInteger(message.jobid_source) && !(message.jobid_source && $util.isInteger(message.jobid_source.low) && $util.isInteger(message.jobid_source.high)))
                    return "jobid_source: integer|Long expected";
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (!$util.isInteger(message.jobid_target) && !(message.jobid_target && $util.isInteger(message.jobid_target.low) && $util.isInteger(message.jobid_target.high)))
                    return "jobid_target: integer|Long expected";
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                if (!$util.isString(message.target_job_name))
                    return "target_job_name: string expected";
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                if (!$util.isInteger(message.seq_num))
                    return "seq_num: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                if (!$util.isInteger(message.auth_account_flags))
                    return "auth_account_flags: integer expected";
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                if (!$util.isInteger(message.token_source))
                    return "token_source: integer expected";
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                if (typeof message.admin_spoofing_user !== "boolean")
                    return "admin_spoofing_user: boolean expected";
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                if (!$util.isInteger(message.transport_error))
                    return "transport_error: integer expected";
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (!$util.isInteger(message.messageid) && !(message.messageid && $util.isInteger(message.messageid.low) && $util.isInteger(message.messageid.high)))
                    return "messageid: integer|Long expected";
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                if (!$util.isInteger(message.publisher_group_id))
                    return "publisher_group_id: integer expected";
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                if (!$util.isInteger(message.sysid))
                    return "sysid: integer expected";
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (!$util.isInteger(message.trace_tag) && !(message.trace_tag && $util.isInteger(message.trace_tag.low) && $util.isInteger(message.trace_tag.high)))
                    return "trace_tag: integer|Long expected";
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                if (!$util.isInteger(message.webapi_key_id))
                    return "webapi_key_id: integer expected";
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                if (typeof message.is_from_external_source !== "boolean")
                    return "is_from_external_source: boolean expected";
            if (message.forward_to_sysid != null && message.hasOwnProperty("forward_to_sysid")) {
                if (!Array.isArray(message.forward_to_sysid))
                    return "forward_to_sysid: array expected";
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    if (!$util.isInteger(message.forward_to_sysid[i]))
                        return "forward_to_sysid: integer[] expected";
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                if (!$util.isInteger(message.cm_sysid))
                    return "cm_sysid: integer expected";
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                if (!$util.isString(message.wg_token))
                    return "wg_token: string expected";
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                if (!$util.isInteger(message.launcher_type))
                    return "launcher_type: integer expected";
            if (message.realm != null && message.hasOwnProperty("realm"))
                if (!$util.isInteger(message.realm))
                    return "realm: integer expected";
            if (message.ip != null && message.hasOwnProperty("ip")) {
                properties.ip_addr = 1;
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            }
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6")) {
                if (properties.ip_addr === 1)
                    return "ip_addr: multiple values";
                properties.ip_addr = 1;
                if (!(message.ip_v6 && typeof message.ip_v6.length === "number" || $util.isString(message.ip_v6)))
                    return "ip_v6: buffer expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.client_sessionid != null)
                message.client_sessionid = object.client_sessionid | 0;
            if (object.routing_appid != null)
                message.routing_appid = object.routing_appid >>> 0;
            if (object.jobid_source != null)
                if ($util.Long)
                    (message.jobid_source = $util.Long.fromValue(object.jobid_source)).unsigned = false;
                else if (typeof object.jobid_source === "string")
                    message.jobid_source = parseInt(object.jobid_source, 10);
                else if (typeof object.jobid_source === "number")
                    message.jobid_source = object.jobid_source;
                else if (typeof object.jobid_source === "object")
                    message.jobid_source = new $util.LongBits(object.jobid_source.low >>> 0, object.jobid_source.high >>> 0).toNumber();
            if (object.jobid_target != null)
                if ($util.Long)
                    (message.jobid_target = $util.Long.fromValue(object.jobid_target)).unsigned = false;
                else if (typeof object.jobid_target === "string")
                    message.jobid_target = parseInt(object.jobid_target, 10);
                else if (typeof object.jobid_target === "number")
                    message.jobid_target = object.jobid_target;
                else if (typeof object.jobid_target === "object")
                    message.jobid_target = new $util.LongBits(object.jobid_target.low >>> 0, object.jobid_target.high >>> 0).toNumber();
            if (object.target_job_name != null)
                message.target_job_name = String(object.target_job_name);
            if (object.seq_num != null)
                message.seq_num = object.seq_num | 0;
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            if (object.auth_account_flags != null)
                message.auth_account_flags = object.auth_account_flags >>> 0;
            if (object.token_source != null)
                message.token_source = object.token_source >>> 0;
            if (object.admin_spoofing_user != null)
                message.admin_spoofing_user = Boolean(object.admin_spoofing_user);
            if (object.transport_error != null)
                message.transport_error = object.transport_error | 0;
            if (object.messageid != null)
                if ($util.Long)
                    (message.messageid = $util.Long.fromValue(object.messageid)).unsigned = true;
                else if (typeof object.messageid === "string")
                    message.messageid = parseInt(object.messageid, 10);
                else if (typeof object.messageid === "number")
                    message.messageid = object.messageid;
                else if (typeof object.messageid === "object")
                    message.messageid = new $util.LongBits(object.messageid.low >>> 0, object.messageid.high >>> 0).toNumber(true);
            if (object.publisher_group_id != null)
                message.publisher_group_id = object.publisher_group_id >>> 0;
            if (object.sysid != null)
                message.sysid = object.sysid >>> 0;
            if (object.trace_tag != null)
                if ($util.Long)
                    (message.trace_tag = $util.Long.fromValue(object.trace_tag)).unsigned = true;
                else if (typeof object.trace_tag === "string")
                    message.trace_tag = parseInt(object.trace_tag, 10);
                else if (typeof object.trace_tag === "number")
                    message.trace_tag = object.trace_tag;
                else if (typeof object.trace_tag === "object")
                    message.trace_tag = new $util.LongBits(object.trace_tag.low >>> 0, object.trace_tag.high >>> 0).toNumber(true);
            if (object.webapi_key_id != null)
                message.webapi_key_id = object.webapi_key_id >>> 0;
            if (object.is_from_external_source != null)
                message.is_from_external_source = Boolean(object.is_from_external_source);
            if (object.forward_to_sysid) {
                if (!Array.isArray(object.forward_to_sysid))
                    throw TypeError(".CMsgProtoBufHeader.forward_to_sysid: array expected");
                message.forward_to_sysid = [];
                for (var i = 0; i < object.forward_to_sysid.length; ++i)
                    message.forward_to_sysid[i] = object.forward_to_sysid[i] >>> 0;
            }
            if (object.cm_sysid != null)
                message.cm_sysid = object.cm_sysid >>> 0;
            if (object.wg_token != null)
                message.wg_token = String(object.wg_token);
            if (object.launcher_type != null)
                message.launcher_type = object.launcher_type >>> 0;
            if (object.realm != null)
                message.realm = object.realm >>> 0;
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            if (object.ip_v6 != null)
                if (typeof object.ip_v6 === "string")
                    $util.base64.decode(object.ip_v6, message.ip_v6 = $util.newBuffer($util.base64.length(object.ip_v6)), 0);
                else if (object.ip_v6.length)
                    message.ip_v6 = object.ip_v6;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.forward_to_sysid = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.client_sessionid = 0;
                object.routing_appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_source = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_target = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.target_job_name = "";
                object.eresult = 2;
                object.error_message = "";
                object.auth_account_flags = 0;
                object.transport_error = 1;
                if ($util.Long) {
                    var long = new $util.Long(-1, -1, true);
                    object.messageid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.messageid = options.longs === String ? "18446744073709551615" : 18446744073709552000;
                object.publisher_group_id = 0;
                object.sysid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.trace_tag = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.trace_tag = options.longs === String ? "0" : 0;
                object.token_source = 0;
                object.admin_spoofing_user = false;
                object.seq_num = 0;
                object.webapi_key_id = 0;
                object.is_from_external_source = false;
                object.cm_sysid = 0;
                object.wg_token = "";
                object.launcher_type = 0;
                object.realm = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                object.client_sessionid = message.client_sessionid;
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                object.routing_appid = message.routing_appid;
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (typeof message.jobid_source === "number")
                    object.jobid_source = options.longs === String ? String(message.jobid_source) : message.jobid_source;
                else
                    object.jobid_source = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_source) : options.longs === Number ? new $util.LongBits(message.jobid_source.low >>> 0, message.jobid_source.high >>> 0).toNumber() : message.jobid_source;
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (typeof message.jobid_target === "number")
                    object.jobid_target = options.longs === String ? String(message.jobid_target) : message.jobid_target;
                else
                    object.jobid_target = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_target) : options.longs === Number ? new $util.LongBits(message.jobid_target.low >>> 0, message.jobid_target.high >>> 0).toNumber() : message.jobid_target;
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                object.target_job_name = message.target_job_name;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            if (message.ip != null && message.hasOwnProperty("ip")) {
                object.ip = message.ip;
                if (options.oneofs)
                    object.ip_addr = "ip";
            }
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                object.auth_account_flags = message.auth_account_flags;
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                object.transport_error = message.transport_error;
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (typeof message.messageid === "number")
                    object.messageid = options.longs === String ? String(message.messageid) : message.messageid;
                else
                    object.messageid = options.longs === String ? $util.Long.prototype.toString.call(message.messageid) : options.longs === Number ? new $util.LongBits(message.messageid.low >>> 0, message.messageid.high >>> 0).toNumber(true) : message.messageid;
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                object.publisher_group_id = message.publisher_group_id;
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                object.sysid = message.sysid;
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (typeof message.trace_tag === "number")
                    object.trace_tag = options.longs === String ? String(message.trace_tag) : message.trace_tag;
                else
                    object.trace_tag = options.longs === String ? $util.Long.prototype.toString.call(message.trace_tag) : options.longs === Number ? new $util.LongBits(message.trace_tag.low >>> 0, message.trace_tag.high >>> 0).toNumber(true) : message.trace_tag;
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                object.token_source = message.token_source;
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                object.admin_spoofing_user = message.admin_spoofing_user;
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                object.seq_num = message.seq_num;
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                object.webapi_key_id = message.webapi_key_id;
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                object.is_from_external_source = message.is_from_external_source;
            if (message.forward_to_sysid && message.forward_to_sysid.length) {
                object.forward_to_sysid = [];
                for (var j = 0; j < message.forward_to_sysid.length; ++j)
                    object.forward_to_sysid[j] = message.forward_to_sysid[j];
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                object.cm_sysid = message.cm_sysid;
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6")) {
                object.ip_v6 = options.bytes === String ? $util.base64.encode(message.ip_v6, 0, message.ip_v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.ip_v6) : message.ip_v6;
                if (options.oneofs)
                    object.ip_addr = "ip_v6";
            }
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                object.wg_token = message.wg_token;
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                object.launcher_type = message.launcher_type;
            if (message.realm != null && message.hasOwnProperty("realm"))
                object.realm = message.realm;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CMsgMulti = (function() {
    
        /**
         * Properties of a CMsgMulti.
         * @exports ICMsgMulti
         * @interface ICMsgMulti
         * @property {number|null} [size_unzipped] CMsgMulti size_unzipped
         * @property {Uint8Array|null} [message_body] CMsgMulti message_body
         */
    
        /**
         * Constructs a new CMsgMulti.
         * @exports CMsgMulti
         * @classdesc Represents a CMsgMulti.
         * @implements ICMsgMulti
         * @constructor
         * @param {ICMsgMulti=} [properties] Properties to set
         */
        function CMsgMulti(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgMulti size_unzipped.
         * @member {number} size_unzipped
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.size_unzipped = 0;
    
        /**
         * CMsgMulti message_body.
         * @member {Uint8Array} message_body
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.message_body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgMulti instance using the specified properties.
         * @function create
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti=} [properties] Properties to set
         * @returns {CMsgMulti} CMsgMulti instance
         */
        CMsgMulti.create = function create(properties) {
            return new CMsgMulti(properties);
        };
    
        /**
         * Encodes the specified CMsgMulti message. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encode
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.size_unzipped);
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.message_body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgMulti message, length delimited. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgMulti();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.size_unzipped = reader.uint32();
                    break;
                case 2:
                    message.message_body = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgMulti message.
         * @function verify
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgMulti.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                if (!$util.isInteger(message.size_unzipped))
                    return "size_unzipped: integer expected";
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                if (!(message.message_body && typeof message.message_body.length === "number" || $util.isString(message.message_body)))
                    return "message_body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgMulti message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgMulti} CMsgMulti
         */
        CMsgMulti.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgMulti)
                return object;
            var message = new $root.CMsgMulti();
            if (object.size_unzipped != null)
                message.size_unzipped = object.size_unzipped >>> 0;
            if (object.message_body != null)
                if (typeof object.message_body === "string")
                    $util.base64.decode(object.message_body, message.message_body = $util.newBuffer($util.base64.length(object.message_body)), 0);
                else if (object.message_body.length)
                    message.message_body = object.message_body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgMulti message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgMulti
         * @static
         * @param {CMsgMulti} message CMsgMulti
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgMulti.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.size_unzipped = 0;
                if (options.bytes === String)
                    object.message_body = "";
                else {
                    object.message_body = [];
                    if (options.bytes !== Array)
                        object.message_body = $util.newBuffer(object.message_body);
                }
            }
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                object.size_unzipped = message.size_unzipped;
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                object.message_body = options.bytes === String ? $util.base64.encode(message.message_body, 0, message.message_body.length) : options.bytes === Array ? Array.prototype.slice.call(message.message_body) : message.message_body;
            return object;
        };
    
        /**
         * Converts this CMsgMulti to JSON.
         * @function toJSON
         * @memberof CMsgMulti
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgMulti.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgMulti;
    })();
    
    $root.CMsgProtobufWrapped = (function() {
    
        /**
         * Properties of a CMsgProtobufWrapped.
         * @exports ICMsgProtobufWrapped
         * @interface ICMsgProtobufWrapped
         * @property {Uint8Array|null} [message_body] CMsgProtobufWrapped message_body
         */
    
        /**
         * Constructs a new CMsgProtobufWrapped.
         * @exports CMsgProtobufWrapped
         * @classdesc Represents a CMsgProtobufWrapped.
         * @implements ICMsgProtobufWrapped
         * @constructor
         * @param {ICMsgProtobufWrapped=} [properties] Properties to set
         */
        function CMsgProtobufWrapped(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtobufWrapped message_body.
         * @member {Uint8Array} message_body
         * @memberof CMsgProtobufWrapped
         * @instance
         */
        CMsgProtobufWrapped.prototype.message_body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgProtobufWrapped instance using the specified properties.
         * @function create
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped=} [properties] Properties to set
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped instance
         */
        CMsgProtobufWrapped.create = function create(properties) {
            return new CMsgProtobufWrapped(properties);
        };
    
        /**
         * Encodes the specified CMsgProtobufWrapped message. Does not implicitly {@link CMsgProtobufWrapped.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped} message CMsgProtobufWrapped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtobufWrapped.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.message_body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtobufWrapped message, length delimited. Does not implicitly {@link CMsgProtobufWrapped.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped} message CMsgProtobufWrapped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtobufWrapped.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtobufWrapped message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtobufWrapped.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtobufWrapped();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.message_body = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtobufWrapped message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtobufWrapped.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtobufWrapped message.
         * @function verify
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtobufWrapped.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                if (!(message.message_body && typeof message.message_body.length === "number" || $util.isString(message.message_body)))
                    return "message_body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtobufWrapped message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         */
        CMsgProtobufWrapped.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtobufWrapped)
                return object;
            var message = new $root.CMsgProtobufWrapped();
            if (object.message_body != null)
                if (typeof object.message_body === "string")
                    $util.base64.decode(object.message_body, message.message_body = $util.newBuffer($util.base64.length(object.message_body)), 0);
                else if (object.message_body.length)
                    message.message_body = object.message_body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtobufWrapped message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {CMsgProtobufWrapped} message CMsgProtobufWrapped
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtobufWrapped.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if (options.bytes === String)
                    object.message_body = "";
                else {
                    object.message_body = [];
                    if (options.bytes !== Array)
                        object.message_body = $util.newBuffer(object.message_body);
                }
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                object.message_body = options.bytes === String ? $util.base64.encode(message.message_body, 0, message.message_body.length) : options.bytes === Array ? Array.prototype.slice.call(message.message_body) : message.message_body;
            return object;
        };
    
        /**
         * Converts this CMsgProtobufWrapped to JSON.
         * @function toJSON
         * @memberof CMsgProtobufWrapped
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtobufWrapped.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgProtobufWrapped;
    })();
    
    $root.CMsgAuthTicket = (function() {
    
        /**
         * Properties of a CMsgAuthTicket.
         * @exports ICMsgAuthTicket
         * @interface ICMsgAuthTicket
         * @property {number|null} [estate] CMsgAuthTicket estate
         * @property {number|null} [eresult] CMsgAuthTicket eresult
         * @property {number|Long|null} [steamid] CMsgAuthTicket steamid
         * @property {number|Long|null} [gameid] CMsgAuthTicket gameid
         * @property {number|null} [h_steam_pipe] CMsgAuthTicket h_steam_pipe
         * @property {number|null} [ticket_crc] CMsgAuthTicket ticket_crc
         * @property {Uint8Array|null} [ticket] CMsgAuthTicket ticket
         */
    
        /**
         * Constructs a new CMsgAuthTicket.
         * @exports CMsgAuthTicket
         * @classdesc Represents a CMsgAuthTicket.
         * @implements ICMsgAuthTicket
         * @constructor
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         */
        function CMsgAuthTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAuthTicket estate.
         * @member {number} estate
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.estate = 0;
    
        /**
         * CMsgAuthTicket eresult.
         * @member {number} eresult
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.eresult = 2;
    
        /**
         * CMsgAuthTicket steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket gameid.
         * @member {number|Long} gameid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket h_steam_pipe.
         * @member {number} h_steam_pipe
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.h_steam_pipe = 0;
    
        /**
         * CMsgAuthTicket ticket_crc.
         * @member {number} ticket_crc
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket_crc = 0;
    
        /**
         * CMsgAuthTicket ticket.
         * @member {Uint8Array} ticket
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgAuthTicket instance using the specified properties.
         * @function create
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         * @returns {CMsgAuthTicket} CMsgAuthTicket instance
         */
        CMsgAuthTicket.create = function create(properties) {
            return new CMsgAuthTicket(properties);
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encode
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.estate != null && message.hasOwnProperty("estate"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.estate);
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid);
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.gameid);
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.h_steam_pipe);
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ticket_crc);
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.ticket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message, length delimited. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAuthTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.estate = reader.uint32();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.steamid = reader.fixed64();
                    break;
                case 4:
                    message.gameid = reader.fixed64();
                    break;
                case 5:
                    message.h_steam_pipe = reader.uint32();
                    break;
                case 6:
                    message.ticket_crc = reader.uint32();
                    break;
                case 7:
                    message.ticket = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAuthTicket message.
         * @function verify
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAuthTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.estate != null && message.hasOwnProperty("estate"))
                if (!$util.isInteger(message.estate))
                    return "estate: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                if (!$util.isInteger(message.h_steam_pipe))
                    return "h_steam_pipe: integer expected";
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                if (!$util.isInteger(message.ticket_crc))
                    return "ticket_crc: integer expected";
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                if (!(message.ticket && typeof message.ticket.length === "number" || $util.isString(message.ticket)))
                    return "ticket: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAuthTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         */
        CMsgAuthTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAuthTicket)
                return object;
            var message = new $root.CMsgAuthTicket();
            if (object.estate != null)
                message.estate = object.estate >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = false;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber();
            if (object.h_steam_pipe != null)
                message.h_steam_pipe = object.h_steam_pipe >>> 0;
            if (object.ticket_crc != null)
                message.ticket_crc = object.ticket_crc >>> 0;
            if (object.ticket != null)
                if (typeof object.ticket === "string")
                    $util.base64.decode(object.ticket, message.ticket = $util.newBuffer($util.base64.length(object.ticket)), 0);
                else if (object.ticket.length)
                    message.ticket = object.ticket;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAuthTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {CMsgAuthTicket} message CMsgAuthTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAuthTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.estate = 0;
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                object.h_steam_pipe = 0;
                object.ticket_crc = 0;
                if (options.bytes === String)
                    object.ticket = "";
                else {
                    object.ticket = [];
                    if (options.bytes !== Array)
                        object.ticket = $util.newBuffer(object.ticket);
                }
            }
            if (message.estate != null && message.hasOwnProperty("estate"))
                object.estate = message.estate;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber() : message.gameid;
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                object.h_steam_pipe = message.h_steam_pipe;
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                object.ticket_crc = message.ticket_crc;
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                object.ticket = options.bytes === String ? $util.base64.encode(message.ticket, 0, message.ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.ticket) : message.ticket;
            return object;
        };
    
        /**
         * Converts this CMsgAuthTicket to JSON.
         * @function toJSON
         * @memberof CMsgAuthTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAuthTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAuthTicket;
    })();
    
    $root.CCDDBAppDetailCommon = (function() {
    
        /**
         * Properties of a CCDDBAppDetailCommon.
         * @exports ICCDDBAppDetailCommon
         * @interface ICCDDBAppDetailCommon
         * @property {number|null} [appid] CCDDBAppDetailCommon appid
         * @property {string|null} [name] CCDDBAppDetailCommon name
         * @property {string|null} [icon] CCDDBAppDetailCommon icon
         * @property {string|null} [logo] CCDDBAppDetailCommon logo
         * @property {string|null} [logo_small] CCDDBAppDetailCommon logo_small
         * @property {boolean|null} [tool] CCDDBAppDetailCommon tool
         * @property {boolean|null} [demo] CCDDBAppDetailCommon demo
         * @property {boolean|null} [media] CCDDBAppDetailCommon media
         * @property {boolean|null} [community_visible_stats] CCDDBAppDetailCommon community_visible_stats
         * @property {string|null} [friendly_name] CCDDBAppDetailCommon friendly_name
         * @property {string|null} [propagation] CCDDBAppDetailCommon propagation
         * @property {boolean|null} [has_adult_content] CCDDBAppDetailCommon has_adult_content
         * @property {boolean|null} [is_visible_in_steam_china] CCDDBAppDetailCommon is_visible_in_steam_china
         */
    
        /**
         * Constructs a new CCDDBAppDetailCommon.
         * @exports CCDDBAppDetailCommon
         * @classdesc Represents a CCDDBAppDetailCommon.
         * @implements ICCDDBAppDetailCommon
         * @constructor
         * @param {ICCDDBAppDetailCommon=} [properties] Properties to set
         */
        function CCDDBAppDetailCommon(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCDDBAppDetailCommon appid.
         * @member {number} appid
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.appid = 0;
    
        /**
         * CCDDBAppDetailCommon name.
         * @member {string} name
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.name = "";
    
        /**
         * CCDDBAppDetailCommon icon.
         * @member {string} icon
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.icon = "";
    
        /**
         * CCDDBAppDetailCommon logo.
         * @member {string} logo
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.logo = "";
    
        /**
         * CCDDBAppDetailCommon logo_small.
         * @member {string} logo_small
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.logo_small = "";
    
        /**
         * CCDDBAppDetailCommon tool.
         * @member {boolean} tool
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.tool = false;
    
        /**
         * CCDDBAppDetailCommon demo.
         * @member {boolean} demo
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.demo = false;
    
        /**
         * CCDDBAppDetailCommon media.
         * @member {boolean} media
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.media = false;
    
        /**
         * CCDDBAppDetailCommon community_visible_stats.
         * @member {boolean} community_visible_stats
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.community_visible_stats = false;
    
        /**
         * CCDDBAppDetailCommon friendly_name.
         * @member {string} friendly_name
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.friendly_name = "";
    
        /**
         * CCDDBAppDetailCommon propagation.
         * @member {string} propagation
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.propagation = "";
    
        /**
         * CCDDBAppDetailCommon has_adult_content.
         * @member {boolean} has_adult_content
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.has_adult_content = false;
    
        /**
         * CCDDBAppDetailCommon is_visible_in_steam_china.
         * @member {boolean} is_visible_in_steam_china
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.is_visible_in_steam_china = false;
    
        /**
         * Creates a new CCDDBAppDetailCommon instance using the specified properties.
         * @function create
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon=} [properties] Properties to set
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon instance
         */
        CCDDBAppDetailCommon.create = function create(properties) {
            return new CCDDBAppDetailCommon(properties);
        };
    
        /**
         * Encodes the specified CCDDBAppDetailCommon message. Does not implicitly {@link CCDDBAppDetailCommon.verify|verify} messages.
         * @function encode
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon} message CCDDBAppDetailCommon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCDDBAppDetailCommon.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.name != null && message.hasOwnProperty("name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.icon != null && message.hasOwnProperty("icon"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.icon);
            if (message.logo != null && message.hasOwnProperty("logo"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.logo);
            if (message.logo_small != null && message.hasOwnProperty("logo_small"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.logo_small);
            if (message.tool != null && message.hasOwnProperty("tool"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.tool);
            if (message.demo != null && message.hasOwnProperty("demo"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.demo);
            if (message.media != null && message.hasOwnProperty("media"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.media);
            if (message.community_visible_stats != null && message.hasOwnProperty("community_visible_stats"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.community_visible_stats);
            if (message.friendly_name != null && message.hasOwnProperty("friendly_name"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.friendly_name);
            if (message.propagation != null && message.hasOwnProperty("propagation"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.propagation);
            if (message.has_adult_content != null && message.hasOwnProperty("has_adult_content"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.has_adult_content);
            if (message.is_visible_in_steam_china != null && message.hasOwnProperty("is_visible_in_steam_china"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.is_visible_in_steam_china);
            return writer;
        };
    
        /**
         * Encodes the specified CCDDBAppDetailCommon message, length delimited. Does not implicitly {@link CCDDBAppDetailCommon.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon} message CCDDBAppDetailCommon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCDDBAppDetailCommon.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCDDBAppDetailCommon message from the specified reader or buffer.
         * @function decode
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCDDBAppDetailCommon.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCDDBAppDetailCommon();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.icon = reader.string();
                    break;
                case 4:
                    message.logo = reader.string();
                    break;
                case 5:
                    message.logo_small = reader.string();
                    break;
                case 6:
                    message.tool = reader.bool();
                    break;
                case 7:
                    message.demo = reader.bool();
                    break;
                case 8:
                    message.media = reader.bool();
                    break;
                case 9:
                    message.community_visible_stats = reader.bool();
                    break;
                case 10:
                    message.friendly_name = reader.string();
                    break;
                case 11:
                    message.propagation = reader.string();
                    break;
                case 12:
                    message.has_adult_content = reader.bool();
                    break;
                case 13:
                    message.is_visible_in_steam_china = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCDDBAppDetailCommon message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCDDBAppDetailCommon.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCDDBAppDetailCommon message.
         * @function verify
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCDDBAppDetailCommon.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.icon != null && message.hasOwnProperty("icon"))
                if (!$util.isString(message.icon))
                    return "icon: string expected";
            if (message.logo != null && message.hasOwnProperty("logo"))
                if (!$util.isString(message.logo))
                    return "logo: string expected";
            if (message.logo_small != null && message.hasOwnProperty("logo_small"))
                if (!$util.isString(message.logo_small))
                    return "logo_small: string expected";
            if (message.tool != null && message.hasOwnProperty("tool"))
                if (typeof message.tool !== "boolean")
                    return "tool: boolean expected";
            if (message.demo != null && message.hasOwnProperty("demo"))
                if (typeof message.demo !== "boolean")
                    return "demo: boolean expected";
            if (message.media != null && message.hasOwnProperty("media"))
                if (typeof message.media !== "boolean")
                    return "media: boolean expected";
            if (message.community_visible_stats != null && message.hasOwnProperty("community_visible_stats"))
                if (typeof message.community_visible_stats !== "boolean")
                    return "community_visible_stats: boolean expected";
            if (message.friendly_name != null && message.hasOwnProperty("friendly_name"))
                if (!$util.isString(message.friendly_name))
                    return "friendly_name: string expected";
            if (message.propagation != null && message.hasOwnProperty("propagation"))
                if (!$util.isString(message.propagation))
                    return "propagation: string expected";
            if (message.has_adult_content != null && message.hasOwnProperty("has_adult_content"))
                if (typeof message.has_adult_content !== "boolean")
                    return "has_adult_content: boolean expected";
            if (message.is_visible_in_steam_china != null && message.hasOwnProperty("is_visible_in_steam_china"))
                if (typeof message.is_visible_in_steam_china !== "boolean")
                    return "is_visible_in_steam_china: boolean expected";
            return null;
        };
    
        /**
         * Creates a CCDDBAppDetailCommon message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         */
        CCDDBAppDetailCommon.fromObject = function fromObject(object) {
            if (object instanceof $root.CCDDBAppDetailCommon)
                return object;
            var message = new $root.CCDDBAppDetailCommon();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            if (object.icon != null)
                message.icon = String(object.icon);
            if (object.logo != null)
                message.logo = String(object.logo);
            if (object.logo_small != null)
                message.logo_small = String(object.logo_small);
            if (object.tool != null)
                message.tool = Boolean(object.tool);
            if (object.demo != null)
                message.demo = Boolean(object.demo);
            if (object.media != null)
                message.media = Boolean(object.media);
            if (object.community_visible_stats != null)
                message.community_visible_stats = Boolean(object.community_visible_stats);
            if (object.friendly_name != null)
                message.friendly_name = String(object.friendly_name);
            if (object.propagation != null)
                message.propagation = String(object.propagation);
            if (object.has_adult_content != null)
                message.has_adult_content = Boolean(object.has_adult_content);
            if (object.is_visible_in_steam_china != null)
                message.is_visible_in_steam_china = Boolean(object.is_visible_in_steam_china);
            return message;
        };
    
        /**
         * Creates a plain object from a CCDDBAppDetailCommon message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {CCDDBAppDetailCommon} message CCDDBAppDetailCommon
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCDDBAppDetailCommon.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.name = "";
                object.icon = "";
                object.logo = "";
                object.logo_small = "";
                object.tool = false;
                object.demo = false;
                object.media = false;
                object.community_visible_stats = false;
                object.friendly_name = "";
                object.propagation = "";
                object.has_adult_content = false;
                object.is_visible_in_steam_china = false;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.icon != null && message.hasOwnProperty("icon"))
                object.icon = message.icon;
            if (message.logo != null && message.hasOwnProperty("logo"))
                object.logo = message.logo;
            if (message.logo_small != null && message.hasOwnProperty("logo_small"))
                object.logo_small = message.logo_small;
            if (message.tool != null && message.hasOwnProperty("tool"))
                object.tool = message.tool;
            if (message.demo != null && message.hasOwnProperty("demo"))
                object.demo = message.demo;
            if (message.media != null && message.hasOwnProperty("media"))
                object.media = message.media;
            if (message.community_visible_stats != null && message.hasOwnProperty("community_visible_stats"))
                object.community_visible_stats = message.community_visible_stats;
            if (message.friendly_name != null && message.hasOwnProperty("friendly_name"))
                object.friendly_name = message.friendly_name;
            if (message.propagation != null && message.hasOwnProperty("propagation"))
                object.propagation = message.propagation;
            if (message.has_adult_content != null && message.hasOwnProperty("has_adult_content"))
                object.has_adult_content = message.has_adult_content;
            if (message.is_visible_in_steam_china != null && message.hasOwnProperty("is_visible_in_steam_china"))
                object.is_visible_in_steam_china = message.is_visible_in_steam_china;
            return object;
        };
    
        /**
         * Converts this CCDDBAppDetailCommon to JSON.
         * @function toJSON
         * @memberof CCDDBAppDetailCommon
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCDDBAppDetailCommon.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCDDBAppDetailCommon;
    })();
    
    $root.CMsgAppRights = (function() {
    
        /**
         * Properties of a CMsgAppRights.
         * @exports ICMsgAppRights
         * @interface ICMsgAppRights
         * @property {boolean|null} [edit_info] CMsgAppRights edit_info
         * @property {boolean|null} [publish] CMsgAppRights publish
         * @property {boolean|null} [view_error_data] CMsgAppRights view_error_data
         * @property {boolean|null} [download] CMsgAppRights download
         * @property {boolean|null} [upload_cdkeys] CMsgAppRights upload_cdkeys
         * @property {boolean|null} [generate_cdkeys] CMsgAppRights generate_cdkeys
         * @property {boolean|null} [view_financials] CMsgAppRights view_financials
         * @property {boolean|null} [manage_ceg] CMsgAppRights manage_ceg
         * @property {boolean|null} [manage_signing] CMsgAppRights manage_signing
         * @property {boolean|null} [manage_cdkeys] CMsgAppRights manage_cdkeys
         * @property {boolean|null} [edit_marketing] CMsgAppRights edit_marketing
         * @property {boolean|null} [economy_support] CMsgAppRights economy_support
         * @property {boolean|null} [economy_support_supervisor] CMsgAppRights economy_support_supervisor
         * @property {boolean|null} [manage_pricing] CMsgAppRights manage_pricing
         * @property {boolean|null} [broadcast_live] CMsgAppRights broadcast_live
         * @property {boolean|null} [view_marketing_traffic] CMsgAppRights view_marketing_traffic
         * @property {boolean|null} [edit_store_display_content] CMsgAppRights edit_store_display_content
         */
    
        /**
         * Constructs a new CMsgAppRights.
         * @exports CMsgAppRights
         * @classdesc Represents a CMsgAppRights.
         * @implements ICMsgAppRights
         * @constructor
         * @param {ICMsgAppRights=} [properties] Properties to set
         */
        function CMsgAppRights(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAppRights edit_info.
         * @member {boolean} edit_info
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.edit_info = false;
    
        /**
         * CMsgAppRights publish.
         * @member {boolean} publish
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.publish = false;
    
        /**
         * CMsgAppRights view_error_data.
         * @member {boolean} view_error_data
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_error_data = false;
    
        /**
         * CMsgAppRights download.
         * @member {boolean} download
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.download = false;
    
        /**
         * CMsgAppRights upload_cdkeys.
         * @member {boolean} upload_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.upload_cdkeys = false;
    
        /**
         * CMsgAppRights generate_cdkeys.
         * @member {boolean} generate_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.generate_cdkeys = false;
    
        /**
         * CMsgAppRights view_financials.
         * @member {boolean} view_financials
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_financials = false;
    
        /**
         * CMsgAppRights manage_ceg.
         * @member {boolean} manage_ceg
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_ceg = false;
    
        /**
         * CMsgAppRights manage_signing.
         * @member {boolean} manage_signing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_signing = false;
    
        /**
         * CMsgAppRights manage_cdkeys.
         * @member {boolean} manage_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_cdkeys = false;
    
        /**
         * CMsgAppRights edit_marketing.
         * @member {boolean} edit_marketing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.edit_marketing = false;
    
        /**
         * CMsgAppRights economy_support.
         * @member {boolean} economy_support
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.economy_support = false;
    
        /**
         * CMsgAppRights economy_support_supervisor.
         * @member {boolean} economy_support_supervisor
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.economy_support_supervisor = false;
    
        /**
         * CMsgAppRights manage_pricing.
         * @member {boolean} manage_pricing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_pricing = false;
    
        /**
         * CMsgAppRights broadcast_live.
         * @member {boolean} broadcast_live
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.broadcast_live = false;
    
        /**
         * CMsgAppRights view_marketing_traffic.
         * @member {boolean} view_marketing_traffic
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_marketing_traffic = false;
    
        /**
         * CMsgAppRights edit_store_display_content.
         * @member {boolean} edit_store_display_content
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.edit_store_display_content = false;
    
        /**
         * Creates a new CMsgAppRights instance using the specified properties.
         * @function create
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights=} [properties] Properties to set
         * @returns {CMsgAppRights} CMsgAppRights instance
         */
        CMsgAppRights.create = function create(properties) {
            return new CMsgAppRights(properties);
        };
    
        /**
         * Encodes the specified CMsgAppRights message. Does not implicitly {@link CMsgAppRights.verify|verify} messages.
         * @function encode
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights} message CMsgAppRights message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAppRights.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.edit_info != null && message.hasOwnProperty("edit_info"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.edit_info);
            if (message.publish != null && message.hasOwnProperty("publish"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.publish);
            if (message.view_error_data != null && message.hasOwnProperty("view_error_data"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.view_error_data);
            if (message.download != null && message.hasOwnProperty("download"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.download);
            if (message.upload_cdkeys != null && message.hasOwnProperty("upload_cdkeys"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.upload_cdkeys);
            if (message.generate_cdkeys != null && message.hasOwnProperty("generate_cdkeys"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.generate_cdkeys);
            if (message.view_financials != null && message.hasOwnProperty("view_financials"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.view_financials);
            if (message.manage_ceg != null && message.hasOwnProperty("manage_ceg"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.manage_ceg);
            if (message.manage_signing != null && message.hasOwnProperty("manage_signing"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.manage_signing);
            if (message.manage_cdkeys != null && message.hasOwnProperty("manage_cdkeys"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.manage_cdkeys);
            if (message.edit_marketing != null && message.hasOwnProperty("edit_marketing"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.edit_marketing);
            if (message.economy_support != null && message.hasOwnProperty("economy_support"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.economy_support);
            if (message.economy_support_supervisor != null && message.hasOwnProperty("economy_support_supervisor"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.economy_support_supervisor);
            if (message.manage_pricing != null && message.hasOwnProperty("manage_pricing"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.manage_pricing);
            if (message.broadcast_live != null && message.hasOwnProperty("broadcast_live"))
                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.broadcast_live);
            if (message.view_marketing_traffic != null && message.hasOwnProperty("view_marketing_traffic"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.view_marketing_traffic);
            if (message.edit_store_display_content != null && message.hasOwnProperty("edit_store_display_content"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.edit_store_display_content);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAppRights message, length delimited. Does not implicitly {@link CMsgAppRights.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights} message CMsgAppRights message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAppRights.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAppRights message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAppRights
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAppRights} CMsgAppRights
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAppRights.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAppRights();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.edit_info = reader.bool();
                    break;
                case 2:
                    message.publish = reader.bool();
                    break;
                case 3:
                    message.view_error_data = reader.bool();
                    break;
                case 4:
                    message.download = reader.bool();
                    break;
                case 5:
                    message.upload_cdkeys = reader.bool();
                    break;
                case 6:
                    message.generate_cdkeys = reader.bool();
                    break;
                case 7:
                    message.view_financials = reader.bool();
                    break;
                case 8:
                    message.manage_ceg = reader.bool();
                    break;
                case 9:
                    message.manage_signing = reader.bool();
                    break;
                case 10:
                    message.manage_cdkeys = reader.bool();
                    break;
                case 11:
                    message.edit_marketing = reader.bool();
                    break;
                case 12:
                    message.economy_support = reader.bool();
                    break;
                case 13:
                    message.economy_support_supervisor = reader.bool();
                    break;
                case 14:
                    message.manage_pricing = reader.bool();
                    break;
                case 15:
                    message.broadcast_live = reader.bool();
                    break;
                case 16:
                    message.view_marketing_traffic = reader.bool();
                    break;
                case 17:
                    message.edit_store_display_content = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAppRights message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAppRights
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAppRights} CMsgAppRights
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAppRights.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAppRights message.
         * @function verify
         * @memberof CMsgAppRights
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAppRights.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.edit_info != null && message.hasOwnProperty("edit_info"))
                if (typeof message.edit_info !== "boolean")
                    return "edit_info: boolean expected";
            if (message.publish != null && message.hasOwnProperty("publish"))
                if (typeof message.publish !== "boolean")
                    return "publish: boolean expected";
            if (message.view_error_data != null && message.hasOwnProperty("view_error_data"))
                if (typeof message.view_error_data !== "boolean")
                    return "view_error_data: boolean expected";
            if (message.download != null && message.hasOwnProperty("download"))
                if (typeof message.download !== "boolean")
                    return "download: boolean expected";
            if (message.upload_cdkeys != null && message.hasOwnProperty("upload_cdkeys"))
                if (typeof message.upload_cdkeys !== "boolean")
                    return "upload_cdkeys: boolean expected";
            if (message.generate_cdkeys != null && message.hasOwnProperty("generate_cdkeys"))
                if (typeof message.generate_cdkeys !== "boolean")
                    return "generate_cdkeys: boolean expected";
            if (message.view_financials != null && message.hasOwnProperty("view_financials"))
                if (typeof message.view_financials !== "boolean")
                    return "view_financials: boolean expected";
            if (message.manage_ceg != null && message.hasOwnProperty("manage_ceg"))
                if (typeof message.manage_ceg !== "boolean")
                    return "manage_ceg: boolean expected";
            if (message.manage_signing != null && message.hasOwnProperty("manage_signing"))
                if (typeof message.manage_signing !== "boolean")
                    return "manage_signing: boolean expected";
            if (message.manage_cdkeys != null && message.hasOwnProperty("manage_cdkeys"))
                if (typeof message.manage_cdkeys !== "boolean")
                    return "manage_cdkeys: boolean expected";
            if (message.edit_marketing != null && message.hasOwnProperty("edit_marketing"))
                if (typeof message.edit_marketing !== "boolean")
                    return "edit_marketing: boolean expected";
            if (message.economy_support != null && message.hasOwnProperty("economy_support"))
                if (typeof message.economy_support !== "boolean")
                    return "economy_support: boolean expected";
            if (message.economy_support_supervisor != null && message.hasOwnProperty("economy_support_supervisor"))
                if (typeof message.economy_support_supervisor !== "boolean")
                    return "economy_support_supervisor: boolean expected";
            if (message.manage_pricing != null && message.hasOwnProperty("manage_pricing"))
                if (typeof message.manage_pricing !== "boolean")
                    return "manage_pricing: boolean expected";
            if (message.broadcast_live != null && message.hasOwnProperty("broadcast_live"))
                if (typeof message.broadcast_live !== "boolean")
                    return "broadcast_live: boolean expected";
            if (message.view_marketing_traffic != null && message.hasOwnProperty("view_marketing_traffic"))
                if (typeof message.view_marketing_traffic !== "boolean")
                    return "view_marketing_traffic: boolean expected";
            if (message.edit_store_display_content != null && message.hasOwnProperty("edit_store_display_content"))
                if (typeof message.edit_store_display_content !== "boolean")
                    return "edit_store_display_content: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgAppRights message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAppRights
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAppRights} CMsgAppRights
         */
        CMsgAppRights.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAppRights)
                return object;
            var message = new $root.CMsgAppRights();
            if (object.edit_info != null)
                message.edit_info = Boolean(object.edit_info);
            if (object.publish != null)
                message.publish = Boolean(object.publish);
            if (object.view_error_data != null)
                message.view_error_data = Boolean(object.view_error_data);
            if (object.download != null)
                message.download = Boolean(object.download);
            if (object.upload_cdkeys != null)
                message.upload_cdkeys = Boolean(object.upload_cdkeys);
            if (object.generate_cdkeys != null)
                message.generate_cdkeys = Boolean(object.generate_cdkeys);
            if (object.view_financials != null)
                message.view_financials = Boolean(object.view_financials);
            if (object.manage_ceg != null)
                message.manage_ceg = Boolean(object.manage_ceg);
            if (object.manage_signing != null)
                message.manage_signing = Boolean(object.manage_signing);
            if (object.manage_cdkeys != null)
                message.manage_cdkeys = Boolean(object.manage_cdkeys);
            if (object.edit_marketing != null)
                message.edit_marketing = Boolean(object.edit_marketing);
            if (object.economy_support != null)
                message.economy_support = Boolean(object.economy_support);
            if (object.economy_support_supervisor != null)
                message.economy_support_supervisor = Boolean(object.economy_support_supervisor);
            if (object.manage_pricing != null)
                message.manage_pricing = Boolean(object.manage_pricing);
            if (object.broadcast_live != null)
                message.broadcast_live = Boolean(object.broadcast_live);
            if (object.view_marketing_traffic != null)
                message.view_marketing_traffic = Boolean(object.view_marketing_traffic);
            if (object.edit_store_display_content != null)
                message.edit_store_display_content = Boolean(object.edit_store_display_content);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAppRights message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAppRights
         * @static
         * @param {CMsgAppRights} message CMsgAppRights
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAppRights.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.edit_info = false;
                object.publish = false;
                object.view_error_data = false;
                object.download = false;
                object.upload_cdkeys = false;
                object.generate_cdkeys = false;
                object.view_financials = false;
                object.manage_ceg = false;
                object.manage_signing = false;
                object.manage_cdkeys = false;
                object.edit_marketing = false;
                object.economy_support = false;
                object.economy_support_supervisor = false;
                object.manage_pricing = false;
                object.broadcast_live = false;
                object.view_marketing_traffic = false;
                object.edit_store_display_content = false;
            }
            if (message.edit_info != null && message.hasOwnProperty("edit_info"))
                object.edit_info = message.edit_info;
            if (message.publish != null && message.hasOwnProperty("publish"))
                object.publish = message.publish;
            if (message.view_error_data != null && message.hasOwnProperty("view_error_data"))
                object.view_error_data = message.view_error_data;
            if (message.download != null && message.hasOwnProperty("download"))
                object.download = message.download;
            if (message.upload_cdkeys != null && message.hasOwnProperty("upload_cdkeys"))
                object.upload_cdkeys = message.upload_cdkeys;
            if (message.generate_cdkeys != null && message.hasOwnProperty("generate_cdkeys"))
                object.generate_cdkeys = message.generate_cdkeys;
            if (message.view_financials != null && message.hasOwnProperty("view_financials"))
                object.view_financials = message.view_financials;
            if (message.manage_ceg != null && message.hasOwnProperty("manage_ceg"))
                object.manage_ceg = message.manage_ceg;
            if (message.manage_signing != null && message.hasOwnProperty("manage_signing"))
                object.manage_signing = message.manage_signing;
            if (message.manage_cdkeys != null && message.hasOwnProperty("manage_cdkeys"))
                object.manage_cdkeys = message.manage_cdkeys;
            if (message.edit_marketing != null && message.hasOwnProperty("edit_marketing"))
                object.edit_marketing = message.edit_marketing;
            if (message.economy_support != null && message.hasOwnProperty("economy_support"))
                object.economy_support = message.economy_support;
            if (message.economy_support_supervisor != null && message.hasOwnProperty("economy_support_supervisor"))
                object.economy_support_supervisor = message.economy_support_supervisor;
            if (message.manage_pricing != null && message.hasOwnProperty("manage_pricing"))
                object.manage_pricing = message.manage_pricing;
            if (message.broadcast_live != null && message.hasOwnProperty("broadcast_live"))
                object.broadcast_live = message.broadcast_live;
            if (message.view_marketing_traffic != null && message.hasOwnProperty("view_marketing_traffic"))
                object.view_marketing_traffic = message.view_marketing_traffic;
            if (message.edit_store_display_content != null && message.hasOwnProperty("edit_store_display_content"))
                object.edit_store_display_content = message.edit_store_display_content;
            return object;
        };
    
        /**
         * Converts this CMsgAppRights to JSON.
         * @function toJSON
         * @memberof CMsgAppRights
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAppRights.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAppRights;
    })();
    
    $root.CCuratorPreferences = (function() {
    
        /**
         * Properties of a CCuratorPreferences.
         * @exports ICCuratorPreferences
         * @interface ICCuratorPreferences
         * @property {number|null} [supported_languages] CCuratorPreferences supported_languages
         * @property {boolean|null} [platform_windows] CCuratorPreferences platform_windows
         * @property {boolean|null} [platform_mac] CCuratorPreferences platform_mac
         * @property {boolean|null} [platform_linux] CCuratorPreferences platform_linux
         * @property {boolean|null} [vr_content] CCuratorPreferences vr_content
         * @property {boolean|null} [adult_content_violence] CCuratorPreferences adult_content_violence
         * @property {boolean|null} [adult_content_sex] CCuratorPreferences adult_content_sex
         * @property {number|null} [timestamp_updated] CCuratorPreferences timestamp_updated
         * @property {Array.<number>|null} [tagids_curated] CCuratorPreferences tagids_curated
         * @property {Array.<number>|null} [tagids_filtered] CCuratorPreferences tagids_filtered
         * @property {string|null} [website_title] CCuratorPreferences website_title
         * @property {string|null} [website_url] CCuratorPreferences website_url
         * @property {string|null} [discussion_url] CCuratorPreferences discussion_url
         * @property {boolean|null} [show_broadcast] CCuratorPreferences show_broadcast
         */
    
        /**
         * Constructs a new CCuratorPreferences.
         * @exports CCuratorPreferences
         * @classdesc Represents a CCuratorPreferences.
         * @implements ICCuratorPreferences
         * @constructor
         * @param {ICCuratorPreferences=} [properties] Properties to set
         */
        function CCuratorPreferences(properties) {
            this.tagids_curated = [];
            this.tagids_filtered = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCuratorPreferences supported_languages.
         * @member {number} supported_languages
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.supported_languages = 0;
    
        /**
         * CCuratorPreferences platform_windows.
         * @member {boolean} platform_windows
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_windows = false;
    
        /**
         * CCuratorPreferences platform_mac.
         * @member {boolean} platform_mac
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_mac = false;
    
        /**
         * CCuratorPreferences platform_linux.
         * @member {boolean} platform_linux
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_linux = false;
    
        /**
         * CCuratorPreferences vr_content.
         * @member {boolean} vr_content
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.vr_content = false;
    
        /**
         * CCuratorPreferences adult_content_violence.
         * @member {boolean} adult_content_violence
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.adult_content_violence = false;
    
        /**
         * CCuratorPreferences adult_content_sex.
         * @member {boolean} adult_content_sex
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.adult_content_sex = false;
    
        /**
         * CCuratorPreferences timestamp_updated.
         * @member {number} timestamp_updated
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.timestamp_updated = 0;
    
        /**
         * CCuratorPreferences tagids_curated.
         * @member {Array.<number>} tagids_curated
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.tagids_curated = $util.emptyArray;
    
        /**
         * CCuratorPreferences tagids_filtered.
         * @member {Array.<number>} tagids_filtered
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.tagids_filtered = $util.emptyArray;
    
        /**
         * CCuratorPreferences website_title.
         * @member {string} website_title
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.website_title = "";
    
        /**
         * CCuratorPreferences website_url.
         * @member {string} website_url
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.website_url = "";
    
        /**
         * CCuratorPreferences discussion_url.
         * @member {string} discussion_url
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.discussion_url = "";
    
        /**
         * CCuratorPreferences show_broadcast.
         * @member {boolean} show_broadcast
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.show_broadcast = false;
    
        /**
         * Creates a new CCuratorPreferences instance using the specified properties.
         * @function create
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences=} [properties] Properties to set
         * @returns {CCuratorPreferences} CCuratorPreferences instance
         */
        CCuratorPreferences.create = function create(properties) {
            return new CCuratorPreferences(properties);
        };
    
        /**
         * Encodes the specified CCuratorPreferences message. Does not implicitly {@link CCuratorPreferences.verify|verify} messages.
         * @function encode
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences} message CCuratorPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCuratorPreferences.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.supported_languages != null && message.hasOwnProperty("supported_languages"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.supported_languages);
            if (message.platform_windows != null && message.hasOwnProperty("platform_windows"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.platform_windows);
            if (message.platform_mac != null && message.hasOwnProperty("platform_mac"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.platform_mac);
            if (message.platform_linux != null && message.hasOwnProperty("platform_linux"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.platform_linux);
            if (message.vr_content != null && message.hasOwnProperty("vr_content"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.vr_content);
            if (message.adult_content_violence != null && message.hasOwnProperty("adult_content_violence"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.adult_content_violence);
            if (message.adult_content_sex != null && message.hasOwnProperty("adult_content_sex"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.adult_content_sex);
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.timestamp_updated);
            if (message.tagids_curated != null && message.tagids_curated.length)
                for (var i = 0; i < message.tagids_curated.length; ++i)
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.tagids_curated[i]);
            if (message.tagids_filtered != null && message.tagids_filtered.length)
                for (var i = 0; i < message.tagids_filtered.length; ++i)
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.tagids_filtered[i]);
            if (message.website_title != null && message.hasOwnProperty("website_title"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.website_title);
            if (message.website_url != null && message.hasOwnProperty("website_url"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.website_url);
            if (message.discussion_url != null && message.hasOwnProperty("discussion_url"))
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.discussion_url);
            if (message.show_broadcast != null && message.hasOwnProperty("show_broadcast"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.show_broadcast);
            return writer;
        };
    
        /**
         * Encodes the specified CCuratorPreferences message, length delimited. Does not implicitly {@link CCuratorPreferences.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences} message CCuratorPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCuratorPreferences.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCuratorPreferences message from the specified reader or buffer.
         * @function decode
         * @memberof CCuratorPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCuratorPreferences} CCuratorPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCuratorPreferences.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCuratorPreferences();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.supported_languages = reader.uint32();
                    break;
                case 2:
                    message.platform_windows = reader.bool();
                    break;
                case 3:
                    message.platform_mac = reader.bool();
                    break;
                case 4:
                    message.platform_linux = reader.bool();
                    break;
                case 5:
                    message.vr_content = reader.bool();
                    break;
                case 6:
                    message.adult_content_violence = reader.bool();
                    break;
                case 7:
                    message.adult_content_sex = reader.bool();
                    break;
                case 8:
                    message.timestamp_updated = reader.uint32();
                    break;
                case 9:
                    if (!(message.tagids_curated && message.tagids_curated.length))
                        message.tagids_curated = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids_curated.push(reader.uint32());
                    } else
                        message.tagids_curated.push(reader.uint32());
                    break;
                case 10:
                    if (!(message.tagids_filtered && message.tagids_filtered.length))
                        message.tagids_filtered = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids_filtered.push(reader.uint32());
                    } else
                        message.tagids_filtered.push(reader.uint32());
                    break;
                case 11:
                    message.website_title = reader.string();
                    break;
                case 12:
                    message.website_url = reader.string();
                    break;
                case 13:
                    message.discussion_url = reader.string();
                    break;
                case 14:
                    message.show_broadcast = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCuratorPreferences message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCuratorPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCuratorPreferences} CCuratorPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCuratorPreferences.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCuratorPreferences message.
         * @function verify
         * @memberof CCuratorPreferences
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCuratorPreferences.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.supported_languages != null && message.hasOwnProperty("supported_languages"))
                if (!$util.isInteger(message.supported_languages))
                    return "supported_languages: integer expected";
            if (message.platform_windows != null && message.hasOwnProperty("platform_windows"))
                if (typeof message.platform_windows !== "boolean")
                    return "platform_windows: boolean expected";
            if (message.platform_mac != null && message.hasOwnProperty("platform_mac"))
                if (typeof message.platform_mac !== "boolean")
                    return "platform_mac: boolean expected";
            if (message.platform_linux != null && message.hasOwnProperty("platform_linux"))
                if (typeof message.platform_linux !== "boolean")
                    return "platform_linux: boolean expected";
            if (message.vr_content != null && message.hasOwnProperty("vr_content"))
                if (typeof message.vr_content !== "boolean")
                    return "vr_content: boolean expected";
            if (message.adult_content_violence != null && message.hasOwnProperty("adult_content_violence"))
                if (typeof message.adult_content_violence !== "boolean")
                    return "adult_content_violence: boolean expected";
            if (message.adult_content_sex != null && message.hasOwnProperty("adult_content_sex"))
                if (typeof message.adult_content_sex !== "boolean")
                    return "adult_content_sex: boolean expected";
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                if (!$util.isInteger(message.timestamp_updated))
                    return "timestamp_updated: integer expected";
            if (message.tagids_curated != null && message.hasOwnProperty("tagids_curated")) {
                if (!Array.isArray(message.tagids_curated))
                    return "tagids_curated: array expected";
                for (var i = 0; i < message.tagids_curated.length; ++i)
                    if (!$util.isInteger(message.tagids_curated[i]))
                        return "tagids_curated: integer[] expected";
            }
            if (message.tagids_filtered != null && message.hasOwnProperty("tagids_filtered")) {
                if (!Array.isArray(message.tagids_filtered))
                    return "tagids_filtered: array expected";
                for (var i = 0; i < message.tagids_filtered.length; ++i)
                    if (!$util.isInteger(message.tagids_filtered[i]))
                        return "tagids_filtered: integer[] expected";
            }
            if (message.website_title != null && message.hasOwnProperty("website_title"))
                if (!$util.isString(message.website_title))
                    return "website_title: string expected";
            if (message.website_url != null && message.hasOwnProperty("website_url"))
                if (!$util.isString(message.website_url))
                    return "website_url: string expected";
            if (message.discussion_url != null && message.hasOwnProperty("discussion_url"))
                if (!$util.isString(message.discussion_url))
                    return "discussion_url: string expected";
            if (message.show_broadcast != null && message.hasOwnProperty("show_broadcast"))
                if (typeof message.show_broadcast !== "boolean")
                    return "show_broadcast: boolean expected";
            return null;
        };
    
        /**
         * Creates a CCuratorPreferences message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCuratorPreferences
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCuratorPreferences} CCuratorPreferences
         */
        CCuratorPreferences.fromObject = function fromObject(object) {
            if (object instanceof $root.CCuratorPreferences)
                return object;
            var message = new $root.CCuratorPreferences();
            if (object.supported_languages != null)
                message.supported_languages = object.supported_languages >>> 0;
            if (object.platform_windows != null)
                message.platform_windows = Boolean(object.platform_windows);
            if (object.platform_mac != null)
                message.platform_mac = Boolean(object.platform_mac);
            if (object.platform_linux != null)
                message.platform_linux = Boolean(object.platform_linux);
            if (object.vr_content != null)
                message.vr_content = Boolean(object.vr_content);
            if (object.adult_content_violence != null)
                message.adult_content_violence = Boolean(object.adult_content_violence);
            if (object.adult_content_sex != null)
                message.adult_content_sex = Boolean(object.adult_content_sex);
            if (object.timestamp_updated != null)
                message.timestamp_updated = object.timestamp_updated >>> 0;
            if (object.tagids_curated) {
                if (!Array.isArray(object.tagids_curated))
                    throw TypeError(".CCuratorPreferences.tagids_curated: array expected");
                message.tagids_curated = [];
                for (var i = 0; i < object.tagids_curated.length; ++i)
                    message.tagids_curated[i] = object.tagids_curated[i] >>> 0;
            }
            if (object.tagids_filtered) {
                if (!Array.isArray(object.tagids_filtered))
                    throw TypeError(".CCuratorPreferences.tagids_filtered: array expected");
                message.tagids_filtered = [];
                for (var i = 0; i < object.tagids_filtered.length; ++i)
                    message.tagids_filtered[i] = object.tagids_filtered[i] >>> 0;
            }
            if (object.website_title != null)
                message.website_title = String(object.website_title);
            if (object.website_url != null)
                message.website_url = String(object.website_url);
            if (object.discussion_url != null)
                message.discussion_url = String(object.discussion_url);
            if (object.show_broadcast != null)
                message.show_broadcast = Boolean(object.show_broadcast);
            return message;
        };
    
        /**
         * Creates a plain object from a CCuratorPreferences message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCuratorPreferences
         * @static
         * @param {CCuratorPreferences} message CCuratorPreferences
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCuratorPreferences.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.tagids_curated = [];
                object.tagids_filtered = [];
            }
            if (options.defaults) {
                object.supported_languages = 0;
                object.platform_windows = false;
                object.platform_mac = false;
                object.platform_linux = false;
                object.vr_content = false;
                object.adult_content_violence = false;
                object.adult_content_sex = false;
                object.timestamp_updated = 0;
                object.website_title = "";
                object.website_url = "";
                object.discussion_url = "";
                object.show_broadcast = false;
            }
            if (message.supported_languages != null && message.hasOwnProperty("supported_languages"))
                object.supported_languages = message.supported_languages;
            if (message.platform_windows != null && message.hasOwnProperty("platform_windows"))
                object.platform_windows = message.platform_windows;
            if (message.platform_mac != null && message.hasOwnProperty("platform_mac"))
                object.platform_mac = message.platform_mac;
            if (message.platform_linux != null && message.hasOwnProperty("platform_linux"))
                object.platform_linux = message.platform_linux;
            if (message.vr_content != null && message.hasOwnProperty("vr_content"))
                object.vr_content = message.vr_content;
            if (message.adult_content_violence != null && message.hasOwnProperty("adult_content_violence"))
                object.adult_content_violence = message.adult_content_violence;
            if (message.adult_content_sex != null && message.hasOwnProperty("adult_content_sex"))
                object.adult_content_sex = message.adult_content_sex;
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                object.timestamp_updated = message.timestamp_updated;
            if (message.tagids_curated && message.tagids_curated.length) {
                object.tagids_curated = [];
                for (var j = 0; j < message.tagids_curated.length; ++j)
                    object.tagids_curated[j] = message.tagids_curated[j];
            }
            if (message.tagids_filtered && message.tagids_filtered.length) {
                object.tagids_filtered = [];
                for (var j = 0; j < message.tagids_filtered.length; ++j)
                    object.tagids_filtered[j] = message.tagids_filtered[j];
            }
            if (message.website_title != null && message.hasOwnProperty("website_title"))
                object.website_title = message.website_title;
            if (message.website_url != null && message.hasOwnProperty("website_url"))
                object.website_url = message.website_url;
            if (message.discussion_url != null && message.hasOwnProperty("discussion_url"))
                object.discussion_url = message.discussion_url;
            if (message.show_broadcast != null && message.hasOwnProperty("show_broadcast"))
                object.show_broadcast = message.show_broadcast;
            return object;
        };
    
        /**
         * Converts this CCuratorPreferences to JSON.
         * @function toJSON
         * @memberof CCuratorPreferences
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCuratorPreferences.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCuratorPreferences;
    })();
    
    $root.CLocalizationToken = (function() {
    
        /**
         * Properties of a CLocalizationToken.
         * @exports ICLocalizationToken
         * @interface ICLocalizationToken
         * @property {number|null} [language] CLocalizationToken language
         * @property {string|null} [localized_string] CLocalizationToken localized_string
         */
    
        /**
         * Constructs a new CLocalizationToken.
         * @exports CLocalizationToken
         * @classdesc Represents a CLocalizationToken.
         * @implements ICLocalizationToken
         * @constructor
         * @param {ICLocalizationToken=} [properties] Properties to set
         */
        function CLocalizationToken(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CLocalizationToken language.
         * @member {number} language
         * @memberof CLocalizationToken
         * @instance
         */
        CLocalizationToken.prototype.language = 0;
    
        /**
         * CLocalizationToken localized_string.
         * @member {string} localized_string
         * @memberof CLocalizationToken
         * @instance
         */
        CLocalizationToken.prototype.localized_string = "";
    
        /**
         * Creates a new CLocalizationToken instance using the specified properties.
         * @function create
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken=} [properties] Properties to set
         * @returns {CLocalizationToken} CLocalizationToken instance
         */
        CLocalizationToken.create = function create(properties) {
            return new CLocalizationToken(properties);
        };
    
        /**
         * Encodes the specified CLocalizationToken message. Does not implicitly {@link CLocalizationToken.verify|verify} messages.
         * @function encode
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken} message CLocalizationToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CLocalizationToken.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.language != null && message.hasOwnProperty("language"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.language);
            if (message.localized_string != null && message.hasOwnProperty("localized_string"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.localized_string);
            return writer;
        };
    
        /**
         * Encodes the specified CLocalizationToken message, length delimited. Does not implicitly {@link CLocalizationToken.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken} message CLocalizationToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CLocalizationToken.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CLocalizationToken message from the specified reader or buffer.
         * @function decode
         * @memberof CLocalizationToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CLocalizationToken} CLocalizationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CLocalizationToken.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CLocalizationToken();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.language = reader.uint32();
                    break;
                case 2:
                    message.localized_string = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CLocalizationToken message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CLocalizationToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CLocalizationToken} CLocalizationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CLocalizationToken.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CLocalizationToken message.
         * @function verify
         * @memberof CLocalizationToken
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CLocalizationToken.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.localized_string != null && message.hasOwnProperty("localized_string"))
                if (!$util.isString(message.localized_string))
                    return "localized_string: string expected";
            return null;
        };
    
        /**
         * Creates a CLocalizationToken message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CLocalizationToken
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CLocalizationToken} CLocalizationToken
         */
        CLocalizationToken.fromObject = function fromObject(object) {
            if (object instanceof $root.CLocalizationToken)
                return object;
            var message = new $root.CLocalizationToken();
            if (object.language != null)
                message.language = object.language >>> 0;
            if (object.localized_string != null)
                message.localized_string = String(object.localized_string);
            return message;
        };
    
        /**
         * Creates a plain object from a CLocalizationToken message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CLocalizationToken
         * @static
         * @param {CLocalizationToken} message CLocalizationToken
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CLocalizationToken.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.language = 0;
                object.localized_string = "";
            }
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.localized_string != null && message.hasOwnProperty("localized_string"))
                object.localized_string = message.localized_string;
            return object;
        };
    
        /**
         * Converts this CLocalizationToken to JSON.
         * @function toJSON
         * @memberof CLocalizationToken
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CLocalizationToken.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CLocalizationToken;
    })();
    
    $root.CClanEventUserNewsTuple = (function() {
    
        /**
         * Properties of a CClanEventUserNewsTuple.
         * @exports ICClanEventUserNewsTuple
         * @interface ICClanEventUserNewsTuple
         * @property {number|null} [clanid] CClanEventUserNewsTuple clanid
         * @property {number|Long|null} [event_gid] CClanEventUserNewsTuple event_gid
         * @property {number|Long|null} [announcement_gid] CClanEventUserNewsTuple announcement_gid
         * @property {number|null} [rtime_start] CClanEventUserNewsTuple rtime_start
         * @property {number|null} [rtime_end] CClanEventUserNewsTuple rtime_end
         * @property {number|null} [priority_score] CClanEventUserNewsTuple priority_score
         * @property {number|null} [type] CClanEventUserNewsTuple type
         * @property {number|null} [clamp_range_slot] CClanEventUserNewsTuple clamp_range_slot
         * @property {number|null} [appid] CClanEventUserNewsTuple appid
         * @property {number|null} [rtime32_last_modified] CClanEventUserNewsTuple rtime32_last_modified
         */
    
        /**
         * Constructs a new CClanEventUserNewsTuple.
         * @exports CClanEventUserNewsTuple
         * @classdesc Represents a CClanEventUserNewsTuple.
         * @implements ICClanEventUserNewsTuple
         * @constructor
         * @param {ICClanEventUserNewsTuple=} [properties] Properties to set
         */
        function CClanEventUserNewsTuple(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanEventUserNewsTuple clanid.
         * @member {number} clanid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.clanid = 0;
    
        /**
         * CClanEventUserNewsTuple event_gid.
         * @member {number|Long} event_gid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.event_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventUserNewsTuple announcement_gid.
         * @member {number|Long} announcement_gid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.announcement_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventUserNewsTuple rtime_start.
         * @member {number} rtime_start
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime_start = 0;
    
        /**
         * CClanEventUserNewsTuple rtime_end.
         * @member {number} rtime_end
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime_end = 0;
    
        /**
         * CClanEventUserNewsTuple priority_score.
         * @member {number} priority_score
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.priority_score = 0;
    
        /**
         * CClanEventUserNewsTuple type.
         * @member {number} type
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.type = 0;
    
        /**
         * CClanEventUserNewsTuple clamp_range_slot.
         * @member {number} clamp_range_slot
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.clamp_range_slot = 0;
    
        /**
         * CClanEventUserNewsTuple appid.
         * @member {number} appid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.appid = 0;
    
        /**
         * CClanEventUserNewsTuple rtime32_last_modified.
         * @member {number} rtime32_last_modified
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime32_last_modified = 0;
    
        /**
         * Creates a new CClanEventUserNewsTuple instance using the specified properties.
         * @function create
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple=} [properties] Properties to set
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple instance
         */
        CClanEventUserNewsTuple.create = function create(properties) {
            return new CClanEventUserNewsTuple(properties);
        };
    
        /**
         * Encodes the specified CClanEventUserNewsTuple message. Does not implicitly {@link CClanEventUserNewsTuple.verify|verify} messages.
         * @function encode
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple} message CClanEventUserNewsTuple message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventUserNewsTuple.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.clanid);
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.event_gid);
            if (message.announcement_gid != null && message.hasOwnProperty("announcement_gid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.announcement_gid);
            if (message.rtime_start != null && message.hasOwnProperty("rtime_start"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.rtime_start);
            if (message.rtime_end != null && message.hasOwnProperty("rtime_end"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.rtime_end);
            if (message.priority_score != null && message.hasOwnProperty("priority_score"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.priority_score);
            if (message.type != null && message.hasOwnProperty("type"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.type);
            if (message.clamp_range_slot != null && message.hasOwnProperty("clamp_range_slot"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.clamp_range_slot);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.appid);
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.rtime32_last_modified);
            return writer;
        };
    
        /**
         * Encodes the specified CClanEventUserNewsTuple message, length delimited. Does not implicitly {@link CClanEventUserNewsTuple.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple} message CClanEventUserNewsTuple message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventUserNewsTuple.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanEventUserNewsTuple message from the specified reader or buffer.
         * @function decode
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventUserNewsTuple.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanEventUserNewsTuple();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.clanid = reader.uint32();
                    break;
                case 2:
                    message.event_gid = reader.fixed64();
                    break;
                case 3:
                    message.announcement_gid = reader.fixed64();
                    break;
                case 4:
                    message.rtime_start = reader.uint32();
                    break;
                case 5:
                    message.rtime_end = reader.uint32();
                    break;
                case 6:
                    message.priority_score = reader.uint32();
                    break;
                case 7:
                    message.type = reader.uint32();
                    break;
                case 8:
                    message.clamp_range_slot = reader.uint32();
                    break;
                case 9:
                    message.appid = reader.uint32();
                    break;
                case 10:
                    message.rtime32_last_modified = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanEventUserNewsTuple message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventUserNewsTuple.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanEventUserNewsTuple message.
         * @function verify
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanEventUserNewsTuple.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid))
                    return "clanid: integer expected";
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (!$util.isInteger(message.event_gid) && !(message.event_gid && $util.isInteger(message.event_gid.low) && $util.isInteger(message.event_gid.high)))
                    return "event_gid: integer|Long expected";
            if (message.announcement_gid != null && message.hasOwnProperty("announcement_gid"))
                if (!$util.isInteger(message.announcement_gid) && !(message.announcement_gid && $util.isInteger(message.announcement_gid.low) && $util.isInteger(message.announcement_gid.high)))
                    return "announcement_gid: integer|Long expected";
            if (message.rtime_start != null && message.hasOwnProperty("rtime_start"))
                if (!$util.isInteger(message.rtime_start))
                    return "rtime_start: integer expected";
            if (message.rtime_end != null && message.hasOwnProperty("rtime_end"))
                if (!$util.isInteger(message.rtime_end))
                    return "rtime_end: integer expected";
            if (message.priority_score != null && message.hasOwnProperty("priority_score"))
                if (!$util.isInteger(message.priority_score))
                    return "priority_score: integer expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.clamp_range_slot != null && message.hasOwnProperty("clamp_range_slot"))
                if (!$util.isInteger(message.clamp_range_slot))
                    return "clamp_range_slot: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                if (!$util.isInteger(message.rtime32_last_modified))
                    return "rtime32_last_modified: integer expected";
            return null;
        };
    
        /**
         * Creates a CClanEventUserNewsTuple message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         */
        CClanEventUserNewsTuple.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanEventUserNewsTuple)
                return object;
            var message = new $root.CClanEventUserNewsTuple();
            if (object.clanid != null)
                message.clanid = object.clanid >>> 0;
            if (object.event_gid != null)
                if ($util.Long)
                    (message.event_gid = $util.Long.fromValue(object.event_gid)).unsigned = false;
                else if (typeof object.event_gid === "string")
                    message.event_gid = parseInt(object.event_gid, 10);
                else if (typeof object.event_gid === "number")
                    message.event_gid = object.event_gid;
                else if (typeof object.event_gid === "object")
                    message.event_gid = new $util.LongBits(object.event_gid.low >>> 0, object.event_gid.high >>> 0).toNumber();
            if (object.announcement_gid != null)
                if ($util.Long)
                    (message.announcement_gid = $util.Long.fromValue(object.announcement_gid)).unsigned = false;
                else if (typeof object.announcement_gid === "string")
                    message.announcement_gid = parseInt(object.announcement_gid, 10);
                else if (typeof object.announcement_gid === "number")
                    message.announcement_gid = object.announcement_gid;
                else if (typeof object.announcement_gid === "object")
                    message.announcement_gid = new $util.LongBits(object.announcement_gid.low >>> 0, object.announcement_gid.high >>> 0).toNumber();
            if (object.rtime_start != null)
                message.rtime_start = object.rtime_start >>> 0;
            if (object.rtime_end != null)
                message.rtime_end = object.rtime_end >>> 0;
            if (object.priority_score != null)
                message.priority_score = object.priority_score >>> 0;
            if (object.type != null)
                message.type = object.type >>> 0;
            if (object.clamp_range_slot != null)
                message.clamp_range_slot = object.clamp_range_slot >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.rtime32_last_modified != null)
                message.rtime32_last_modified = object.rtime32_last_modified >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CClanEventUserNewsTuple message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {CClanEventUserNewsTuple} message CClanEventUserNewsTuple
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanEventUserNewsTuple.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.clanid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.event_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.event_gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.announcement_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.announcement_gid = options.longs === String ? "0" : 0;
                object.rtime_start = 0;
                object.rtime_end = 0;
                object.priority_score = 0;
                object.type = 0;
                object.clamp_range_slot = 0;
                object.appid = 0;
                object.rtime32_last_modified = 0;
            }
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                object.clanid = message.clanid;
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (typeof message.event_gid === "number")
                    object.event_gid = options.longs === String ? String(message.event_gid) : message.event_gid;
                else
                    object.event_gid = options.longs === String ? $util.Long.prototype.toString.call(message.event_gid) : options.longs === Number ? new $util.LongBits(message.event_gid.low >>> 0, message.event_gid.high >>> 0).toNumber() : message.event_gid;
            if (message.announcement_gid != null && message.hasOwnProperty("announcement_gid"))
                if (typeof message.announcement_gid === "number")
                    object.announcement_gid = options.longs === String ? String(message.announcement_gid) : message.announcement_gid;
                else
                    object.announcement_gid = options.longs === String ? $util.Long.prototype.toString.call(message.announcement_gid) : options.longs === Number ? new $util.LongBits(message.announcement_gid.low >>> 0, message.announcement_gid.high >>> 0).toNumber() : message.announcement_gid;
            if (message.rtime_start != null && message.hasOwnProperty("rtime_start"))
                object.rtime_start = message.rtime_start;
            if (message.rtime_end != null && message.hasOwnProperty("rtime_end"))
                object.rtime_end = message.rtime_end;
            if (message.priority_score != null && message.hasOwnProperty("priority_score"))
                object.priority_score = message.priority_score;
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.clamp_range_slot != null && message.hasOwnProperty("clamp_range_slot"))
                object.clamp_range_slot = message.clamp_range_slot;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                object.rtime32_last_modified = message.rtime32_last_modified;
            return object;
        };
    
        /**
         * Converts this CClanEventUserNewsTuple to JSON.
         * @function toJSON
         * @memberof CClanEventUserNewsTuple
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanEventUserNewsTuple.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanEventUserNewsTuple;
    })();
    
    $root.CClanMatchEventByRange = (function() {
    
        /**
         * Properties of a CClanMatchEventByRange.
         * @exports ICClanMatchEventByRange
         * @interface ICClanMatchEventByRange
         * @property {number|null} [rtime_before] CClanMatchEventByRange rtime_before
         * @property {number|null} [rtime_after] CClanMatchEventByRange rtime_after
         * @property {number|null} [qualified] CClanMatchEventByRange qualified
         * @property {Array.<ICClanEventUserNewsTuple>|null} [events] CClanMatchEventByRange events
         */
    
        /**
         * Constructs a new CClanMatchEventByRange.
         * @exports CClanMatchEventByRange
         * @classdesc Represents a CClanMatchEventByRange.
         * @implements ICClanMatchEventByRange
         * @constructor
         * @param {ICClanMatchEventByRange=} [properties] Properties to set
         */
        function CClanMatchEventByRange(properties) {
            this.events = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanMatchEventByRange rtime_before.
         * @member {number} rtime_before
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.rtime_before = 0;
    
        /**
         * CClanMatchEventByRange rtime_after.
         * @member {number} rtime_after
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.rtime_after = 0;
    
        /**
         * CClanMatchEventByRange qualified.
         * @member {number} qualified
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.qualified = 0;
    
        /**
         * CClanMatchEventByRange events.
         * @member {Array.<ICClanEventUserNewsTuple>} events
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.events = $util.emptyArray;
    
        /**
         * Creates a new CClanMatchEventByRange instance using the specified properties.
         * @function create
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange=} [properties] Properties to set
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange instance
         */
        CClanMatchEventByRange.create = function create(properties) {
            return new CClanMatchEventByRange(properties);
        };
    
        /**
         * Encodes the specified CClanMatchEventByRange message. Does not implicitly {@link CClanMatchEventByRange.verify|verify} messages.
         * @function encode
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange} message CClanMatchEventByRange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanMatchEventByRange.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.rtime_before != null && message.hasOwnProperty("rtime_before"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.rtime_before);
            if (message.rtime_after != null && message.hasOwnProperty("rtime_after"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.rtime_after);
            if (message.qualified != null && message.hasOwnProperty("qualified"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.qualified);
            if (message.events != null && message.events.length)
                for (var i = 0; i < message.events.length; ++i)
                    $root.CClanEventUserNewsTuple.encode(message.events[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CClanMatchEventByRange message, length delimited. Does not implicitly {@link CClanMatchEventByRange.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange} message CClanMatchEventByRange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanMatchEventByRange.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanMatchEventByRange message from the specified reader or buffer.
         * @function decode
         * @memberof CClanMatchEventByRange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanMatchEventByRange.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanMatchEventByRange();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.rtime_before = reader.uint32();
                    break;
                case 2:
                    message.rtime_after = reader.uint32();
                    break;
                case 3:
                    message.qualified = reader.uint32();
                    break;
                case 4:
                    if (!(message.events && message.events.length))
                        message.events = [];
                    message.events.push($root.CClanEventUserNewsTuple.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanMatchEventByRange message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanMatchEventByRange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanMatchEventByRange.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanMatchEventByRange message.
         * @function verify
         * @memberof CClanMatchEventByRange
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanMatchEventByRange.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.rtime_before != null && message.hasOwnProperty("rtime_before"))
                if (!$util.isInteger(message.rtime_before))
                    return "rtime_before: integer expected";
            if (message.rtime_after != null && message.hasOwnProperty("rtime_after"))
                if (!$util.isInteger(message.rtime_after))
                    return "rtime_after: integer expected";
            if (message.qualified != null && message.hasOwnProperty("qualified"))
                if (!$util.isInteger(message.qualified))
                    return "qualified: integer expected";
            if (message.events != null && message.hasOwnProperty("events")) {
                if (!Array.isArray(message.events))
                    return "events: array expected";
                for (var i = 0; i < message.events.length; ++i) {
                    var error = $root.CClanEventUserNewsTuple.verify(message.events[i]);
                    if (error)
                        return "events." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CClanMatchEventByRange message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanMatchEventByRange
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         */
        CClanMatchEventByRange.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanMatchEventByRange)
                return object;
            var message = new $root.CClanMatchEventByRange();
            if (object.rtime_before != null)
                message.rtime_before = object.rtime_before >>> 0;
            if (object.rtime_after != null)
                message.rtime_after = object.rtime_after >>> 0;
            if (object.qualified != null)
                message.qualified = object.qualified >>> 0;
            if (object.events) {
                if (!Array.isArray(object.events))
                    throw TypeError(".CClanMatchEventByRange.events: array expected");
                message.events = [];
                for (var i = 0; i < object.events.length; ++i) {
                    if (typeof object.events[i] !== "object")
                        throw TypeError(".CClanMatchEventByRange.events: object expected");
                    message.events[i] = $root.CClanEventUserNewsTuple.fromObject(object.events[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CClanMatchEventByRange message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanMatchEventByRange
         * @static
         * @param {CClanMatchEventByRange} message CClanMatchEventByRange
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanMatchEventByRange.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.events = [];
            if (options.defaults) {
                object.rtime_before = 0;
                object.rtime_after = 0;
                object.qualified = 0;
            }
            if (message.rtime_before != null && message.hasOwnProperty("rtime_before"))
                object.rtime_before = message.rtime_before;
            if (message.rtime_after != null && message.hasOwnProperty("rtime_after"))
                object.rtime_after = message.rtime_after;
            if (message.qualified != null && message.hasOwnProperty("qualified"))
                object.qualified = message.qualified;
            if (message.events && message.events.length) {
                object.events = [];
                for (var j = 0; j < message.events.length; ++j)
                    object.events[j] = $root.CClanEventUserNewsTuple.toObject(message.events[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CClanMatchEventByRange to JSON.
         * @function toJSON
         * @memberof CClanMatchEventByRange
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanMatchEventByRange.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanMatchEventByRange;
    })();
    
    $root.CCommunity_ClanAnnouncementInfo = (function() {
    
        /**
         * Properties of a CCommunity_ClanAnnouncementInfo.
         * @exports ICCommunity_ClanAnnouncementInfo
         * @interface ICCommunity_ClanAnnouncementInfo
         * @property {number|Long|null} [gid] CCommunity_ClanAnnouncementInfo gid
         * @property {number|Long|null} [clanid] CCommunity_ClanAnnouncementInfo clanid
         * @property {number|Long|null} [posterid] CCommunity_ClanAnnouncementInfo posterid
         * @property {string|null} [headline] CCommunity_ClanAnnouncementInfo headline
         * @property {number|null} [posttime] CCommunity_ClanAnnouncementInfo posttime
         * @property {number|null} [updatetime] CCommunity_ClanAnnouncementInfo updatetime
         * @property {string|null} [body] CCommunity_ClanAnnouncementInfo body
         * @property {number|null} [commentcount] CCommunity_ClanAnnouncementInfo commentcount
         * @property {Array.<string>|null} [tags] CCommunity_ClanAnnouncementInfo tags
         * @property {number|null} [language] CCommunity_ClanAnnouncementInfo language
         * @property {boolean|null} [hidden] CCommunity_ClanAnnouncementInfo hidden
         * @property {number|Long|null} [forum_topic_id] CCommunity_ClanAnnouncementInfo forum_topic_id
         * @property {number|Long|null} [event_gid] CCommunity_ClanAnnouncementInfo event_gid
         * @property {number|null} [voteupcount] CCommunity_ClanAnnouncementInfo voteupcount
         * @property {number|null} [votedowncount] CCommunity_ClanAnnouncementInfo votedowncount
         */
    
        /**
         * Constructs a new CCommunity_ClanAnnouncementInfo.
         * @exports CCommunity_ClanAnnouncementInfo
         * @classdesc Represents a CCommunity_ClanAnnouncementInfo.
         * @implements ICCommunity_ClanAnnouncementInfo
         * @constructor
         * @param {ICCommunity_ClanAnnouncementInfo=} [properties] Properties to set
         */
        function CCommunity_ClanAnnouncementInfo(properties) {
            this.tags = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCommunity_ClanAnnouncementInfo gid.
         * @member {number|Long} gid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo clanid.
         * @member {number|Long} clanid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.clanid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo posterid.
         * @member {number|Long} posterid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.posterid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo headline.
         * @member {string} headline
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.headline = "";
    
        /**
         * CCommunity_ClanAnnouncementInfo posttime.
         * @member {number} posttime
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.posttime = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo updatetime.
         * @member {number} updatetime
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.updatetime = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo body.
         * @member {string} body
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.body = "";
    
        /**
         * CCommunity_ClanAnnouncementInfo commentcount.
         * @member {number} commentcount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.commentcount = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo tags.
         * @member {Array.<string>} tags
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.tags = $util.emptyArray;
    
        /**
         * CCommunity_ClanAnnouncementInfo language.
         * @member {number} language
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.language = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo hidden.
         * @member {boolean} hidden
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.hidden = false;
    
        /**
         * CCommunity_ClanAnnouncementInfo forum_topic_id.
         * @member {number|Long} forum_topic_id
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.forum_topic_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo event_gid.
         * @member {number|Long} event_gid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.event_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo voteupcount.
         * @member {number} voteupcount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.voteupcount = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo votedowncount.
         * @member {number} votedowncount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.votedowncount = 0;
    
        /**
         * Creates a new CCommunity_ClanAnnouncementInfo instance using the specified properties.
         * @function create
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo=} [properties] Properties to set
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo instance
         */
        CCommunity_ClanAnnouncementInfo.create = function create(properties) {
            return new CCommunity_ClanAnnouncementInfo(properties);
        };
    
        /**
         * Encodes the specified CCommunity_ClanAnnouncementInfo message. Does not implicitly {@link CCommunity_ClanAnnouncementInfo.verify|verify} messages.
         * @function encode
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCommunity_ClanAnnouncementInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gid != null && message.hasOwnProperty("gid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.gid);
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.clanid);
            if (message.posterid != null && message.hasOwnProperty("posterid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.posterid);
            if (message.headline != null && message.hasOwnProperty("headline"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.headline);
            if (message.posttime != null && message.hasOwnProperty("posttime"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.posttime);
            if (message.updatetime != null && message.hasOwnProperty("updatetime"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.updatetime);
            if (message.body != null && message.hasOwnProperty("body"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
            if (message.commentcount != null && message.hasOwnProperty("commentcount"))
                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.commentcount);
            if (message.tags != null && message.tags.length)
                for (var i = 0; i < message.tags.length; ++i)
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.tags[i]);
            if (message.language != null && message.hasOwnProperty("language"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.language);
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.hidden);
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.forum_topic_id);
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                writer.uint32(/* id 13, wireType 1 =*/105).fixed64(message.event_gid);
            if (message.voteupcount != null && message.hasOwnProperty("voteupcount"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.voteupcount);
            if (message.votedowncount != null && message.hasOwnProperty("votedowncount"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.votedowncount);
            return writer;
        };
    
        /**
         * Encodes the specified CCommunity_ClanAnnouncementInfo message, length delimited. Does not implicitly {@link CCommunity_ClanAnnouncementInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCommunity_ClanAnnouncementInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCommunity_ClanAnnouncementInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCommunity_ClanAnnouncementInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCommunity_ClanAnnouncementInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gid = reader.uint64();
                    break;
                case 2:
                    message.clanid = reader.uint64();
                    break;
                case 3:
                    message.posterid = reader.uint64();
                    break;
                case 4:
                    message.headline = reader.string();
                    break;
                case 5:
                    message.posttime = reader.uint32();
                    break;
                case 6:
                    message.updatetime = reader.uint32();
                    break;
                case 7:
                    message.body = reader.string();
                    break;
                case 8:
                    message.commentcount = reader.int32();
                    break;
                case 9:
                    if (!(message.tags && message.tags.length))
                        message.tags = [];
                    message.tags.push(reader.string());
                    break;
                case 10:
                    message.language = reader.int32();
                    break;
                case 11:
                    message.hidden = reader.bool();
                    break;
                case 12:
                    message.forum_topic_id = reader.fixed64();
                    break;
                case 13:
                    message.event_gid = reader.fixed64();
                    break;
                case 14:
                    message.voteupcount = reader.int32();
                    break;
                case 15:
                    message.votedowncount = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCommunity_ClanAnnouncementInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCommunity_ClanAnnouncementInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCommunity_ClanAnnouncementInfo message.
         * @function verify
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCommunity_ClanAnnouncementInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid) && !(message.clanid && $util.isInteger(message.clanid.low) && $util.isInteger(message.clanid.high)))
                    return "clanid: integer|Long expected";
            if (message.posterid != null && message.hasOwnProperty("posterid"))
                if (!$util.isInteger(message.posterid) && !(message.posterid && $util.isInteger(message.posterid.low) && $util.isInteger(message.posterid.high)))
                    return "posterid: integer|Long expected";
            if (message.headline != null && message.hasOwnProperty("headline"))
                if (!$util.isString(message.headline))
                    return "headline: string expected";
            if (message.posttime != null && message.hasOwnProperty("posttime"))
                if (!$util.isInteger(message.posttime))
                    return "posttime: integer expected";
            if (message.updatetime != null && message.hasOwnProperty("updatetime"))
                if (!$util.isInteger(message.updatetime))
                    return "updatetime: integer expected";
            if (message.body != null && message.hasOwnProperty("body"))
                if (!$util.isString(message.body))
                    return "body: string expected";
            if (message.commentcount != null && message.hasOwnProperty("commentcount"))
                if (!$util.isInteger(message.commentcount))
                    return "commentcount: integer expected";
            if (message.tags != null && message.hasOwnProperty("tags")) {
                if (!Array.isArray(message.tags))
                    return "tags: array expected";
                for (var i = 0; i < message.tags.length; ++i)
                    if (!$util.isString(message.tags[i]))
                        return "tags: string[] expected";
            }
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                if (typeof message.hidden !== "boolean")
                    return "hidden: boolean expected";
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (!$util.isInteger(message.forum_topic_id) && !(message.forum_topic_id && $util.isInteger(message.forum_topic_id.low) && $util.isInteger(message.forum_topic_id.high)))
                    return "forum_topic_id: integer|Long expected";
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (!$util.isInteger(message.event_gid) && !(message.event_gid && $util.isInteger(message.event_gid.low) && $util.isInteger(message.event_gid.high)))
                    return "event_gid: integer|Long expected";
            if (message.voteupcount != null && message.hasOwnProperty("voteupcount"))
                if (!$util.isInteger(message.voteupcount))
                    return "voteupcount: integer expected";
            if (message.votedowncount != null && message.hasOwnProperty("votedowncount"))
                if (!$util.isInteger(message.votedowncount))
                    return "votedowncount: integer expected";
            return null;
        };
    
        /**
         * Creates a CCommunity_ClanAnnouncementInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         */
        CCommunity_ClanAnnouncementInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CCommunity_ClanAnnouncementInfo)
                return object;
            var message = new $root.CCommunity_ClanAnnouncementInfo();
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = true;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber(true);
            if (object.clanid != null)
                if ($util.Long)
                    (message.clanid = $util.Long.fromValue(object.clanid)).unsigned = true;
                else if (typeof object.clanid === "string")
                    message.clanid = parseInt(object.clanid, 10);
                else if (typeof object.clanid === "number")
                    message.clanid = object.clanid;
                else if (typeof object.clanid === "object")
                    message.clanid = new $util.LongBits(object.clanid.low >>> 0, object.clanid.high >>> 0).toNumber(true);
            if (object.posterid != null)
                if ($util.Long)
                    (message.posterid = $util.Long.fromValue(object.posterid)).unsigned = true;
                else if (typeof object.posterid === "string")
                    message.posterid = parseInt(object.posterid, 10);
                else if (typeof object.posterid === "number")
                    message.posterid = object.posterid;
                else if (typeof object.posterid === "object")
                    message.posterid = new $util.LongBits(object.posterid.low >>> 0, object.posterid.high >>> 0).toNumber(true);
            if (object.headline != null)
                message.headline = String(object.headline);
            if (object.posttime != null)
                message.posttime = object.posttime >>> 0;
            if (object.updatetime != null)
                message.updatetime = object.updatetime >>> 0;
            if (object.body != null)
                message.body = String(object.body);
            if (object.commentcount != null)
                message.commentcount = object.commentcount | 0;
            if (object.tags) {
                if (!Array.isArray(object.tags))
                    throw TypeError(".CCommunity_ClanAnnouncementInfo.tags: array expected");
                message.tags = [];
                for (var i = 0; i < object.tags.length; ++i)
                    message.tags[i] = String(object.tags[i]);
            }
            if (object.language != null)
                message.language = object.language | 0;
            if (object.hidden != null)
                message.hidden = Boolean(object.hidden);
            if (object.forum_topic_id != null)
                if ($util.Long)
                    (message.forum_topic_id = $util.Long.fromValue(object.forum_topic_id)).unsigned = false;
                else if (typeof object.forum_topic_id === "string")
                    message.forum_topic_id = parseInt(object.forum_topic_id, 10);
                else if (typeof object.forum_topic_id === "number")
                    message.forum_topic_id = object.forum_topic_id;
                else if (typeof object.forum_topic_id === "object")
                    message.forum_topic_id = new $util.LongBits(object.forum_topic_id.low >>> 0, object.forum_topic_id.high >>> 0).toNumber();
            if (object.event_gid != null)
                if ($util.Long)
                    (message.event_gid = $util.Long.fromValue(object.event_gid)).unsigned = false;
                else if (typeof object.event_gid === "string")
                    message.event_gid = parseInt(object.event_gid, 10);
                else if (typeof object.event_gid === "number")
                    message.event_gid = object.event_gid;
                else if (typeof object.event_gid === "object")
                    message.event_gid = new $util.LongBits(object.event_gid.low >>> 0, object.event_gid.high >>> 0).toNumber();
            if (object.voteupcount != null)
                message.voteupcount = object.voteupcount | 0;
            if (object.votedowncount != null)
                message.votedowncount = object.votedowncount | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CCommunity_ClanAnnouncementInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {CCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCommunity_ClanAnnouncementInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.tags = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.clanid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clanid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.posterid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.posterid = options.longs === String ? "0" : 0;
                object.headline = "";
                object.posttime = 0;
                object.updatetime = 0;
                object.body = "";
                object.commentcount = 0;
                object.language = 0;
                object.hidden = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.forum_topic_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.forum_topic_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.event_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.event_gid = options.longs === String ? "0" : 0;
                object.voteupcount = 0;
                object.votedowncount = 0;
            }
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber(true) : message.gid;
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (typeof message.clanid === "number")
                    object.clanid = options.longs === String ? String(message.clanid) : message.clanid;
                else
                    object.clanid = options.longs === String ? $util.Long.prototype.toString.call(message.clanid) : options.longs === Number ? new $util.LongBits(message.clanid.low >>> 0, message.clanid.high >>> 0).toNumber(true) : message.clanid;
            if (message.posterid != null && message.hasOwnProperty("posterid"))
                if (typeof message.posterid === "number")
                    object.posterid = options.longs === String ? String(message.posterid) : message.posterid;
                else
                    object.posterid = options.longs === String ? $util.Long.prototype.toString.call(message.posterid) : options.longs === Number ? new $util.LongBits(message.posterid.low >>> 0, message.posterid.high >>> 0).toNumber(true) : message.posterid;
            if (message.headline != null && message.hasOwnProperty("headline"))
                object.headline = message.headline;
            if (message.posttime != null && message.hasOwnProperty("posttime"))
                object.posttime = message.posttime;
            if (message.updatetime != null && message.hasOwnProperty("updatetime"))
                object.updatetime = message.updatetime;
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = message.body;
            if (message.commentcount != null && message.hasOwnProperty("commentcount"))
                object.commentcount = message.commentcount;
            if (message.tags && message.tags.length) {
                object.tags = [];
                for (var j = 0; j < message.tags.length; ++j)
                    object.tags[j] = message.tags[j];
            }
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                object.hidden = message.hidden;
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (typeof message.forum_topic_id === "number")
                    object.forum_topic_id = options.longs === String ? String(message.forum_topic_id) : message.forum_topic_id;
                else
                    object.forum_topic_id = options.longs === String ? $util.Long.prototype.toString.call(message.forum_topic_id) : options.longs === Number ? new $util.LongBits(message.forum_topic_id.low >>> 0, message.forum_topic_id.high >>> 0).toNumber() : message.forum_topic_id;
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (typeof message.event_gid === "number")
                    object.event_gid = options.longs === String ? String(message.event_gid) : message.event_gid;
                else
                    object.event_gid = options.longs === String ? $util.Long.prototype.toString.call(message.event_gid) : options.longs === Number ? new $util.LongBits(message.event_gid.low >>> 0, message.event_gid.high >>> 0).toNumber() : message.event_gid;
            if (message.voteupcount != null && message.hasOwnProperty("voteupcount"))
                object.voteupcount = message.voteupcount;
            if (message.votedowncount != null && message.hasOwnProperty("votedowncount"))
                object.votedowncount = message.votedowncount;
            return object;
        };
    
        /**
         * Converts this CCommunity_ClanAnnouncementInfo to JSON.
         * @function toJSON
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCommunity_ClanAnnouncementInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCommunity_ClanAnnouncementInfo;
    })();
    
    $root.CClanEventData = (function() {
    
        /**
         * Properties of a CClanEventData.
         * @exports ICClanEventData
         * @interface ICClanEventData
         * @property {number|Long|null} [gid] CClanEventData gid
         * @property {number|Long|null} [clan_steamid] CClanEventData clan_steamid
         * @property {string|null} [event_name] CClanEventData event_name
         * @property {EProtoClanEventType|null} [event_type] CClanEventData event_type
         * @property {number|null} [appid] CClanEventData appid
         * @property {string|null} [server_address] CClanEventData server_address
         * @property {string|null} [server_password] CClanEventData server_password
         * @property {number|null} [rtime32_start_time] CClanEventData rtime32_start_time
         * @property {number|null} [rtime32_end_time] CClanEventData rtime32_end_time
         * @property {number|null} [comment_count] CClanEventData comment_count
         * @property {number|Long|null} [creator_steamid] CClanEventData creator_steamid
         * @property {number|Long|null} [last_update_steamid] CClanEventData last_update_steamid
         * @property {string|null} [event_notes] CClanEventData event_notes
         * @property {string|null} [jsondata] CClanEventData jsondata
         * @property {ICCommunity_ClanAnnouncementInfo|null} [announcement_body] CClanEventData announcement_body
         * @property {boolean|null} [published] CClanEventData published
         * @property {boolean|null} [hidden] CClanEventData hidden
         * @property {number|null} [rtime32_visibility_start] CClanEventData rtime32_visibility_start
         * @property {number|null} [rtime32_visibility_end] CClanEventData rtime32_visibility_end
         * @property {number|null} [broadcaster_accountid] CClanEventData broadcaster_accountid
         * @property {number|null} [follower_count] CClanEventData follower_count
         * @property {number|null} [ignore_count] CClanEventData ignore_count
         * @property {number|Long|null} [forum_topic_id] CClanEventData forum_topic_id
         * @property {number|null} [rtime32_last_modified] CClanEventData rtime32_last_modified
         * @property {number|Long|null} [news_post_gid] CClanEventData news_post_gid
         * @property {number|null} [rtime_mod_reviewed] CClanEventData rtime_mod_reviewed
         * @property {number|null} [featured_app_tagid] CClanEventData featured_app_tagid
         * @property {Array.<number>|null} [referenced_appids] CClanEventData referenced_appids
         * @property {number|null} [build_id] CClanEventData build_id
         * @property {string|null} [build_branch] CClanEventData build_branch
         */
    
        /**
         * Constructs a new CClanEventData.
         * @exports CClanEventData
         * @classdesc Represents a CClanEventData.
         * @implements ICClanEventData
         * @constructor
         * @param {ICClanEventData=} [properties] Properties to set
         */
        function CClanEventData(properties) {
            this.referenced_appids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanEventData gid.
         * @member {number|Long} gid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData clan_steamid.
         * @member {number|Long} clan_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.clan_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData event_name.
         * @member {string} event_name
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_name = "";
    
        /**
         * CClanEventData event_type.
         * @member {EProtoClanEventType} event_type
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_type = 1;
    
        /**
         * CClanEventData appid.
         * @member {number} appid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.appid = 0;
    
        /**
         * CClanEventData server_address.
         * @member {string} server_address
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.server_address = "";
    
        /**
         * CClanEventData server_password.
         * @member {string} server_password
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.server_password = "";
    
        /**
         * CClanEventData rtime32_start_time.
         * @member {number} rtime32_start_time
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_start_time = 0;
    
        /**
         * CClanEventData rtime32_end_time.
         * @member {number} rtime32_end_time
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_end_time = 0;
    
        /**
         * CClanEventData comment_count.
         * @member {number} comment_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.comment_count = 0;
    
        /**
         * CClanEventData creator_steamid.
         * @member {number|Long} creator_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.creator_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData last_update_steamid.
         * @member {number|Long} last_update_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.last_update_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData event_notes.
         * @member {string} event_notes
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_notes = "";
    
        /**
         * CClanEventData jsondata.
         * @member {string} jsondata
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.jsondata = "";
    
        /**
         * CClanEventData announcement_body.
         * @member {ICCommunity_ClanAnnouncementInfo|null|undefined} announcement_body
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.announcement_body = null;
    
        /**
         * CClanEventData published.
         * @member {boolean} published
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.published = false;
    
        /**
         * CClanEventData hidden.
         * @member {boolean} hidden
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.hidden = false;
    
        /**
         * CClanEventData rtime32_visibility_start.
         * @member {number} rtime32_visibility_start
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_visibility_start = 0;
    
        /**
         * CClanEventData rtime32_visibility_end.
         * @member {number} rtime32_visibility_end
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_visibility_end = 0;
    
        /**
         * CClanEventData broadcaster_accountid.
         * @member {number} broadcaster_accountid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.broadcaster_accountid = 0;
    
        /**
         * CClanEventData follower_count.
         * @member {number} follower_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.follower_count = 0;
    
        /**
         * CClanEventData ignore_count.
         * @member {number} ignore_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.ignore_count = 0;
    
        /**
         * CClanEventData forum_topic_id.
         * @member {number|Long} forum_topic_id
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.forum_topic_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData rtime32_last_modified.
         * @member {number} rtime32_last_modified
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_last_modified = 0;
    
        /**
         * CClanEventData news_post_gid.
         * @member {number|Long} news_post_gid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.news_post_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData rtime_mod_reviewed.
         * @member {number} rtime_mod_reviewed
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime_mod_reviewed = 0;
    
        /**
         * CClanEventData featured_app_tagid.
         * @member {number} featured_app_tagid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.featured_app_tagid = 0;
    
        /**
         * CClanEventData referenced_appids.
         * @member {Array.<number>} referenced_appids
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.referenced_appids = $util.emptyArray;
    
        /**
         * CClanEventData build_id.
         * @member {number} build_id
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.build_id = 0;
    
        /**
         * CClanEventData build_branch.
         * @member {string} build_branch
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.build_branch = "";
    
        /**
         * Creates a new CClanEventData instance using the specified properties.
         * @function create
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData=} [properties] Properties to set
         * @returns {CClanEventData} CClanEventData instance
         */
        CClanEventData.create = function create(properties) {
            return new CClanEventData(properties);
        };
    
        /**
         * Encodes the specified CClanEventData message. Does not implicitly {@link CClanEventData.verify|verify} messages.
         * @function encode
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData} message CClanEventData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gid != null && message.hasOwnProperty("gid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.gid);
            if (message.clan_steamid != null && message.hasOwnProperty("clan_steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.clan_steamid);
            if (message.event_name != null && message.hasOwnProperty("event_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.event_name);
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.event_type);
            if (message.appid != null && message.hasOwnProperty("appid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.appid);
            if (message.server_address != null && message.hasOwnProperty("server_address"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.server_address);
            if (message.server_password != null && message.hasOwnProperty("server_password"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.server_password);
            if (message.rtime32_start_time != null && message.hasOwnProperty("rtime32_start_time"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.rtime32_start_time);
            if (message.rtime32_end_time != null && message.hasOwnProperty("rtime32_end_time"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.rtime32_end_time);
            if (message.comment_count != null && message.hasOwnProperty("comment_count"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.comment_count);
            if (message.creator_steamid != null && message.hasOwnProperty("creator_steamid"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.creator_steamid);
            if (message.last_update_steamid != null && message.hasOwnProperty("last_update_steamid"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.last_update_steamid);
            if (message.event_notes != null && message.hasOwnProperty("event_notes"))
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.event_notes);
            if (message.jsondata != null && message.hasOwnProperty("jsondata"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.jsondata);
            if (message.announcement_body != null && message.hasOwnProperty("announcement_body"))
                $root.CCommunity_ClanAnnouncementInfo.encode(message.announcement_body, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
            if (message.published != null && message.hasOwnProperty("published"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.published);
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.hidden);
            if (message.rtime32_visibility_start != null && message.hasOwnProperty("rtime32_visibility_start"))
                writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.rtime32_visibility_start);
            if (message.rtime32_visibility_end != null && message.hasOwnProperty("rtime32_visibility_end"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.rtime32_visibility_end);
            if (message.broadcaster_accountid != null && message.hasOwnProperty("broadcaster_accountid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.broadcaster_accountid);
            if (message.follower_count != null && message.hasOwnProperty("follower_count"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.follower_count);
            if (message.ignore_count != null && message.hasOwnProperty("ignore_count"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.ignore_count);
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                writer.uint32(/* id 23, wireType 1 =*/185).fixed64(message.forum_topic_id);
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.rtime32_last_modified);
            if (message.news_post_gid != null && message.hasOwnProperty("news_post_gid"))
                writer.uint32(/* id 25, wireType 1 =*/201).fixed64(message.news_post_gid);
            if (message.rtime_mod_reviewed != null && message.hasOwnProperty("rtime_mod_reviewed"))
                writer.uint32(/* id 26, wireType 0 =*/208).uint32(message.rtime_mod_reviewed);
            if (message.featured_app_tagid != null && message.hasOwnProperty("featured_app_tagid"))
                writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.featured_app_tagid);
            if (message.referenced_appids != null && message.referenced_appids.length)
                for (var i = 0; i < message.referenced_appids.length; ++i)
                    writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.referenced_appids[i]);
            if (message.build_id != null && message.hasOwnProperty("build_id"))
                writer.uint32(/* id 29, wireType 0 =*/232).uint32(message.build_id);
            if (message.build_branch != null && message.hasOwnProperty("build_branch"))
                writer.uint32(/* id 30, wireType 2 =*/242).string(message.build_branch);
            return writer;
        };
    
        /**
         * Encodes the specified CClanEventData message, length delimited. Does not implicitly {@link CClanEventData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData} message CClanEventData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanEventData message from the specified reader or buffer.
         * @function decode
         * @memberof CClanEventData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanEventData} CClanEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanEventData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gid = reader.fixed64();
                    break;
                case 2:
                    message.clan_steamid = reader.fixed64();
                    break;
                case 3:
                    message.event_name = reader.string();
                    break;
                case 4:
                    message.event_type = reader.int32();
                    break;
                case 5:
                    message.appid = reader.uint32();
                    break;
                case 6:
                    message.server_address = reader.string();
                    break;
                case 7:
                    message.server_password = reader.string();
                    break;
                case 8:
                    message.rtime32_start_time = reader.uint32();
                    break;
                case 9:
                    message.rtime32_end_time = reader.uint32();
                    break;
                case 10:
                    message.comment_count = reader.int32();
                    break;
                case 11:
                    message.creator_steamid = reader.fixed64();
                    break;
                case 12:
                    message.last_update_steamid = reader.fixed64();
                    break;
                case 13:
                    message.event_notes = reader.string();
                    break;
                case 14:
                    message.jsondata = reader.string();
                    break;
                case 15:
                    message.announcement_body = $root.CCommunity_ClanAnnouncementInfo.decode(reader, reader.uint32());
                    break;
                case 16:
                    message.published = reader.bool();
                    break;
                case 17:
                    message.hidden = reader.bool();
                    break;
                case 18:
                    message.rtime32_visibility_start = reader.uint32();
                    break;
                case 19:
                    message.rtime32_visibility_end = reader.uint32();
                    break;
                case 20:
                    message.broadcaster_accountid = reader.uint32();
                    break;
                case 21:
                    message.follower_count = reader.uint32();
                    break;
                case 22:
                    message.ignore_count = reader.uint32();
                    break;
                case 23:
                    message.forum_topic_id = reader.fixed64();
                    break;
                case 24:
                    message.rtime32_last_modified = reader.uint32();
                    break;
                case 25:
                    message.news_post_gid = reader.fixed64();
                    break;
                case 26:
                    message.rtime_mod_reviewed = reader.uint32();
                    break;
                case 27:
                    message.featured_app_tagid = reader.uint32();
                    break;
                case 28:
                    if (!(message.referenced_appids && message.referenced_appids.length))
                        message.referenced_appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.referenced_appids.push(reader.uint32());
                    } else
                        message.referenced_appids.push(reader.uint32());
                    break;
                case 29:
                    message.build_id = reader.uint32();
                    break;
                case 30:
                    message.build_branch = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanEventData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanEventData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanEventData} CClanEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanEventData message.
         * @function verify
         * @memberof CClanEventData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanEventData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.clan_steamid != null && message.hasOwnProperty("clan_steamid"))
                if (!$util.isInteger(message.clan_steamid) && !(message.clan_steamid && $util.isInteger(message.clan_steamid.low) && $util.isInteger(message.clan_steamid.high)))
                    return "clan_steamid: integer|Long expected";
            if (message.event_name != null && message.hasOwnProperty("event_name"))
                if (!$util.isString(message.event_name))
                    return "event_name: string expected";
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                switch (message.event_type) {
                default:
                    return "event_type: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                    break;
                }
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.server_address != null && message.hasOwnProperty("server_address"))
                if (!$util.isString(message.server_address))
                    return "server_address: string expected";
            if (message.server_password != null && message.hasOwnProperty("server_password"))
                if (!$util.isString(message.server_password))
                    return "server_password: string expected";
            if (message.rtime32_start_time != null && message.hasOwnProperty("rtime32_start_time"))
                if (!$util.isInteger(message.rtime32_start_time))
                    return "rtime32_start_time: integer expected";
            if (message.rtime32_end_time != null && message.hasOwnProperty("rtime32_end_time"))
                if (!$util.isInteger(message.rtime32_end_time))
                    return "rtime32_end_time: integer expected";
            if (message.comment_count != null && message.hasOwnProperty("comment_count"))
                if (!$util.isInteger(message.comment_count))
                    return "comment_count: integer expected";
            if (message.creator_steamid != null && message.hasOwnProperty("creator_steamid"))
                if (!$util.isInteger(message.creator_steamid) && !(message.creator_steamid && $util.isInteger(message.creator_steamid.low) && $util.isInteger(message.creator_steamid.high)))
                    return "creator_steamid: integer|Long expected";
            if (message.last_update_steamid != null && message.hasOwnProperty("last_update_steamid"))
                if (!$util.isInteger(message.last_update_steamid) && !(message.last_update_steamid && $util.isInteger(message.last_update_steamid.low) && $util.isInteger(message.last_update_steamid.high)))
                    return "last_update_steamid: integer|Long expected";
            if (message.event_notes != null && message.hasOwnProperty("event_notes"))
                if (!$util.isString(message.event_notes))
                    return "event_notes: string expected";
            if (message.jsondata != null && message.hasOwnProperty("jsondata"))
                if (!$util.isString(message.jsondata))
                    return "jsondata: string expected";
            if (message.announcement_body != null && message.hasOwnProperty("announcement_body")) {
                var error = $root.CCommunity_ClanAnnouncementInfo.verify(message.announcement_body);
                if (error)
                    return "announcement_body." + error;
            }
            if (message.published != null && message.hasOwnProperty("published"))
                if (typeof message.published !== "boolean")
                    return "published: boolean expected";
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                if (typeof message.hidden !== "boolean")
                    return "hidden: boolean expected";
            if (message.rtime32_visibility_start != null && message.hasOwnProperty("rtime32_visibility_start"))
                if (!$util.isInteger(message.rtime32_visibility_start))
                    return "rtime32_visibility_start: integer expected";
            if (message.rtime32_visibility_end != null && message.hasOwnProperty("rtime32_visibility_end"))
                if (!$util.isInteger(message.rtime32_visibility_end))
                    return "rtime32_visibility_end: integer expected";
            if (message.broadcaster_accountid != null && message.hasOwnProperty("broadcaster_accountid"))
                if (!$util.isInteger(message.broadcaster_accountid))
                    return "broadcaster_accountid: integer expected";
            if (message.follower_count != null && message.hasOwnProperty("follower_count"))
                if (!$util.isInteger(message.follower_count))
                    return "follower_count: integer expected";
            if (message.ignore_count != null && message.hasOwnProperty("ignore_count"))
                if (!$util.isInteger(message.ignore_count))
                    return "ignore_count: integer expected";
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (!$util.isInteger(message.forum_topic_id) && !(message.forum_topic_id && $util.isInteger(message.forum_topic_id.low) && $util.isInteger(message.forum_topic_id.high)))
                    return "forum_topic_id: integer|Long expected";
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                if (!$util.isInteger(message.rtime32_last_modified))
                    return "rtime32_last_modified: integer expected";
            if (message.news_post_gid != null && message.hasOwnProperty("news_post_gid"))
                if (!$util.isInteger(message.news_post_gid) && !(message.news_post_gid && $util.isInteger(message.news_post_gid.low) && $util.isInteger(message.news_post_gid.high)))
                    return "news_post_gid: integer|Long expected";
            if (message.rtime_mod_reviewed != null && message.hasOwnProperty("rtime_mod_reviewed"))
                if (!$util.isInteger(message.rtime_mod_reviewed))
                    return "rtime_mod_reviewed: integer expected";
            if (message.featured_app_tagid != null && message.hasOwnProperty("featured_app_tagid"))
                if (!$util.isInteger(message.featured_app_tagid))
                    return "featured_app_tagid: integer expected";
            if (message.referenced_appids != null && message.hasOwnProperty("referenced_appids")) {
                if (!Array.isArray(message.referenced_appids))
                    return "referenced_appids: array expected";
                for (var i = 0; i < message.referenced_appids.length; ++i)
                    if (!$util.isInteger(message.referenced_appids[i]))
                        return "referenced_appids: integer[] expected";
            }
            if (message.build_id != null && message.hasOwnProperty("build_id"))
                if (!$util.isInteger(message.build_id))
                    return "build_id: integer expected";
            if (message.build_branch != null && message.hasOwnProperty("build_branch"))
                if (!$util.isString(message.build_branch))
                    return "build_branch: string expected";
            return null;
        };
    
        /**
         * Creates a CClanEventData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanEventData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanEventData} CClanEventData
         */
        CClanEventData.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanEventData)
                return object;
            var message = new $root.CClanEventData();
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = false;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber();
            if (object.clan_steamid != null)
                if ($util.Long)
                    (message.clan_steamid = $util.Long.fromValue(object.clan_steamid)).unsigned = false;
                else if (typeof object.clan_steamid === "string")
                    message.clan_steamid = parseInt(object.clan_steamid, 10);
                else if (typeof object.clan_steamid === "number")
                    message.clan_steamid = object.clan_steamid;
                else if (typeof object.clan_steamid === "object")
                    message.clan_steamid = new $util.LongBits(object.clan_steamid.low >>> 0, object.clan_steamid.high >>> 0).toNumber();
            if (object.event_name != null)
                message.event_name = String(object.event_name);
            switch (object.event_type) {
            case "k_EClanOtherEvent":
            case 1:
                message.event_type = 1;
                break;
            case "k_EClanGameEvent":
            case 2:
                message.event_type = 2;
                break;
            case "k_EClanPartyEvent":
            case 3:
                message.event_type = 3;
                break;
            case "k_EClanMeetingEvent":
            case 4:
                message.event_type = 4;
                break;
            case "k_EClanSpecialCauseEvent":
            case 5:
                message.event_type = 5;
                break;
            case "k_EClanMusicAndArtsEvent":
            case 6:
                message.event_type = 6;
                break;
            case "k_EClanSportsEvent":
            case 7:
                message.event_type = 7;
                break;
            case "k_EClanTripEvent":
            case 8:
                message.event_type = 8;
                break;
            case "k_EClanChatEvent":
            case 9:
                message.event_type = 9;
                break;
            case "k_EClanGameReleaseEvent":
            case 10:
                message.event_type = 10;
                break;
            case "k_EClanBroadcastEvent":
            case 11:
                message.event_type = 11;
                break;
            case "k_EClanSmallUpdateEvent":
            case 12:
                message.event_type = 12;
                break;
            case "k_EClanPreAnnounceMajorUpdateEvent":
            case 13:
                message.event_type = 13;
                break;
            case "k_EClanMajorUpdateEvent":
            case 14:
                message.event_type = 14;
                break;
            case "k_EClanDLCReleaseEvent":
            case 15:
                message.event_type = 15;
                break;
            case "k_EClanFutureReleaseEvent":
            case 16:
                message.event_type = 16;
                break;
            case "k_EClanESportTournamentStreamEvent":
            case 17:
                message.event_type = 17;
                break;
            case "k_EClanDevStreamEvent":
            case 18:
                message.event_type = 18;
                break;
            case "k_EClanFamousStreamEvent":
            case 19:
                message.event_type = 19;
                break;
            case "k_EClanGameSalesEvent":
            case 20:
                message.event_type = 20;
                break;
            case "k_EClanGameItemSalesEvent":
            case 21:
                message.event_type = 21;
                break;
            case "k_EClanInGameBonusXPEvent":
            case 22:
                message.event_type = 22;
                break;
            case "k_EClanInGameLootEvent":
            case 23:
                message.event_type = 23;
                break;
            case "k_EClanInGamePerksEvent":
            case 24:
                message.event_type = 24;
                break;
            case "k_EClanInGameChallengeEvent":
            case 25:
                message.event_type = 25;
                break;
            case "k_EClanInGameContestEvent":
            case 26:
                message.event_type = 26;
                break;
            case "k_EClanIRLEvent":
            case 27:
                message.event_type = 27;
                break;
            case "k_EClanNewsEvent":
            case 28:
                message.event_type = 28;
                break;
            case "k_EClanBetaReleaseEvent":
            case 29:
                message.event_type = 29;
                break;
            case "k_EClanInGameContentReleaseEvent":
            case 30:
                message.event_type = 30;
                break;
            case "k_EClanFreeTrial":
            case 31:
                message.event_type = 31;
                break;
            case "k_EClanSeasonRelease":
            case 32:
                message.event_type = 32;
                break;
            case "k_EClanSeasonUpdate":
            case 33:
                message.event_type = 33;
                break;
            case "k_EClanCrosspostEvent":
            case 34:
                message.event_type = 34;
                break;
            case "k_EClanInGameEventGeneral":
            case 35:
                message.event_type = 35;
                break;
            }
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.server_address != null)
                message.server_address = String(object.server_address);
            if (object.server_password != null)
                message.server_password = String(object.server_password);
            if (object.rtime32_start_time != null)
                message.rtime32_start_time = object.rtime32_start_time >>> 0;
            if (object.rtime32_end_time != null)
                message.rtime32_end_time = object.rtime32_end_time >>> 0;
            if (object.comment_count != null)
                message.comment_count = object.comment_count | 0;
            if (object.creator_steamid != null)
                if ($util.Long)
                    (message.creator_steamid = $util.Long.fromValue(object.creator_steamid)).unsigned = false;
                else if (typeof object.creator_steamid === "string")
                    message.creator_steamid = parseInt(object.creator_steamid, 10);
                else if (typeof object.creator_steamid === "number")
                    message.creator_steamid = object.creator_steamid;
                else if (typeof object.creator_steamid === "object")
                    message.creator_steamid = new $util.LongBits(object.creator_steamid.low >>> 0, object.creator_steamid.high >>> 0).toNumber();
            if (object.last_update_steamid != null)
                if ($util.Long)
                    (message.last_update_steamid = $util.Long.fromValue(object.last_update_steamid)).unsigned = false;
                else if (typeof object.last_update_steamid === "string")
                    message.last_update_steamid = parseInt(object.last_update_steamid, 10);
                else if (typeof object.last_update_steamid === "number")
                    message.last_update_steamid = object.last_update_steamid;
                else if (typeof object.last_update_steamid === "object")
                    message.last_update_steamid = new $util.LongBits(object.last_update_steamid.low >>> 0, object.last_update_steamid.high >>> 0).toNumber();
            if (object.event_notes != null)
                message.event_notes = String(object.event_notes);
            if (object.jsondata != null)
                message.jsondata = String(object.jsondata);
            if (object.announcement_body != null) {
                if (typeof object.announcement_body !== "object")
                    throw TypeError(".CClanEventData.announcement_body: object expected");
                message.announcement_body = $root.CCommunity_ClanAnnouncementInfo.fromObject(object.announcement_body);
            }
            if (object.published != null)
                message.published = Boolean(object.published);
            if (object.hidden != null)
                message.hidden = Boolean(object.hidden);
            if (object.rtime32_visibility_start != null)
                message.rtime32_visibility_start = object.rtime32_visibility_start >>> 0;
            if (object.rtime32_visibility_end != null)
                message.rtime32_visibility_end = object.rtime32_visibility_end >>> 0;
            if (object.broadcaster_accountid != null)
                message.broadcaster_accountid = object.broadcaster_accountid >>> 0;
            if (object.follower_count != null)
                message.follower_count = object.follower_count >>> 0;
            if (object.ignore_count != null)
                message.ignore_count = object.ignore_count >>> 0;
            if (object.forum_topic_id != null)
                if ($util.Long)
                    (message.forum_topic_id = $util.Long.fromValue(object.forum_topic_id)).unsigned = false;
                else if (typeof object.forum_topic_id === "string")
                    message.forum_topic_id = parseInt(object.forum_topic_id, 10);
                else if (typeof object.forum_topic_id === "number")
                    message.forum_topic_id = object.forum_topic_id;
                else if (typeof object.forum_topic_id === "object")
                    message.forum_topic_id = new $util.LongBits(object.forum_topic_id.low >>> 0, object.forum_topic_id.high >>> 0).toNumber();
            if (object.rtime32_last_modified != null)
                message.rtime32_last_modified = object.rtime32_last_modified >>> 0;
            if (object.news_post_gid != null)
                if ($util.Long)
                    (message.news_post_gid = $util.Long.fromValue(object.news_post_gid)).unsigned = false;
                else if (typeof object.news_post_gid === "string")
                    message.news_post_gid = parseInt(object.news_post_gid, 10);
                else if (typeof object.news_post_gid === "number")
                    message.news_post_gid = object.news_post_gid;
                else if (typeof object.news_post_gid === "object")
                    message.news_post_gid = new $util.LongBits(object.news_post_gid.low >>> 0, object.news_post_gid.high >>> 0).toNumber();
            if (object.rtime_mod_reviewed != null)
                message.rtime_mod_reviewed = object.rtime_mod_reviewed >>> 0;
            if (object.featured_app_tagid != null)
                message.featured_app_tagid = object.featured_app_tagid >>> 0;
            if (object.referenced_appids) {
                if (!Array.isArray(object.referenced_appids))
                    throw TypeError(".CClanEventData.referenced_appids: array expected");
                message.referenced_appids = [];
                for (var i = 0; i < object.referenced_appids.length; ++i)
                    message.referenced_appids[i] = object.referenced_appids[i] >>> 0;
            }
            if (object.build_id != null)
                message.build_id = object.build_id >>> 0;
            if (object.build_branch != null)
                message.build_branch = String(object.build_branch);
            return message;
        };
    
        /**
         * Creates a plain object from a CClanEventData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanEventData
         * @static
         * @param {CClanEventData} message CClanEventData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanEventData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.referenced_appids = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.clan_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clan_steamid = options.longs === String ? "0" : 0;
                object.event_name = "";
                object.event_type = options.enums === String ? "k_EClanOtherEvent" : 1;
                object.appid = 0;
                object.server_address = "";
                object.server_password = "";
                object.rtime32_start_time = 0;
                object.rtime32_end_time = 0;
                object.comment_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.creator_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.creator_steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.last_update_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.last_update_steamid = options.longs === String ? "0" : 0;
                object.event_notes = "";
                object.jsondata = "";
                object.announcement_body = null;
                object.published = false;
                object.hidden = false;
                object.rtime32_visibility_start = 0;
                object.rtime32_visibility_end = 0;
                object.broadcaster_accountid = 0;
                object.follower_count = 0;
                object.ignore_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.forum_topic_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.forum_topic_id = options.longs === String ? "0" : 0;
                object.rtime32_last_modified = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.news_post_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.news_post_gid = options.longs === String ? "0" : 0;
                object.rtime_mod_reviewed = 0;
                object.featured_app_tagid = 0;
                object.build_id = 0;
                object.build_branch = "";
            }
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber() : message.gid;
            if (message.clan_steamid != null && message.hasOwnProperty("clan_steamid"))
                if (typeof message.clan_steamid === "number")
                    object.clan_steamid = options.longs === String ? String(message.clan_steamid) : message.clan_steamid;
                else
                    object.clan_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.clan_steamid) : options.longs === Number ? new $util.LongBits(message.clan_steamid.low >>> 0, message.clan_steamid.high >>> 0).toNumber() : message.clan_steamid;
            if (message.event_name != null && message.hasOwnProperty("event_name"))
                object.event_name = message.event_name;
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                object.event_type = options.enums === String ? $root.EProtoClanEventType[message.event_type] : message.event_type;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.server_address != null && message.hasOwnProperty("server_address"))
                object.server_address = message.server_address;
            if (message.server_password != null && message.hasOwnProperty("server_password"))
                object.server_password = message.server_password;
            if (message.rtime32_start_time != null && message.hasOwnProperty("rtime32_start_time"))
                object.rtime32_start_time = message.rtime32_start_time;
            if (message.rtime32_end_time != null && message.hasOwnProperty("rtime32_end_time"))
                object.rtime32_end_time = message.rtime32_end_time;
            if (message.comment_count != null && message.hasOwnProperty("comment_count"))
                object.comment_count = message.comment_count;
            if (message.creator_steamid != null && message.hasOwnProperty("creator_steamid"))
                if (typeof message.creator_steamid === "number")
                    object.creator_steamid = options.longs === String ? String(message.creator_steamid) : message.creator_steamid;
                else
                    object.creator_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.creator_steamid) : options.longs === Number ? new $util.LongBits(message.creator_steamid.low >>> 0, message.creator_steamid.high >>> 0).toNumber() : message.creator_steamid;
            if (message.last_update_steamid != null && message.hasOwnProperty("last_update_steamid"))
                if (typeof message.last_update_steamid === "number")
                    object.last_update_steamid = options.longs === String ? String(message.last_update_steamid) : message.last_update_steamid;
                else
                    object.last_update_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.last_update_steamid) : options.longs === Number ? new $util.LongBits(message.last_update_steamid.low >>> 0, message.last_update_steamid.high >>> 0).toNumber() : message.last_update_steamid;
            if (message.event_notes != null && message.hasOwnProperty("event_notes"))
                object.event_notes = message.event_notes;
            if (message.jsondata != null && message.hasOwnProperty("jsondata"))
                object.jsondata = message.jsondata;
            if (message.announcement_body != null && message.hasOwnProperty("announcement_body"))
                object.announcement_body = $root.CCommunity_ClanAnnouncementInfo.toObject(message.announcement_body, options);
            if (message.published != null && message.hasOwnProperty("published"))
                object.published = message.published;
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                object.hidden = message.hidden;
            if (message.rtime32_visibility_start != null && message.hasOwnProperty("rtime32_visibility_start"))
                object.rtime32_visibility_start = message.rtime32_visibility_start;
            if (message.rtime32_visibility_end != null && message.hasOwnProperty("rtime32_visibility_end"))
                object.rtime32_visibility_end = message.rtime32_visibility_end;
            if (message.broadcaster_accountid != null && message.hasOwnProperty("broadcaster_accountid"))
                object.broadcaster_accountid = message.broadcaster_accountid;
            if (message.follower_count != null && message.hasOwnProperty("follower_count"))
                object.follower_count = message.follower_count;
            if (message.ignore_count != null && message.hasOwnProperty("ignore_count"))
                object.ignore_count = message.ignore_count;
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (typeof message.forum_topic_id === "number")
                    object.forum_topic_id = options.longs === String ? String(message.forum_topic_id) : message.forum_topic_id;
                else
                    object.forum_topic_id = options.longs === String ? $util.Long.prototype.toString.call(message.forum_topic_id) : options.longs === Number ? new $util.LongBits(message.forum_topic_id.low >>> 0, message.forum_topic_id.high >>> 0).toNumber() : message.forum_topic_id;
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                object.rtime32_last_modified = message.rtime32_last_modified;
            if (message.news_post_gid != null && message.hasOwnProperty("news_post_gid"))
                if (typeof message.news_post_gid === "number")
                    object.news_post_gid = options.longs === String ? String(message.news_post_gid) : message.news_post_gid;
                else
                    object.news_post_gid = options.longs === String ? $util.Long.prototype.toString.call(message.news_post_gid) : options.longs === Number ? new $util.LongBits(message.news_post_gid.low >>> 0, message.news_post_gid.high >>> 0).toNumber() : message.news_post_gid;
            if (message.rtime_mod_reviewed != null && message.hasOwnProperty("rtime_mod_reviewed"))
                object.rtime_mod_reviewed = message.rtime_mod_reviewed;
            if (message.featured_app_tagid != null && message.hasOwnProperty("featured_app_tagid"))
                object.featured_app_tagid = message.featured_app_tagid;
            if (message.referenced_appids && message.referenced_appids.length) {
                object.referenced_appids = [];
                for (var j = 0; j < message.referenced_appids.length; ++j)
                    object.referenced_appids[j] = message.referenced_appids[j];
            }
            if (message.build_id != null && message.hasOwnProperty("build_id"))
                object.build_id = message.build_id;
            if (message.build_branch != null && message.hasOwnProperty("build_branch"))
                object.build_branch = message.build_branch;
            return object;
        };
    
        /**
         * Converts this CClanEventData to JSON.
         * @function toJSON
         * @memberof CClanEventData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanEventData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanEventData;
    })();
    
    $root.CBilling_Address = (function() {
    
        /**
         * Properties of a CBilling_Address.
         * @exports ICBilling_Address
         * @interface ICBilling_Address
         * @property {string|null} [first_name] CBilling_Address first_name
         * @property {string|null} [last_name] CBilling_Address last_name
         * @property {string|null} [address1] CBilling_Address address1
         * @property {string|null} [address2] CBilling_Address address2
         * @property {string|null} [city] CBilling_Address city
         * @property {string|null} [us_state] CBilling_Address us_state
         * @property {string|null} [country_code] CBilling_Address country_code
         * @property {string|null} [postcode] CBilling_Address postcode
         * @property {number|null} [zip_plus4] CBilling_Address zip_plus4
         * @property {string|null} [phone] CBilling_Address phone
         */
    
        /**
         * Constructs a new CBilling_Address.
         * @exports CBilling_Address
         * @classdesc Represents a CBilling_Address.
         * @implements ICBilling_Address
         * @constructor
         * @param {ICBilling_Address=} [properties] Properties to set
         */
        function CBilling_Address(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CBilling_Address first_name.
         * @member {string} first_name
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.first_name = "";
    
        /**
         * CBilling_Address last_name.
         * @member {string} last_name
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.last_name = "";
    
        /**
         * CBilling_Address address1.
         * @member {string} address1
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.address1 = "";
    
        /**
         * CBilling_Address address2.
         * @member {string} address2
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.address2 = "";
    
        /**
         * CBilling_Address city.
         * @member {string} city
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.city = "";
    
        /**
         * CBilling_Address us_state.
         * @member {string} us_state
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.us_state = "";
    
        /**
         * CBilling_Address country_code.
         * @member {string} country_code
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.country_code = "";
    
        /**
         * CBilling_Address postcode.
         * @member {string} postcode
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.postcode = "";
    
        /**
         * CBilling_Address zip_plus4.
         * @member {number} zip_plus4
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.zip_plus4 = 0;
    
        /**
         * CBilling_Address phone.
         * @member {string} phone
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.phone = "";
    
        /**
         * Creates a new CBilling_Address instance using the specified properties.
         * @function create
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address=} [properties] Properties to set
         * @returns {CBilling_Address} CBilling_Address instance
         */
        CBilling_Address.create = function create(properties) {
            return new CBilling_Address(properties);
        };
    
        /**
         * Encodes the specified CBilling_Address message. Does not implicitly {@link CBilling_Address.verify|verify} messages.
         * @function encode
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address} message CBilling_Address message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CBilling_Address.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.first_name != null && message.hasOwnProperty("first_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.first_name);
            if (message.last_name != null && message.hasOwnProperty("last_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.last_name);
            if (message.address1 != null && message.hasOwnProperty("address1"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.address1);
            if (message.address2 != null && message.hasOwnProperty("address2"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.address2);
            if (message.city != null && message.hasOwnProperty("city"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.city);
            if (message.us_state != null && message.hasOwnProperty("us_state"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.us_state);
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.country_code);
            if (message.postcode != null && message.hasOwnProperty("postcode"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.postcode);
            if (message.zip_plus4 != null && message.hasOwnProperty("zip_plus4"))
                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.zip_plus4);
            if (message.phone != null && message.hasOwnProperty("phone"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.phone);
            return writer;
        };
    
        /**
         * Encodes the specified CBilling_Address message, length delimited. Does not implicitly {@link CBilling_Address.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address} message CBilling_Address message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CBilling_Address.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CBilling_Address message from the specified reader or buffer.
         * @function decode
         * @memberof CBilling_Address
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CBilling_Address} CBilling_Address
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CBilling_Address.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CBilling_Address();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.first_name = reader.string();
                    break;
                case 2:
                    message.last_name = reader.string();
                    break;
                case 3:
                    message.address1 = reader.string();
                    break;
                case 4:
                    message.address2 = reader.string();
                    break;
                case 5:
                    message.city = reader.string();
                    break;
                case 6:
                    message.us_state = reader.string();
                    break;
                case 7:
                    message.country_code = reader.string();
                    break;
                case 8:
                    message.postcode = reader.string();
                    break;
                case 9:
                    message.zip_plus4 = reader.int32();
                    break;
                case 10:
                    message.phone = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CBilling_Address message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CBilling_Address
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CBilling_Address} CBilling_Address
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CBilling_Address.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CBilling_Address message.
         * @function verify
         * @memberof CBilling_Address
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CBilling_Address.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.first_name != null && message.hasOwnProperty("first_name"))
                if (!$util.isString(message.first_name))
                    return "first_name: string expected";
            if (message.last_name != null && message.hasOwnProperty("last_name"))
                if (!$util.isString(message.last_name))
                    return "last_name: string expected";
            if (message.address1 != null && message.hasOwnProperty("address1"))
                if (!$util.isString(message.address1))
                    return "address1: string expected";
            if (message.address2 != null && message.hasOwnProperty("address2"))
                if (!$util.isString(message.address2))
                    return "address2: string expected";
            if (message.city != null && message.hasOwnProperty("city"))
                if (!$util.isString(message.city))
                    return "city: string expected";
            if (message.us_state != null && message.hasOwnProperty("us_state"))
                if (!$util.isString(message.us_state))
                    return "us_state: string expected";
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                if (!$util.isString(message.country_code))
                    return "country_code: string expected";
            if (message.postcode != null && message.hasOwnProperty("postcode"))
                if (!$util.isString(message.postcode))
                    return "postcode: string expected";
            if (message.zip_plus4 != null && message.hasOwnProperty("zip_plus4"))
                if (!$util.isInteger(message.zip_plus4))
                    return "zip_plus4: integer expected";
            if (message.phone != null && message.hasOwnProperty("phone"))
                if (!$util.isString(message.phone))
                    return "phone: string expected";
            return null;
        };
    
        /**
         * Creates a CBilling_Address message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CBilling_Address
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CBilling_Address} CBilling_Address
         */
        CBilling_Address.fromObject = function fromObject(object) {
            if (object instanceof $root.CBilling_Address)
                return object;
            var message = new $root.CBilling_Address();
            if (object.first_name != null)
                message.first_name = String(object.first_name);
            if (object.last_name != null)
                message.last_name = String(object.last_name);
            if (object.address1 != null)
                message.address1 = String(object.address1);
            if (object.address2 != null)
                message.address2 = String(object.address2);
            if (object.city != null)
                message.city = String(object.city);
            if (object.us_state != null)
                message.us_state = String(object.us_state);
            if (object.country_code != null)
                message.country_code = String(object.country_code);
            if (object.postcode != null)
                message.postcode = String(object.postcode);
            if (object.zip_plus4 != null)
                message.zip_plus4 = object.zip_plus4 | 0;
            if (object.phone != null)
                message.phone = String(object.phone);
            return message;
        };
    
        /**
         * Creates a plain object from a CBilling_Address message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CBilling_Address
         * @static
         * @param {CBilling_Address} message CBilling_Address
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CBilling_Address.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.first_name = "";
                object.last_name = "";
                object.address1 = "";
                object.address2 = "";
                object.city = "";
                object.us_state = "";
                object.country_code = "";
                object.postcode = "";
                object.zip_plus4 = 0;
                object.phone = "";
            }
            if (message.first_name != null && message.hasOwnProperty("first_name"))
                object.first_name = message.first_name;
            if (message.last_name != null && message.hasOwnProperty("last_name"))
                object.last_name = message.last_name;
            if (message.address1 != null && message.hasOwnProperty("address1"))
                object.address1 = message.address1;
            if (message.address2 != null && message.hasOwnProperty("address2"))
                object.address2 = message.address2;
            if (message.city != null && message.hasOwnProperty("city"))
                object.city = message.city;
            if (message.us_state != null && message.hasOwnProperty("us_state"))
                object.us_state = message.us_state;
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                object.country_code = message.country_code;
            if (message.postcode != null && message.hasOwnProperty("postcode"))
                object.postcode = message.postcode;
            if (message.zip_plus4 != null && message.hasOwnProperty("zip_plus4"))
                object.zip_plus4 = message.zip_plus4;
            if (message.phone != null && message.hasOwnProperty("phone"))
                object.phone = message.phone;
            return object;
        };
    
        /**
         * Converts this CBilling_Address to JSON.
         * @function toJSON
         * @memberof CBilling_Address
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CBilling_Address.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CBilling_Address;
    })();
    
    $root.CPackageReservationStatus = (function() {
    
        /**
         * Properties of a CPackageReservationStatus.
         * @exports ICPackageReservationStatus
         * @interface ICPackageReservationStatus
         * @property {number|null} [packageid] CPackageReservationStatus packageid
         * @property {number|null} [reservation_state] CPackageReservationStatus reservation_state
         * @property {number|null} [queue_position] CPackageReservationStatus queue_position
         * @property {number|null} [total_queue_size] CPackageReservationStatus total_queue_size
         * @property {string|null} [reservation_country_code] CPackageReservationStatus reservation_country_code
         * @property {boolean|null} [expired] CPackageReservationStatus expired
         * @property {number|null} [time_expires] CPackageReservationStatus time_expires
         * @property {number|null} [time_reserved] CPackageReservationStatus time_reserved
         */
    
        /**
         * Constructs a new CPackageReservationStatus.
         * @exports CPackageReservationStatus
         * @classdesc Represents a CPackageReservationStatus.
         * @implements ICPackageReservationStatus
         * @constructor
         * @param {ICPackageReservationStatus=} [properties] Properties to set
         */
        function CPackageReservationStatus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CPackageReservationStatus packageid.
         * @member {number} packageid
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.packageid = 0;
    
        /**
         * CPackageReservationStatus reservation_state.
         * @member {number} reservation_state
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.reservation_state = 0;
    
        /**
         * CPackageReservationStatus queue_position.
         * @member {number} queue_position
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.queue_position = 0;
    
        /**
         * CPackageReservationStatus total_queue_size.
         * @member {number} total_queue_size
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.total_queue_size = 0;
    
        /**
         * CPackageReservationStatus reservation_country_code.
         * @member {string} reservation_country_code
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.reservation_country_code = "";
    
        /**
         * CPackageReservationStatus expired.
         * @member {boolean} expired
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.expired = false;
    
        /**
         * CPackageReservationStatus time_expires.
         * @member {number} time_expires
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.time_expires = 0;
    
        /**
         * CPackageReservationStatus time_reserved.
         * @member {number} time_reserved
         * @memberof CPackageReservationStatus
         * @instance
         */
        CPackageReservationStatus.prototype.time_reserved = 0;
    
        /**
         * Creates a new CPackageReservationStatus instance using the specified properties.
         * @function create
         * @memberof CPackageReservationStatus
         * @static
         * @param {ICPackageReservationStatus=} [properties] Properties to set
         * @returns {CPackageReservationStatus} CPackageReservationStatus instance
         */
        CPackageReservationStatus.create = function create(properties) {
            return new CPackageReservationStatus(properties);
        };
    
        /**
         * Encodes the specified CPackageReservationStatus message. Does not implicitly {@link CPackageReservationStatus.verify|verify} messages.
         * @function encode
         * @memberof CPackageReservationStatus
         * @static
         * @param {ICPackageReservationStatus} message CPackageReservationStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CPackageReservationStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageid);
            if (message.reservation_state != null && message.hasOwnProperty("reservation_state"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.reservation_state);
            if (message.queue_position != null && message.hasOwnProperty("queue_position"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.queue_position);
            if (message.total_queue_size != null && message.hasOwnProperty("total_queue_size"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.total_queue_size);
            if (message.reservation_country_code != null && message.hasOwnProperty("reservation_country_code"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservation_country_code);
            if (message.expired != null && message.hasOwnProperty("expired"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.expired);
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.time_expires);
            if (message.time_reserved != null && message.hasOwnProperty("time_reserved"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.time_reserved);
            return writer;
        };
    
        /**
         * Encodes the specified CPackageReservationStatus message, length delimited. Does not implicitly {@link CPackageReservationStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CPackageReservationStatus
         * @static
         * @param {ICPackageReservationStatus} message CPackageReservationStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CPackageReservationStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CPackageReservationStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CPackageReservationStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CPackageReservationStatus} CPackageReservationStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CPackageReservationStatus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CPackageReservationStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.packageid = reader.uint32();
                    break;
                case 2:
                    message.reservation_state = reader.int32();
                    break;
                case 3:
                    message.queue_position = reader.int32();
                    break;
                case 4:
                    message.total_queue_size = reader.int32();
                    break;
                case 5:
                    message.reservation_country_code = reader.string();
                    break;
                case 6:
                    message.expired = reader.bool();
                    break;
                case 7:
                    message.time_expires = reader.uint32();
                    break;
                case 8:
                    message.time_reserved = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CPackageReservationStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CPackageReservationStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CPackageReservationStatus} CPackageReservationStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CPackageReservationStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CPackageReservationStatus message.
         * @function verify
         * @memberof CPackageReservationStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CPackageReservationStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                if (!$util.isInteger(message.packageid))
                    return "packageid: integer expected";
            if (message.reservation_state != null && message.hasOwnProperty("reservation_state"))
                if (!$util.isInteger(message.reservation_state))
                    return "reservation_state: integer expected";
            if (message.queue_position != null && message.hasOwnProperty("queue_position"))
                if (!$util.isInteger(message.queue_position))
                    return "queue_position: integer expected";
            if (message.total_queue_size != null && message.hasOwnProperty("total_queue_size"))
                if (!$util.isInteger(message.total_queue_size))
                    return "total_queue_size: integer expected";
            if (message.reservation_country_code != null && message.hasOwnProperty("reservation_country_code"))
                if (!$util.isString(message.reservation_country_code))
                    return "reservation_country_code: string expected";
            if (message.expired != null && message.hasOwnProperty("expired"))
                if (typeof message.expired !== "boolean")
                    return "expired: boolean expected";
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                if (!$util.isInteger(message.time_expires))
                    return "time_expires: integer expected";
            if (message.time_reserved != null && message.hasOwnProperty("time_reserved"))
                if (!$util.isInteger(message.time_reserved))
                    return "time_reserved: integer expected";
            return null;
        };
    
        /**
         * Creates a CPackageReservationStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CPackageReservationStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CPackageReservationStatus} CPackageReservationStatus
         */
        CPackageReservationStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CPackageReservationStatus)
                return object;
            var message = new $root.CPackageReservationStatus();
            if (object.packageid != null)
                message.packageid = object.packageid >>> 0;
            if (object.reservation_state != null)
                message.reservation_state = object.reservation_state | 0;
            if (object.queue_position != null)
                message.queue_position = object.queue_position | 0;
            if (object.total_queue_size != null)
                message.total_queue_size = object.total_queue_size | 0;
            if (object.reservation_country_code != null)
                message.reservation_country_code = String(object.reservation_country_code);
            if (object.expired != null)
                message.expired = Boolean(object.expired);
            if (object.time_expires != null)
                message.time_expires = object.time_expires >>> 0;
            if (object.time_reserved != null)
                message.time_reserved = object.time_reserved >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CPackageReservationStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CPackageReservationStatus
         * @static
         * @param {CPackageReservationStatus} message CPackageReservationStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CPackageReservationStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.packageid = 0;
                object.reservation_state = 0;
                object.queue_position = 0;
                object.total_queue_size = 0;
                object.reservation_country_code = "";
                object.expired = false;
                object.time_expires = 0;
                object.time_reserved = 0;
            }
            if (message.packageid != null && message.hasOwnProperty("packageid"))
                object.packageid = message.packageid;
            if (message.reservation_state != null && message.hasOwnProperty("reservation_state"))
                object.reservation_state = message.reservation_state;
            if (message.queue_position != null && message.hasOwnProperty("queue_position"))
                object.queue_position = message.queue_position;
            if (message.total_queue_size != null && message.hasOwnProperty("total_queue_size"))
                object.total_queue_size = message.total_queue_size;
            if (message.reservation_country_code != null && message.hasOwnProperty("reservation_country_code"))
                object.reservation_country_code = message.reservation_country_code;
            if (message.expired != null && message.hasOwnProperty("expired"))
                object.expired = message.expired;
            if (message.time_expires != null && message.hasOwnProperty("time_expires"))
                object.time_expires = message.time_expires;
            if (message.time_reserved != null && message.hasOwnProperty("time_reserved"))
                object.time_reserved = message.time_reserved;
            return object;
        };
    
        /**
         * Converts this CPackageReservationStatus to JSON.
         * @function toJSON
         * @memberof CPackageReservationStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CPackageReservationStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CPackageReservationStatus;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [public_dependency] FileDescriptorProto public_dependency
                 * @property {Array.<number>|null} [weak_dependency] FileDescriptorProto weak_dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.public_dependency = [];
                    this.weak_dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto public_dependency.
                 * @member {Array.<number>} public_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.public_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weak_dependency.
                 * @member {Array.<number>} weak_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weak_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.public_dependency != null && message.public_dependency.length)
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.public_dependency[i]);
                    if (message.weak_dependency != null && message.weak_dependency.length)
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weak_dependency[i]);
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.public_dependency && message.public_dependency.length))
                                message.public_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.public_dependency.push(reader.int32());
                            } else
                                message.public_dependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weak_dependency && message.weak_dependency.length))
                                message.weak_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weak_dependency.push(reader.int32());
                            } else
                                message.weak_dependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.message_type && message.message_type.length))
                                message.message_type = [];
                            message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.public_dependency != null && message.hasOwnProperty("public_dependency")) {
                        if (!Array.isArray(message.public_dependency))
                            return "public_dependency: array expected";
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            if (!$util.isInteger(message.public_dependency[i]))
                                return "public_dependency: integer[] expected";
                    }
                    if (message.weak_dependency != null && message.hasOwnProperty("weak_dependency")) {
                        if (!Array.isArray(message.weak_dependency))
                            return "weak_dependency: array expected";
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            if (!$util.isInteger(message.weak_dependency[i]))
                                return "weak_dependency: integer[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.public_dependency) {
                        if (!Array.isArray(object.public_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.public_dependency: array expected");
                        message.public_dependency = [];
                        for (var i = 0; i < object.public_dependency.length; ++i)
                            message.public_dependency[i] = object.public_dependency[i] | 0;
                    }
                    if (object.weak_dependency) {
                        if (!Array.isArray(object.weak_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weak_dependency: array expected");
                        message.weak_dependency = [];
                        for (var i = 0; i < object.weak_dependency.length; ++i)
                            message.weak_dependency[i] = object.weak_dependency[i] | 0;
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                        object.public_dependency = [];
                        object.weak_dependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    if (message.public_dependency && message.public_dependency.length) {
                        object.public_dependency = [];
                        for (var j = 0; j < message.public_dependency.length; ++j)
                            object.public_dependency[j] = message.public_dependency[j];
                    }
                    if (message.weak_dependency && message.weak_dependency.length) {
                        object.weak_dependency = [];
                        for (var j = 0; j < message.weak_dependency.length; ++j)
                            object.weak_dependency[j] = message.weak_dependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneof_decl] DescriptorProto oneof_decl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reserved_range] DescriptorProto reserved_range
                 * @property {Array.<string>|null} [reserved_name] DescriptorProto reserved_name
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    this.oneof_decl = [];
                    this.reserved_range = [];
                    this.reserved_name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto oneof_decl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneof_decl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneof_decl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reserved_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reserved_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_range = $util.emptyArray;
    
                /**
                 * DescriptorProto reserved_name.
                 * @member {Array.<string>} reserved_name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_name = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneof_decl != null && message.oneof_decl.length)
                        for (var i = 0; i < message.oneof_decl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneof_decl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reserved_range != null && message.reserved_range.length)
                        for (var i = 0; i < message.reserved_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reserved_range[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reserved_name != null && message.reserved_name.length)
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reserved_name[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nested_type && message.nested_type.length))
                                message.nested_type = [];
                            message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extension_range && message.extension_range.length))
                                message.extension_range = [];
                            message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneof_decl && message.oneof_decl.length))
                                message.oneof_decl = [];
                            message.oneof_decl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reserved_range && message.reserved_range.length))
                                message.reserved_range = [];
                            message.reserved_range.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reserved_name && message.reserved_name.length))
                                message.reserved_name = [];
                            message.reserved_name.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.oneof_decl != null && message.hasOwnProperty("oneof_decl")) {
                        if (!Array.isArray(message.oneof_decl))
                            return "oneof_decl: array expected";
                        for (var i = 0; i < message.oneof_decl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneof_decl[i]);
                            if (error)
                                return "oneof_decl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reserved_range != null && message.hasOwnProperty("reserved_range")) {
                        if (!Array.isArray(message.reserved_range))
                            return "reserved_range: array expected";
                        for (var i = 0; i < message.reserved_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reserved_range[i]);
                            if (error)
                                return "reserved_range." + error;
                        }
                    }
                    if (message.reserved_name != null && message.hasOwnProperty("reserved_name")) {
                        if (!Array.isArray(message.reserved_name))
                            return "reserved_name: array expected";
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            if (!$util.isString(message.reserved_name[i]))
                                return "reserved_name: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.oneof_decl) {
                        if (!Array.isArray(object.oneof_decl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: array expected");
                        message.oneof_decl = [];
                        for (var i = 0; i < object.oneof_decl.length; ++i) {
                            if (typeof object.oneof_decl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: object expected");
                            message.oneof_decl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneof_decl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reserved_range) {
                        if (!Array.isArray(object.reserved_range))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_range: array expected");
                        message.reserved_range = [];
                        for (var i = 0; i < object.reserved_range.length; ++i) {
                            if (typeof object.reserved_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reserved_range: object expected");
                            message.reserved_range[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reserved_range[i]);
                        }
                    }
                    if (object.reserved_name) {
                        if (!Array.isArray(object.reserved_name))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_name: array expected");
                        message.reserved_name = [];
                        for (var i = 0; i < object.reserved_name.length; ++i)
                            message.reserved_name[i] = String(object.reserved_name[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                        object.oneof_decl = [];
                        object.reserved_range = [];
                        object.reserved_name = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneof_decl && message.oneof_decl.length) {
                        object.oneof_decl = [];
                        for (var j = 0; j < message.oneof_decl.length; ++j)
                            object.oneof_decl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneof_decl[j], options);
                    }
                    if (message.reserved_range && message.reserved_range.length) {
                        object.reserved_range = [];
                        for (var j = 0; j < message.reserved_range.length; ++j)
                            object.reserved_range[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reserved_range[j], options);
                    }
                    if (message.reserved_name && message.reserved_name.length) {
                        object.reserved_name = [];
                        for (var j = 0; j < message.reserved_name.length; ++j)
                            object.reserved_name[j] = message.reserved_name[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && message.hasOwnProperty("start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {number|null} [oneof_index] FieldDescriptorProto oneof_index
                 * @property {string|null} [json_name] FieldDescriptorProto json_name
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto oneof_index.
                 * @member {number} oneof_index
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneof_index = 0;
    
                /**
                 * FieldDescriptorProto json_name.
                 * @member {string} json_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.json_name = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && message.hasOwnProperty("label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && message.hasOwnProperty("type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneof_index);
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.json_name);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.type_name = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.default_value = reader.string();
                            break;
                        case 9:
                            message.oneof_index = reader.int32();
                            break;
                        case 10:
                            message.json_name = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        if (!$util.isInteger(message.oneof_index))
                            return "oneof_index: integer expected";
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        if (!$util.isString(message.json_name))
                            return "json_name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.oneof_index != null)
                        message.oneof_index = object.oneof_index | 0;
                    if (object.json_name != null)
                        message.json_name = String(object.json_name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                        object.oneof_index = 0;
                        object.json_name = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        object.oneof_index = message.oneof_index;
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        object.json_name = message.json_name;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {string}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {string}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && message.hasOwnProperty("number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [client_streaming] MethodDescriptorProto client_streaming
                 * @property {boolean|null} [server_streaming] MethodDescriptorProto server_streaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto client_streaming.
                 * @member {boolean} client_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.client_streaming = false;
    
                /**
                 * MethodDescriptorProto server_streaming.
                 * @member {boolean} server_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.server_streaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.hasOwnProperty("name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && message.hasOwnProperty("options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.client_streaming);
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_streaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.input_type = reader.string();
                            break;
                        case 3:
                            message.output_type = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.client_streaming = reader.bool();
                            break;
                        case 6:
                            message.server_streaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        if (typeof message.client_streaming !== "boolean")
                            return "client_streaming: boolean expected";
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        if (typeof message.server_streaming !== "boolean")
                            return "server_streaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.client_streaming != null)
                        message.client_streaming = Boolean(object.client_streaming);
                    if (object.server_streaming != null)
                        message.server_streaming = Boolean(object.server_streaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                        object.client_streaming = false;
                        object.server_streaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        object.client_streaming = message.client_streaming;
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        object.server_streaming = message.server_streaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {boolean|null} [java_string_check_utf8] FileOptions java_string_check_utf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {string|null} [go_package] FileOptions go_package
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [cc_enable_arenas] FileOptions cc_enable_arenas
                 * @property {string|null} [objc_class_prefix] FileOptions objc_class_prefix
                 * @property {string|null} [csharp_namespace] FileOptions csharp_namespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 * @property {boolean|null} [".force_php_generation"] FileOptions .force_php_generation
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions java_string_check_utf8.
                 * @member {boolean} java_string_check_utf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_string_check_utf8 = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions go_package.
                 * @member {string} go_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.go_package = "";
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions cc_enable_arenas.
                 * @member {boolean} cc_enable_arenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_enable_arenas = false;
    
                /**
                 * FileOptions objc_class_prefix.
                 * @member {string} objc_class_prefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objc_class_prefix = "";
    
                /**
                 * FileOptions csharp_namespace.
                 * @member {string} csharp_namespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharp_namespace = "";
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FileOptions .force_php_generation.
                 * @member {boolean} .force_php_generation
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".force_php_generation"] = false;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.go_package);
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.java_string_check_utf8);
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.cc_enable_arenas);
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objc_class_prefix);
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharp_namespace);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".force_php_generation"] != null && message.hasOwnProperty(".force_php_generation"))
                        writer.uint32(/* id 50000, wireType 0 =*/400000).bool(message[".force_php_generation"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.java_package = reader.string();
                            break;
                        case 8:
                            message.java_outer_classname = reader.string();
                            break;
                        case 10:
                            message.java_multiple_files = reader.bool();
                            break;
                        case 20:
                            message.java_generate_equals_and_hash = reader.bool();
                            break;
                        case 27:
                            message.java_string_check_utf8 = reader.bool();
                            break;
                        case 9:
                            message.optimize_for = reader.int32();
                            break;
                        case 11:
                            message.go_package = reader.string();
                            break;
                        case 16:
                            message.cc_generic_services = reader.bool();
                            break;
                        case 17:
                            message.java_generic_services = reader.bool();
                            break;
                        case 18:
                            message.py_generic_services = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.cc_enable_arenas = reader.bool();
                            break;
                        case 36:
                            message.objc_class_prefix = reader.string();
                            break;
                        case 37:
                            message.csharp_namespace = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".force_php_generation"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        if (typeof message.java_string_check_utf8 !== "boolean")
                            return "java_string_check_utf8: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        if (!$util.isString(message.go_package))
                            return "go_package: string expected";
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        if (typeof message.cc_enable_arenas !== "boolean")
                            return "cc_enable_arenas: boolean expected";
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        if (!$util.isString(message.objc_class_prefix))
                            return "objc_class_prefix: string expected";
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        if (!$util.isString(message.csharp_namespace))
                            return "csharp_namespace: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".force_php_generation"] != null && message.hasOwnProperty(".force_php_generation"))
                        if (typeof message[".force_php_generation"] !== "boolean")
                            return ".force_php_generation: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    if (object.java_string_check_utf8 != null)
                        message.java_string_check_utf8 = Boolean(object.java_string_check_utf8);
                    switch (object.optimize_for) {
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.go_package != null)
                        message.go_package = String(object.go_package);
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.cc_enable_arenas != null)
                        message.cc_enable_arenas = Boolean(object.cc_enable_arenas);
                    if (object.objc_class_prefix != null)
                        message.objc_class_prefix = String(object.objc_class_prefix);
                    if (object.csharp_namespace != null)
                        message.csharp_namespace = String(object.csharp_namespace);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".force_php_generation"] != null)
                        message[".force_php_generation"] = Boolean(object[".force_php_generation"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.go_package = "";
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                        object.deprecated = false;
                        object.java_string_check_utf8 = false;
                        object.cc_enable_arenas = false;
                        object.objc_class_prefix = "";
                        object.csharp_namespace = "";
                        object[".force_php_generation"] = false;
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        object.go_package = message.go_package;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        object.java_string_check_utf8 = message.java_string_check_utf8;
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        object.cc_enable_arenas = message.cc_enable_arenas;
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        object.objc_class_prefix = message.objc_class_prefix;
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        object.csharp_namespace = message.csharp_namespace;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".force_php_generation"] != null && message.hasOwnProperty(".force_php_generation"))
                        object[".force_php_generation"] = message[".force_php_generation"];
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {string}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [map_entry] MessageOptions map_entry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 * @property {number|null} [".msgpool_soft_limit"] MessageOptions .msgpool_soft_limit
                 * @property {number|null} [".msgpool_hard_limit"] MessageOptions .msgpool_hard_limit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions map_entry.
                 * @member {boolean} map_entry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.map_entry = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpool_soft_limit.
                 * @member {number} .msgpool_soft_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_soft_limit"] = 32;
    
                /**
                 * MessageOptions .msgpool_hard_limit.
                 * @member {number} .msgpool_hard_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_hard_limit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.map_entry);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        writer.uint32(/* id 50000, wireType 0 =*/400000).int32(message[".msgpool_soft_limit"]);
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        writer.uint32(/* id 50001, wireType 0 =*/400008).int32(message[".msgpool_hard_limit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.message_set_wire_format = reader.bool();
                            break;
                        case 2:
                            message.no_standard_descriptor_accessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.map_entry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".msgpool_soft_limit"] = reader.int32();
                            break;
                        case 50001:
                            message[".msgpool_hard_limit"] = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        if (typeof message.map_entry !== "boolean")
                            return "map_entry: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        if (!$util.isInteger(message[".msgpool_soft_limit"]))
                            return ".msgpool_soft_limit: integer expected";
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        if (!$util.isInteger(message[".msgpool_hard_limit"]))
                            return ".msgpool_hard_limit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.map_entry != null)
                        message.map_entry = Boolean(object.map_entry);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".msgpool_soft_limit"] != null)
                        message[".msgpool_soft_limit"] = object[".msgpool_soft_limit"] | 0;
                    if (object[".msgpool_hard_limit"] != null)
                        message[".msgpool_hard_limit"] = object[".msgpool_hard_limit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object.deprecated = false;
                        object.map_entry = false;
                        object[".msgpool_soft_limit"] = 32;
                        object[".msgpool_hard_limit"] = 384;
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        object.map_entry = message.map_entry;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        object[".msgpool_soft_limit"] = message[".msgpool_soft_limit"];
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        object[".msgpool_hard_limit"] = message[".msgpool_hard_limit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {boolean|null} [".php_output_always_number"] FieldOptions .php_output_always_number
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .php_output_always_number.
                 * @member {boolean} .php_output_always_number
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".php_output_always_number"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".php_output_always_number"] != null && message.hasOwnProperty(".php_output_always_number"))
                        writer.uint32(/* id 50020, wireType 0 =*/400160).bool(message[".php_output_always_number"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50020:
                            message[".php_output_always_number"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".php_output_always_number"] != null && message.hasOwnProperty(".php_output_always_number"))
                        if (typeof message[".php_output_always_number"] !== "boolean")
                            return ".php_output_always_number: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".php_output_always_number"] != null)
                        message[".php_output_always_number"] = Boolean(object[".php_output_always_number"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".php_output_always_number"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".php_output_always_number"] != null && message.hasOwnProperty(".php_output_always_number"))
                        object[".php_output_always_number"] = message[".php_output_always_number"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {string}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {string}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] OneofOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allow_alias] EnumOptions allow_alias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allow_alias.
                 * @member {boolean} allow_alias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allow_alias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allow_alias);
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allow_alias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        if (typeof message.allow_alias !== "boolean")
                            return "allow_alias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allow_alias != null)
                        message.allow_alias = Boolean(object.allow_alias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.allow_alias = false;
                        object.deprecated = false;
                    }
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        object.allow_alias = message.allow_alias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {number|Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {number|Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {number|Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {number|Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifier_value = reader.string();
                            break;
                        case 4:
                            message.positive_int_value = reader.uint64();
                            break;
                        case 5:
                            message.negative_int_value = reader.int64();
                            break;
                        case 6:
                            message.double_value = reader.double();
                            break;
                        case 7:
                            message.string_value = reader.bytes();
                            break;
                        case 8:
                            message.aggregate_value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.name_part = reader.string();
                                break;
                            case 2:
                                message.is_extension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leading_comments] Location leading_comments
                     * @property {string|null} [trailing_comments] Location trailing_comments
                     * @property {Array.<string>|null} [leading_detached_comments] Location leading_detached_comments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leading_detached_comments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leading_comments.
                     * @member {string} leading_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_comments = "";
    
                    /**
                     * Location trailing_comments.
                     * @member {string} trailing_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailing_comments = "";
    
                    /**
                     * Location leading_detached_comments.
                     * @member {Array.<string>} leading_detached_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_detached_comments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leading_comments);
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailing_comments);
                        if (message.leading_detached_comments != null && message.leading_detached_comments.length)
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leading_detached_comments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leading_comments = reader.string();
                                break;
                            case 4:
                                message.trailing_comments = reader.string();
                                break;
                            case 6:
                                if (!(message.leading_detached_comments && message.leading_detached_comments.length))
                                    message.leading_detached_comments = [];
                                message.leading_detached_comments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            if (!$util.isString(message.leading_comments))
                                return "leading_comments: string expected";
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            if (!$util.isString(message.trailing_comments))
                                return "trailing_comments: string expected";
                        if (message.leading_detached_comments != null && message.hasOwnProperty("leading_detached_comments")) {
                            if (!Array.isArray(message.leading_detached_comments))
                                return "leading_detached_comments: array expected";
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                if (!$util.isString(message.leading_detached_comments[i]))
                                    return "leading_detached_comments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leading_comments != null)
                            message.leading_comments = String(object.leading_comments);
                        if (object.trailing_comments != null)
                            message.trailing_comments = String(object.trailing_comments);
                        if (object.leading_detached_comments) {
                            if (!Array.isArray(object.leading_detached_comments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leading_detached_comments: array expected");
                            message.leading_detached_comments = [];
                            for (var i = 0; i < object.leading_detached_comments.length; ++i)
                                message.leading_detached_comments[i] = String(object.leading_detached_comments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leading_detached_comments = [];
                        }
                        if (options.defaults) {
                            object.leading_comments = "";
                            object.trailing_comments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            object.leading_comments = message.leading_comments;
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            object.trailing_comments = message.trailing_comments;
                        if (message.leading_detached_comments && message.leading_detached_comments.length) {
                            object.leading_detached_comments = [];
                            for (var j = 0; j < message.leading_detached_comments.length; ++j)
                                object.leading_detached_comments[j] = message.leading_detached_comments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [source_file] Annotation source_file
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation source_file.
                     * @member {string} source_file
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.source_file = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.source_file);
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && message.hasOwnProperty("end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.source_file = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            if (!$util.isString(message.source_file))
                                return "source_file: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.source_file != null)
                            message.source_file = String(object.source_file);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.source_file = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            object.source_file = message.source_file;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
